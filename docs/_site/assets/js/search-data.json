{"0": {
    "doc": "Airtable",
    "title": "Airtable",
    "content": " ",
    "url": "/data-sources/Airtable/architectures.html",
    
    "relUrl": "/data-sources/Airtable/architectures.html"
  },"1": {
    "doc": "Time",
    "title": "Time",
    "content": " ",
    "url": "/data-sources/Time/architectures.html",
    
    "relUrl": "/data-sources/Time/architectures.html"
  },"2": {
    "doc": "System",
    "title": "System",
    "content": " ",
    "url": "/data-sources/System/architectures.html",
    
    "relUrl": "/data-sources/System/architectures.html"
  },"3": {
    "doc": "Sqlite",
    "title": "Sqlite",
    "content": " ",
    "url": "/data-sources/Sqlite/architectures.html",
    
    "relUrl": "/data-sources/Sqlite/architectures.html"
  },"4": {
    "doc": "SeparatedValues",
    "title": "SeparatedValues",
    "content": " ",
    "url": "/data-sources/SeparatedValues/architectures.html",
    
    "relUrl": "/data-sources/SeparatedValues/architectures.html"
  },"5": {
    "doc": "Archives",
    "title": "Archives",
    "content": " ",
    "url": "/data-sources/Archives/architectures.html",
    
    "relUrl": "/data-sources/Archives/architectures.html"
  },"6": {
    "doc": "Roslyn",
    "title": "Roslyn",
    "content": " ",
    "url": "/data-sources/roslyn/architectures.html",
    
    "relUrl": "/data-sources/roslyn/architectures.html"
  },"7": {
    "doc": "Postgres",
    "title": "Postgres",
    "content": " ",
    "url": "/data-sources/Postgres/architectures.html",
    
    "relUrl": "/data-sources/Postgres/architectures.html"
  },"8": {
    "doc": "Os",
    "title": "Os",
    "content": " ",
    "url": "/data-sources/Os/architectures.html",
    
    "relUrl": "/data-sources/Os/architectures.html"
  },"9": {
    "doc": "OpenAI",
    "title": "OpenAI",
    "content": " ",
    "url": "/data-sources/OpenAI/architectures.html",
    
    "relUrl": "/data-sources/OpenAI/architectures.html"
  },"10": {
    "doc": "CANBus",
    "title": "CANBus",
    "content": " ",
    "url": "/data-sources/CANBus/architectures.html",
    
    "relUrl": "/data-sources/CANBus/architectures.html"
  },"11": {
    "doc": "Ollama",
    "title": "Ollama",
    "content": " ",
    "url": "/data-sources/Ollama/architectures.html",
    
    "relUrl": "/data-sources/Ollama/architectures.html"
  },"12": {
    "doc": "Kubernetes",
    "title": "Kubernetes",
    "content": " ",
    "url": "/data-sources/Kubernetes/architectures.html",
    
    "relUrl": "/data-sources/Kubernetes/architectures.html"
  },"13": {
    "doc": "Json",
    "title": "Json",
    "content": " ",
    "url": "/data-sources/Json/architectures.html",
    
    "relUrl": "/data-sources/Json/architectures.html"
  },"14": {
    "doc": "FlatFile",
    "title": "FlatFile",
    "content": " ",
    "url": "/data-sources/FlatFile/architectures.html",
    
    "relUrl": "/data-sources/FlatFile/architectures.html"
  },"15": {
    "doc": "Docker",
    "title": "Docker",
    "content": " ",
    "url": "/data-sources/Docker/architectures.html",
    
    "relUrl": "/data-sources/Docker/architectures.html"
  },"16": {
    "doc": "Basic Syntax Elements",
    "title": "Preliminary Assumption",
    "content": "I implicitly assume that you know the basics of SQL. If you’re not familiar with them, read about it, for example, on w3schools.com, and then come back here. This description will not be detailed enough to explain how to use SQL in general. ",
    "url": "/sql-syntax-of-the-tool/basic-syntax-elements.html#preliminary-assumption",
    
    "relUrl": "/sql-syntax-of-the-tool/basic-syntax-elements.html#preliminary-assumption"
  },"17": {
    "doc": "Basic Syntax Elements",
    "title": "Important Notes to Read",
    "content": ". | Until this document states otherwise, you can assume that any function not mentioned here replicates SQL functionality. | Column names and methods are case-sensitive. | Keywords are not case-sensitive. | Queries are strictly typed. The types must match. | The from clause for join syntax must be aliased for the parameterizable source. You must refer to the specific join table using this alias. | Each first script invocation will be significantly slower than subsequent calls. This delay occurs due to the translation of SQL into C# and compilation. | . ",
    "url": "/sql-syntax-of-the-tool/basic-syntax-elements.html#important-notes-to-read",
    
    "relUrl": "/sql-syntax-of-the-tool/basic-syntax-elements.html#important-notes-to-read"
  },"18": {
    "doc": "Basic Syntax Elements",
    "title": "How to Know Which Columns are Provided by the Data Source",
    "content": "Each data source provides entry points that the desc syntax uses. Additionally, you can utilize the online documentation which should indicate which columns are available for use. The syntax of this expression looks as follows: . desc #schema.method(param1, ..., paramN) . Such an expression will return a table with columns and their corresponding data types that are available for use. ",
    "url": "/sql-syntax-of-the-tool/basic-syntax-elements.html#how-to-know-which-columns-are-provided-by-the-data-source",
    
    "relUrl": "/sql-syntax-of-the-tool/basic-syntax-elements.html#how-to-know-which-columns-are-provided-by-the-data-source"
  },"19": {
    "doc": "Basic Syntax Elements",
    "title": "Basic Syntax Elements",
    "content": " ",
    "url": "/sql-syntax-of-the-tool/basic-syntax-elements.html",
    
    "relUrl": "/sql-syntax-of-the-tool/basic-syntax-elements.html"
  },"20": {
    "doc": "Setup & Usage",
    "title": "Setup &amp; Use tool from CLI",
    "content": " ",
    "url": "/cli.html#setup--use-tool-from-cli",
    
    "relUrl": "/cli.html#setup--use-tool-from-cli"
  },"21": {
    "doc": "Setup & Usage",
    "title": "Setup",
    "content": ". | Download release for your platform at Musoq CLI repository | Extract the archive | Linux users: chmod +x ./Musoq | . ",
    "url": "/cli.html#setup",
    
    "relUrl": "/cli.html#setup"
  },"22": {
    "doc": "Setup & Usage",
    "title": "Basic Usage",
    "content": "First, start the server to run queries: . Musoq serve . or quit the server if don’t need it anymore: . Musoq quit . Query . Once your server is up and running, run queries directly: . # Windows Musoq.exe run query \"select 1 from #system.dual()\" # Linux Musoq run query \"select 1 from #system.dual()\" . Help and Options . Check available options: . Musoq --help Musoq run --help Musoq serve --help . ",
    "url": "/cli.html#basic-usage",
    
    "relUrl": "/cli.html#basic-usage"
  },"23": {
    "doc": "Setup & Usage",
    "title": "More Advanced Things",
    "content": "Server Operations . when you need to look at the server logs, run the server in the foreground: . # Start server and keep console open Musoq serve --wait-until-exit . and then stop it with: . Musoq quit . Specify Desired Output Format . # Specify output format Musoq run query \"select 1 from #system.dual()\" --format [raw|csv|json|interpreted_json] . Raw . Musoq run query \"select Value from #system.range(1, 3)\" --format raw . Output: . Columns: [{\"name\":\"Value\",\"type\":\"System.Int64\",\"order\":0}] Rows: [[{\"value\":1}],[{\"value\":2}],[{\"value\":3}]] . CSV . Musoq run query \"select Value from #system.range(1, 3)\" --format csv . Output: . Value 1 2 3 . JSON . Musoq run query \"select Value from #system.range(1, 3)\" --format json . Output: . [{\"Value\":1},{\"Value\":2},{\"Value\":3}] . Interpreted JSON . Musoq run query \"select Value as 'obj.Number', NewId() as 'obj.Id' from #system.range(0, 10)\" --format interpreted-json . Output: . [{\"obj\":{\"Number\":0,\"Id\":\"00666e1c-358b-424a-b1bd-2550bb3d3d1d\"}},{\"obj\":{\"Number\":1,\"Id\":\"fb391e2c-a5d6-479e-9008-a44adddb475a\"}},...] . ",
    "url": "/cli.html#more-advanced-things",
    
    "relUrl": "/cli.html#more-advanced-things"
  },"24": {
    "doc": "Setup & Usage",
    "title": "Data Persistence with Buckets",
    "content": "Sometimes the process of data preparation for being queryable is really heavy. In such cases, it’s possible that plugin might allow to use buckets to store and reuse data. Roslyn data source allows do that: . Musoq bucket create mybucket . Load solution to bucket . Musoq csharp solution load --solution \"path/to/solution.sln\" --bucket mybucket . Do the first query . Musoq run query \"select p.Name from #csharp.solution('path/to/solution.sln') s cross apply s.Projects p\" --bucket mybucket . Then do another . Musoq run query \"select p.Name from #csharp.solution('path/to/solution.sln') s cross apply s.Projects p where p.Name like '%Tests'\" --bucket mybucket . This way, you load the solution once and then reuse it in multiple queries. After you’re done, you can clean up: . Musoq csharp solution unload --solution \"path/to/solution.sln\" --bucket mybucket . And delete whole bucket: . Musoq bucket delete mybucket . ",
    "url": "/cli.html#data-persistence-with-buckets",
    
    "relUrl": "/cli.html#data-persistence-with-buckets"
  },"25": {
    "doc": "Setup & Usage",
    "title": "Shell Integration",
    "content": "Musoq can process tables resulted from other commands. This allows for easy integration with other tools. You can treat table as a data source and process it with Musoq. wmic process get name,processid,workingsetsize | Musoq.exe run query \"select t.Name, Count(t.Name) from #stdin.table(true) t group by t.Name having Count(t.Name) &gt; 1\" . Or join them with other data sources: . &amp; { docker image ls; .\\Musoq.exe separator; docker container ls } | ./Musoq.exe run query \"select t.IMAGE_ID, t.REPOSITORY, t.SIZE, t.TAG, t2.CONTAINER_ID, t2.CREATED, t2.STATUS from #stdin.table(true) t inner join #stdin.table(true) t2 on t.IMAGE_ID = t2.IMAGE\" . Or use AI models to extract data from text: . Ticket #: 1234567 Date: 2024-09-07 14:30:22 UTC Customer: Jane Doe (jane.doe@email.com) Product: CloudSync Pro v3.5.2 OS: macOS 12.3.1 Subject: Sync Failure and Data Loss Description: Customer reported that CloudSync Pro failed to sync properly on 2024-09-06 around 18:45 local time. The sync process started but stopped at 43% completion with error code E-1010. After the failed sync, the customer noticed that approximately 250 MB of data was missing from their local drive. The customer has tried restarting the application and their computer, but the issue persists. They are using CloudSync Pro on 3 devices in total: MacBook Pro, iPhone 13, and iPad Air. Steps to Reproduce: 1. Open CloudSync Pro v3.5.2 on macOS 12.3.1 2. Initiate a full sync 3. Observe sync progress halting at 43% with error E-1010 Impact: High - Customer cannot sync data and has lost important files Troubleshooting Attempted: - Restarted application: No effect - Restarted computer: No effect - Checked internet connection: Stable at 100 Mbps Additional Notes: Customer is a premium subscriber and requests urgent assistance due to lost data containing work-related documents. Get-Content \"C:\\Tickets\\ticket.txt\" | ./Musoq.exe run query \"select t.TicketNumber, t.TicketDate, t.CustomerName, t.CustomerEmail, t.Product, t.OperatingSystem, t.Subject, t.ImpactLevel, t.ErrorCode, t.DataLossAmount, t.DeviceCount, case when ToLowerInvariant(t.SubscriptionType) like '%premium%' then 'PREMIUM' else 'STANDARD' end from #stdin.text('Ollama', 'llama3.1') t\" . Or use it to extract informations from receipt: . Musoq image encode \"/some/image/receipt.jpg\" | ./Musoq.exe run query \"select s.Shop, s.ProductName, s.Price from #stdin.image('OpenAi', 'gpt-4o') s\" . ",
    "url": "/cli.html#shell-integration",
    
    "relUrl": "/cli.html#shell-integration"
  },"26": {
    "doc": "Setup & Usage",
    "title": "Setup & Usage",
    "content": " ",
    "url": "/cli.html",
    
    "relUrl": "/cli.html"
  },"27": {
    "doc": "Common Table Expressions (CTE)",
    "title": "Common Table Expressions (CTE)",
    "content": "Common Table Expressions (CTE) are expressions that should be treated as if they create a temporary named result set. Effectively, the clause with TempResultSetName as (... Inner Query ...) Outer Query computes the Inner Query and stores it within the scope of the Outer Query, allowing for its use there. The temporary result set can also be used as the source for another CTE. It should be noted that recursive CTEs are currently not supported. An example of such an expression can be observed below. with FirstTable as ( select 1 as x from #system.dual() ), SecondTable as ( select 2 as y from #system.dual() ) select x, y from FirstTable f inner join SecondTable s on f.x &lt;&gt; s.y . ",
    "url": "/sql-syntax-of-the-tool/common-table-expressions-(cte).html",
    
    "relUrl": "/sql-syntax-of-the-tool/common-table-expressions-(cte).html"
  },"28": {
    "doc": "Data Sources",
    "title": "Data Sources",
    "content": " ",
    "url": "/data-sources.html",
    
    "relUrl": "/data-sources.html"
  },"29": {
    "doc": "FROM Clause",
    "title": "From Clause",
    "content": "You can witness three different types of from clauses. The first one is from #schema.table(param1, ..., paramN), the second is from SomeTableAlias, and the third from AnotherAlias(param1, ..., paramN). Basic usage often involves the first syntax, the second is utilized when referring to a source coming from Common Table Expressions (CTEs), while the third is mainly used in situations where the data source’s return types are unknown but known to the user writing the query. ",
    "url": "/sql-syntax-of-the-tool/from-clause.html#from-clause",
    
    "relUrl": "/sql-syntax-of-the-tool/from-clause.html#from-clause"
  },"30": {
    "doc": "FROM Clause",
    "title": "from #a.b(param1, …, paramN)",
    "content": "In query writing, a commonly used command from is from #a.b(param1, ...). This syntax specifies that we will be using an external data source. For instance, from #separatedValues.csv(...) indicates that we will utilize the source separatedValues and the table csv whose parameters will be passed (...). This instructs the data source directly on how to retrieve the data and then load it into the evaluator. The data source is parameterized, which allows for configuring what data you want to receive and how you want to receive it. For example, when querying about an operating system disk, you likely wouldn’t want to iterate over the entire disk but rather a set of folders that are important to you. Parameterization provides the flexibility to construct the portion of data you are inquiring about. By narrowing your searches, we speed up operation. This clause must be aliased when using it in conjunction with the join syntax . ",
    "url": "/sql-syntax-of-the-tool/from-clause.html#from-abparam1--paramn",
    
    "relUrl": "/sql-syntax-of-the-tool/from-clause.html#from-abparam1--paramn"
  },"31": {
    "doc": "FROM Clause",
    "title": "from SomeTableAlias",
    "content": "The use of Common Table Expressions introduces a new kind of data source that is already processed. Using the syntax with X as (select * from ...) expresses that the result set from select * from ... will be available under the name X, which becomes your new data source. You can use multiple table expressions with the following syntax: . with X as ( select * from ... ), Y as ( select * from ... where ... ) select * from X ... This syntax is much more flexible and also allows for combining table expressions with each other. Note that this type of data source cannot be aliased unlike the first one. ",
    "url": "/sql-syntax-of-the-tool/from-clause.html#from-sometablealias",
    
    "relUrl": "/sql-syntax-of-the-tool/from-clause.html#from-sometablealias"
  },"32": {
    "doc": "FROM Clause",
    "title": "from SourceOfInvoiceValue(param1, …, paramN)",
    "content": "The third and last clause you can use is from which aliases both the table and data source. This notation can be encountered when the data source we are using is unable to determine the types it will work on; however, as the creator of the query, we have such knowledge. When do we fall into such a situation? For instance, when extracting data from an invoice, although the data source will have context on the columns we want to extract, it will not possess information about the types of columns being extracted. We fill in this knowledge with the syntax below: . table Invoice { ProductName 'string', ProductPrize 'decimal' }; couple table #toolbox.invoices with Invoice as SourceOfInvoiceValues; . In this way, we provide the plugin and compiler with sufficient information about the required columns and types in the query. ",
    "url": "/sql-syntax-of-the-tool/from-clause.html#from-sourceofinvoicevalueparam1--paramn",
    
    "relUrl": "/sql-syntax-of-the-tool/from-clause.html#from-sourceofinvoicevalueparam1--paramn"
  },"33": {
    "doc": "FROM Clause",
    "title": "FROM Clause",
    "content": " ",
    "url": "/sql-syntax-of-the-tool/from-clause.html",
    
    "relUrl": "/sql-syntax-of-the-tool/from-clause.html"
  },"34": {
    "doc": "GROUP BY Clause",
    "title": "Group by and Having Operators",
    "content": "The Group by operator allows you to specify columns or expressions that your rows will be grouped by. You can define multiple groups. When grouping, your select clause must contain only the grouping expressions or column names or aggregate methods. The use of non-aggregating methods is also permitted as a parameter or result of processing an aggregate method. Columns that are not part of the group by operator are not allowed. ",
    "url": "/sql-syntax-of-the-tool/group-by-clause.html#group-by-and-having-operators",
    
    "relUrl": "/sql-syntax-of-the-tool/group-by-clause.html#group-by-and-having-operators"
  },"35": {
    "doc": "GROUP BY Clause",
    "title": "Aggregate Methods",
    "content": "You can use methods like Sum, SumIncome, SumOutcome, Count, AggregateValue, and others to perform the aggregation of values in rows belonging to a particular group. Broadly speaking, the rules from SQL apply here, so after using group by ColumnName, the only thing you can return in select is ColumnName and aggregated values such as Sum(SomeColumn). It should be noted that the * operator in aggregation operators is not supported. select ColumnName, Count(ColumnName) from #schema.method() group by ColumnName . You can also group by the values altered by some method. The only rule here is to repeat that part in the select clause (if you need it) both as an indicator of the group and the value of the grouping. It should look like this: . select SomeMethod(ColumnName), Sum(SomeMethod(ColumnName)) from #schema.method() group by SomeMethod(ColumnName) . ",
    "url": "/sql-syntax-of-the-tool/group-by-clause.html#aggregate-methods",
    
    "relUrl": "/sql-syntax-of-the-tool/group-by-clause.html#aggregate-methods"
  },"36": {
    "doc": "GROUP BY Clause",
    "title": "Parent Aggregation",
    "content": "You can calculate aggregation for parent groups by placing the number of groups you want to skip as a parameter of the aggregate method. For example, if your query groups by the columns Country and City and you sum their population Sum(Population), you could simultaneously sum the population for the entire country. In such a case, you should add Sum(1, Population) as well, which will compute the sum only for Country without considering different cities within the country. Aggregate methods can be combined with others in the select part. ",
    "url": "/sql-syntax-of-the-tool/group-by-clause.html#parent-aggregation",
    
    "relUrl": "/sql-syntax-of-the-tool/group-by-clause.html#parent-aggregation"
  },"37": {
    "doc": "GROUP BY Clause",
    "title": "GROUP BY Clause",
    "content": " ",
    "url": "/sql-syntax-of-the-tool/group-by-clause.html",
    
    "relUrl": "/sql-syntax-of-the-tool/group-by-clause.html"
  },"38": {
    "doc": "Home",
    "title": "Musoq: SQL-like Querying for Various Data Sources",
    "content": "Musoq is a tool that lets developers and IT professionals query different data sources using SQL-like syntax, without needing to import data into a database first. It’s designed for scenarios where you need to analyze files, directories, archives, or other data sources quickly and efficiently. ",
    "url": "/#musoq-sql-like-querying-for-various-data-sources",
    
    "relUrl": "/#musoq-sql-like-querying-for-various-data-sources"
  },"39": {
    "doc": "Home",
    "title": "What Musoq Does",
    "content": ". | Provides SQL-like querying capability for files, directories, archives, and other data sources | Supports various data formats including CSV, JSON, flat files, and more | Enables AI-assisted analysis through integration with models like GPT and Llama | Offers both CLI and programmatic access | Works on Windows and Linux, with planned MacOS support | . ",
    "url": "/#what-musoq-does",
    
    "relUrl": "/#what-musoq-does"
  },"40": {
    "doc": "Home",
    "title": "Practical Applications",
    "content": "Musoq is particularly useful for: . | Analyzing source code and solution files | Exploring file systems and comparing directories | Processing CSV and JSON data | Extracting information from archives | Analyzing images and text using AI models | Querying CAN DBC files | Processing system data and logs | . ",
    "url": "/#practical-applications",
    
    "relUrl": "/#practical-applications"
  },"41": {
    "doc": "Home",
    "title": "Current State",
    "content": "Musoq focuses on handling small to medium-sized datasets efficiently. While it uses SQL-like syntax, it intentionally deviates from strict SQL standards when it benefits user experience. The project prioritizes: . | Quick, ad-hoc data querying | User-friendly syntax over strict standards | Read-only operations | Continuous improvement based on real-world usage | . ",
    "url": "/#current-state",
    
    "relUrl": "/#current-state"
  },"42": {
    "doc": "Home",
    "title": "Getting Started",
    "content": "The fastest way to try Musoq is through the CLI tool. The CLI provides immediate access to Musoq’s querying capabilities and supports multiple output formats including Raw, CSV, JSON, and Interpreted JSON. For detailed documentation, examples, and implementation details, please visit this GitHub repository. ",
    "url": "/#getting-started",
    
    "relUrl": "/#getting-started"
  },"43": {
    "doc": "Home",
    "title": "Home",
    "content": " ",
    "url": "/",
    
    "relUrl": "/"
  },"44": {
    "doc": "Introduction",
    "title": "Musoq – Introduction",
    "content": "Musoq is an engine that enables the use of SQL syntax on a variety of data sources. It allows for querying data in different formats such as files, directories, structured files, archives, and more. Thanks to its extensible design, anything can be a data source since each data source is provided in the same way - as a plugin. While this construct can be demanding in terms of implementation, it offers the possibility to design your own data source - either generic or tailored to a specific need. This is the unique selling point of the solution - the ability to integrate with various data types and the flexibility in processing them. ",
    "url": "/sql-syntax-of-the-tool/introduction.html#musoq--introduction",
    
    "relUrl": "/sql-syntax-of-the-tool/introduction.html#musoq--introduction"
  },"45": {
    "doc": "Introduction",
    "title": "What Musoq is not?",
    "content": "Musoq is not an engine for processing huge volumes of data - this solution should be seen as a Swiss army knife for processing and working with smaller data sets - definitely not larger than our computer’s memory size. In its current stage, plugins are also not capable of utilizing indexes although that does not mean they won’t be able to in the future. Partially, the engine already allows for this (but none of the plugins implement it yet). ",
    "url": "/sql-syntax-of-the-tool/introduction.html#what-musoq-is-not",
    
    "relUrl": "/sql-syntax-of-the-tool/introduction.html#what-musoq-is-not"
  },"46": {
    "doc": "Introduction",
    "title": "Similarities",
    "content": "The SQL syntax in Musoq preserves most of the traditional SQL elements, such as SELECT queries, WHERE conditions, operators like GROUP BY and HAVING. Users familiar with the basics of SQL will find many familiar elements in Musoq, which should facilitate understanding. ",
    "url": "/sql-syntax-of-the-tool/introduction.html#similarities",
    
    "relUrl": "/sql-syntax-of-the-tool/introduction.html#similarities"
  },"47": {
    "doc": "Introduction",
    "title": "Unique Features of SQL Syntax in SQL",
    "content": "While Musoq draws from traditional SQL, it also introduces some unique extensions and modifications to the syntax. These include: . | Integrated queries to custom data sources: The ability to execute SQL queries to sources such as file systems, pictures (through EXIF attributes), and even archived files. | Integration with AI and external APIs: Musoq enables integration with AI tools such as GPT-3/GPT-4 as well as other APIs, opening doors to advanced analysis and data processing. | Flexibility in defining queries: Users can create custom data sources containing functions and aggregations tailored to their specific needs. | Mixing data sources in one query: A unique feature of Musoq is the ability to combine data from different sources in a single query. | . It is important to note that in Musoq, all calculations are performed directly upon reading from the data source. There is no intermediate element of placing data in an in-memory database (e.g., SQLite) and translating the user query into traditional SQL and then executing the query. Musoq translates SQL syntax into C#, compiles it, and runs the program written in this way on the data source the user is asking for. ",
    "url": "/sql-syntax-of-the-tool/introduction.html#unique-features-of-sql-syntax-in-sql",
    
    "relUrl": "/sql-syntax-of-the-tool/introduction.html#unique-features-of-sql-syntax-in-sql"
  },"48": {
    "doc": "Introduction",
    "title": "Comparison with Traditional SQL",
    "content": "Even though Musoq uses SQL syntax, it is not fully SQL compliant. Attention should be paid to certain differences in behavior and handling of queries. Musoq extends the capabilities of SQL, adapting them to its unique architecture and applications, which sometimes leads to different behavior and results from traditional databases. ",
    "url": "/sql-syntax-of-the-tool/introduction.html#comparison-with-traditional-sql",
    
    "relUrl": "/sql-syntax-of-the-tool/introduction.html#comparison-with-traditional-sql"
  },"49": {
    "doc": "Introduction",
    "title": "Introduction",
    "content": " ",
    "url": "/sql-syntax-of-the-tool/introduction.html",
    
    "relUrl": "/sql-syntax-of-the-tool/introduction.html"
  },"50": {
    "doc": "Introduction",
    "title": "Introduction",
    "content": "In this section, we will try to demonstrate practical examples of use along with basic explanations of how they work - this will be useful not only to you, the user browsing through this documentation, but also to me - the author who will certainly forget many things over time and, with a bit of hope, will have the opportunity to remind himself of the details when he will need to construct a query that will help him in his work. What you can expect in this section: . | Examples of queries with basic explanation: These will be selected examples that should meaningfully reflect how to construct queries, how to manipulate data or will showcase examples of using non-standard syntax. | Diverse data sources: The presented examples will refer to different data sources so that you have the chance to familiarize yourself with the capabilities of this tool. | Practical usage examples to make it clear what are the drawbacks and what are the advantages of this tool. | Tips &amp; tricks: Sometimes, certain things can be done differently, or simply better; we will try to do just that. | . This section will be updated regularly as soon as new queries that bring something new in the way of using the tool appear. I encourage you to experiment on your own, share examples, and explore new possibilities in using the tool. ",
    "url": "/practical-examples-and-applications/introduction.html",
    
    "relUrl": "/practical-examples-and-applications/introduction.html"
  },"51": {
    "doc": "JOIN Clause",
    "title": "Support for Joins",
    "content": "Currently, the only supported operators are inner join and [left | right] outer join. The syntax for the inner join expression is as follows: ...from #schema.method(...) a inner join #schema.method() b on a.SomeColumn = b.SomeOtherColumn where ... while the left outer join syntax is: ...from #schema.method(...) a left outer join #schema.method() b on a.SomeColumn = b.SomeOtherColumn where ... and right outer join: ...from #schema.method(...) a right outer join #schema.method() b on a.SomeColumn = b.SomeOtherColumn where ... When using a source that is parameterized (for example, #schema.method()), we must provide it with an alias. ",
    "url": "/sql-syntax-of-the-tool/join-clause.html#support-for-joins",
    
    "relUrl": "/sql-syntax-of-the-tool/join-clause.html#support-for-joins"
  },"52": {
    "doc": "JOIN Clause",
    "title": "JOIN Clause",
    "content": " ",
    "url": "/sql-syntax-of-the-tool/join-clause.html",
    
    "relUrl": "/sql-syntax-of-the-tool/join-clause.html"
  },"53": {
    "doc": "JSON Path Extraction",
    "title": "JSON Path Extraction",
    "content": " ",
    "url": "/utilities/json-path-extraction.html",
    
    "relUrl": "/utilities/json-path-extraction.html"
  },"54": {
    "doc": "JSON Path Extraction",
    "title": "Overview",
    "content": "Two methods are provided for extracting values from JSON using path expressions: . | ExtractFromJsonToArray - Returns extracted values as a string array | ExtractFromJson - Returns extracted values joined with commas as a single string | . ",
    "url": "/utilities/json-path-extraction.html#overview",
    
    "relUrl": "/utilities/json-path-extraction.html#overview"
  },"55": {
    "doc": "JSON Path Extraction",
    "title": "Path Syntax",
    "content": "Basic Structure . | Paths can start with $ (optional) representing the root | Properties can be accessed using dot notation or bracket notation | Property names with special characters must use bracket notation with quotes | . Supported Notations . | Dot Notation . $.property $.nested.property . | Bracket Notation . $['property'] $[\"property\"] . | Array Access . $.array[0] // Access specific index $.array[*] // Access all elements . | Mixed Notation . $.nested['property'] $['nested'].property . | . Special Cases . | Properties Containing Dots . $['property.with.dots'] $.nested['complex.name'] . | Properties Containing Brackets . $['property[with]brackets'] $.nested['array[0]name'] . | Complex Nested Paths . $.nested['complex[name].with.dot'] $.nested.array[0]['special.name[0]'] . | . ",
    "url": "/utilities/json-path-extraction.html#path-syntax",
    
    "relUrl": "/utilities/json-path-extraction.html#path-syntax"
  },"56": {
    "doc": "JSON Path Extraction",
    "title": "Usage Examples",
    "content": "1. Simple Property Access . var json = @\"{ \"\"name\"\": \"\"John\"\", \"\"age\"\": 30 }\"; // Both return [\"John\"] ExtractFromJsonToArray(json, \"$.name\") ExtractFromJsonToArray(json, \"$['name']\") // Returns \"John\" ExtractFromJson(json, \"$.name\") . 2. Nested Properties . var json = @\"{ \"\"user\"\": { \"\"details\"\": { \"\"name\"\": \"\"John\"\" } } }\"; // Returns [\"John\"] ExtractFromJsonToArray(json, \"$.user.details.name\") // Returns \"John\" ExtractFromJson(json, \"$.user.details.name\") . 3. Array Access . var json = @\"{ \"\"users\"\": [ { \"\"name\"\": \"\"John\"\" }, { \"\"name\"\": \"\"Jane\"\" } ] }\"; // Returns [\"John\", \"Jane\"] ExtractFromJsonToArray(json, \"$.users[*].name\") // Returns \"John,Jane\" ExtractFromJson(json, \"$.users[*].name\") . 4. Special Characters in Property Names . var json = @\"{ \"\"user.name\"\": \"\"John\"\", \"\"special[key]\"\": \"\"value\"\", \"\"nested\"\": { \"\"complex[name].with.dot\"\": \"\"data\"\" } }\"; // All valid path expressions: ExtractFromJson(json, \"$['user.name']\") ExtractFromJson(json, \"$['special[key]']\") ExtractFromJson(json, \"$.nested['complex[name].with.dot']\") . ",
    "url": "/utilities/json-path-extraction.html#usage-examples",
    
    "relUrl": "/utilities/json-path-extraction.html#usage-examples"
  },"57": {
    "doc": "JSON Path Extraction",
    "title": "Return Value Handling",
    "content": ". | Null or Empty Inputs . | If either JSON or path is null, return null, if empty then return empty array / string | . | Non-existent Paths . | Returns empty array/string | . | Value Types . | String values: Returned as-is | Numbers: Converted to string representation | Boolean: Converted to lowercase string (“true”/”false”) | Null: Skipped in the output | Objects: Converted to compact JSON string | Arrays: Converted to compact JSON string when directly accessed | . | . ",
    "url": "/utilities/json-path-extraction.html#return-value-handling",
    
    "relUrl": "/utilities/json-path-extraction.html#return-value-handling"
  },"58": {
    "doc": "JSON Path Extraction",
    "title": "Error Handling",
    "content": ". | Invalid JSON . | Returns empty array/string | . | Invalid Path Syntax . | Returns empty array/string | . | Array Index Out of Bounds . | Returns empty array/string | . | . ",
    "url": "/utilities/json-path-extraction.html#error-handling",
    
    "relUrl": "/utilities/json-path-extraction.html#error-handling"
  },"59": {
    "doc": "JSON Path Extraction",
    "title": "Best Practices",
    "content": ". | Use bracket notation with quotes for properties containing special characters | Use dot notation for simple property names | Use ExtractFromJsonToArray when you need to process individual values | Use ExtractFromJson when you need a comma-separated string of values | . ",
    "url": "/utilities/json-path-extraction.html#best-practices",
    
    "relUrl": "/utilities/json-path-extraction.html#best-practices"
  },"60": {
    "doc": "JSON Path Extraction",
    "title": "Limitations",
    "content": ". | Path must be valid according to the supported syntax | Array wildcards ([*]) cannot be used with object properties | No support for advanced JSON path features like filters or recursive descent | All numeric values are converted to their string representation | . ",
    "url": "/utilities/json-path-extraction.html#limitations",
    
    "relUrl": "/utilities/json-path-extraction.html#limitations"
  },"61": {
    "doc": "Linux Arm64",
    "title": "Musoq.DataSources.Roslyn",
    "content": "Provides schema to work with Roslyn data source. ",
    "url": "/data-sources/roslyn/linux-arm64.html#musoqdatasourcesroslyn",
    
    "relUrl": "/data-sources/roslyn/linux-arm64.html#musoqdatasourcesroslyn"
  },"62": {
    "doc": "Linux Arm64",
    "title": "Tables",
    "content": "Table is a collection of rows and columns that the plugin exposes. Below are the tables that are exposed by this data source. csharp.solution(string path) . Allows to perform queries on the given solution file. | Name | Type | Description | . | Id | string | Solution id | . | Projects | ProjectEntity[] | Projects within the solution | . ",
    "url": "/data-sources/roslyn/linux-arm64.html#tables",
    
    "relUrl": "/data-sources/roslyn/linux-arm64.html#tables"
  },"63": {
    "doc": "Linux Arm64",
    "title": "Private Tables",
    "content": "Private tables are tables that are not exposed by the plugin, but are available for use in queries when using CROSS / OUTER APPLY operator. ProjectEntity . Represent project of solution . | Name | Type | Description | . | Id | string | Project id | . | FilePath | string | File path | . | OutputFilePath | string | Output file path | . | OutputRefFilePath | string | Output reference file path | . | DefaultNamespace | string | Default namespace | . | Language | string | Language | . | AssemblyName | string | Assembly name | . | Name | string | Name | . | IsSubmission | bool | Is submission | . | Version | string | Version | . | Documents | DocumentEntity[] | Documents | . DocumentEntity . Represent document of project . | Name | Type | Description | . | Name | string | Name | . | Text | string | Text | . | ClassCount | int | Class count | . | InterfaceCount | int | Interface count | . | EnumCount | int | Enum count | . | Classes | ClassEntity[] | Struct count | . | Interfaces | InterfaceEntity[] | Interfaces | . | Enums | EnumEntity[] | Enums | . ReferencedDocumentEntity . Represent referenced document of project . | Name | Type | Description | . | Name | string | Name | . | Text | string | Text | . | ClassCount | int | Class count | . | InterfaceCount | int | Interface count | . | EnumCount | int | Enum count | . | Classes | ClassEntity[] | Struct count | . | Interfaces | InterfaceEntity[] | Interfaces | . | Enums | EnumEntity[] | Enums | . | StartLine | int | Start line | . | StartColumn | int | Start column | . | EndLine | int | End line | . | EndColumn | int | End column | . ClassEntity . Represent class of document . | Name | Type | Description | . | Document | DocumentEntity | Document | . | Text | string | Text | . | IsAbstract | bool | Is abstract | . | IsSealed | bool | Is sealed | . | IsStatic | bool | Is static | . | BaseTypes | string[] | Base types | . | Interfaces | string[] | Interfaces | . | TypeParameters | string[] | Type parameters | . | MemberNames | string[] | Member names | . | Attributes | string[] | Attributes | . | Name | string | Name | . | FullName | string | Full name | . | Namespace | string | Namespace | . | Modifiers | string[] | Modifiers | . | Methods | MethodEntity[] | Methods | . | Properties | PropertyEntity[] | Properties | . | MethodsCount | int | Methods count | . | PropertiesCount | int | Properties count | . | FieldsCount | int | Fields count | . | InheritanceDepth | int | Inheritance depth | . | ConstructorsCount | int | Constructors count | . | NestedClassesCount | int | Nested classes count | . | NestedInterfacesCount | int | Nested interfaces count | . | InterfacesCount | int | Interfaces count | . | LackOfCohesion | int | Lack of cohesion | . | LinesOfCode | int | Lines of code | . EnumEntity . Represent enum of document . | Name | Type | Description | . | Document | DocumentEntity | Document | . | Members | string[] | Members | . | Name | string | Name | . | FullName | string | Full name | . | Namespace | string | Namespace | . | Modifiers | string[] | Modifiers | . | Methods | MethodEntity[] | Methods | . | Properties | PropertyEntity[] | Properties | . InterfaceEntity . Represent interface of document . | Name | Type | Description | . | Document | DocumentEntity | Document | . | BaseInterfaces | string[] | Base interfaces | . | Name | string | Name | . | FullName | string | Full name | . | Namespace | string | Namespace | . | Modifiers | string[] | Modifiers | . | Methods | MethodEntity[] | Methods | . | Properties | PropertyEntity[] | Properties | . MethodEntity . Represent method of class . | Name | Type | Description | . | Name | string | Name | . | ReturnType | string | Return type | . | Parameters | ParameterEntity[] | Parameters | . | Modifiers | string[] | Modifiers | . | Text | string | Text | . | Attributes | AttributeEntity[] | Attributes | . | CyclomaticComplexity | int | Cyclomatic complexity | . PropertyEntity . Represent property of class . | Name | Type | Description | . | Name | string | Name | . | Type | string | Type | . | IsIndexer | bool | Is indexer | . | IsReadOnly | bool | Is read only | . | IsWriteOnly | bool | Is write only | . | IsRequired | bool | Is required | . | IsWithEvents | bool | Is with events | . | IsVirtual | bool | Is virtual | . | IsOverride | bool | Is override | . | IsAbstract | bool | Is abstract | . | IsSealed | bool | Is sealed | . | IsStatic | bool | Is static | . | Modifiers | string[] | Modifiers | . ParameterEntity . Represent parameter of method . | Name | Type | Description | . | Name | string | Name | . | Type | string | Type | . | IsOptional | bool | Is optional | . | IsParams | bool | Is params | . | IsThis | bool | Is this | . | IsDiscard | bool | Is discard | . | IsIn | bool | Is in | . | IsOut | bool | Is out | . | IsRef | bool | Is ref | . | IsByRef | bool | Is by ref | . | IsByValue | bool | Is by value | . ProjectReferenceEntity . Represent project reference . | Name | Type | Description | . | Name | string | Name | . LibraryReferenceEntity . Represent library reference . | Name | Type | Description | . | Name | string | Name | . | Version | string | Version | . | Culture | string | Culture | . | Location | string | Location | . ",
    "url": "/data-sources/roslyn/linux-arm64.html#private-tables",
    
    "relUrl": "/data-sources/roslyn/linux-arm64.html#private-tables"
  },"64": {
    "doc": "Linux Arm64",
    "title": "Methods",
    "content": "Methods are functions that can be called on the data source specific column. Below are the methods that are exposed by this data source. IEnumerable&lt;Musoq.DataSources.Roslyn.Entities.ProjectEntity&gt; GetProjectsByNames(string[] names) . Gets projects by names. IEnumerable&lt;Musoq.DataSources.Roslyn.Entities.ClassEntity&gt; GetClassesByNames(string[] names) . Gets classes by names. IEnumerable&lt;Musoq.DataSources.Roslyn.Entities.InterfaceEntity&gt; GetInterfacesByNames(string[] names) . Gets classes by names. IEnumerable&lt;Musoq.DataSources.Roslyn.Entities.EnumEntity&gt; GetEnumsByNames(string[] names) . Gets classes by names. IEnumerable&lt;Musoq.DataSources.Roslyn.Entities.ReferencedDocumentEntity&gt; FindReferences(Musoq.DataSources.Roslyn.Entities.ClassEntity entity) . Finds references of the specified class entity. IEnumerable&lt;Musoq.DataSources.Roslyn.Entities.ReferencedDocumentEntity&gt; FindReferences(Musoq.DataSources.Roslyn.Entities.InterfaceEntity entity) . Finds references of the specified interface entity. IEnumerable&lt;Musoq.DataSources.Roslyn.Entities.ReferencedDocumentEntity&gt; FindReferences(Musoq.DataSources.Roslyn.Entities.EnumEntity entity) . Finds references of the specified interface entity. ",
    "url": "/data-sources/roslyn/linux-arm64.html#methods",
    
    "relUrl": "/data-sources/roslyn/linux-arm64.html#methods"
  },"65": {
    "doc": "Linux Arm64",
    "title": "Base Methods",
    "content": "Base methods are methods that can be called on the data source specific column. Those methods are automatically inherited and enriches the data source specific methods. Below are those base methods that are exposed by this data source. int RowNumber() . Gets the row number of the current row. string? GetTypeName(object? obj) . Gets the typename of passed object. string AggregateValues(string name) . Aggregates values into a single value. string AggregateValues(string name, int parent) . Aggregates values into a single value. Decimal Avg(string name) . Gets the aggregated average value from the given group name . Decimal Avg(string name, int parent) . Gets the aggregated average value from the given group name . byte? ShiftLeft(byte? value, int shift) . Shifts the value to the left by the specified number of bits. short? ShiftLeft(short? value, int shift) . Shifts the value to the left by the specified number of bits. int? ShiftLeft(int? value, int shift) . Shifts the value to the left by the specified number of bits. long? ShiftLeft(long? value, int shift) . Shifts the value to the left by the specified number of bits. sbyte? ShiftLeft(sbyte? value, int shift) . Shifts the value to the left by the specified number of bits. ushort? ShiftLeft(ushort? value, int shift) . Shifts the value to the left by the specified number of bits. uint? ShiftLeft(uint? value, int shift) . Shifts the value to the left by the specified number of bits. ulong? ShiftLeft(ulong? value, int shift) . Shifts the value to the left by the specified number of bits. byte? ShiftRight(byte? value, int shift) . Shifts the value to the right by the specified number of bits. short? ShiftRight(short? value, int shift) . Shifts the value to the right by the specified number of bits. int? ShiftRight(int? value, int shift) . Shifts the value to the right by the specified number of bits. long? ShiftRight(long? value, int shift) . Shifts the value to the right by the specified number of bits. sbyte? ShiftRight(sbyte? value, int shift) . Shifts the value to the right by the specified number of bits. ushort? ShiftRight(ushort? value, int shift) . Shifts the value to the right by the specified number of bits. uint? ShiftRight(uint? value, int shift) . Shifts the value to the right by the specified number of bits. ulong? ShiftRight(ulong? value, int shift) . Shifts the value to the right by the specified number of bits. byte? Not(byte? value) . Performs bitwise NOT operation on a given value. short? Not(short? value) . Performs bitwise NOT operation on a given value. int? Not(int? value) . Performs bitwise NOT operation on a given value. long? Not(long? value) . Performs bitwise NOT operation on a given value. sbyte? Not(sbyte? value) . Performs bitwise NOT operation on a given value. ushort? Not(ushort? value) . Performs bitwise NOT operation on a given value. uint? Not(uint? value) . Performs bitwise NOT operation on a given value. ulong? Not(ulong? value) . Performs bitwise NOT operation on a given value. byte? And(byte? left, byte? right) . Performs bitwise AND operation on two given values. int? And(byte? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(byte? left, short? right) . Performs bitwise AND operation on two given values. int? And(byte? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(byte? left, int? right) . Performs bitwise AND operation on two given values. uint? And(byte? left, uint? right) . Performs bitwise AND operation on two given values. long? And(byte? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(byte? left, ulong? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, byte? right) . Performs bitwise AND operation on two given values. sbyte? And(sbyte? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, short? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, int? right) . Performs bitwise AND operation on two given values. uint? And(sbyte? left, uint? right) . Performs bitwise AND operation on two given values. long? And(sbyte? left, long? right) . Performs bitwise AND operation on two given values. int? And(short? left, byte? right) . Performs bitwise AND operation on two given values. int? And(short? left, sbyte? right) . Performs bitwise AND operation on two given values. short? And(short? left, short? right) . Performs bitwise AND operation on two given values. int? And(short? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(short? left, int? right) . Performs bitwise AND operation on two given values. uint? And(short? left, uint? right) . Performs bitwise AND operation on two given values. long? And(short? left, long? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, byte? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, short? right) . Performs bitwise AND operation on two given values. ushort? And(ushort? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, int? right) . Performs bitwise AND operation on two given values. uint? And(ushort? left, uint? right) . Performs bitwise AND operation on two given values. long? And(ushort? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(ushort? left, ulong? right) . Performs bitwise AND operation on two given values. int? And(int? left, byte? right) . Performs bitwise AND operation on two given values. int? And(int? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(int? left, short? right) . Performs bitwise AND operation on two given values. int? And(int? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(int? left, int? right) . Performs bitwise AND operation on two given values. uint? And(int? left, uint? right) . Performs bitwise AND operation on two given values. long? And(int? left, long? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, uint? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, byte? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, sbyte? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, short? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, ushort? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, int? right) . Performs bitwise AND operation on two given values. ulong? And(uint? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(uint? left, ulong? right) . Performs bitwise AND operation on two given values. long? And(long? left, long? right) . Performs bitwise AND operation on two given values. long? And(long? left, byte? right) . Performs bitwise AND operation on two given values. long? And(long? left, sbyte? right) . Performs bitwise AND operation on two given values. long? And(long? left, short? right) . Performs bitwise AND operation on two given values. long? And(long? left, ushort? right) . Performs bitwise AND operation on two given values. long? And(long? left, int? right) . Performs bitwise AND operation on two given values. long? And(long? left, uint? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, byte? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, ushort? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, uint? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, ulong? right) . Performs bitwise AND operation on two given values. byte? Or(byte? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, short? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(byte? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(byte? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(byte? left, ulong? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, byte? right) . Performs bitwise OR operation on two given values. sbyte? Or(sbyte? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, short? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(sbyte? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(sbyte? left, long? right) . Performs bitwise OR operation on two given values. int? Or(short? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(short? left, sbyte? right) . Performs bitwise OR operation on two given values. short? Or(short? left, short? right) . Performs bitwise OR operation on two given values. int? Or(short? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(short? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(short? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(short? left, long? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, short? right) . Performs bitwise OR operation on two given values. ushort? Or(ushort? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(ushort? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(ushort? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(ushort? left, ulong? right) . Performs bitwise OR operation on two given values. int? Or(int? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(int? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(int? left, short? right) . Performs bitwise OR operation on two given values. int? Or(int? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(int? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(int? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(int? left, long? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, uint? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, byte? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, sbyte? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, short? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, ushort? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, int? right) . Performs bitwise OR operation on two given values. ulong? Or(uint? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(uint? left, ulong? right) . Performs bitwise OR operation on two given values. long? Or(long? left, long? right) . Performs bitwise OR operation on two given values. long? Or(long? left, byte? right) . Performs bitwise OR operation on two given values. long? Or(long? left, sbyte? right) . Performs bitwise OR operation on two given values. long? Or(long? left, short? right) . Performs bitwise OR operation on two given values. long? Or(long? left, ushort? right) . Performs bitwise OR operation on two given values. long? Or(long? left, int? right) . Performs bitwise OR operation on two given values. long? Or(long? left, uint? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, byte? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, ushort? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, uint? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, ulong? right) . Performs bitwise OR operation on two given values. byte? Xor(byte? left, byte? right) . Performs bitwise OR operation on two given values. int? Xor(byte? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(byte? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(byte? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(byte? left, ulong? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, byte? right) . Performs bitwise Xor operation on two given values. sbyte? Xor(sbyte? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(sbyte? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(sbyte? left, long? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, sbyte? right) . Performs bitwise Xor operation on two given values. short? Xor(short? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, ushort? right) . Performs bitwise XOR operation on two given values. int? Xor(short? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(short? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(short? left, long? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, short? right) . Performs bitwise Xor operation on two given values. ushort? Xor(ushort? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(ushort? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(ushort? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ushort? left, ulong? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(int? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(int? left, long? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, uint? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, byte? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, sbyte? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, short? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, ushort? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, int? right) . Performs bitwise Xor operation on two given values. ulong? Xor(uint? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(uint? left, ulong? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, long? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, byte? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, sbyte? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, short? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, ushort? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, int? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, uint? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, ulong? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, byte? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, ushort? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, uint? right) . Performs bitwise Xor operation on two given values. byte[] GetBytes(string? content) . Gets the bytes from the given string. byte[] GetBytes(string? content, int length, int offset) . Gets the bytes from the given string within given offset and length. byte?[]? GetBytes(char? character) . Gets the bytes from the given character. byte?[]? GetBytes(bool? bit) . Gets the bytes from the given boolean. byte?[]? GetBytes(long? value) . Gets the bytes from the given long. byte?[]? GetBytes(int? value) . Gets the bytes from the given int. byte?[]? GetBytes(short? value) . Gets the bytes from the given short. byte?[]? GetBytes(ulong? value) . Gets the bytes from the given ulong. byte?[]? GetBytes(ushort? value) . Gets the bytes from the given ushort. byte?[]? GetBytes(uint? value) . Gets the bytes from the given uint. byte?[]? GetBytes(Decimal? value) . Gets the bytes from the given decimal. byte?[]? GetBytes(double? value) . Gets the bytes from the given double. byte?[]? GetBytes(float? value) . Gets the bytes from the given float. string? ToBin(byte?[]? bytes, string delimiter) . Converts given bytes to binary with defined delimiter . string ToBin&lt;T&gt;(T value) . Converts given value to binary . string ToOcta&lt;T&gt;(T value) . Converts given value to octal . string ToDec&lt;T&gt;(T value) . Converts given value to decimal . string ToBase64(byte[] value) . Converts given value to string . string ToBase64(byte[] value, int offset, int length) . Converts given array of bytes to string . byte[] FromBase64(string value) . Converts given string to bytes array . bool FromBytesToBool(byte[] value) . Converts bytes to boolean value. short FromBytesToInt16(byte[] value) . Converts bytes to a 16-bit signed integer. ushort FromBytesToUInt16(byte[] value) . Converts bytes to a 16-bit unsigned integer. int FromBytesToInt32(byte[] value) . Converts bytes to a 32-bit signed integer. uint FromBytesToUInt32(byte[] value) . Converts bytes to a 32-bit unsigned integer. long FromBytesToInt64(byte[] value) . Converts bytes to a 64-bit signed integer. ulong FromBytesToUInt64(byte[] value) . Converts bytes to a 64-bit unsigned integer. float FromBytesToFloat(byte[] value) . Converts bytes to a float value. double FromBytesToDouble(byte[] value) . Converts bytes to a float value. string FromBytesToString(byte[] value) . Converts bytes to a string. byte[] ToBytes(bool value) . Converts boolean value to bytes. byte[] ToBytes(short value) . Converts short value to bytes. byte[] ToBytes(ushort value) . Converts ushort value to bytes. byte[] ToBytes(int value) . Converts int value to bytes. byte[] ToBytes(uint value) . Converts uint value to bytes. byte[] ToBytes(long value) . Converts long value to bytes. byte[] ToBytes(ulong value) . Converts long value to bytes. string? ToHex(byte?[]? bytes, string delimiter) . Converts given bytes to hex with defined delimiter . string? ToHex&lt;T&gt;(T value) . Converts given value to binary . int Count(string name) . Gets the count value of a given group. int Count(string name, int parent) . Gets the count value of a given group. int ExtractFromDate(string? date, string partOfDate) . Extracts part of the date from the date . int ExtractFromDate(string date, string culture, string partOfDate) . Extracts part of the date from the date based on given culture . DateTimeOffset? GetDate() . Gets the current datetime . DateTimeOffset? UtcGetDate() . Gets the current datetime in UTC . int? Month(DateTimeOffset? value) . Gets the month from DateTimeOffset . int? Year(DateTimeOffset? value) . Gets the year from DateTimeOffset . int? Day(DateTimeOffset? value) . Gets the day from DateTimeOffset . int? Hour(DateTimeOffset? value) . Gets the hour from DateTimeOffset . int? Minute(DateTimeOffset? value) . Gets the minute from DateTimeOffset . int? Second(DateTimeOffset? value) . Gets the second from DateTimeOffset . int? Milliseconds(DateTimeOffset? value) . Gets the millisecond from DateTimeOffset . int? DayOfWeek(DateTimeOffset? value) . Gets the day of week from DateTimeOffset . TimeSpan? ExtractTimeSpan(DateTimeOffset? dateTimeOffset) . Extracts time from DateTimeOffset . DateTime? ToDateTimeOffset(string value) . Converts given value to DateTimeOffset . DateTimeOffset? ToDateTimeOffset(string value, string culture) . Converts given value to DateTimeOffset . IEnumerable&lt;T&gt;? Skip&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? skipCount) . Skips elements from the beginning of the sequence. IEnumerable&lt;T&gt;? Take&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? takeCount) . Takes elements from the beginning of the sequence. IEnumerable&lt;T&gt;? SkipAndTake&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? skipCount, int? takeCount) . Skip and takes elements from the beginning of the sequence. T[]? EnumerableToArray&lt;T&gt;(IEnumerable&lt;T&gt;? values) . Turn array arguments of T into a single array. T[]? MergeArrays&lt;T&gt;(T[][]? values) . Turn array arguments of T into a single array. IEnumerable&lt;T&gt;? LongestCommonSequence&lt;T&gt;(IEnumerable&lt;T&gt;? source, IEnumerable&lt;T&gt;? pattern) . Computes longest common sequence of two given sequences . T? GetElementAtOrDefault&lt;T&gt;(IEnumerable&lt;T&gt;? enumerable, int? index) . Gets the element at the specified index in a sequence . int? Length&lt;T&gt;(IEnumerable&lt;T&gt;? enumerable) . Gets the length of the sequence . int? Length&lt;T&gt;(T[]? array) . Gets the length of the array . T? Choose&lt;T&gt;(int? index, T[] values) . Gets the value of an array at the specified index . T If&lt;T&gt;(bool expressionResult, T a, T b) . Chose a or b value based on the expression result . bool? Match(string? regex, string? content) . Determine whether content matches the specified pattern . byte? Coalesce(byte?[] array) . Gets the first non-null value in a list . sbyte? Coalesce(sbyte?[] array) . Gets the first non-null value in a list . short? Coalesce(short?[] array) . Gets the first non-null value in a list . ushort? Coalesce(ushort?[] array) . Gets the first non-null value in a list . int? Coalesce(int?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(uint?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(long?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(ulong?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(Decimal?[] array) . Gets the first non-null value in a list . T? Coalesce&lt;T&gt;(T[] array) . Gets the first non-null value in a list . IEnumerable&lt;T&gt;? Distinct&lt;T&gt;(IEnumerable&lt;T&gt;? values) . Returns distinct elements from a collection. string? Md5(string? content) . Gets the md5 hash of the given string. string? Md5(byte?[]? content) . Gets the md5 hash of the given bytes array. string? Sha1(string? content) . Gets the sha256 hash of the given string. string? Sha1(byte?[]? content) . Gets the sha256 hash of the given bytes array. string? Sha256(string? content) . Gets the sha256 hash of the given string. string? Sha256(byte?[]? content) . Gets the sha256 hash of the given bytes array. string? Sha512(string? content) . Gets the sha256 hash of the given string. string? Sha512(byte?[]? content) . Gets the sha256 hash of the bytes array. string? ToJson&lt;T&gt;(T? obj) . Converts object to json. string[] ExtractFromJsonToArray(string? json, string? path) . Extracts values from json by path. string? ExtractFromJson(string? json, string? path) . Extracts values from json by path and joins them with comma. Decimal? Abs(Decimal? value) . Gets the absolute value . long? Abs(long? value) . Gets the absolute value . int? Abs(int? value) . Gets the absolute value . Decimal? Ceil(Decimal? value) . Gets the ceiling value . Decimal? Floor(Decimal? value) . Gets the floor value . Decimal? Sign(Decimal? value) . Determine whether value is greater, equal or less that zero . long? Sign(long? value) . Determine whether value is greater, equal or less that zero . Decimal? Round(Decimal? value, int precision) . Rounds the value within given precision . Decimal? PercentOf(Decimal? value, Decimal? max) . Gets the percentage of the value . int Rand() . Gets the random integer value . int? Rand(int? min, int? max) . Gets the random integer value . double? Pow(Decimal? x, Decimal? y) . Computes the pow between two values . double? Pow(double? x, double? y) . Computes the pow between two values . double? Sqrt(Decimal? x) . Computes the sqrt of a given value . double? Sqrt(double? x) . Computes the sqrt of a given value . double? Sqrt(long? x) . Computes the sqrt of a given value . double? PercentRank&lt;T&gt;(IEnumerable&lt;T&gt;? window, T? value) . Computes the percent rank of a given window . double? Log(Decimal? base, Decimal? value) . Calculates the logarithm of a value with a specified base. Decimal? Sin(Decimal? value) . Calculates sine of a value. double? Sin(double? value) . Calculates sine of a value. float? Sin(float? value) . Calculates sine of a value. Decimal? Cos(Decimal? value) . Calculates cosine of a value. double? Cos(double? value) . Calculates cosine of a value. float? Cos(float? value) . Calculates cosine of a value. Decimal Max(string name) . Gets the max value of a given group. Decimal Max(string name, int parent) . Gets the max value of a given group. Decimal Min(string name) . Gets the min value of a given group. Decimal Min(string name, int parent) . Gets the min value of a given group. Decimal StDev(string name, int parent) . Gets the StDev value of a given group. string NewId() . Gets the new identifier . string? Trim(string? value) . Removes leading and trailing whitespace from a string. string? TrimStart(string? value) . Removes leading whitespace from a string. string? TrimEnd(string? value) . Removes trailing whitespace from a string. string? Substring(string? value, int? index, int? length) . Gets the substring from the string. string? Substring(string value, int? length) . Gets the substring from the string . string? Concat(string[]? strings) . Concatenates the specified values . string? Concat(char?[]? characters) . Concatenates the specified characters . string? Concat(string? firstString, char?[]? chars) . Concatenates specified string fir characters . string? Concat(char? firstChar, string[]? strings) . Concatenate specific character with strings . string? Concat(object[]? objects) . Concatenates the specified strings . string? Concat&lt;T&gt;(T[]? objects) . Concatenates the specified strings . bool? Contains(string? content, string? what) . Determine whether the string contains the specified value . int? IndexOf(string? value, string? text) . Position of the first occurrence of the specified value . string? Soundex(string? value) . Computes soundex for the specified value . bool HasFuzzyMatchedWord(string text, string word, string separator) . Matches the specified text by splitting it with separator and applying fuzzy comparison . bool HasWordThatHasSmallerLevenshteinDistanceThan(string text, string word, int distance, string separator) . Matches the specified text by splitting it with separator and applying fuzzy comparison with a given distance . bool HasWordThatSoundLike(string text, string word, string separator) . Matches whether the specified word is present after being fuzzified within the specified text . bool HasTextThatSoundLikeSentence(string text, string sentence, string separator) . Matches whether the specified text is present in sentence after being fuzified . string? ToUpper(string value) . Makes the string uppercase . string? ToUpper(string value, string culture) . Makes the string uppercase within specified culture . string? ToUpperInvariant(string value) . Makes the string uppercase . string? ToLower(string value) . Makes the string lowercase . string? ToLower(string value, string culture) . Makes the string lowercase within specified culture . string? ToLowerInvariant(string value) . Makes the string lowercase . string? PadLeft(string? value, string? character, int? totalWidth) . Returns a new string that right-aligns the characters in this instance by padding them on the left with a specified Unicode character, for a specified total lengt . string? PadRight(string? value, string? character, int? totalWidth) . Returns a new string that left-aligns the characters in this instance by padding them on the right with a specified Unicode character, for a specified total length . string? Head(string? value, int? length) . Gets the first N characters of the string . string? Tail(string? value, int? length) . Gets the last N characters of the string . int? LevenshteinDistance(string? firstValue, string? secondValue) . Computes the Levenshtein distance between two strings . char? GetCharacterOf(string value, int index) . Gets the character at specified index . string? Reverse(string? value) . Reverses the string . string[] Split(string value, string[] separators) . Splits the string into an array of substrings based on the specified separators . char[] ToCharArray(string value) . Splits the string into an array of characters . string? LongestCommonSubstring(string source, string pattern) . Computes the longest common subsequence between two source and pattern . string Replicate(string value, int integer) . Clones the value n times . string? Translate(string? value, string? characters, string? translations) . Returns the string from the first argument after the characters specified in the second argument are translated into the characters specified in the third argument. string? Replace(string? text, string lookFor, string? changeTo) . Replaces the first occurrence of a specified string in this instance with another specified string . string? ToTitleCase(string? value) . Capitalizes the first letter of the string . string? GetNthWord(string? text, int? wordIndex, string? separator) . Gets the nth word of the string . string? GetFirstWord(string text, string separator) . Gets the first word of the string . string? GetSecondWord(string text, string separator) . Gets the second word of the string . string? GetThirdWord(string text, string separator) . Gets the third word of the string . string? GetLastWord(string? text, string? separator) . Gets last word of the string . bool? IsNullOrEmpty(string? value) . Determines whether the string is null or empty . bool? IsNullOrWhiteSpace(string? value) . Determines whether the string is null or whitespace . string? UrlEncode(string? value) . Encodes the value . string? UrlDecode(string? value) . Decodes the value . string? UriEncode(string? value) . Encodes the value . string? UriDecode(string? value) . Decodes the value . bool? StartsWith(string? value, string? prefix) . Determines whether the string starts with the specified prefix . bool? StartsWith(string? value, string? prefix, string comparison) . Determines whether the string starts with the specified prefix . bool? EndsWith(string? value, string? suffix) . Determines whether the string ends with the specified suffix . bool? EndsWith(string? value, string? suffix, string comparison) . Determines whether the string ends with the specified suffix . string? RegexReplace(string? value, string? pattern, string? replacement) . Replace the specified value part that matches the pattern with the replacement . string[]? SplitByLinuxNewLines(string? input) . Split string by Linux-style newlines (\\n) . string[]? SplitByWindowsNewLines(string? input) . Split string by Windows-style newlines (\\r\\n) . string[]? SplitByNewLines(string? input) . Smart split that handles both Windows (\\r\\n) and Linux (\\n) newlines . Decimal Sum(string name) . Gets the sum value of a given group. Decimal Sum(string name, int parent) . Gets the sum value of a given group. Decimal SumIncome(string name) . Gets the sum value of a given group. Decimal SumIncome(string name, int parent) . Gets the sum value of a given group. Decimal SumOutcome(string name) . Gets the outcome value of a given group. Decimal SumOutcome(string name, int parent) . Gets the outcome value of a given group. TimeSpan? SumTimeSpan(string name) . Gets the sum value of a given group. TimeSpan? SumTimeSpan(string name, int parent) . Gets the sum value of a given group. TimeSpan? MinTimeSpan(string name) . Gets the min value of a given group. TimeSpan? MinTimeSpan(string name, int parent) . Gets the min value of a given group. TimeSpan? MaxTimeSpan(string name) . Gets the max value of a given group. TimeSpan? MaxTimeSpan(string name, int parent) . Gets the min value of a given group. char? ToChar(string? value) . Converts given value to character . char? ToChar(int? value) . Converts given value to character . char? ToChar(short? value) . Converts given value to character . char? ToChar(byte? value) . Converts given value to character . char? ToChar(object? value) . Converts given value to character . DateTime? ToDateTime(string value) . Converts given value to DateTime . DateTime? ToDateTime(string value, string culture) . Converts given value to DateTime . Decimal? ToDecimal(string? value) . Converts given value to decimal . Decimal? ToDecimal(string value, string culture) . Converts given value to decimal withing given culture . Decimal? ToDecimal(byte? value) . Converts given value to Decimal . Decimal? ToDecimal(sbyte? value) . Converts given value to Decimal . Decimal? ToDecimal(short? value) . Converts given value to Decimal . Decimal? ToDecimal(ushort? value) . Converts given value to Decimal . Decimal? ToDecimal(long? value) . Converts given value to Decimal . Decimal? ToDecimal(ulong? value) . Converts given value to Decimal . Decimal? ToDecimal(float? value) . Converts given value to Decimal . Decimal? ToDecimal(double? value) . Converts given value to Decimal . Decimal? ToDecimal(object? value) . Converts given value to Decimal . double? ToDouble(object? value) . Converts given value to double . double? ToDouble(string? value) . Converts given value to double . double? ToDouble(byte? value) . Converts given value to double . double? ToDouble(sbyte? value) . Converts given value to double . double? ToDouble(short? value) . Converts given value to double . double? ToDouble(ushort? value) . Converts given value to double . double? ToDouble(int? value) . Converts given value to double . double? ToDouble(uint? value) . Converts given value to double . double? ToDouble(long? value) . Converts given value to double . double? ToDouble(ulong? value) . Converts given value to double . double? ToDouble(float? value) . Converts given value to double . double? ToDouble(double? value) . Converts given value to double . double? ToDouble(Decimal? value) . Converts given value to double . float? ToFloat(string? value) . Converts given value to float . float? ToFloat(byte? value) . Converts given value to float . float? ToFloat(sbyte? value) . Converts given value to float . float? ToFloat(short? value) . Converts given value to float . float? ToFloat(ushort? value) . Converts given value to float . float? ToFloat(int? value) . Converts given value to float . float? ToFloat(uint? value) . Converts given value to float . float? ToFloat(long? value) . Converts given value to float . float? ToFloat(ulong? value) . Converts given value to float . float? ToFloat(float? value) . Converts given value to float . float? ToFloat(Decimal? value) . Converts given value to float . int? ToInt32(string value) . Converts given value to int . int? ToInt32(byte? value) . Converts given value to int . int? ToInt32(sbyte? value) . Converts given value to int . int? ToInt32(short? value) . Converts given value to int . int? ToInt32(ushort? value) . Converts given value to int . int? ToInt32(int? value) . Converts given value to int . int? ToInt32(uint? value) . Converts given value to int . int? ToInt32(long? value) . Converts given value to int . int? ToInt32(ulong? value) . Converts given value to int . int? ToInt32(float? value) . Converts given value to int . int? ToInt32(double? value) . Converts given value to int . int? ToInt32(Decimal? value) . Converts given value to int . int? ToInt32(object? value) . Converts given value to int . long? ToInt64(string value) . Converts given value to Int64 . long? ToInt64(byte? value) . Converts given value to long . long? ToInt64(sbyte? value) . Converts given value to long . long? ToInt64(short? value) . Converts given value to long . long? ToInt64(ushort? value) . Converts given value to long . long? ToInt64(int? value) . Converts given value to long . long? ToInt64(uint? value) . Converts given value to long . long? ToInt64(long? value) . Converts given value to long . long? ToInt64(ulong? value) . Converts given value to long . long? ToInt64(float? value) . Converts given value to long . long? ToInt64(double? value) . Converts given value to long . long? ToInt64(Decimal? value) . Converts given value to long . long? ToInt64(object? value) . Converts given value to long . string? ToString(char? value) . Converts given value to string . string? ToString(DateTimeOffset? value) . Converts given value to string . string? ToString(DateTimeOffset? value, string format) . Converts given value to string . string? ToString(byte? value) . Converts given value to string . string? ToString(byte? value, string format) . Converts given value to string . string? ToString(sbyte? value) . Converts given value to string . string? ToString(sbyte? value, string format) . Converts given value to string . string? ToString(int? value) . Converts given value to string . string? ToString(int? value, string format) . Converts given value to string . string? ToString(uint? value) . Converts given value to string . string? ToString(uint? value, string format) . Converts given value to string . string? ToString(long? value) . Converts given value to string . string? ToString(long? value, string format) . Converts given value to string . string? ToString(ulong? value) . Converts given value to string . string? ToString(ulong? value, string format) . Converts given value to string . string? ToString(float? value) . Converts given value to string . string? ToString(float? value, string format) . Converts given value to string . string? ToString(double? value) . Converts given value to string . string? ToString(double? value, string format) . Converts given value to string . string? ToString(Decimal? value) . Converts given value to string . string? ToString(Decimal? value, string format) . Converts given value to string . string? ToString(bool? value) . Converts given value to string . string? ToString(object? value) . Converts given value to string . string? ToString&lt;T&gt;(T? value) . Converts given value to string . string ToString(string[] value) . Converts given value to string . string ToString&lt;T&gt;(T[] value) . Converts given value to string . TimeSpan? ToTimeSpan(string value) . Converts given value to TimeSpan . TimeSpan? ToTimeSpan(string value, string culture) . Converts given value to TimeSpan . IEnumerable&lt;T&gt; Window&lt;T&gt;(string name) . Gets the window . ",
    "url": "/data-sources/roslyn/linux-arm64.html#base-methods",
    
    "relUrl": "/data-sources/roslyn/linux-arm64.html#base-methods"
  },"66": {
    "doc": "Linux Arm64",
    "title": "Linux Arm64",
    "content": " ",
    "url": "/data-sources/roslyn/linux-arm64.html",
    
    "relUrl": "/data-sources/roslyn/linux-arm64.html"
  },"67": {
    "doc": "Linux Arm64",
    "title": "Musoq.DataSources.Archives",
    "content": "Provides schema to work with archives files . ",
    "url": "/data-sources/Archives/linux-arm64.html#musoqdatasourcesarchives",
    
    "relUrl": "/data-sources/Archives/linux-arm64.html#musoqdatasourcesarchives"
  },"68": {
    "doc": "Linux Arm64",
    "title": "Tables",
    "content": "Table is a collection of rows and columns that the plugin exposes. Below are the tables that are exposed by this data source. archives.file(string path) . Enumerate archive files like they were regular files . | Name | Type | Description | . | CompressionType | CompressionType | Compression type | . | ArchivedTime | DateTime? | When the file or directory were archived | . | CompressedSize | long | Compressed size of the file or directory | . | Crc | long | CRC of the file or directory | . | CreatedTime | DateTime? | When the file or directory were created | . | Key | string | Path to file or directory | . | LinkTarget | string | Link target | . | IsDirectory | bool | Is directory | . | IsEncrypted | bool | Is encrypted | . | IsSplitAfter | bool | Is split after | . | IsSolid | bool | Is solid | . | VolumeIndexFirst | int | Volume index first | . | VolumeIndexLast | int | Volume index last | . | LastAccessTime | DateTime? | When the file or directory were last accessed | . | LastModifiedTime | DateTime? | When the file or directory were last modified | . | Size | long | Size of the file or directory | . | Attrib | long? | Attributes of the file or directory | . | TextContent | string | Text content of a file | . ",
    "url": "/data-sources/Archives/linux-arm64.html#tables",
    
    "relUrl": "/data-sources/Archives/linux-arm64.html#tables"
  },"69": {
    "doc": "Linux Arm64",
    "title": "Methods",
    "content": "Methods are functions that can be called on the data source specific column. Below are the methods that are exposed by this data source. byte[] GetContent() . Gets the content of the entry as byte array. string GetTextContent() . Gets the content of the entry as string. IO.Stream GetStreamContent() . Gets the content of the entry as stream. ",
    "url": "/data-sources/Archives/linux-arm64.html#methods",
    
    "relUrl": "/data-sources/Archives/linux-arm64.html#methods"
  },"70": {
    "doc": "Linux Arm64",
    "title": "Base Methods",
    "content": "Base methods are methods that can be called on the data source specific column. Those methods are automatically inherited and enriches the data source specific methods. Below are those base methods that are exposed by this data source. int RowNumber() . Gets the row number of the current row. string? GetTypeName(object? obj) . Gets the typename of passed object. string AggregateValues(string name) . Aggregates values into a single value. string AggregateValues(string name, int parent) . Aggregates values into a single value. Decimal Avg(string name) . Gets the aggregated average value from the given group name . Decimal Avg(string name, int parent) . Gets the aggregated average value from the given group name . byte? ShiftLeft(byte? value, int shift) . Shifts the value to the left by the specified number of bits. short? ShiftLeft(short? value, int shift) . Shifts the value to the left by the specified number of bits. int? ShiftLeft(int? value, int shift) . Shifts the value to the left by the specified number of bits. long? ShiftLeft(long? value, int shift) . Shifts the value to the left by the specified number of bits. sbyte? ShiftLeft(sbyte? value, int shift) . Shifts the value to the left by the specified number of bits. ushort? ShiftLeft(ushort? value, int shift) . Shifts the value to the left by the specified number of bits. uint? ShiftLeft(uint? value, int shift) . Shifts the value to the left by the specified number of bits. ulong? ShiftLeft(ulong? value, int shift) . Shifts the value to the left by the specified number of bits. byte? ShiftRight(byte? value, int shift) . Shifts the value to the right by the specified number of bits. short? ShiftRight(short? value, int shift) . Shifts the value to the right by the specified number of bits. int? ShiftRight(int? value, int shift) . Shifts the value to the right by the specified number of bits. long? ShiftRight(long? value, int shift) . Shifts the value to the right by the specified number of bits. sbyte? ShiftRight(sbyte? value, int shift) . Shifts the value to the right by the specified number of bits. ushort? ShiftRight(ushort? value, int shift) . Shifts the value to the right by the specified number of bits. uint? ShiftRight(uint? value, int shift) . Shifts the value to the right by the specified number of bits. ulong? ShiftRight(ulong? value, int shift) . Shifts the value to the right by the specified number of bits. byte? Not(byte? value) . Performs bitwise NOT operation on a given value. short? Not(short? value) . Performs bitwise NOT operation on a given value. int? Not(int? value) . Performs bitwise NOT operation on a given value. long? Not(long? value) . Performs bitwise NOT operation on a given value. sbyte? Not(sbyte? value) . Performs bitwise NOT operation on a given value. ushort? Not(ushort? value) . Performs bitwise NOT operation on a given value. uint? Not(uint? value) . Performs bitwise NOT operation on a given value. ulong? Not(ulong? value) . Performs bitwise NOT operation on a given value. byte? And(byte? left, byte? right) . Performs bitwise AND operation on two given values. int? And(byte? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(byte? left, short? right) . Performs bitwise AND operation on two given values. int? And(byte? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(byte? left, int? right) . Performs bitwise AND operation on two given values. uint? And(byte? left, uint? right) . Performs bitwise AND operation on two given values. long? And(byte? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(byte? left, ulong? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, byte? right) . Performs bitwise AND operation on two given values. sbyte? And(sbyte? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, short? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, int? right) . Performs bitwise AND operation on two given values. uint? And(sbyte? left, uint? right) . Performs bitwise AND operation on two given values. long? And(sbyte? left, long? right) . Performs bitwise AND operation on two given values. int? And(short? left, byte? right) . Performs bitwise AND operation on two given values. int? And(short? left, sbyte? right) . Performs bitwise AND operation on two given values. short? And(short? left, short? right) . Performs bitwise AND operation on two given values. int? And(short? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(short? left, int? right) . Performs bitwise AND operation on two given values. uint? And(short? left, uint? right) . Performs bitwise AND operation on two given values. long? And(short? left, long? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, byte? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, short? right) . Performs bitwise AND operation on two given values. ushort? And(ushort? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, int? right) . Performs bitwise AND operation on two given values. uint? And(ushort? left, uint? right) . Performs bitwise AND operation on two given values. long? And(ushort? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(ushort? left, ulong? right) . Performs bitwise AND operation on two given values. int? And(int? left, byte? right) . Performs bitwise AND operation on two given values. int? And(int? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(int? left, short? right) . Performs bitwise AND operation on two given values. int? And(int? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(int? left, int? right) . Performs bitwise AND operation on two given values. uint? And(int? left, uint? right) . Performs bitwise AND operation on two given values. long? And(int? left, long? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, uint? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, byte? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, sbyte? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, short? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, ushort? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, int? right) . Performs bitwise AND operation on two given values. ulong? And(uint? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(uint? left, ulong? right) . Performs bitwise AND operation on two given values. long? And(long? left, long? right) . Performs bitwise AND operation on two given values. long? And(long? left, byte? right) . Performs bitwise AND operation on two given values. long? And(long? left, sbyte? right) . Performs bitwise AND operation on two given values. long? And(long? left, short? right) . Performs bitwise AND operation on two given values. long? And(long? left, ushort? right) . Performs bitwise AND operation on two given values. long? And(long? left, int? right) . Performs bitwise AND operation on two given values. long? And(long? left, uint? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, byte? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, ushort? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, uint? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, ulong? right) . Performs bitwise AND operation on two given values. byte? Or(byte? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, short? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(byte? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(byte? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(byte? left, ulong? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, byte? right) . Performs bitwise OR operation on two given values. sbyte? Or(sbyte? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, short? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(sbyte? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(sbyte? left, long? right) . Performs bitwise OR operation on two given values. int? Or(short? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(short? left, sbyte? right) . Performs bitwise OR operation on two given values. short? Or(short? left, short? right) . Performs bitwise OR operation on two given values. int? Or(short? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(short? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(short? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(short? left, long? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, short? right) . Performs bitwise OR operation on two given values. ushort? Or(ushort? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(ushort? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(ushort? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(ushort? left, ulong? right) . Performs bitwise OR operation on two given values. int? Or(int? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(int? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(int? left, short? right) . Performs bitwise OR operation on two given values. int? Or(int? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(int? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(int? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(int? left, long? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, uint? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, byte? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, sbyte? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, short? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, ushort? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, int? right) . Performs bitwise OR operation on two given values. ulong? Or(uint? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(uint? left, ulong? right) . Performs bitwise OR operation on two given values. long? Or(long? left, long? right) . Performs bitwise OR operation on two given values. long? Or(long? left, byte? right) . Performs bitwise OR operation on two given values. long? Or(long? left, sbyte? right) . Performs bitwise OR operation on two given values. long? Or(long? left, short? right) . Performs bitwise OR operation on two given values. long? Or(long? left, ushort? right) . Performs bitwise OR operation on two given values. long? Or(long? left, int? right) . Performs bitwise OR operation on two given values. long? Or(long? left, uint? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, byte? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, ushort? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, uint? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, ulong? right) . Performs bitwise OR operation on two given values. byte? Xor(byte? left, byte? right) . Performs bitwise OR operation on two given values. int? Xor(byte? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(byte? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(byte? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(byte? left, ulong? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, byte? right) . Performs bitwise Xor operation on two given values. sbyte? Xor(sbyte? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(sbyte? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(sbyte? left, long? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, sbyte? right) . Performs bitwise Xor operation on two given values. short? Xor(short? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, ushort? right) . Performs bitwise XOR operation on two given values. int? Xor(short? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(short? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(short? left, long? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, short? right) . Performs bitwise Xor operation on two given values. ushort? Xor(ushort? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(ushort? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(ushort? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ushort? left, ulong? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(int? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(int? left, long? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, uint? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, byte? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, sbyte? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, short? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, ushort? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, int? right) . Performs bitwise Xor operation on two given values. ulong? Xor(uint? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(uint? left, ulong? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, long? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, byte? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, sbyte? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, short? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, ushort? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, int? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, uint? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, ulong? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, byte? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, ushort? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, uint? right) . Performs bitwise Xor operation on two given values. byte[] GetBytes(string? content) . Gets the bytes from the given string. byte[] GetBytes(string? content, int length, int offset) . Gets the bytes from the given string within given offset and length. byte?[]? GetBytes(char? character) . Gets the bytes from the given character. byte?[]? GetBytes(bool? bit) . Gets the bytes from the given boolean. byte?[]? GetBytes(long? value) . Gets the bytes from the given long. byte?[]? GetBytes(int? value) . Gets the bytes from the given int. byte?[]? GetBytes(short? value) . Gets the bytes from the given short. byte?[]? GetBytes(ulong? value) . Gets the bytes from the given ulong. byte?[]? GetBytes(ushort? value) . Gets the bytes from the given ushort. byte?[]? GetBytes(uint? value) . Gets the bytes from the given uint. byte?[]? GetBytes(Decimal? value) . Gets the bytes from the given decimal. byte?[]? GetBytes(double? value) . Gets the bytes from the given double. byte?[]? GetBytes(float? value) . Gets the bytes from the given float. string? ToBin(byte?[]? bytes, string delimiter) . Converts given bytes to binary with defined delimiter . string ToBin&lt;T&gt;(T value) . Converts given value to binary . string ToOcta&lt;T&gt;(T value) . Converts given value to octal . string ToDec&lt;T&gt;(T value) . Converts given value to decimal . string ToBase64(byte[] value) . Converts given value to string . string ToBase64(byte[] value, int offset, int length) . Converts given array of bytes to string . byte[] FromBase64(string value) . Converts given string to bytes array . bool FromBytesToBool(byte[] value) . Converts bytes to boolean value. short FromBytesToInt16(byte[] value) . Converts bytes to a 16-bit signed integer. ushort FromBytesToUInt16(byte[] value) . Converts bytes to a 16-bit unsigned integer. int FromBytesToInt32(byte[] value) . Converts bytes to a 32-bit signed integer. uint FromBytesToUInt32(byte[] value) . Converts bytes to a 32-bit unsigned integer. long FromBytesToInt64(byte[] value) . Converts bytes to a 64-bit signed integer. ulong FromBytesToUInt64(byte[] value) . Converts bytes to a 64-bit unsigned integer. float FromBytesToFloat(byte[] value) . Converts bytes to a float value. double FromBytesToDouble(byte[] value) . Converts bytes to a float value. string FromBytesToString(byte[] value) . Converts bytes to a string. byte[] ToBytes(bool value) . Converts boolean value to bytes. byte[] ToBytes(short value) . Converts short value to bytes. byte[] ToBytes(ushort value) . Converts ushort value to bytes. byte[] ToBytes(int value) . Converts int value to bytes. byte[] ToBytes(uint value) . Converts uint value to bytes. byte[] ToBytes(long value) . Converts long value to bytes. byte[] ToBytes(ulong value) . Converts long value to bytes. string? ToHex(byte?[]? bytes, string delimiter) . Converts given bytes to hex with defined delimiter . string? ToHex&lt;T&gt;(T value) . Converts given value to binary . int Count(string name) . Gets the count value of a given group. int Count(string name, int parent) . Gets the count value of a given group. int ExtractFromDate(string? date, string partOfDate) . Extracts part of the date from the date . int ExtractFromDate(string date, string culture, string partOfDate) . Extracts part of the date from the date based on given culture . DateTimeOffset? GetDate() . Gets the current datetime . DateTimeOffset? UtcGetDate() . Gets the current datetime in UTC . int? Month(DateTimeOffset? value) . Gets the month from DateTimeOffset . int? Year(DateTimeOffset? value) . Gets the year from DateTimeOffset . int? Day(DateTimeOffset? value) . Gets the day from DateTimeOffset . int? Hour(DateTimeOffset? value) . Gets the hour from DateTimeOffset . int? Minute(DateTimeOffset? value) . Gets the minute from DateTimeOffset . int? Second(DateTimeOffset? value) . Gets the second from DateTimeOffset . int? Milliseconds(DateTimeOffset? value) . Gets the millisecond from DateTimeOffset . int? DayOfWeek(DateTimeOffset? value) . Gets the day of week from DateTimeOffset . TimeSpan? ExtractTimeSpan(DateTimeOffset? dateTimeOffset) . Extracts time from DateTimeOffset . DateTime? ToDateTimeOffset(string value) . Converts given value to DateTimeOffset . DateTimeOffset? ToDateTimeOffset(string value, string culture) . Converts given value to DateTimeOffset . IEnumerable&lt;T&gt;? Skip&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? skipCount) . Skips elements from the beginning of the sequence. IEnumerable&lt;T&gt;? Take&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? takeCount) . Takes elements from the beginning of the sequence. IEnumerable&lt;T&gt;? SkipAndTake&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? skipCount, int? takeCount) . Skip and takes elements from the beginning of the sequence. T[]? EnumerableToArray&lt;T&gt;(IEnumerable&lt;T&gt;? values) . Turn array arguments of T into a single array. T[]? MergeArrays&lt;T&gt;(T[][]? values) . Turn array arguments of T into a single array. IEnumerable&lt;T&gt;? LongestCommonSequence&lt;T&gt;(IEnumerable&lt;T&gt;? source, IEnumerable&lt;T&gt;? pattern) . Computes longest common sequence of two given sequences . T? GetElementAtOrDefault&lt;T&gt;(IEnumerable&lt;T&gt;? enumerable, int? index) . Gets the element at the specified index in a sequence . int? Length&lt;T&gt;(IEnumerable&lt;T&gt;? enumerable) . Gets the length of the sequence . int? Length&lt;T&gt;(T[]? array) . Gets the length of the array . T? Choose&lt;T&gt;(int? index, T[] values) . Gets the value of an array at the specified index . T If&lt;T&gt;(bool expressionResult, T a, T b) . Chose a or b value based on the expression result . bool? Match(string? regex, string? content) . Determine whether content matches the specified pattern . byte? Coalesce(byte?[] array) . Gets the first non-null value in a list . sbyte? Coalesce(sbyte?[] array) . Gets the first non-null value in a list . short? Coalesce(short?[] array) . Gets the first non-null value in a list . ushort? Coalesce(ushort?[] array) . Gets the first non-null value in a list . int? Coalesce(int?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(uint?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(long?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(ulong?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(Decimal?[] array) . Gets the first non-null value in a list . T? Coalesce&lt;T&gt;(T[] array) . Gets the first non-null value in a list . IEnumerable&lt;T&gt;? Distinct&lt;T&gt;(IEnumerable&lt;T&gt;? values) . Returns distinct elements from a collection. string? Md5(string? content) . Gets the md5 hash of the given string. string? Md5(byte?[]? content) . Gets the md5 hash of the given bytes array. string? Sha1(string? content) . Gets the sha256 hash of the given string. string? Sha1(byte?[]? content) . Gets the sha256 hash of the given bytes array. string? Sha256(string? content) . Gets the sha256 hash of the given string. string? Sha256(byte?[]? content) . Gets the sha256 hash of the given bytes array. string? Sha512(string? content) . Gets the sha256 hash of the given string. string? Sha512(byte?[]? content) . Gets the sha256 hash of the bytes array. string? ToJson&lt;T&gt;(T? obj) . Converts object to json. string[] ExtractFromJsonToArray(string? json, string? path) . Extracts values from json by path. string? ExtractFromJson(string? json, string? path) . Extracts values from json by path and joins them with comma. Decimal? Abs(Decimal? value) . Gets the absolute value . long? Abs(long? value) . Gets the absolute value . int? Abs(int? value) . Gets the absolute value . Decimal? Ceil(Decimal? value) . Gets the ceiling value . Decimal? Floor(Decimal? value) . Gets the floor value . Decimal? Sign(Decimal? value) . Determine whether value is greater, equal or less that zero . long? Sign(long? value) . Determine whether value is greater, equal or less that zero . Decimal? Round(Decimal? value, int precision) . Rounds the value within given precision . Decimal? PercentOf(Decimal? value, Decimal? max) . Gets the percentage of the value . int Rand() . Gets the random integer value . int? Rand(int? min, int? max) . Gets the random integer value . double? Pow(Decimal? x, Decimal? y) . Computes the pow between two values . double? Pow(double? x, double? y) . Computes the pow between two values . double? Sqrt(Decimal? x) . Computes the sqrt of a given value . double? Sqrt(double? x) . Computes the sqrt of a given value . double? Sqrt(long? x) . Computes the sqrt of a given value . double? PercentRank&lt;T&gt;(IEnumerable&lt;T&gt;? window, T? value) . Computes the percent rank of a given window . double? Log(Decimal? base, Decimal? value) . Calculates the logarithm of a value with a specified base. Decimal? Sin(Decimal? value) . Calculates sine of a value. double? Sin(double? value) . Calculates sine of a value. float? Sin(float? value) . Calculates sine of a value. Decimal? Cos(Decimal? value) . Calculates cosine of a value. double? Cos(double? value) . Calculates cosine of a value. float? Cos(float? value) . Calculates cosine of a value. Decimal Max(string name) . Gets the max value of a given group. Decimal Max(string name, int parent) . Gets the max value of a given group. Decimal Min(string name) . Gets the min value of a given group. Decimal Min(string name, int parent) . Gets the min value of a given group. Decimal StDev(string name, int parent) . Gets the StDev value of a given group. string NewId() . Gets the new identifier . string? Trim(string? value) . Removes leading and trailing whitespace from a string. string? TrimStart(string? value) . Removes leading whitespace from a string. string? TrimEnd(string? value) . Removes trailing whitespace from a string. string? Substring(string? value, int? index, int? length) . Gets the substring from the string. string? Substring(string value, int? length) . Gets the substring from the string . string? Concat(string[]? strings) . Concatenates the specified values . string? Concat(char?[]? characters) . Concatenates the specified characters . string? Concat(string? firstString, char?[]? chars) . Concatenates specified string fir characters . string? Concat(char? firstChar, string[]? strings) . Concatenate specific character with strings . string? Concat(object[]? objects) . Concatenates the specified strings . string? Concat&lt;T&gt;(T[]? objects) . Concatenates the specified strings . bool? Contains(string? content, string? what) . Determine whether the string contains the specified value . int? IndexOf(string? value, string? text) . Position of the first occurrence of the specified value . string? Soundex(string? value) . Computes soundex for the specified value . bool HasFuzzyMatchedWord(string text, string word, string separator) . Matches the specified text by splitting it with separator and applying fuzzy comparison . bool HasWordThatHasSmallerLevenshteinDistanceThan(string text, string word, int distance, string separator) . Matches the specified text by splitting it with separator and applying fuzzy comparison with a given distance . bool HasWordThatSoundLike(string text, string word, string separator) . Matches whether the specified word is present after being fuzzified within the specified text . bool HasTextThatSoundLikeSentence(string text, string sentence, string separator) . Matches whether the specified text is present in sentence after being fuzified . string? ToUpper(string value) . Makes the string uppercase . string? ToUpper(string value, string culture) . Makes the string uppercase within specified culture . string? ToUpperInvariant(string value) . Makes the string uppercase . string? ToLower(string value) . Makes the string lowercase . string? ToLower(string value, string culture) . Makes the string lowercase within specified culture . string? ToLowerInvariant(string value) . Makes the string lowercase . string? PadLeft(string? value, string? character, int? totalWidth) . Returns a new string that right-aligns the characters in this instance by padding them on the left with a specified Unicode character, for a specified total lengt . string? PadRight(string? value, string? character, int? totalWidth) . Returns a new string that left-aligns the characters in this instance by padding them on the right with a specified Unicode character, for a specified total length . string? Head(string? value, int? length) . Gets the first N characters of the string . string? Tail(string? value, int? length) . Gets the last N characters of the string . int? LevenshteinDistance(string? firstValue, string? secondValue) . Computes the Levenshtein distance between two strings . char? GetCharacterOf(string value, int index) . Gets the character at specified index . string? Reverse(string? value) . Reverses the string . string[] Split(string value, string[] separators) . Splits the string into an array of substrings based on the specified separators . char[] ToCharArray(string value) . Splits the string into an array of characters . string? LongestCommonSubstring(string source, string pattern) . Computes the longest common subsequence between two source and pattern . string Replicate(string value, int integer) . Clones the value n times . string? Translate(string? value, string? characters, string? translations) . Returns the string from the first argument after the characters specified in the second argument are translated into the characters specified in the third argument. string? Replace(string? text, string lookFor, string? changeTo) . Replaces the first occurrence of a specified string in this instance with another specified string . string? ToTitleCase(string? value) . Capitalizes the first letter of the string . string? GetNthWord(string? text, int? wordIndex, string? separator) . Gets the nth word of the string . string? GetFirstWord(string text, string separator) . Gets the first word of the string . string? GetSecondWord(string text, string separator) . Gets the second word of the string . string? GetThirdWord(string text, string separator) . Gets the third word of the string . string? GetLastWord(string? text, string? separator) . Gets last word of the string . bool? IsNullOrEmpty(string? value) . Determines whether the string is null or empty . bool? IsNullOrWhiteSpace(string? value) . Determines whether the string is null or whitespace . string? UrlEncode(string? value) . Encodes the value . string? UrlDecode(string? value) . Decodes the value . string? UriEncode(string? value) . Encodes the value . string? UriDecode(string? value) . Decodes the value . bool? StartsWith(string? value, string? prefix) . Determines whether the string starts with the specified prefix . bool? StartsWith(string? value, string? prefix, string comparison) . Determines whether the string starts with the specified prefix . bool? EndsWith(string? value, string? suffix) . Determines whether the string ends with the specified suffix . bool? EndsWith(string? value, string? suffix, string comparison) . Determines whether the string ends with the specified suffix . string? RegexReplace(string? value, string? pattern, string? replacement) . Replace the specified value part that matches the pattern with the replacement . string[]? SplitByLinuxNewLines(string? input) . Split string by Linux-style newlines (\\n) . string[]? SplitByWindowsNewLines(string? input) . Split string by Windows-style newlines (\\r\\n) . string[]? SplitByNewLines(string? input) . Smart split that handles both Windows (\\r\\n) and Linux (\\n) newlines . Decimal Sum(string name) . Gets the sum value of a given group. Decimal Sum(string name, int parent) . Gets the sum value of a given group. Decimal SumIncome(string name) . Gets the sum value of a given group. Decimal SumIncome(string name, int parent) . Gets the sum value of a given group. Decimal SumOutcome(string name) . Gets the outcome value of a given group. Decimal SumOutcome(string name, int parent) . Gets the outcome value of a given group. TimeSpan? SumTimeSpan(string name) . Gets the sum value of a given group. TimeSpan? SumTimeSpan(string name, int parent) . Gets the sum value of a given group. TimeSpan? MinTimeSpan(string name) . Gets the min value of a given group. TimeSpan? MinTimeSpan(string name, int parent) . Gets the min value of a given group. TimeSpan? MaxTimeSpan(string name) . Gets the max value of a given group. TimeSpan? MaxTimeSpan(string name, int parent) . Gets the min value of a given group. char? ToChar(string? value) . Converts given value to character . char? ToChar(int? value) . Converts given value to character . char? ToChar(short? value) . Converts given value to character . char? ToChar(byte? value) . Converts given value to character . char? ToChar(object? value) . Converts given value to character . DateTime? ToDateTime(string value) . Converts given value to DateTime . DateTime? ToDateTime(string value, string culture) . Converts given value to DateTime . Decimal? ToDecimal(string? value) . Converts given value to decimal . Decimal? ToDecimal(string value, string culture) . Converts given value to decimal withing given culture . Decimal? ToDecimal(byte? value) . Converts given value to Decimal . Decimal? ToDecimal(sbyte? value) . Converts given value to Decimal . Decimal? ToDecimal(short? value) . Converts given value to Decimal . Decimal? ToDecimal(ushort? value) . Converts given value to Decimal . Decimal? ToDecimal(long? value) . Converts given value to Decimal . Decimal? ToDecimal(ulong? value) . Converts given value to Decimal . Decimal? ToDecimal(float? value) . Converts given value to Decimal . Decimal? ToDecimal(double? value) . Converts given value to Decimal . Decimal? ToDecimal(object? value) . Converts given value to Decimal . double? ToDouble(object? value) . Converts given value to double . double? ToDouble(string? value) . Converts given value to double . double? ToDouble(byte? value) . Converts given value to double . double? ToDouble(sbyte? value) . Converts given value to double . double? ToDouble(short? value) . Converts given value to double . double? ToDouble(ushort? value) . Converts given value to double . double? ToDouble(int? value) . Converts given value to double . double? ToDouble(uint? value) . Converts given value to double . double? ToDouble(long? value) . Converts given value to double . double? ToDouble(ulong? value) . Converts given value to double . double? ToDouble(float? value) . Converts given value to double . double? ToDouble(double? value) . Converts given value to double . double? ToDouble(Decimal? value) . Converts given value to double . float? ToFloat(string? value) . Converts given value to float . float? ToFloat(byte? value) . Converts given value to float . float? ToFloat(sbyte? value) . Converts given value to float . float? ToFloat(short? value) . Converts given value to float . float? ToFloat(ushort? value) . Converts given value to float . float? ToFloat(int? value) . Converts given value to float . float? ToFloat(uint? value) . Converts given value to float . float? ToFloat(long? value) . Converts given value to float . float? ToFloat(ulong? value) . Converts given value to float . float? ToFloat(float? value) . Converts given value to float . float? ToFloat(Decimal? value) . Converts given value to float . int? ToInt32(string value) . Converts given value to int . int? ToInt32(byte? value) . Converts given value to int . int? ToInt32(sbyte? value) . Converts given value to int . int? ToInt32(short? value) . Converts given value to int . int? ToInt32(ushort? value) . Converts given value to int . int? ToInt32(int? value) . Converts given value to int . int? ToInt32(uint? value) . Converts given value to int . int? ToInt32(long? value) . Converts given value to int . int? ToInt32(ulong? value) . Converts given value to int . int? ToInt32(float? value) . Converts given value to int . int? ToInt32(double? value) . Converts given value to int . int? ToInt32(Decimal? value) . Converts given value to int . int? ToInt32(object? value) . Converts given value to int . long? ToInt64(string value) . Converts given value to Int64 . long? ToInt64(byte? value) . Converts given value to long . long? ToInt64(sbyte? value) . Converts given value to long . long? ToInt64(short? value) . Converts given value to long . long? ToInt64(ushort? value) . Converts given value to long . long? ToInt64(int? value) . Converts given value to long . long? ToInt64(uint? value) . Converts given value to long . long? ToInt64(long? value) . Converts given value to long . long? ToInt64(ulong? value) . Converts given value to long . long? ToInt64(float? value) . Converts given value to long . long? ToInt64(double? value) . Converts given value to long . long? ToInt64(Decimal? value) . Converts given value to long . long? ToInt64(object? value) . Converts given value to long . string? ToString(char? value) . Converts given value to string . string? ToString(DateTimeOffset? value) . Converts given value to string . string? ToString(DateTimeOffset? value, string format) . Converts given value to string . string? ToString(byte? value) . Converts given value to string . string? ToString(byte? value, string format) . Converts given value to string . string? ToString(sbyte? value) . Converts given value to string . string? ToString(sbyte? value, string format) . Converts given value to string . string? ToString(int? value) . Converts given value to string . string? ToString(int? value, string format) . Converts given value to string . string? ToString(uint? value) . Converts given value to string . string? ToString(uint? value, string format) . Converts given value to string . string? ToString(long? value) . Converts given value to string . string? ToString(long? value, string format) . Converts given value to string . string? ToString(ulong? value) . Converts given value to string . string? ToString(ulong? value, string format) . Converts given value to string . string? ToString(float? value) . Converts given value to string . string? ToString(float? value, string format) . Converts given value to string . string? ToString(double? value) . Converts given value to string . string? ToString(double? value, string format) . Converts given value to string . string? ToString(Decimal? value) . Converts given value to string . string? ToString(Decimal? value, string format) . Converts given value to string . string? ToString(bool? value) . Converts given value to string . string? ToString(object? value) . Converts given value to string . string? ToString&lt;T&gt;(T? value) . Converts given value to string . string ToString(string[] value) . Converts given value to string . string ToString&lt;T&gt;(T[] value) . Converts given value to string . TimeSpan? ToTimeSpan(string value) . Converts given value to TimeSpan . TimeSpan? ToTimeSpan(string value, string culture) . Converts given value to TimeSpan . IEnumerable&lt;T&gt; Window&lt;T&gt;(string name) . Gets the window . ",
    "url": "/data-sources/Archives/linux-arm64.html#base-methods",
    
    "relUrl": "/data-sources/Archives/linux-arm64.html#base-methods"
  },"71": {
    "doc": "Linux Arm64",
    "title": "Linux Arm64",
    "content": " ",
    "url": "/data-sources/Archives/linux-arm64.html",
    
    "relUrl": "/data-sources/Archives/linux-arm64.html"
  },"72": {
    "doc": "Linux Arm64",
    "title": "Musoq.DataSources.Json",
    "content": "Provides schema to work with json files . ",
    "url": "/data-sources/Json/linux-arm64.html#musoqdatasourcesjson",
    
    "relUrl": "/data-sources/Json/linux-arm64.html#musoqdatasourcesjson"
  },"73": {
    "doc": "Linux Arm64",
    "title": "Tables",
    "content": "Table is a collection of rows and columns that the plugin exposes. Below are the tables that are exposed by this data source. json.file(string jsonFilePath, string jsonSchemaFilePath) . Gives the ability to process json files . This table has a dynamic structure, which means that its columns and other details cannot be determined until runtime. As a result, it is not possible to include a complete description of this table in the documentation. Instead, the actual columns and other details of this table will be determined at runtime. ",
    "url": "/data-sources/Json/linux-arm64.html#tables",
    
    "relUrl": "/data-sources/Json/linux-arm64.html#tables"
  },"74": {
    "doc": "Linux Arm64",
    "title": "Methods",
    "content": "Methods are functions that can be called on the data source specific column. Below are the methods that are exposed by this data source. int Length(List&lt;Dynamic.ExpandoObject&gt; array) . Gets the length of the array . int Length(List&lt;object&gt; array) . Gets the length of the array . string MakeFlat(List&lt;Dynamic.ExpandoObject&gt; array) . Flattening the array . string MakeFlat(List&lt;object&gt; array) . Flattening the array . ",
    "url": "/data-sources/Json/linux-arm64.html#methods",
    
    "relUrl": "/data-sources/Json/linux-arm64.html#methods"
  },"75": {
    "doc": "Linux Arm64",
    "title": "Base Methods",
    "content": "Base methods are methods that can be called on the data source specific column. Those methods are automatically inherited and enriches the data source specific methods. Below are those base methods that are exposed by this data source. int RowNumber() . Gets the row number of the current row. string? GetTypeName(object? obj) . Gets the typename of passed object. string AggregateValues(string name) . Aggregates values into a single value. string AggregateValues(string name, int parent) . Aggregates values into a single value. Decimal Avg(string name) . Gets the aggregated average value from the given group name . Decimal Avg(string name, int parent) . Gets the aggregated average value from the given group name . byte? ShiftLeft(byte? value, int shift) . Shifts the value to the left by the specified number of bits. short? ShiftLeft(short? value, int shift) . Shifts the value to the left by the specified number of bits. int? ShiftLeft(int? value, int shift) . Shifts the value to the left by the specified number of bits. long? ShiftLeft(long? value, int shift) . Shifts the value to the left by the specified number of bits. sbyte? ShiftLeft(sbyte? value, int shift) . Shifts the value to the left by the specified number of bits. ushort? ShiftLeft(ushort? value, int shift) . Shifts the value to the left by the specified number of bits. uint? ShiftLeft(uint? value, int shift) . Shifts the value to the left by the specified number of bits. ulong? ShiftLeft(ulong? value, int shift) . Shifts the value to the left by the specified number of bits. byte? ShiftRight(byte? value, int shift) . Shifts the value to the right by the specified number of bits. short? ShiftRight(short? value, int shift) . Shifts the value to the right by the specified number of bits. int? ShiftRight(int? value, int shift) . Shifts the value to the right by the specified number of bits. long? ShiftRight(long? value, int shift) . Shifts the value to the right by the specified number of bits. sbyte? ShiftRight(sbyte? value, int shift) . Shifts the value to the right by the specified number of bits. ushort? ShiftRight(ushort? value, int shift) . Shifts the value to the right by the specified number of bits. uint? ShiftRight(uint? value, int shift) . Shifts the value to the right by the specified number of bits. ulong? ShiftRight(ulong? value, int shift) . Shifts the value to the right by the specified number of bits. byte? Not(byte? value) . Performs bitwise NOT operation on a given value. short? Not(short? value) . Performs bitwise NOT operation on a given value. int? Not(int? value) . Performs bitwise NOT operation on a given value. long? Not(long? value) . Performs bitwise NOT operation on a given value. sbyte? Not(sbyte? value) . Performs bitwise NOT operation on a given value. ushort? Not(ushort? value) . Performs bitwise NOT operation on a given value. uint? Not(uint? value) . Performs bitwise NOT operation on a given value. ulong? Not(ulong? value) . Performs bitwise NOT operation on a given value. byte? And(byte? left, byte? right) . Performs bitwise AND operation on two given values. int? And(byte? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(byte? left, short? right) . Performs bitwise AND operation on two given values. int? And(byte? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(byte? left, int? right) . Performs bitwise AND operation on two given values. uint? And(byte? left, uint? right) . Performs bitwise AND operation on two given values. long? And(byte? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(byte? left, ulong? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, byte? right) . Performs bitwise AND operation on two given values. sbyte? And(sbyte? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, short? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, int? right) . Performs bitwise AND operation on two given values. uint? And(sbyte? left, uint? right) . Performs bitwise AND operation on two given values. long? And(sbyte? left, long? right) . Performs bitwise AND operation on two given values. int? And(short? left, byte? right) . Performs bitwise AND operation on two given values. int? And(short? left, sbyte? right) . Performs bitwise AND operation on two given values. short? And(short? left, short? right) . Performs bitwise AND operation on two given values. int? And(short? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(short? left, int? right) . Performs bitwise AND operation on two given values. uint? And(short? left, uint? right) . Performs bitwise AND operation on two given values. long? And(short? left, long? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, byte? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, short? right) . Performs bitwise AND operation on two given values. ushort? And(ushort? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, int? right) . Performs bitwise AND operation on two given values. uint? And(ushort? left, uint? right) . Performs bitwise AND operation on two given values. long? And(ushort? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(ushort? left, ulong? right) . Performs bitwise AND operation on two given values. int? And(int? left, byte? right) . Performs bitwise AND operation on two given values. int? And(int? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(int? left, short? right) . Performs bitwise AND operation on two given values. int? And(int? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(int? left, int? right) . Performs bitwise AND operation on two given values. uint? And(int? left, uint? right) . Performs bitwise AND operation on two given values. long? And(int? left, long? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, uint? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, byte? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, sbyte? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, short? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, ushort? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, int? right) . Performs bitwise AND operation on two given values. ulong? And(uint? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(uint? left, ulong? right) . Performs bitwise AND operation on two given values. long? And(long? left, long? right) . Performs bitwise AND operation on two given values. long? And(long? left, byte? right) . Performs bitwise AND operation on two given values. long? And(long? left, sbyte? right) . Performs bitwise AND operation on two given values. long? And(long? left, short? right) . Performs bitwise AND operation on two given values. long? And(long? left, ushort? right) . Performs bitwise AND operation on two given values. long? And(long? left, int? right) . Performs bitwise AND operation on two given values. long? And(long? left, uint? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, byte? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, ushort? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, uint? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, ulong? right) . Performs bitwise AND operation on two given values. byte? Or(byte? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, short? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(byte? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(byte? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(byte? left, ulong? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, byte? right) . Performs bitwise OR operation on two given values. sbyte? Or(sbyte? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, short? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(sbyte? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(sbyte? left, long? right) . Performs bitwise OR operation on two given values. int? Or(short? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(short? left, sbyte? right) . Performs bitwise OR operation on two given values. short? Or(short? left, short? right) . Performs bitwise OR operation on two given values. int? Or(short? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(short? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(short? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(short? left, long? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, short? right) . Performs bitwise OR operation on two given values. ushort? Or(ushort? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(ushort? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(ushort? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(ushort? left, ulong? right) . Performs bitwise OR operation on two given values. int? Or(int? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(int? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(int? left, short? right) . Performs bitwise OR operation on two given values. int? Or(int? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(int? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(int? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(int? left, long? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, uint? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, byte? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, sbyte? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, short? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, ushort? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, int? right) . Performs bitwise OR operation on two given values. ulong? Or(uint? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(uint? left, ulong? right) . Performs bitwise OR operation on two given values. long? Or(long? left, long? right) . Performs bitwise OR operation on two given values. long? Or(long? left, byte? right) . Performs bitwise OR operation on two given values. long? Or(long? left, sbyte? right) . Performs bitwise OR operation on two given values. long? Or(long? left, short? right) . Performs bitwise OR operation on two given values. long? Or(long? left, ushort? right) . Performs bitwise OR operation on two given values. long? Or(long? left, int? right) . Performs bitwise OR operation on two given values. long? Or(long? left, uint? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, byte? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, ushort? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, uint? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, ulong? right) . Performs bitwise OR operation on two given values. byte? Xor(byte? left, byte? right) . Performs bitwise OR operation on two given values. int? Xor(byte? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(byte? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(byte? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(byte? left, ulong? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, byte? right) . Performs bitwise Xor operation on two given values. sbyte? Xor(sbyte? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(sbyte? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(sbyte? left, long? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, sbyte? right) . Performs bitwise Xor operation on two given values. short? Xor(short? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, ushort? right) . Performs bitwise XOR operation on two given values. int? Xor(short? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(short? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(short? left, long? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, short? right) . Performs bitwise Xor operation on two given values. ushort? Xor(ushort? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(ushort? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(ushort? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ushort? left, ulong? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(int? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(int? left, long? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, uint? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, byte? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, sbyte? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, short? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, ushort? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, int? right) . Performs bitwise Xor operation on two given values. ulong? Xor(uint? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(uint? left, ulong? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, long? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, byte? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, sbyte? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, short? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, ushort? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, int? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, uint? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, ulong? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, byte? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, ushort? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, uint? right) . Performs bitwise Xor operation on two given values. byte[] GetBytes(string? content) . Gets the bytes from the given string. byte[] GetBytes(string? content, int length, int offset) . Gets the bytes from the given string within given offset and length. byte?[]? GetBytes(char? character) . Gets the bytes from the given character. byte?[]? GetBytes(bool? bit) . Gets the bytes from the given boolean. byte?[]? GetBytes(long? value) . Gets the bytes from the given long. byte?[]? GetBytes(int? value) . Gets the bytes from the given int. byte?[]? GetBytes(short? value) . Gets the bytes from the given short. byte?[]? GetBytes(ulong? value) . Gets the bytes from the given ulong. byte?[]? GetBytes(ushort? value) . Gets the bytes from the given ushort. byte?[]? GetBytes(uint? value) . Gets the bytes from the given uint. byte?[]? GetBytes(Decimal? value) . Gets the bytes from the given decimal. byte?[]? GetBytes(double? value) . Gets the bytes from the given double. byte?[]? GetBytes(float? value) . Gets the bytes from the given float. string? ToBin(byte?[]? bytes, string delimiter) . Converts given bytes to binary with defined delimiter . string ToBin&lt;T&gt;(T value) . Converts given value to binary . string ToOcta&lt;T&gt;(T value) . Converts given value to octal . string ToDec&lt;T&gt;(T value) . Converts given value to decimal . string ToBase64(byte[] value) . Converts given value to string . string ToBase64(byte[] value, int offset, int length) . Converts given array of bytes to string . byte[] FromBase64(string value) . Converts given string to bytes array . bool FromBytesToBool(byte[] value) . Converts bytes to boolean value. short FromBytesToInt16(byte[] value) . Converts bytes to a 16-bit signed integer. ushort FromBytesToUInt16(byte[] value) . Converts bytes to a 16-bit unsigned integer. int FromBytesToInt32(byte[] value) . Converts bytes to a 32-bit signed integer. uint FromBytesToUInt32(byte[] value) . Converts bytes to a 32-bit unsigned integer. long FromBytesToInt64(byte[] value) . Converts bytes to a 64-bit signed integer. ulong FromBytesToUInt64(byte[] value) . Converts bytes to a 64-bit unsigned integer. float FromBytesToFloat(byte[] value) . Converts bytes to a float value. double FromBytesToDouble(byte[] value) . Converts bytes to a float value. string FromBytesToString(byte[] value) . Converts bytes to a string. byte[] ToBytes(bool value) . Converts boolean value to bytes. byte[] ToBytes(short value) . Converts short value to bytes. byte[] ToBytes(ushort value) . Converts ushort value to bytes. byte[] ToBytes(int value) . Converts int value to bytes. byte[] ToBytes(uint value) . Converts uint value to bytes. byte[] ToBytes(long value) . Converts long value to bytes. byte[] ToBytes(ulong value) . Converts long value to bytes. string? ToHex(byte?[]? bytes, string delimiter) . Converts given bytes to hex with defined delimiter . string? ToHex&lt;T&gt;(T value) . Converts given value to binary . int Count(string name) . Gets the count value of a given group. int Count(string name, int parent) . Gets the count value of a given group. int ExtractFromDate(string? date, string partOfDate) . Extracts part of the date from the date . int ExtractFromDate(string date, string culture, string partOfDate) . Extracts part of the date from the date based on given culture . DateTimeOffset? GetDate() . Gets the current datetime . DateTimeOffset? UtcGetDate() . Gets the current datetime in UTC . int? Month(DateTimeOffset? value) . Gets the month from DateTimeOffset . int? Year(DateTimeOffset? value) . Gets the year from DateTimeOffset . int? Day(DateTimeOffset? value) . Gets the day from DateTimeOffset . int? Hour(DateTimeOffset? value) . Gets the hour from DateTimeOffset . int? Minute(DateTimeOffset? value) . Gets the minute from DateTimeOffset . int? Second(DateTimeOffset? value) . Gets the second from DateTimeOffset . int? Milliseconds(DateTimeOffset? value) . Gets the millisecond from DateTimeOffset . int? DayOfWeek(DateTimeOffset? value) . Gets the day of week from DateTimeOffset . TimeSpan? ExtractTimeSpan(DateTimeOffset? dateTimeOffset) . Extracts time from DateTimeOffset . DateTime? ToDateTimeOffset(string value) . Converts given value to DateTimeOffset . DateTimeOffset? ToDateTimeOffset(string value, string culture) . Converts given value to DateTimeOffset . IEnumerable&lt;T&gt;? Skip&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? skipCount) . Skips elements from the beginning of the sequence. IEnumerable&lt;T&gt;? Take&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? takeCount) . Takes elements from the beginning of the sequence. IEnumerable&lt;T&gt;? SkipAndTake&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? skipCount, int? takeCount) . Skip and takes elements from the beginning of the sequence. T[]? EnumerableToArray&lt;T&gt;(IEnumerable&lt;T&gt;? values) . Turn array arguments of T into a single array. T[]? MergeArrays&lt;T&gt;(T[][]? values) . Turn array arguments of T into a single array. IEnumerable&lt;T&gt;? LongestCommonSequence&lt;T&gt;(IEnumerable&lt;T&gt;? source, IEnumerable&lt;T&gt;? pattern) . Computes longest common sequence of two given sequences . T? GetElementAtOrDefault&lt;T&gt;(IEnumerable&lt;T&gt;? enumerable, int? index) . Gets the element at the specified index in a sequence . int? Length&lt;T&gt;(IEnumerable&lt;T&gt;? enumerable) . Gets the length of the sequence . int? Length&lt;T&gt;(T[]? array) . Gets the length of the array . T? Choose&lt;T&gt;(int? index, T[] values) . Gets the value of an array at the specified index . T If&lt;T&gt;(bool expressionResult, T a, T b) . Chose a or b value based on the expression result . bool? Match(string? regex, string? content) . Determine whether content matches the specified pattern . byte? Coalesce(byte?[] array) . Gets the first non-null value in a list . sbyte? Coalesce(sbyte?[] array) . Gets the first non-null value in a list . short? Coalesce(short?[] array) . Gets the first non-null value in a list . ushort? Coalesce(ushort?[] array) . Gets the first non-null value in a list . int? Coalesce(int?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(uint?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(long?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(ulong?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(Decimal?[] array) . Gets the first non-null value in a list . T? Coalesce&lt;T&gt;(T[] array) . Gets the first non-null value in a list . IEnumerable&lt;T&gt;? Distinct&lt;T&gt;(IEnumerable&lt;T&gt;? values) . Returns distinct elements from a collection. string? Md5(string? content) . Gets the md5 hash of the given string. string? Md5(byte?[]? content) . Gets the md5 hash of the given bytes array. string? Sha1(string? content) . Gets the sha256 hash of the given string. string? Sha1(byte?[]? content) . Gets the sha256 hash of the given bytes array. string? Sha256(string? content) . Gets the sha256 hash of the given string. string? Sha256(byte?[]? content) . Gets the sha256 hash of the given bytes array. string? Sha512(string? content) . Gets the sha256 hash of the given string. string? Sha512(byte?[]? content) . Gets the sha256 hash of the bytes array. string? ToJson&lt;T&gt;(T? obj) . Converts object to json. string[] ExtractFromJsonToArray(string? json, string? path) . Extracts values from json by path. string? ExtractFromJson(string? json, string? path) . Extracts values from json by path and joins them with comma. Decimal? Abs(Decimal? value) . Gets the absolute value . long? Abs(long? value) . Gets the absolute value . int? Abs(int? value) . Gets the absolute value . Decimal? Ceil(Decimal? value) . Gets the ceiling value . Decimal? Floor(Decimal? value) . Gets the floor value . Decimal? Sign(Decimal? value) . Determine whether value is greater, equal or less that zero . long? Sign(long? value) . Determine whether value is greater, equal or less that zero . Decimal? Round(Decimal? value, int precision) . Rounds the value within given precision . Decimal? PercentOf(Decimal? value, Decimal? max) . Gets the percentage of the value . int Rand() . Gets the random integer value . int? Rand(int? min, int? max) . Gets the random integer value . double? Pow(Decimal? x, Decimal? y) . Computes the pow between two values . double? Pow(double? x, double? y) . Computes the pow between two values . double? Sqrt(Decimal? x) . Computes the sqrt of a given value . double? Sqrt(double? x) . Computes the sqrt of a given value . double? Sqrt(long? x) . Computes the sqrt of a given value . double? PercentRank&lt;T&gt;(IEnumerable&lt;T&gt;? window, T? value) . Computes the percent rank of a given window . double? Log(Decimal? base, Decimal? value) . Calculates the logarithm of a value with a specified base. Decimal? Sin(Decimal? value) . Calculates sine of a value. double? Sin(double? value) . Calculates sine of a value. float? Sin(float? value) . Calculates sine of a value. Decimal? Cos(Decimal? value) . Calculates cosine of a value. double? Cos(double? value) . Calculates cosine of a value. float? Cos(float? value) . Calculates cosine of a value. Decimal Max(string name) . Gets the max value of a given group. Decimal Max(string name, int parent) . Gets the max value of a given group. Decimal Min(string name) . Gets the min value of a given group. Decimal Min(string name, int parent) . Gets the min value of a given group. Decimal StDev(string name, int parent) . Gets the StDev value of a given group. string NewId() . Gets the new identifier . string? Trim(string? value) . Removes leading and trailing whitespace from a string. string? TrimStart(string? value) . Removes leading whitespace from a string. string? TrimEnd(string? value) . Removes trailing whitespace from a string. string? Substring(string? value, int? index, int? length) . Gets the substring from the string. string? Substring(string value, int? length) . Gets the substring from the string . string? Concat(string[]? strings) . Concatenates the specified values . string? Concat(char?[]? characters) . Concatenates the specified characters . string? Concat(string? firstString, char?[]? chars) . Concatenates specified string fir characters . string? Concat(char? firstChar, string[]? strings) . Concatenate specific character with strings . string? Concat(object[]? objects) . Concatenates the specified strings . string? Concat&lt;T&gt;(T[]? objects) . Concatenates the specified strings . bool? Contains(string? content, string? what) . Determine whether the string contains the specified value . int? IndexOf(string? value, string? text) . Position of the first occurrence of the specified value . string? Soundex(string? value) . Computes soundex for the specified value . bool HasFuzzyMatchedWord(string text, string word, string separator) . Matches the specified text by splitting it with separator and applying fuzzy comparison . bool HasWordThatHasSmallerLevenshteinDistanceThan(string text, string word, int distance, string separator) . Matches the specified text by splitting it with separator and applying fuzzy comparison with a given distance . bool HasWordThatSoundLike(string text, string word, string separator) . Matches whether the specified word is present after being fuzzified within the specified text . bool HasTextThatSoundLikeSentence(string text, string sentence, string separator) . Matches whether the specified text is present in sentence after being fuzified . string? ToUpper(string value) . Makes the string uppercase . string? ToUpper(string value, string culture) . Makes the string uppercase within specified culture . string? ToUpperInvariant(string value) . Makes the string uppercase . string? ToLower(string value) . Makes the string lowercase . string? ToLower(string value, string culture) . Makes the string lowercase within specified culture . string? ToLowerInvariant(string value) . Makes the string lowercase . string? PadLeft(string? value, string? character, int? totalWidth) . Returns a new string that right-aligns the characters in this instance by padding them on the left with a specified Unicode character, for a specified total lengt . string? PadRight(string? value, string? character, int? totalWidth) . Returns a new string that left-aligns the characters in this instance by padding them on the right with a specified Unicode character, for a specified total length . string? Head(string? value, int? length) . Gets the first N characters of the string . string? Tail(string? value, int? length) . Gets the last N characters of the string . int? LevenshteinDistance(string? firstValue, string? secondValue) . Computes the Levenshtein distance between two strings . char? GetCharacterOf(string value, int index) . Gets the character at specified index . string? Reverse(string? value) . Reverses the string . string[] Split(string value, string[] separators) . Splits the string into an array of substrings based on the specified separators . char[] ToCharArray(string value) . Splits the string into an array of characters . string? LongestCommonSubstring(string source, string pattern) . Computes the longest common subsequence between two source and pattern . string Replicate(string value, int integer) . Clones the value n times . string? Translate(string? value, string? characters, string? translations) . Returns the string from the first argument after the characters specified in the second argument are translated into the characters specified in the third argument. string? Replace(string? text, string lookFor, string? changeTo) . Replaces the first occurrence of a specified string in this instance with another specified string . string? ToTitleCase(string? value) . Capitalizes the first letter of the string . string? GetNthWord(string? text, int? wordIndex, string? separator) . Gets the nth word of the string . string? GetFirstWord(string text, string separator) . Gets the first word of the string . string? GetSecondWord(string text, string separator) . Gets the second word of the string . string? GetThirdWord(string text, string separator) . Gets the third word of the string . string? GetLastWord(string? text, string? separator) . Gets last word of the string . bool? IsNullOrEmpty(string? value) . Determines whether the string is null or empty . bool? IsNullOrWhiteSpace(string? value) . Determines whether the string is null or whitespace . string? UrlEncode(string? value) . Encodes the value . string? UrlDecode(string? value) . Decodes the value . string? UriEncode(string? value) . Encodes the value . string? UriDecode(string? value) . Decodes the value . bool? StartsWith(string? value, string? prefix) . Determines whether the string starts with the specified prefix . bool? StartsWith(string? value, string? prefix, string comparison) . Determines whether the string starts with the specified prefix . bool? EndsWith(string? value, string? suffix) . Determines whether the string ends with the specified suffix . bool? EndsWith(string? value, string? suffix, string comparison) . Determines whether the string ends with the specified suffix . string? RegexReplace(string? value, string? pattern, string? replacement) . Replace the specified value part that matches the pattern with the replacement . string[]? SplitByLinuxNewLines(string? input) . Split string by Linux-style newlines (\\n) . string[]? SplitByWindowsNewLines(string? input) . Split string by Windows-style newlines (\\r\\n) . string[]? SplitByNewLines(string? input) . Smart split that handles both Windows (\\r\\n) and Linux (\\n) newlines . Decimal Sum(string name) . Gets the sum value of a given group. Decimal Sum(string name, int parent) . Gets the sum value of a given group. Decimal SumIncome(string name) . Gets the sum value of a given group. Decimal SumIncome(string name, int parent) . Gets the sum value of a given group. Decimal SumOutcome(string name) . Gets the outcome value of a given group. Decimal SumOutcome(string name, int parent) . Gets the outcome value of a given group. TimeSpan? SumTimeSpan(string name) . Gets the sum value of a given group. TimeSpan? SumTimeSpan(string name, int parent) . Gets the sum value of a given group. TimeSpan? MinTimeSpan(string name) . Gets the min value of a given group. TimeSpan? MinTimeSpan(string name, int parent) . Gets the min value of a given group. TimeSpan? MaxTimeSpan(string name) . Gets the max value of a given group. TimeSpan? MaxTimeSpan(string name, int parent) . Gets the min value of a given group. char? ToChar(string? value) . Converts given value to character . char? ToChar(int? value) . Converts given value to character . char? ToChar(short? value) . Converts given value to character . char? ToChar(byte? value) . Converts given value to character . char? ToChar(object? value) . Converts given value to character . DateTime? ToDateTime(string value) . Converts given value to DateTime . DateTime? ToDateTime(string value, string culture) . Converts given value to DateTime . Decimal? ToDecimal(string? value) . Converts given value to decimal . Decimal? ToDecimal(string value, string culture) . Converts given value to decimal withing given culture . Decimal? ToDecimal(byte? value) . Converts given value to Decimal . Decimal? ToDecimal(sbyte? value) . Converts given value to Decimal . Decimal? ToDecimal(short? value) . Converts given value to Decimal . Decimal? ToDecimal(ushort? value) . Converts given value to Decimal . Decimal? ToDecimal(long? value) . Converts given value to Decimal . Decimal? ToDecimal(ulong? value) . Converts given value to Decimal . Decimal? ToDecimal(float? value) . Converts given value to Decimal . Decimal? ToDecimal(double? value) . Converts given value to Decimal . Decimal? ToDecimal(object? value) . Converts given value to Decimal . double? ToDouble(object? value) . Converts given value to double . double? ToDouble(string? value) . Converts given value to double . double? ToDouble(byte? value) . Converts given value to double . double? ToDouble(sbyte? value) . Converts given value to double . double? ToDouble(short? value) . Converts given value to double . double? ToDouble(ushort? value) . Converts given value to double . double? ToDouble(int? value) . Converts given value to double . double? ToDouble(uint? value) . Converts given value to double . double? ToDouble(long? value) . Converts given value to double . double? ToDouble(ulong? value) . Converts given value to double . double? ToDouble(float? value) . Converts given value to double . double? ToDouble(double? value) . Converts given value to double . double? ToDouble(Decimal? value) . Converts given value to double . float? ToFloat(string? value) . Converts given value to float . float? ToFloat(byte? value) . Converts given value to float . float? ToFloat(sbyte? value) . Converts given value to float . float? ToFloat(short? value) . Converts given value to float . float? ToFloat(ushort? value) . Converts given value to float . float? ToFloat(int? value) . Converts given value to float . float? ToFloat(uint? value) . Converts given value to float . float? ToFloat(long? value) . Converts given value to float . float? ToFloat(ulong? value) . Converts given value to float . float? ToFloat(float? value) . Converts given value to float . float? ToFloat(Decimal? value) . Converts given value to float . int? ToInt32(string value) . Converts given value to int . int? ToInt32(byte? value) . Converts given value to int . int? ToInt32(sbyte? value) . Converts given value to int . int? ToInt32(short? value) . Converts given value to int . int? ToInt32(ushort? value) . Converts given value to int . int? ToInt32(int? value) . Converts given value to int . int? ToInt32(uint? value) . Converts given value to int . int? ToInt32(long? value) . Converts given value to int . int? ToInt32(ulong? value) . Converts given value to int . int? ToInt32(float? value) . Converts given value to int . int? ToInt32(double? value) . Converts given value to int . int? ToInt32(Decimal? value) . Converts given value to int . int? ToInt32(object? value) . Converts given value to int . long? ToInt64(string value) . Converts given value to Int64 . long? ToInt64(byte? value) . Converts given value to long . long? ToInt64(sbyte? value) . Converts given value to long . long? ToInt64(short? value) . Converts given value to long . long? ToInt64(ushort? value) . Converts given value to long . long? ToInt64(int? value) . Converts given value to long . long? ToInt64(uint? value) . Converts given value to long . long? ToInt64(long? value) . Converts given value to long . long? ToInt64(ulong? value) . Converts given value to long . long? ToInt64(float? value) . Converts given value to long . long? ToInt64(double? value) . Converts given value to long . long? ToInt64(Decimal? value) . Converts given value to long . long? ToInt64(object? value) . Converts given value to long . string? ToString(char? value) . Converts given value to string . string? ToString(DateTimeOffset? value) . Converts given value to string . string? ToString(DateTimeOffset? value, string format) . Converts given value to string . string? ToString(byte? value) . Converts given value to string . string? ToString(byte? value, string format) . Converts given value to string . string? ToString(sbyte? value) . Converts given value to string . string? ToString(sbyte? value, string format) . Converts given value to string . string? ToString(int? value) . Converts given value to string . string? ToString(int? value, string format) . Converts given value to string . string? ToString(uint? value) . Converts given value to string . string? ToString(uint? value, string format) . Converts given value to string . string? ToString(long? value) . Converts given value to string . string? ToString(long? value, string format) . Converts given value to string . string? ToString(ulong? value) . Converts given value to string . string? ToString(ulong? value, string format) . Converts given value to string . string? ToString(float? value) . Converts given value to string . string? ToString(float? value, string format) . Converts given value to string . string? ToString(double? value) . Converts given value to string . string? ToString(double? value, string format) . Converts given value to string . string? ToString(Decimal? value) . Converts given value to string . string? ToString(Decimal? value, string format) . Converts given value to string . string? ToString(bool? value) . Converts given value to string . string? ToString(object? value) . Converts given value to string . string? ToString&lt;T&gt;(T? value) . Converts given value to string . string ToString(string[] value) . Converts given value to string . string ToString&lt;T&gt;(T[] value) . Converts given value to string . TimeSpan? ToTimeSpan(string value) . Converts given value to TimeSpan . TimeSpan? ToTimeSpan(string value, string culture) . Converts given value to TimeSpan . IEnumerable&lt;T&gt; Window&lt;T&gt;(string name) . Gets the window . ",
    "url": "/data-sources/Json/linux-arm64.html#base-methods",
    
    "relUrl": "/data-sources/Json/linux-arm64.html#base-methods"
  },"76": {
    "doc": "Linux Arm64",
    "title": "Linux Arm64",
    "content": " ",
    "url": "/data-sources/Json/linux-arm64.html",
    
    "relUrl": "/data-sources/Json/linux-arm64.html"
  },"77": {
    "doc": "Linux Arm64",
    "title": "Musoq.DataSources.SeparatedValues",
    "content": "Provides schema to work with separated values like .csv, .tsv, semicolon. ",
    "url": "/data-sources/SeparatedValues/linux-arm64.html#musoqdatasourcesseparatedvalues",
    
    "relUrl": "/data-sources/SeparatedValues/linux-arm64.html#musoqdatasourcesseparatedvalues"
  },"78": {
    "doc": "Linux Arm64",
    "title": "Tables",
    "content": "Table is a collection of rows and columns that the plugin exposes. Below are the tables that are exposed by this data source. separatedvalues.comma(string path, bool hasHeader, int skipLines) . Gives the ability to process .CSV files . This table has a dynamic structure, which means that its columns and other details cannot be determined until runtime. As a result, it is not possible to include a complete description of this table in the documentation. Instead, the actual columns and other details of this table will be determined at runtime. separatedvalues.tab(string path, bool hasHeader, int skipLines) . Gives the ability to process .TSV files . This table has a dynamic structure, which means that its columns and other details cannot be determined until runtime. As a result, it is not possible to include a complete description of this table in the documentation. Instead, the actual columns and other details of this table will be determined at runtime. separatedvalues.semicolon(string path, bool hasHeader, int skipLines) . Gives the ability to process semicolon files . This table has a dynamic structure, which means that its columns and other details cannot be determined until runtime. As a result, it is not possible to include a complete description of this table in the documentation. Instead, the actual columns and other details of this table will be determined at runtime. ",
    "url": "/data-sources/SeparatedValues/linux-arm64.html#tables",
    
    "relUrl": "/data-sources/SeparatedValues/linux-arm64.html#tables"
  },"79": {
    "doc": "Linux Arm64",
    "title": "Methods",
    "content": "Methods are functions that can be called on the data source specific column. Below are the methods that are exposed by this data source. string ClusteredByContainsKey(string dictionaryFilePath, string value) . Categorize values based on provided file . ",
    "url": "/data-sources/SeparatedValues/linux-arm64.html#methods",
    
    "relUrl": "/data-sources/SeparatedValues/linux-arm64.html#methods"
  },"80": {
    "doc": "Linux Arm64",
    "title": "Base Methods",
    "content": "Base methods are methods that can be called on the data source specific column. Those methods are automatically inherited and enriches the data source specific methods. Below are those base methods that are exposed by this data source. int RowNumber() . Gets the row number of the current row. string? GetTypeName(object? obj) . Gets the typename of passed object. string AggregateValues(string name) . Aggregates values into a single value. string AggregateValues(string name, int parent) . Aggregates values into a single value. Decimal Avg(string name) . Gets the aggregated average value from the given group name . Decimal Avg(string name, int parent) . Gets the aggregated average value from the given group name . byte? ShiftLeft(byte? value, int shift) . Shifts the value to the left by the specified number of bits. short? ShiftLeft(short? value, int shift) . Shifts the value to the left by the specified number of bits. int? ShiftLeft(int? value, int shift) . Shifts the value to the left by the specified number of bits. long? ShiftLeft(long? value, int shift) . Shifts the value to the left by the specified number of bits. sbyte? ShiftLeft(sbyte? value, int shift) . Shifts the value to the left by the specified number of bits. ushort? ShiftLeft(ushort? value, int shift) . Shifts the value to the left by the specified number of bits. uint? ShiftLeft(uint? value, int shift) . Shifts the value to the left by the specified number of bits. ulong? ShiftLeft(ulong? value, int shift) . Shifts the value to the left by the specified number of bits. byte? ShiftRight(byte? value, int shift) . Shifts the value to the right by the specified number of bits. short? ShiftRight(short? value, int shift) . Shifts the value to the right by the specified number of bits. int? ShiftRight(int? value, int shift) . Shifts the value to the right by the specified number of bits. long? ShiftRight(long? value, int shift) . Shifts the value to the right by the specified number of bits. sbyte? ShiftRight(sbyte? value, int shift) . Shifts the value to the right by the specified number of bits. ushort? ShiftRight(ushort? value, int shift) . Shifts the value to the right by the specified number of bits. uint? ShiftRight(uint? value, int shift) . Shifts the value to the right by the specified number of bits. ulong? ShiftRight(ulong? value, int shift) . Shifts the value to the right by the specified number of bits. byte? Not(byte? value) . Performs bitwise NOT operation on a given value. short? Not(short? value) . Performs bitwise NOT operation on a given value. int? Not(int? value) . Performs bitwise NOT operation on a given value. long? Not(long? value) . Performs bitwise NOT operation on a given value. sbyte? Not(sbyte? value) . Performs bitwise NOT operation on a given value. ushort? Not(ushort? value) . Performs bitwise NOT operation on a given value. uint? Not(uint? value) . Performs bitwise NOT operation on a given value. ulong? Not(ulong? value) . Performs bitwise NOT operation on a given value. byte? And(byte? left, byte? right) . Performs bitwise AND operation on two given values. int? And(byte? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(byte? left, short? right) . Performs bitwise AND operation on two given values. int? And(byte? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(byte? left, int? right) . Performs bitwise AND operation on two given values. uint? And(byte? left, uint? right) . Performs bitwise AND operation on two given values. long? And(byte? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(byte? left, ulong? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, byte? right) . Performs bitwise AND operation on two given values. sbyte? And(sbyte? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, short? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, int? right) . Performs bitwise AND operation on two given values. uint? And(sbyte? left, uint? right) . Performs bitwise AND operation on two given values. long? And(sbyte? left, long? right) . Performs bitwise AND operation on two given values. int? And(short? left, byte? right) . Performs bitwise AND operation on two given values. int? And(short? left, sbyte? right) . Performs bitwise AND operation on two given values. short? And(short? left, short? right) . Performs bitwise AND operation on two given values. int? And(short? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(short? left, int? right) . Performs bitwise AND operation on two given values. uint? And(short? left, uint? right) . Performs bitwise AND operation on two given values. long? And(short? left, long? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, byte? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, short? right) . Performs bitwise AND operation on two given values. ushort? And(ushort? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, int? right) . Performs bitwise AND operation on two given values. uint? And(ushort? left, uint? right) . Performs bitwise AND operation on two given values. long? And(ushort? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(ushort? left, ulong? right) . Performs bitwise AND operation on two given values. int? And(int? left, byte? right) . Performs bitwise AND operation on two given values. int? And(int? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(int? left, short? right) . Performs bitwise AND operation on two given values. int? And(int? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(int? left, int? right) . Performs bitwise AND operation on two given values. uint? And(int? left, uint? right) . Performs bitwise AND operation on two given values. long? And(int? left, long? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, uint? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, byte? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, sbyte? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, short? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, ushort? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, int? right) . Performs bitwise AND operation on two given values. ulong? And(uint? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(uint? left, ulong? right) . Performs bitwise AND operation on two given values. long? And(long? left, long? right) . Performs bitwise AND operation on two given values. long? And(long? left, byte? right) . Performs bitwise AND operation on two given values. long? And(long? left, sbyte? right) . Performs bitwise AND operation on two given values. long? And(long? left, short? right) . Performs bitwise AND operation on two given values. long? And(long? left, ushort? right) . Performs bitwise AND operation on two given values. long? And(long? left, int? right) . Performs bitwise AND operation on two given values. long? And(long? left, uint? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, byte? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, ushort? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, uint? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, ulong? right) . Performs bitwise AND operation on two given values. byte? Or(byte? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, short? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(byte? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(byte? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(byte? left, ulong? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, byte? right) . Performs bitwise OR operation on two given values. sbyte? Or(sbyte? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, short? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(sbyte? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(sbyte? left, long? right) . Performs bitwise OR operation on two given values. int? Or(short? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(short? left, sbyte? right) . Performs bitwise OR operation on two given values. short? Or(short? left, short? right) . Performs bitwise OR operation on two given values. int? Or(short? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(short? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(short? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(short? left, long? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, short? right) . Performs bitwise OR operation on two given values. ushort? Or(ushort? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(ushort? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(ushort? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(ushort? left, ulong? right) . Performs bitwise OR operation on two given values. int? Or(int? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(int? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(int? left, short? right) . Performs bitwise OR operation on two given values. int? Or(int? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(int? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(int? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(int? left, long? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, uint? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, byte? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, sbyte? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, short? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, ushort? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, int? right) . Performs bitwise OR operation on two given values. ulong? Or(uint? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(uint? left, ulong? right) . Performs bitwise OR operation on two given values. long? Or(long? left, long? right) . Performs bitwise OR operation on two given values. long? Or(long? left, byte? right) . Performs bitwise OR operation on two given values. long? Or(long? left, sbyte? right) . Performs bitwise OR operation on two given values. long? Or(long? left, short? right) . Performs bitwise OR operation on two given values. long? Or(long? left, ushort? right) . Performs bitwise OR operation on two given values. long? Or(long? left, int? right) . Performs bitwise OR operation on two given values. long? Or(long? left, uint? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, byte? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, ushort? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, uint? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, ulong? right) . Performs bitwise OR operation on two given values. byte? Xor(byte? left, byte? right) . Performs bitwise OR operation on two given values. int? Xor(byte? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(byte? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(byte? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(byte? left, ulong? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, byte? right) . Performs bitwise Xor operation on two given values. sbyte? Xor(sbyte? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(sbyte? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(sbyte? left, long? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, sbyte? right) . Performs bitwise Xor operation on two given values. short? Xor(short? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, ushort? right) . Performs bitwise XOR operation on two given values. int? Xor(short? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(short? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(short? left, long? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, short? right) . Performs bitwise Xor operation on two given values. ushort? Xor(ushort? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(ushort? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(ushort? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ushort? left, ulong? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(int? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(int? left, long? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, uint? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, byte? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, sbyte? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, short? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, ushort? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, int? right) . Performs bitwise Xor operation on two given values. ulong? Xor(uint? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(uint? left, ulong? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, long? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, byte? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, sbyte? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, short? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, ushort? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, int? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, uint? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, ulong? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, byte? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, ushort? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, uint? right) . Performs bitwise Xor operation on two given values. byte[] GetBytes(string? content) . Gets the bytes from the given string. byte[] GetBytes(string? content, int length, int offset) . Gets the bytes from the given string within given offset and length. byte?[]? GetBytes(char? character) . Gets the bytes from the given character. byte?[]? GetBytes(bool? bit) . Gets the bytes from the given boolean. byte?[]? GetBytes(long? value) . Gets the bytes from the given long. byte?[]? GetBytes(int? value) . Gets the bytes from the given int. byte?[]? GetBytes(short? value) . Gets the bytes from the given short. byte?[]? GetBytes(ulong? value) . Gets the bytes from the given ulong. byte?[]? GetBytes(ushort? value) . Gets the bytes from the given ushort. byte?[]? GetBytes(uint? value) . Gets the bytes from the given uint. byte?[]? GetBytes(Decimal? value) . Gets the bytes from the given decimal. byte?[]? GetBytes(double? value) . Gets the bytes from the given double. byte?[]? GetBytes(float? value) . Gets the bytes from the given float. string? ToBin(byte?[]? bytes, string delimiter) . Converts given bytes to binary with defined delimiter . string ToBin&lt;T&gt;(T value) . Converts given value to binary . string ToOcta&lt;T&gt;(T value) . Converts given value to octal . string ToDec&lt;T&gt;(T value) . Converts given value to decimal . string ToBase64(byte[] value) . Converts given value to string . string ToBase64(byte[] value, int offset, int length) . Converts given array of bytes to string . byte[] FromBase64(string value) . Converts given string to bytes array . bool FromBytesToBool(byte[] value) . Converts bytes to boolean value. short FromBytesToInt16(byte[] value) . Converts bytes to a 16-bit signed integer. ushort FromBytesToUInt16(byte[] value) . Converts bytes to a 16-bit unsigned integer. int FromBytesToInt32(byte[] value) . Converts bytes to a 32-bit signed integer. uint FromBytesToUInt32(byte[] value) . Converts bytes to a 32-bit unsigned integer. long FromBytesToInt64(byte[] value) . Converts bytes to a 64-bit signed integer. ulong FromBytesToUInt64(byte[] value) . Converts bytes to a 64-bit unsigned integer. float FromBytesToFloat(byte[] value) . Converts bytes to a float value. double FromBytesToDouble(byte[] value) . Converts bytes to a float value. string FromBytesToString(byte[] value) . Converts bytes to a string. byte[] ToBytes(bool value) . Converts boolean value to bytes. byte[] ToBytes(short value) . Converts short value to bytes. byte[] ToBytes(ushort value) . Converts ushort value to bytes. byte[] ToBytes(int value) . Converts int value to bytes. byte[] ToBytes(uint value) . Converts uint value to bytes. byte[] ToBytes(long value) . Converts long value to bytes. byte[] ToBytes(ulong value) . Converts long value to bytes. string? ToHex(byte?[]? bytes, string delimiter) . Converts given bytes to hex with defined delimiter . string? ToHex&lt;T&gt;(T value) . Converts given value to binary . int Count(string name) . Gets the count value of a given group. int Count(string name, int parent) . Gets the count value of a given group. int ExtractFromDate(string? date, string partOfDate) . Extracts part of the date from the date . int ExtractFromDate(string date, string culture, string partOfDate) . Extracts part of the date from the date based on given culture . DateTimeOffset? GetDate() . Gets the current datetime . DateTimeOffset? UtcGetDate() . Gets the current datetime in UTC . int? Month(DateTimeOffset? value) . Gets the month from DateTimeOffset . int? Year(DateTimeOffset? value) . Gets the year from DateTimeOffset . int? Day(DateTimeOffset? value) . Gets the day from DateTimeOffset . int? Hour(DateTimeOffset? value) . Gets the hour from DateTimeOffset . int? Minute(DateTimeOffset? value) . Gets the minute from DateTimeOffset . int? Second(DateTimeOffset? value) . Gets the second from DateTimeOffset . int? Milliseconds(DateTimeOffset? value) . Gets the millisecond from DateTimeOffset . int? DayOfWeek(DateTimeOffset? value) . Gets the day of week from DateTimeOffset . TimeSpan? ExtractTimeSpan(DateTimeOffset? dateTimeOffset) . Extracts time from DateTimeOffset . DateTime? ToDateTimeOffset(string value) . Converts given value to DateTimeOffset . DateTimeOffset? ToDateTimeOffset(string value, string culture) . Converts given value to DateTimeOffset . IEnumerable&lt;T&gt;? Skip&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? skipCount) . Skips elements from the beginning of the sequence. IEnumerable&lt;T&gt;? Take&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? takeCount) . Takes elements from the beginning of the sequence. IEnumerable&lt;T&gt;? SkipAndTake&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? skipCount, int? takeCount) . Skip and takes elements from the beginning of the sequence. T[]? EnumerableToArray&lt;T&gt;(IEnumerable&lt;T&gt;? values) . Turn array arguments of T into a single array. T[]? MergeArrays&lt;T&gt;(T[][]? values) . Turn array arguments of T into a single array. IEnumerable&lt;T&gt;? LongestCommonSequence&lt;T&gt;(IEnumerable&lt;T&gt;? source, IEnumerable&lt;T&gt;? pattern) . Computes longest common sequence of two given sequences . T? GetElementAtOrDefault&lt;T&gt;(IEnumerable&lt;T&gt;? enumerable, int? index) . Gets the element at the specified index in a sequence . int? Length&lt;T&gt;(IEnumerable&lt;T&gt;? enumerable) . Gets the length of the sequence . int? Length&lt;T&gt;(T[]? array) . Gets the length of the array . T? Choose&lt;T&gt;(int? index, T[] values) . Gets the value of an array at the specified index . T If&lt;T&gt;(bool expressionResult, T a, T b) . Chose a or b value based on the expression result . bool? Match(string? regex, string? content) . Determine whether content matches the specified pattern . byte? Coalesce(byte?[] array) . Gets the first non-null value in a list . sbyte? Coalesce(sbyte?[] array) . Gets the first non-null value in a list . short? Coalesce(short?[] array) . Gets the first non-null value in a list . ushort? Coalesce(ushort?[] array) . Gets the first non-null value in a list . int? Coalesce(int?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(uint?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(long?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(ulong?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(Decimal?[] array) . Gets the first non-null value in a list . T? Coalesce&lt;T&gt;(T[] array) . Gets the first non-null value in a list . IEnumerable&lt;T&gt;? Distinct&lt;T&gt;(IEnumerable&lt;T&gt;? values) . Returns distinct elements from a collection. string? Md5(string? content) . Gets the md5 hash of the given string. string? Md5(byte?[]? content) . Gets the md5 hash of the given bytes array. string? Sha1(string? content) . Gets the sha256 hash of the given string. string? Sha1(byte?[]? content) . Gets the sha256 hash of the given bytes array. string? Sha256(string? content) . Gets the sha256 hash of the given string. string? Sha256(byte?[]? content) . Gets the sha256 hash of the given bytes array. string? Sha512(string? content) . Gets the sha256 hash of the given string. string? Sha512(byte?[]? content) . Gets the sha256 hash of the bytes array. string? ToJson&lt;T&gt;(T? obj) . Converts object to json. string[] ExtractFromJsonToArray(string? json, string? path) . Extracts values from json by path. string? ExtractFromJson(string? json, string? path) . Extracts values from json by path and joins them with comma. Decimal? Abs(Decimal? value) . Gets the absolute value . long? Abs(long? value) . Gets the absolute value . int? Abs(int? value) . Gets the absolute value . Decimal? Ceil(Decimal? value) . Gets the ceiling value . Decimal? Floor(Decimal? value) . Gets the floor value . Decimal? Sign(Decimal? value) . Determine whether value is greater, equal or less that zero . long? Sign(long? value) . Determine whether value is greater, equal or less that zero . Decimal? Round(Decimal? value, int precision) . Rounds the value within given precision . Decimal? PercentOf(Decimal? value, Decimal? max) . Gets the percentage of the value . int Rand() . Gets the random integer value . int? Rand(int? min, int? max) . Gets the random integer value . double? Pow(Decimal? x, Decimal? y) . Computes the pow between two values . double? Pow(double? x, double? y) . Computes the pow between two values . double? Sqrt(Decimal? x) . Computes the sqrt of a given value . double? Sqrt(double? x) . Computes the sqrt of a given value . double? Sqrt(long? x) . Computes the sqrt of a given value . double? PercentRank&lt;T&gt;(IEnumerable&lt;T&gt;? window, T? value) . Computes the percent rank of a given window . double? Log(Decimal? base, Decimal? value) . Calculates the logarithm of a value with a specified base. Decimal? Sin(Decimal? value) . Calculates sine of a value. double? Sin(double? value) . Calculates sine of a value. float? Sin(float? value) . Calculates sine of a value. Decimal? Cos(Decimal? value) . Calculates cosine of a value. double? Cos(double? value) . Calculates cosine of a value. float? Cos(float? value) . Calculates cosine of a value. Decimal Max(string name) . Gets the max value of a given group. Decimal Max(string name, int parent) . Gets the max value of a given group. Decimal Min(string name) . Gets the min value of a given group. Decimal Min(string name, int parent) . Gets the min value of a given group. Decimal StDev(string name, int parent) . Gets the StDev value of a given group. string NewId() . Gets the new identifier . string? Trim(string? value) . Removes leading and trailing whitespace from a string. string? TrimStart(string? value) . Removes leading whitespace from a string. string? TrimEnd(string? value) . Removes trailing whitespace from a string. string? Substring(string? value, int? index, int? length) . Gets the substring from the string. string? Substring(string value, int? length) . Gets the substring from the string . string? Concat(string[]? strings) . Concatenates the specified values . string? Concat(char?[]? characters) . Concatenates the specified characters . string? Concat(string? firstString, char?[]? chars) . Concatenates specified string fir characters . string? Concat(char? firstChar, string[]? strings) . Concatenate specific character with strings . string? Concat(object[]? objects) . Concatenates the specified strings . string? Concat&lt;T&gt;(T[]? objects) . Concatenates the specified strings . bool? Contains(string? content, string? what) . Determine whether the string contains the specified value . int? IndexOf(string? value, string? text) . Position of the first occurrence of the specified value . string? Soundex(string? value) . Computes soundex for the specified value . bool HasFuzzyMatchedWord(string text, string word, string separator) . Matches the specified text by splitting it with separator and applying fuzzy comparison . bool HasWordThatHasSmallerLevenshteinDistanceThan(string text, string word, int distance, string separator) . Matches the specified text by splitting it with separator and applying fuzzy comparison with a given distance . bool HasWordThatSoundLike(string text, string word, string separator) . Matches whether the specified word is present after being fuzzified within the specified text . bool HasTextThatSoundLikeSentence(string text, string sentence, string separator) . Matches whether the specified text is present in sentence after being fuzified . string? ToUpper(string value) . Makes the string uppercase . string? ToUpper(string value, string culture) . Makes the string uppercase within specified culture . string? ToUpperInvariant(string value) . Makes the string uppercase . string? ToLower(string value) . Makes the string lowercase . string? ToLower(string value, string culture) . Makes the string lowercase within specified culture . string? ToLowerInvariant(string value) . Makes the string lowercase . string? PadLeft(string? value, string? character, int? totalWidth) . Returns a new string that right-aligns the characters in this instance by padding them on the left with a specified Unicode character, for a specified total lengt . string? PadRight(string? value, string? character, int? totalWidth) . Returns a new string that left-aligns the characters in this instance by padding them on the right with a specified Unicode character, for a specified total length . string? Head(string? value, int? length) . Gets the first N characters of the string . string? Tail(string? value, int? length) . Gets the last N characters of the string . int? LevenshteinDistance(string? firstValue, string? secondValue) . Computes the Levenshtein distance between two strings . char? GetCharacterOf(string value, int index) . Gets the character at specified index . string? Reverse(string? value) . Reverses the string . string[] Split(string value, string[] separators) . Splits the string into an array of substrings based on the specified separators . char[] ToCharArray(string value) . Splits the string into an array of characters . string? LongestCommonSubstring(string source, string pattern) . Computes the longest common subsequence between two source and pattern . string Replicate(string value, int integer) . Clones the value n times . string? Translate(string? value, string? characters, string? translations) . Returns the string from the first argument after the characters specified in the second argument are translated into the characters specified in the third argument. string? Replace(string? text, string lookFor, string? changeTo) . Replaces the first occurrence of a specified string in this instance with another specified string . string? ToTitleCase(string? value) . Capitalizes the first letter of the string . string? GetNthWord(string? text, int? wordIndex, string? separator) . Gets the nth word of the string . string? GetFirstWord(string text, string separator) . Gets the first word of the string . string? GetSecondWord(string text, string separator) . Gets the second word of the string . string? GetThirdWord(string text, string separator) . Gets the third word of the string . string? GetLastWord(string? text, string? separator) . Gets last word of the string . bool? IsNullOrEmpty(string? value) . Determines whether the string is null or empty . bool? IsNullOrWhiteSpace(string? value) . Determines whether the string is null or whitespace . string? UrlEncode(string? value) . Encodes the value . string? UrlDecode(string? value) . Decodes the value . string? UriEncode(string? value) . Encodes the value . string? UriDecode(string? value) . Decodes the value . bool? StartsWith(string? value, string? prefix) . Determines whether the string starts with the specified prefix . bool? StartsWith(string? value, string? prefix, string comparison) . Determines whether the string starts with the specified prefix . bool? EndsWith(string? value, string? suffix) . Determines whether the string ends with the specified suffix . bool? EndsWith(string? value, string? suffix, string comparison) . Determines whether the string ends with the specified suffix . string? RegexReplace(string? value, string? pattern, string? replacement) . Replace the specified value part that matches the pattern with the replacement . string[]? SplitByLinuxNewLines(string? input) . Split string by Linux-style newlines (\\n) . string[]? SplitByWindowsNewLines(string? input) . Split string by Windows-style newlines (\\r\\n) . string[]? SplitByNewLines(string? input) . Smart split that handles both Windows (\\r\\n) and Linux (\\n) newlines . Decimal Sum(string name) . Gets the sum value of a given group. Decimal Sum(string name, int parent) . Gets the sum value of a given group. Decimal SumIncome(string name) . Gets the sum value of a given group. Decimal SumIncome(string name, int parent) . Gets the sum value of a given group. Decimal SumOutcome(string name) . Gets the outcome value of a given group. Decimal SumOutcome(string name, int parent) . Gets the outcome value of a given group. TimeSpan? SumTimeSpan(string name) . Gets the sum value of a given group. TimeSpan? SumTimeSpan(string name, int parent) . Gets the sum value of a given group. TimeSpan? MinTimeSpan(string name) . Gets the min value of a given group. TimeSpan? MinTimeSpan(string name, int parent) . Gets the min value of a given group. TimeSpan? MaxTimeSpan(string name) . Gets the max value of a given group. TimeSpan? MaxTimeSpan(string name, int parent) . Gets the min value of a given group. char? ToChar(string? value) . Converts given value to character . char? ToChar(int? value) . Converts given value to character . char? ToChar(short? value) . Converts given value to character . char? ToChar(byte? value) . Converts given value to character . char? ToChar(object? value) . Converts given value to character . DateTime? ToDateTime(string value) . Converts given value to DateTime . DateTime? ToDateTime(string value, string culture) . Converts given value to DateTime . Decimal? ToDecimal(string? value) . Converts given value to decimal . Decimal? ToDecimal(string value, string culture) . Converts given value to decimal withing given culture . Decimal? ToDecimal(byte? value) . Converts given value to Decimal . Decimal? ToDecimal(sbyte? value) . Converts given value to Decimal . Decimal? ToDecimal(short? value) . Converts given value to Decimal . Decimal? ToDecimal(ushort? value) . Converts given value to Decimal . Decimal? ToDecimal(long? value) . Converts given value to Decimal . Decimal? ToDecimal(ulong? value) . Converts given value to Decimal . Decimal? ToDecimal(float? value) . Converts given value to Decimal . Decimal? ToDecimal(double? value) . Converts given value to Decimal . Decimal? ToDecimal(object? value) . Converts given value to Decimal . double? ToDouble(object? value) . Converts given value to double . double? ToDouble(string? value) . Converts given value to double . double? ToDouble(byte? value) . Converts given value to double . double? ToDouble(sbyte? value) . Converts given value to double . double? ToDouble(short? value) . Converts given value to double . double? ToDouble(ushort? value) . Converts given value to double . double? ToDouble(int? value) . Converts given value to double . double? ToDouble(uint? value) . Converts given value to double . double? ToDouble(long? value) . Converts given value to double . double? ToDouble(ulong? value) . Converts given value to double . double? ToDouble(float? value) . Converts given value to double . double? ToDouble(double? value) . Converts given value to double . double? ToDouble(Decimal? value) . Converts given value to double . float? ToFloat(string? value) . Converts given value to float . float? ToFloat(byte? value) . Converts given value to float . float? ToFloat(sbyte? value) . Converts given value to float . float? ToFloat(short? value) . Converts given value to float . float? ToFloat(ushort? value) . Converts given value to float . float? ToFloat(int? value) . Converts given value to float . float? ToFloat(uint? value) . Converts given value to float . float? ToFloat(long? value) . Converts given value to float . float? ToFloat(ulong? value) . Converts given value to float . float? ToFloat(float? value) . Converts given value to float . float? ToFloat(Decimal? value) . Converts given value to float . int? ToInt32(string value) . Converts given value to int . int? ToInt32(byte? value) . Converts given value to int . int? ToInt32(sbyte? value) . Converts given value to int . int? ToInt32(short? value) . Converts given value to int . int? ToInt32(ushort? value) . Converts given value to int . int? ToInt32(int? value) . Converts given value to int . int? ToInt32(uint? value) . Converts given value to int . int? ToInt32(long? value) . Converts given value to int . int? ToInt32(ulong? value) . Converts given value to int . int? ToInt32(float? value) . Converts given value to int . int? ToInt32(double? value) . Converts given value to int . int? ToInt32(Decimal? value) . Converts given value to int . int? ToInt32(object? value) . Converts given value to int . long? ToInt64(string value) . Converts given value to Int64 . long? ToInt64(byte? value) . Converts given value to long . long? ToInt64(sbyte? value) . Converts given value to long . long? ToInt64(short? value) . Converts given value to long . long? ToInt64(ushort? value) . Converts given value to long . long? ToInt64(int? value) . Converts given value to long . long? ToInt64(uint? value) . Converts given value to long . long? ToInt64(long? value) . Converts given value to long . long? ToInt64(ulong? value) . Converts given value to long . long? ToInt64(float? value) . Converts given value to long . long? ToInt64(double? value) . Converts given value to long . long? ToInt64(Decimal? value) . Converts given value to long . long? ToInt64(object? value) . Converts given value to long . string? ToString(char? value) . Converts given value to string . string? ToString(DateTimeOffset? value) . Converts given value to string . string? ToString(DateTimeOffset? value, string format) . Converts given value to string . string? ToString(byte? value) . Converts given value to string . string? ToString(byte? value, string format) . Converts given value to string . string? ToString(sbyte? value) . Converts given value to string . string? ToString(sbyte? value, string format) . Converts given value to string . string? ToString(int? value) . Converts given value to string . string? ToString(int? value, string format) . Converts given value to string . string? ToString(uint? value) . Converts given value to string . string? ToString(uint? value, string format) . Converts given value to string . string? ToString(long? value) . Converts given value to string . string? ToString(long? value, string format) . Converts given value to string . string? ToString(ulong? value) . Converts given value to string . string? ToString(ulong? value, string format) . Converts given value to string . string? ToString(float? value) . Converts given value to string . string? ToString(float? value, string format) . Converts given value to string . string? ToString(double? value) . Converts given value to string . string? ToString(double? value, string format) . Converts given value to string . string? ToString(Decimal? value) . Converts given value to string . string? ToString(Decimal? value, string format) . Converts given value to string . string? ToString(bool? value) . Converts given value to string . string? ToString(object? value) . Converts given value to string . string? ToString&lt;T&gt;(T? value) . Converts given value to string . string ToString(string[] value) . Converts given value to string . string ToString&lt;T&gt;(T[] value) . Converts given value to string . TimeSpan? ToTimeSpan(string value) . Converts given value to TimeSpan . TimeSpan? ToTimeSpan(string value, string culture) . Converts given value to TimeSpan . IEnumerable&lt;T&gt; Window&lt;T&gt;(string name) . Gets the window . ",
    "url": "/data-sources/SeparatedValues/linux-arm64.html#base-methods",
    
    "relUrl": "/data-sources/SeparatedValues/linux-arm64.html#base-methods"
  },"81": {
    "doc": "Linux Arm64",
    "title": "Linux Arm64",
    "content": " ",
    "url": "/data-sources/SeparatedValues/linux-arm64.html",
    
    "relUrl": "/data-sources/SeparatedValues/linux-arm64.html"
  },"82": {
    "doc": "Linux Arm64",
    "title": "Musoq.DataSources.Kubernetes",
    "content": "Provides schema to work with Kubernetes. ",
    "url": "/data-sources/Kubernetes/linux-arm64.html#musoqdatasourceskubernetes",
    
    "relUrl": "/data-sources/Kubernetes/linux-arm64.html#musoqdatasourceskubernetes"
  },"83": {
    "doc": "Linux Arm64",
    "title": "Tables",
    "content": "Table is a collection of rows and columns that the plugin exposes. Below are the tables that are exposed by this data source. kubernetes.deployments() . Enumerate deployments . Environment variables . In order to use the plugin, the user must set any required environment variables as specified in the environments element. Failure to do so may result in the plugin not functioning correctly. | Name | Is required | Description | . | MUSOQ_KUBERNETES_CONFIG_FILE | false | Kubernetes config file | . Columns . | Name | Type | Description | . | Namespace | string | Namespace string | . | Name | string | Name string | . | CreationTimestamp | DateTime? | CreationTimestamp of the DeploymentEntity | . | Generation | long? | Generation of the DeploymentEntity | . | ResourceVersion | string | ResourceVersion string | . | Images | string | Image used within deployment | . | ImagePullPolicies | string | ImagePullPolicies used within deployment | . | RestartPolicy | string | RestartPolicy string | . | ContainersNames | string | Names of containers used within deployment | . | Statuses | string | Statuses of depl | . kubernetes.pods() . Enumerate pods . Environment variables . In order to use the plugin, the user must set any required environment variables as specified in the environments element. Failure to do so may result in the plugin not functioning correctly. | Name | Is required | Description | . | MUSOQ_KUBERNETES_CONFIG_FILE | false | Kubernetes config file | . Columns . | Name | Type | Description | . | Namespace | string | Namespace string | . | Name | string | Name string | . | Type | string | Type string | . | PF | string | PF string | . | Ready | string | Ready string | . | Restarts | string | Restarts string | . | Status | string | Status string | . | Cpu | string | Cpu string | . | Memory | string | Memory string | . | IP | string | IP string | . kubernetes.services() . Enumerates services . Environment variables . In order to use the plugin, the user must set any required environment variables as specified in the environments element. Failure to do so may result in the plugin not functioning correctly. | Name | Is required | Description | . | MUSOQ_KUBERNETES_CONFIG_FILE | false | Kubernetes config file | . Columns . | Name | Type | Description | . | Metadata | V1ObjectMeta | Metadata of the ServiceEntity | . | Spec | V1ServiceSpec | Spec of the ServiceEntity | . | Kind | string | Kind string | . | Status | V1ServiceStatus | Status of the ServiceEntity | . kubernetes.nodes() . Enumerates nodes . Environment variables . In order to use the plugin, the user must set any required environment variables as specified in the environments element. Failure to do so may result in the plugin not functioning correctly. | Name | Is required | Description | . | MUSOQ_KUBERNETES_CONFIG_FILE | false | Kubernetes config file | . Columns . | Name | Type | Description | . | Name | string | Name string | . | Status | string | Status string | . | Roles | string | Roles string | . | Age | DateTime? | Age of the NodeEntity | . | Version | string | Version string | . | Kernel | string | Kernel string | . | OS | string | OS string | . | Architecture | string | Architecture string | . | ContainerRuntime | string | Container Runtime string | . | Cpu | string | CPU string | . | Memory | string | Memory string | . kubernetes.configmaps() . Enumerate configmaps . Environment variables . In order to use the plugin, the user must set any required environment variables as specified in the environments element. Failure to do so may result in the plugin not functioning correctly. | Name | Is required | Description | . | MUSOQ_KUBERNETES_CONFIG_FILE | false | Kubernetes config file | . Columns . | Name | Type | Description | . | Namespace | string | Namespace string | . | Name | string | Name string | . | Age | DateTime? | Age | . kubernetes.cronJobs() . Enumerate cron jobs . Environment variables . In order to use the plugin, the user must set any required environment variables as specified in the environments element. Failure to do so may result in the plugin not functioning correctly. | Name | Is required | Description | . | MUSOQ_KUBERNETES_CONFIG_FILE | false | Kubernetes config file | . Columns . | Name | Type | Description | . | Namespace | string | Namespace string | . | Name | string | Name string | . | Schedule | string | Dictionary of the schedule | . | Active | bool | Flag indicating if the job is active | . | LastScheduleTime | DateTime? | Last schedule time of the job | . kubernetes.daemonSets() . Enumerate daemonsets . Environment variables . In order to use the plugin, the user must set any required environment variables as specified in the environments element. Failure to do so may result in the plugin not functioning correctly. | Name | Is required | Description | . | MUSOQ_KUBERNETES_CONFIG_FILE | false | Kubernetes config file | . Columns . | Name | Type | Description | . | Namespace | string | Namespace string | . | Name | string | Name string | . | Desired | int | Desired number of entities | . | Current | int | Current number of entities | . | Ready | int | Number of ready entities | . | UpToDate | int? | Number of up-to-date entities | . | Available | int? | Number of available entities | . | Age | DateTime? | Age of the entity | . kubernetes.jobs() . Enumerate jobs . Environment variables . In order to use the plugin, the user must set any required environment variables as specified in the environments element. Failure to do so may result in the plugin not functioning correctly. | Name | Is required | Description | . | MUSOQ_KUBERNETES_CONFIG_FILE | false | Kubernetes config file | . Columns . | Name | Type | Description | . | Namespace | string | Namespace string | . | Name | string | Name string | . | Completions | int | Number of completions | . | Duration | TimeSpan? | Duration of job execution | . | Images | string | Images string | . | Age | DateTime? | Age of the job | . kubernetes.persistentVolumeClaims() . Enumerate persistent volume claims . Environment variables . In order to use the plugin, the user must set any required environment variables as specified in the environments element. Failure to do so may result in the plugin not functioning correctly. | Name | Is required | Description | . | MUSOQ_KUBERNETES_CONFIG_FILE | false | Kubernetes config file | . Columns . | Name | Type | Description | . | Namespace | string | Namespace string | . | Name | string | Name string | . | Status | string | Status string | . | Volume | string | Volume string | . | Capacity | string | Capacity string | . | Age | DateTime? | Age of the PersistentVolumeClaimsEntity | . kubernetes.persistentVolumes() . Enumerate persistent volumes . Environment variables . In order to use the plugin, the user must set any required environment variables as specified in the environments element. Failure to do so may result in the plugin not functioning correctly. | Name | Is required | Description | . | MUSOQ_KUBERNETES_CONFIG_FILE | false | Kubernetes config file | . Columns . | Name | Type | Description | . | Name | string | Name string | . | Capacity | IDictionary&lt;string, ResourceQuantity&gt; | Dictionary of capacities | . | AccessModes | string | AccessModes string | . | ReclaimPolicy | string | Reclaim policy string | . | Status | string | Status string | . | Claim | string | Claim string | . | StorageClass | string | StorageClass string | . | Reason | string | Reason string | . | Age | DateTime? | Age of the PersistentVolumeEntity | . kubernetes.replicaSets() . Enumerate replicasets . Environment variables . In order to use the plugin, the user must set any required environment variables as specified in the environments element. Failure to do so may result in the plugin not functioning correctly. | Name | Is required | Description | . | MUSOQ_KUBERNETES_CONFIG_FILE | false | Kubernetes config file | . Columns . | Name | Type | Description | . | Namespace | string | Namespace string | . | Name | string | Name string | . | Desired | int? | Desired number of replicas | . | Current | string | Current string | . | ReadyAge | DateTime? | Age when the ReplicaSetEntity is ready | . kubernetes.secretsData() . Enumerate secrets data . Environment variables . In order to use the plugin, the user must set any required environment variables as specified in the environments element. Failure to do so may result in the plugin not functioning correctly. | Name | Is required | Description | . | MUSOQ_KUBERNETES_CONFIG_FILE | false | Kubernetes config file | . Columns . | Name | Type | Description | . | Namespace | string | Namespace string | . | Name | string | Name string | . | Key | string | Key string | . | Value | byte[] | Value byte array | . kubernetes.secrets() . Enumerate secrets . Environment variables . In order to use the plugin, the user must set any required environment variables as specified in the environments element. Failure to do so may result in the plugin not functioning correctly. | Name | Is required | Description | . | MUSOQ_KUBERNETES_CONFIG_FILE | false | Kubernetes config file | . Columns . | Name | Type | Description | . | Namespace | string | Namespace string | . | Name | string | Name string | . | Type | string | Type string | . | Age | DateTime? | Age of the SecretEntity | . kubernetes.statefulsets() . Enumerate statefulsets . Environment variables . In order to use the plugin, the user must set any required environment variables as specified in the environments element. Failure to do so may result in the plugin not functioning correctly. | Name | Is required | Description | . | MUSOQ_KUBERNETES_CONFIG_FILE | false | Kubernetes config file | . Columns . | Name | Type | Description | . | Namespace | string | Namespace string | . | Name | string | Name string | . | Replicas | int? | Number of replicas | . | Age | DateTime? | Age of the StatefulSetEntity | . kubernetes.podcontainers() . Enumerate pod containers . Environment variables . In order to use the plugin, the user must set any required environment variables as specified in the environments element. Failure to do so may result in the plugin not functioning correctly. | Name | Is required | Description | . | MUSOQ_KUBERNETES_CONFIG_FILE | false | Kubernetes config file | . Columns . | Name | Type | Description | . | Namespace | string | Namespace string | . | Name | string | Name string | . | ContainerName | string | Container name string | . | Image | string | Image string | . | ImagePullPolicy | string | Image pull policy string | . | Age | DateTime? | Container age | . kubernetes.podlogs(string podName, string string containerName, string namespace) . Enumerate pod containers . Environment variables . In order to use the plugin, the user must set any required environment variables as specified in the environments element. Failure to do so may result in the plugin not functioning correctly. | Name | Is required | Description | . | MUSOQ_KUBERNETES_CONFIG_FILE | false | Kubernetes config file | . Columns . | Name | Type | Description | . | Namespace | string | Namespace string | . | Name | string | Name string | . | ContainerName | string | Container name string | . | Line | string | Line string | . kubernetes.events() . Enumerate events . Environment variables . In order to use the plugin, the user must set any required environment variables as specified in the environments element. Failure to do so may result in the plugin not functioning correctly. | Name | Is required | Description | . | MUSOQ_KUBERNETES_CONFIG_FILE | false | Kubernetes config file | . Columns . | Name | Type | Description | . | Action | string | Action string | . | ApiVersion | string | ApiVersion string | . | Count | int? | Count of the event | . | EventTime | DateTime? | EventTime of the event | . | FirstTimestamp | DateTime? | FirstTimestamp of the event | . | InvolvedObject | V1ObjectReference | InvolvedObject of the event | . | Kind | string | Kind string | . | LastTimestamp | DateTime? | LastTimestamp of the event | . | Message | string | Message string | . | Reason | string | Reason string | . | Related | V1ObjectReference | Related of the event | . | ReportingComponent | string | ReportingComponent string | . | ReportingInstance | string | ReportingInstance string | . | Series | Corev1EventSeries | Series of the event | . | Source | V1EventSource | Source of the event | . | Type | string | Type string | . kubernetes.events(string namespace) . Enumerate events . Environment variables . In order to use the plugin, the user must set any required environment variables as specified in the environments element. Failure to do so may result in the plugin not functioning correctly. | Name | Is required | Description | . | MUSOQ_KUBERNETES_CONFIG_FILE | false | Kubernetes config file | . Columns . | Name | Type | Description | . | Action | string | Action string | . | ApiVersion | string | ApiVersion string | . | Count | int? | Count of the event | . | EventTime | DateTime? | EventTime of the event | . | FirstTimestamp | DateTime? | FirstTimestamp of the event | . | InvolvedObject | V1ObjectReference | InvolvedObject of the event | . | Kind | string | Kind string | . | LastTimestamp | DateTime? | LastTimestamp of the event | . | Message | string | Message string | . | Reason | string | Reason string | . | Related | V1ObjectReference | Related of the event | . | ReportingComponent | string | ReportingComponent string | . | ReportingInstance | string | ReportingInstance string | . | Series | Corev1EventSeries | Series of the event | . | Source | V1EventSource | Source of the event | . | Type | string | Type string | . ",
    "url": "/data-sources/Kubernetes/linux-arm64.html#tables",
    
    "relUrl": "/data-sources/Kubernetes/linux-arm64.html#tables"
  },"84": {
    "doc": "Linux Arm64",
    "title": "Methods",
    "content": "Methods are functions that can be called on the data source specific column. Below are the methods that are exposed by this data source. string EncodeSecret(string text) . Encodes the secret. string EncodeSecret(string text, string encoding) . Encodes the secret. string DecodeSecret(string text) . Decodes the secret. string? GetLabelOrDefault(string key) . Gets the pod container label. ",
    "url": "/data-sources/Kubernetes/linux-arm64.html#methods",
    
    "relUrl": "/data-sources/Kubernetes/linux-arm64.html#methods"
  },"85": {
    "doc": "Linux Arm64",
    "title": "Base Methods",
    "content": "Base methods are methods that can be called on the data source specific column. Those methods are automatically inherited and enriches the data source specific methods. Below are those base methods that are exposed by this data source. int RowNumber() . Gets the row number of the current row. string? GetTypeName(object? obj) . Gets the typename of passed object. string AggregateValues(string name) . Aggregates values into a single value. string AggregateValues(string name, int parent) . Aggregates values into a single value. Decimal Avg(string name) . Gets the aggregated average value from the given group name . Decimal Avg(string name, int parent) . Gets the aggregated average value from the given group name . byte? ShiftLeft(byte? value, int shift) . Shifts the value to the left by the specified number of bits. short? ShiftLeft(short? value, int shift) . Shifts the value to the left by the specified number of bits. int? ShiftLeft(int? value, int shift) . Shifts the value to the left by the specified number of bits. long? ShiftLeft(long? value, int shift) . Shifts the value to the left by the specified number of bits. sbyte? ShiftLeft(sbyte? value, int shift) . Shifts the value to the left by the specified number of bits. ushort? ShiftLeft(ushort? value, int shift) . Shifts the value to the left by the specified number of bits. uint? ShiftLeft(uint? value, int shift) . Shifts the value to the left by the specified number of bits. ulong? ShiftLeft(ulong? value, int shift) . Shifts the value to the left by the specified number of bits. byte? ShiftRight(byte? value, int shift) . Shifts the value to the right by the specified number of bits. short? ShiftRight(short? value, int shift) . Shifts the value to the right by the specified number of bits. int? ShiftRight(int? value, int shift) . Shifts the value to the right by the specified number of bits. long? ShiftRight(long? value, int shift) . Shifts the value to the right by the specified number of bits. sbyte? ShiftRight(sbyte? value, int shift) . Shifts the value to the right by the specified number of bits. ushort? ShiftRight(ushort? value, int shift) . Shifts the value to the right by the specified number of bits. uint? ShiftRight(uint? value, int shift) . Shifts the value to the right by the specified number of bits. ulong? ShiftRight(ulong? value, int shift) . Shifts the value to the right by the specified number of bits. byte? Not(byte? value) . Performs bitwise NOT operation on a given value. short? Not(short? value) . Performs bitwise NOT operation on a given value. int? Not(int? value) . Performs bitwise NOT operation on a given value. long? Not(long? value) . Performs bitwise NOT operation on a given value. sbyte? Not(sbyte? value) . Performs bitwise NOT operation on a given value. ushort? Not(ushort? value) . Performs bitwise NOT operation on a given value. uint? Not(uint? value) . Performs bitwise NOT operation on a given value. ulong? Not(ulong? value) . Performs bitwise NOT operation on a given value. byte? And(byte? left, byte? right) . Performs bitwise AND operation on two given values. int? And(byte? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(byte? left, short? right) . Performs bitwise AND operation on two given values. int? And(byte? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(byte? left, int? right) . Performs bitwise AND operation on two given values. uint? And(byte? left, uint? right) . Performs bitwise AND operation on two given values. long? And(byte? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(byte? left, ulong? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, byte? right) . Performs bitwise AND operation on two given values. sbyte? And(sbyte? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, short? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, int? right) . Performs bitwise AND operation on two given values. uint? And(sbyte? left, uint? right) . Performs bitwise AND operation on two given values. long? And(sbyte? left, long? right) . Performs bitwise AND operation on two given values. int? And(short? left, byte? right) . Performs bitwise AND operation on two given values. int? And(short? left, sbyte? right) . Performs bitwise AND operation on two given values. short? And(short? left, short? right) . Performs bitwise AND operation on two given values. int? And(short? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(short? left, int? right) . Performs bitwise AND operation on two given values. uint? And(short? left, uint? right) . Performs bitwise AND operation on two given values. long? And(short? left, long? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, byte? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, short? right) . Performs bitwise AND operation on two given values. ushort? And(ushort? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, int? right) . Performs bitwise AND operation on two given values. uint? And(ushort? left, uint? right) . Performs bitwise AND operation on two given values. long? And(ushort? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(ushort? left, ulong? right) . Performs bitwise AND operation on two given values. int? And(int? left, byte? right) . Performs bitwise AND operation on two given values. int? And(int? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(int? left, short? right) . Performs bitwise AND operation on two given values. int? And(int? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(int? left, int? right) . Performs bitwise AND operation on two given values. uint? And(int? left, uint? right) . Performs bitwise AND operation on two given values. long? And(int? left, long? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, uint? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, byte? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, sbyte? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, short? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, ushort? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, int? right) . Performs bitwise AND operation on two given values. ulong? And(uint? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(uint? left, ulong? right) . Performs bitwise AND operation on two given values. long? And(long? left, long? right) . Performs bitwise AND operation on two given values. long? And(long? left, byte? right) . Performs bitwise AND operation on two given values. long? And(long? left, sbyte? right) . Performs bitwise AND operation on two given values. long? And(long? left, short? right) . Performs bitwise AND operation on two given values. long? And(long? left, ushort? right) . Performs bitwise AND operation on two given values. long? And(long? left, int? right) . Performs bitwise AND operation on two given values. long? And(long? left, uint? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, byte? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, ushort? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, uint? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, ulong? right) . Performs bitwise AND operation on two given values. byte? Or(byte? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, short? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(byte? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(byte? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(byte? left, ulong? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, byte? right) . Performs bitwise OR operation on two given values. sbyte? Or(sbyte? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, short? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(sbyte? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(sbyte? left, long? right) . Performs bitwise OR operation on two given values. int? Or(short? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(short? left, sbyte? right) . Performs bitwise OR operation on two given values. short? Or(short? left, short? right) . Performs bitwise OR operation on two given values. int? Or(short? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(short? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(short? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(short? left, long? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, short? right) . Performs bitwise OR operation on two given values. ushort? Or(ushort? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(ushort? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(ushort? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(ushort? left, ulong? right) . Performs bitwise OR operation on two given values. int? Or(int? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(int? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(int? left, short? right) . Performs bitwise OR operation on two given values. int? Or(int? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(int? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(int? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(int? left, long? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, uint? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, byte? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, sbyte? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, short? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, ushort? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, int? right) . Performs bitwise OR operation on two given values. ulong? Or(uint? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(uint? left, ulong? right) . Performs bitwise OR operation on two given values. long? Or(long? left, long? right) . Performs bitwise OR operation on two given values. long? Or(long? left, byte? right) . Performs bitwise OR operation on two given values. long? Or(long? left, sbyte? right) . Performs bitwise OR operation on two given values. long? Or(long? left, short? right) . Performs bitwise OR operation on two given values. long? Or(long? left, ushort? right) . Performs bitwise OR operation on two given values. long? Or(long? left, int? right) . Performs bitwise OR operation on two given values. long? Or(long? left, uint? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, byte? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, ushort? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, uint? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, ulong? right) . Performs bitwise OR operation on two given values. byte? Xor(byte? left, byte? right) . Performs bitwise OR operation on two given values. int? Xor(byte? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(byte? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(byte? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(byte? left, ulong? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, byte? right) . Performs bitwise Xor operation on two given values. sbyte? Xor(sbyte? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(sbyte? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(sbyte? left, long? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, sbyte? right) . Performs bitwise Xor operation on two given values. short? Xor(short? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, ushort? right) . Performs bitwise XOR operation on two given values. int? Xor(short? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(short? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(short? left, long? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, short? right) . Performs bitwise Xor operation on two given values. ushort? Xor(ushort? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(ushort? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(ushort? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ushort? left, ulong? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(int? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(int? left, long? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, uint? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, byte? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, sbyte? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, short? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, ushort? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, int? right) . Performs bitwise Xor operation on two given values. ulong? Xor(uint? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(uint? left, ulong? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, long? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, byte? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, sbyte? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, short? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, ushort? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, int? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, uint? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, ulong? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, byte? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, ushort? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, uint? right) . Performs bitwise Xor operation on two given values. byte[] GetBytes(string? content) . Gets the bytes from the given string. byte[] GetBytes(string? content, int length, int offset) . Gets the bytes from the given string within given offset and length. byte?[]? GetBytes(char? character) . Gets the bytes from the given character. byte?[]? GetBytes(bool? bit) . Gets the bytes from the given boolean. byte?[]? GetBytes(long? value) . Gets the bytes from the given long. byte?[]? GetBytes(int? value) . Gets the bytes from the given int. byte?[]? GetBytes(short? value) . Gets the bytes from the given short. byte?[]? GetBytes(ulong? value) . Gets the bytes from the given ulong. byte?[]? GetBytes(ushort? value) . Gets the bytes from the given ushort. byte?[]? GetBytes(uint? value) . Gets the bytes from the given uint. byte?[]? GetBytes(Decimal? value) . Gets the bytes from the given decimal. byte?[]? GetBytes(double? value) . Gets the bytes from the given double. byte?[]? GetBytes(float? value) . Gets the bytes from the given float. string? ToBin(byte?[]? bytes, string delimiter) . Converts given bytes to binary with defined delimiter . string ToBin&lt;T&gt;(T value) . Converts given value to binary . string ToOcta&lt;T&gt;(T value) . Converts given value to octal . string ToDec&lt;T&gt;(T value) . Converts given value to decimal . string ToBase64(byte[] value) . Converts given value to string . string ToBase64(byte[] value, int offset, int length) . Converts given array of bytes to string . byte[] FromBase64(string value) . Converts given string to bytes array . bool FromBytesToBool(byte[] value) . Converts bytes to boolean value. short FromBytesToInt16(byte[] value) . Converts bytes to a 16-bit signed integer. ushort FromBytesToUInt16(byte[] value) . Converts bytes to a 16-bit unsigned integer. int FromBytesToInt32(byte[] value) . Converts bytes to a 32-bit signed integer. uint FromBytesToUInt32(byte[] value) . Converts bytes to a 32-bit unsigned integer. long FromBytesToInt64(byte[] value) . Converts bytes to a 64-bit signed integer. ulong FromBytesToUInt64(byte[] value) . Converts bytes to a 64-bit unsigned integer. float FromBytesToFloat(byte[] value) . Converts bytes to a float value. double FromBytesToDouble(byte[] value) . Converts bytes to a float value. string FromBytesToString(byte[] value) . Converts bytes to a string. byte[] ToBytes(bool value) . Converts boolean value to bytes. byte[] ToBytes(short value) . Converts short value to bytes. byte[] ToBytes(ushort value) . Converts ushort value to bytes. byte[] ToBytes(int value) . Converts int value to bytes. byte[] ToBytes(uint value) . Converts uint value to bytes. byte[] ToBytes(long value) . Converts long value to bytes. byte[] ToBytes(ulong value) . Converts long value to bytes. string? ToHex(byte?[]? bytes, string delimiter) . Converts given bytes to hex with defined delimiter . string? ToHex&lt;T&gt;(T value) . Converts given value to binary . int Count(string name) . Gets the count value of a given group. int Count(string name, int parent) . Gets the count value of a given group. int ExtractFromDate(string? date, string partOfDate) . Extracts part of the date from the date . int ExtractFromDate(string date, string culture, string partOfDate) . Extracts part of the date from the date based on given culture . DateTimeOffset? GetDate() . Gets the current datetime . DateTimeOffset? UtcGetDate() . Gets the current datetime in UTC . int? Month(DateTimeOffset? value) . Gets the month from DateTimeOffset . int? Year(DateTimeOffset? value) . Gets the year from DateTimeOffset . int? Day(DateTimeOffset? value) . Gets the day from DateTimeOffset . int? Hour(DateTimeOffset? value) . Gets the hour from DateTimeOffset . int? Minute(DateTimeOffset? value) . Gets the minute from DateTimeOffset . int? Second(DateTimeOffset? value) . Gets the second from DateTimeOffset . int? Milliseconds(DateTimeOffset? value) . Gets the millisecond from DateTimeOffset . int? DayOfWeek(DateTimeOffset? value) . Gets the day of week from DateTimeOffset . TimeSpan? ExtractTimeSpan(DateTimeOffset? dateTimeOffset) . Extracts time from DateTimeOffset . DateTime? ToDateTimeOffset(string value) . Converts given value to DateTimeOffset . DateTimeOffset? ToDateTimeOffset(string value, string culture) . Converts given value to DateTimeOffset . IEnumerable&lt;T&gt;? Skip&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? skipCount) . Skips elements from the beginning of the sequence. IEnumerable&lt;T&gt;? Take&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? takeCount) . Takes elements from the beginning of the sequence. IEnumerable&lt;T&gt;? SkipAndTake&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? skipCount, int? takeCount) . Skip and takes elements from the beginning of the sequence. T[]? EnumerableToArray&lt;T&gt;(IEnumerable&lt;T&gt;? values) . Turn array arguments of T into a single array. T[]? MergeArrays&lt;T&gt;(T[][]? values) . Turn array arguments of T into a single array. IEnumerable&lt;T&gt;? LongestCommonSequence&lt;T&gt;(IEnumerable&lt;T&gt;? source, IEnumerable&lt;T&gt;? pattern) . Computes longest common sequence of two given sequences . T? GetElementAtOrDefault&lt;T&gt;(IEnumerable&lt;T&gt;? enumerable, int? index) . Gets the element at the specified index in a sequence . int? Length&lt;T&gt;(IEnumerable&lt;T&gt;? enumerable) . Gets the length of the sequence . int? Length&lt;T&gt;(T[]? array) . Gets the length of the array . T? Choose&lt;T&gt;(int? index, T[] values) . Gets the value of an array at the specified index . T If&lt;T&gt;(bool expressionResult, T a, T b) . Chose a or b value based on the expression result . bool? Match(string? regex, string? content) . Determine whether content matches the specified pattern . byte? Coalesce(byte?[] array) . Gets the first non-null value in a list . sbyte? Coalesce(sbyte?[] array) . Gets the first non-null value in a list . short? Coalesce(short?[] array) . Gets the first non-null value in a list . ushort? Coalesce(ushort?[] array) . Gets the first non-null value in a list . int? Coalesce(int?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(uint?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(long?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(ulong?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(Decimal?[] array) . Gets the first non-null value in a list . T? Coalesce&lt;T&gt;(T[] array) . Gets the first non-null value in a list . IEnumerable&lt;T&gt;? Distinct&lt;T&gt;(IEnumerable&lt;T&gt;? values) . Returns distinct elements from a collection. string? Md5(string? content) . Gets the md5 hash of the given string. string? Md5(byte?[]? content) . Gets the md5 hash of the given bytes array. string? Sha1(string? content) . Gets the sha256 hash of the given string. string? Sha1(byte?[]? content) . Gets the sha256 hash of the given bytes array. string? Sha256(string? content) . Gets the sha256 hash of the given string. string? Sha256(byte?[]? content) . Gets the sha256 hash of the given bytes array. string? Sha512(string? content) . Gets the sha256 hash of the given string. string? Sha512(byte?[]? content) . Gets the sha256 hash of the bytes array. string? ToJson&lt;T&gt;(T? obj) . Converts object to json. string[] ExtractFromJsonToArray(string? json, string? path) . Extracts values from json by path. string? ExtractFromJson(string? json, string? path) . Extracts values from json by path and joins them with comma. Decimal? Abs(Decimal? value) . Gets the absolute value . long? Abs(long? value) . Gets the absolute value . int? Abs(int? value) . Gets the absolute value . Decimal? Ceil(Decimal? value) . Gets the ceiling value . Decimal? Floor(Decimal? value) . Gets the floor value . Decimal? Sign(Decimal? value) . Determine whether value is greater, equal or less that zero . long? Sign(long? value) . Determine whether value is greater, equal or less that zero . Decimal? Round(Decimal? value, int precision) . Rounds the value within given precision . Decimal? PercentOf(Decimal? value, Decimal? max) . Gets the percentage of the value . int Rand() . Gets the random integer value . int? Rand(int? min, int? max) . Gets the random integer value . double? Pow(Decimal? x, Decimal? y) . Computes the pow between two values . double? Pow(double? x, double? y) . Computes the pow between two values . double? Sqrt(Decimal? x) . Computes the sqrt of a given value . double? Sqrt(double? x) . Computes the sqrt of a given value . double? Sqrt(long? x) . Computes the sqrt of a given value . double? PercentRank&lt;T&gt;(IEnumerable&lt;T&gt;? window, T? value) . Computes the percent rank of a given window . double? Log(Decimal? base, Decimal? value) . Calculates the logarithm of a value with a specified base. Decimal? Sin(Decimal? value) . Calculates sine of a value. double? Sin(double? value) . Calculates sine of a value. float? Sin(float? value) . Calculates sine of a value. Decimal? Cos(Decimal? value) . Calculates cosine of a value. double? Cos(double? value) . Calculates cosine of a value. float? Cos(float? value) . Calculates cosine of a value. Decimal Max(string name) . Gets the max value of a given group. Decimal Max(string name, int parent) . Gets the max value of a given group. Decimal Min(string name) . Gets the min value of a given group. Decimal Min(string name, int parent) . Gets the min value of a given group. Decimal StDev(string name, int parent) . Gets the StDev value of a given group. string NewId() . Gets the new identifier . string? Trim(string? value) . Removes leading and trailing whitespace from a string. string? TrimStart(string? value) . Removes leading whitespace from a string. string? TrimEnd(string? value) . Removes trailing whitespace from a string. string? Substring(string? value, int? index, int? length) . Gets the substring from the string. string? Substring(string value, int? length) . Gets the substring from the string . string? Concat(string[]? strings) . Concatenates the specified values . string? Concat(char?[]? characters) . Concatenates the specified characters . string? Concat(string? firstString, char?[]? chars) . Concatenates specified string fir characters . string? Concat(char? firstChar, string[]? strings) . Concatenate specific character with strings . string? Concat(object[]? objects) . Concatenates the specified strings . string? Concat&lt;T&gt;(T[]? objects) . Concatenates the specified strings . bool? Contains(string? content, string? what) . Determine whether the string contains the specified value . int? IndexOf(string? value, string? text) . Position of the first occurrence of the specified value . string? Soundex(string? value) . Computes soundex for the specified value . bool HasFuzzyMatchedWord(string text, string word, string separator) . Matches the specified text by splitting it with separator and applying fuzzy comparison . bool HasWordThatHasSmallerLevenshteinDistanceThan(string text, string word, int distance, string separator) . Matches the specified text by splitting it with separator and applying fuzzy comparison with a given distance . bool HasWordThatSoundLike(string text, string word, string separator) . Matches whether the specified word is present after being fuzzified within the specified text . bool HasTextThatSoundLikeSentence(string text, string sentence, string separator) . Matches whether the specified text is present in sentence after being fuzified . string? ToUpper(string value) . Makes the string uppercase . string? ToUpper(string value, string culture) . Makes the string uppercase within specified culture . string? ToUpperInvariant(string value) . Makes the string uppercase . string? ToLower(string value) . Makes the string lowercase . string? ToLower(string value, string culture) . Makes the string lowercase within specified culture . string? ToLowerInvariant(string value) . Makes the string lowercase . string? PadLeft(string? value, string? character, int? totalWidth) . Returns a new string that right-aligns the characters in this instance by padding them on the left with a specified Unicode character, for a specified total lengt . string? PadRight(string? value, string? character, int? totalWidth) . Returns a new string that left-aligns the characters in this instance by padding them on the right with a specified Unicode character, for a specified total length . string? Head(string? value, int? length) . Gets the first N characters of the string . string? Tail(string? value, int? length) . Gets the last N characters of the string . int? LevenshteinDistance(string? firstValue, string? secondValue) . Computes the Levenshtein distance between two strings . char? GetCharacterOf(string value, int index) . Gets the character at specified index . string? Reverse(string? value) . Reverses the string . string[] Split(string value, string[] separators) . Splits the string into an array of substrings based on the specified separators . char[] ToCharArray(string value) . Splits the string into an array of characters . string? LongestCommonSubstring(string source, string pattern) . Computes the longest common subsequence between two source and pattern . string Replicate(string value, int integer) . Clones the value n times . string? Translate(string? value, string? characters, string? translations) . Returns the string from the first argument after the characters specified in the second argument are translated into the characters specified in the third argument. string? Replace(string? text, string lookFor, string? changeTo) . Replaces the first occurrence of a specified string in this instance with another specified string . string? ToTitleCase(string? value) . Capitalizes the first letter of the string . string? GetNthWord(string? text, int? wordIndex, string? separator) . Gets the nth word of the string . string? GetFirstWord(string text, string separator) . Gets the first word of the string . string? GetSecondWord(string text, string separator) . Gets the second word of the string . string? GetThirdWord(string text, string separator) . Gets the third word of the string . string? GetLastWord(string? text, string? separator) . Gets last word of the string . bool? IsNullOrEmpty(string? value) . Determines whether the string is null or empty . bool? IsNullOrWhiteSpace(string? value) . Determines whether the string is null or whitespace . string? UrlEncode(string? value) . Encodes the value . string? UrlDecode(string? value) . Decodes the value . string? UriEncode(string? value) . Encodes the value . string? UriDecode(string? value) . Decodes the value . bool? StartsWith(string? value, string? prefix) . Determines whether the string starts with the specified prefix . bool? StartsWith(string? value, string? prefix, string comparison) . Determines whether the string starts with the specified prefix . bool? EndsWith(string? value, string? suffix) . Determines whether the string ends with the specified suffix . bool? EndsWith(string? value, string? suffix, string comparison) . Determines whether the string ends with the specified suffix . string? RegexReplace(string? value, string? pattern, string? replacement) . Replace the specified value part that matches the pattern with the replacement . string[]? SplitByLinuxNewLines(string? input) . Split string by Linux-style newlines (\\n) . string[]? SplitByWindowsNewLines(string? input) . Split string by Windows-style newlines (\\r\\n) . string[]? SplitByNewLines(string? input) . Smart split that handles both Windows (\\r\\n) and Linux (\\n) newlines . Decimal Sum(string name) . Gets the sum value of a given group. Decimal Sum(string name, int parent) . Gets the sum value of a given group. Decimal SumIncome(string name) . Gets the sum value of a given group. Decimal SumIncome(string name, int parent) . Gets the sum value of a given group. Decimal SumOutcome(string name) . Gets the outcome value of a given group. Decimal SumOutcome(string name, int parent) . Gets the outcome value of a given group. TimeSpan? SumTimeSpan(string name) . Gets the sum value of a given group. TimeSpan? SumTimeSpan(string name, int parent) . Gets the sum value of a given group. TimeSpan? MinTimeSpan(string name) . Gets the min value of a given group. TimeSpan? MinTimeSpan(string name, int parent) . Gets the min value of a given group. TimeSpan? MaxTimeSpan(string name) . Gets the max value of a given group. TimeSpan? MaxTimeSpan(string name, int parent) . Gets the min value of a given group. char? ToChar(string? value) . Converts given value to character . char? ToChar(int? value) . Converts given value to character . char? ToChar(short? value) . Converts given value to character . char? ToChar(byte? value) . Converts given value to character . char? ToChar(object? value) . Converts given value to character . DateTime? ToDateTime(string value) . Converts given value to DateTime . DateTime? ToDateTime(string value, string culture) . Converts given value to DateTime . Decimal? ToDecimal(string? value) . Converts given value to decimal . Decimal? ToDecimal(string value, string culture) . Converts given value to decimal withing given culture . Decimal? ToDecimal(byte? value) . Converts given value to Decimal . Decimal? ToDecimal(sbyte? value) . Converts given value to Decimal . Decimal? ToDecimal(short? value) . Converts given value to Decimal . Decimal? ToDecimal(ushort? value) . Converts given value to Decimal . Decimal? ToDecimal(long? value) . Converts given value to Decimal . Decimal? ToDecimal(ulong? value) . Converts given value to Decimal . Decimal? ToDecimal(float? value) . Converts given value to Decimal . Decimal? ToDecimal(double? value) . Converts given value to Decimal . Decimal? ToDecimal(object? value) . Converts given value to Decimal . double? ToDouble(object? value) . Converts given value to double . double? ToDouble(string? value) . Converts given value to double . double? ToDouble(byte? value) . Converts given value to double . double? ToDouble(sbyte? value) . Converts given value to double . double? ToDouble(short? value) . Converts given value to double . double? ToDouble(ushort? value) . Converts given value to double . double? ToDouble(int? value) . Converts given value to double . double? ToDouble(uint? value) . Converts given value to double . double? ToDouble(long? value) . Converts given value to double . double? ToDouble(ulong? value) . Converts given value to double . double? ToDouble(float? value) . Converts given value to double . double? ToDouble(double? value) . Converts given value to double . double? ToDouble(Decimal? value) . Converts given value to double . float? ToFloat(string? value) . Converts given value to float . float? ToFloat(byte? value) . Converts given value to float . float? ToFloat(sbyte? value) . Converts given value to float . float? ToFloat(short? value) . Converts given value to float . float? ToFloat(ushort? value) . Converts given value to float . float? ToFloat(int? value) . Converts given value to float . float? ToFloat(uint? value) . Converts given value to float . float? ToFloat(long? value) . Converts given value to float . float? ToFloat(ulong? value) . Converts given value to float . float? ToFloat(float? value) . Converts given value to float . float? ToFloat(Decimal? value) . Converts given value to float . int? ToInt32(string value) . Converts given value to int . int? ToInt32(byte? value) . Converts given value to int . int? ToInt32(sbyte? value) . Converts given value to int . int? ToInt32(short? value) . Converts given value to int . int? ToInt32(ushort? value) . Converts given value to int . int? ToInt32(int? value) . Converts given value to int . int? ToInt32(uint? value) . Converts given value to int . int? ToInt32(long? value) . Converts given value to int . int? ToInt32(ulong? value) . Converts given value to int . int? ToInt32(float? value) . Converts given value to int . int? ToInt32(double? value) . Converts given value to int . int? ToInt32(Decimal? value) . Converts given value to int . int? ToInt32(object? value) . Converts given value to int . long? ToInt64(string value) . Converts given value to Int64 . long? ToInt64(byte? value) . Converts given value to long . long? ToInt64(sbyte? value) . Converts given value to long . long? ToInt64(short? value) . Converts given value to long . long? ToInt64(ushort? value) . Converts given value to long . long? ToInt64(int? value) . Converts given value to long . long? ToInt64(uint? value) . Converts given value to long . long? ToInt64(long? value) . Converts given value to long . long? ToInt64(ulong? value) . Converts given value to long . long? ToInt64(float? value) . Converts given value to long . long? ToInt64(double? value) . Converts given value to long . long? ToInt64(Decimal? value) . Converts given value to long . long? ToInt64(object? value) . Converts given value to long . string? ToString(char? value) . Converts given value to string . string? ToString(DateTimeOffset? value) . Converts given value to string . string? ToString(DateTimeOffset? value, string format) . Converts given value to string . string? ToString(byte? value) . Converts given value to string . string? ToString(byte? value, string format) . Converts given value to string . string? ToString(sbyte? value) . Converts given value to string . string? ToString(sbyte? value, string format) . Converts given value to string . string? ToString(int? value) . Converts given value to string . string? ToString(int? value, string format) . Converts given value to string . string? ToString(uint? value) . Converts given value to string . string? ToString(uint? value, string format) . Converts given value to string . string? ToString(long? value) . Converts given value to string . string? ToString(long? value, string format) . Converts given value to string . string? ToString(ulong? value) . Converts given value to string . string? ToString(ulong? value, string format) . Converts given value to string . string? ToString(float? value) . Converts given value to string . string? ToString(float? value, string format) . Converts given value to string . string? ToString(double? value) . Converts given value to string . string? ToString(double? value, string format) . Converts given value to string . string? ToString(Decimal? value) . Converts given value to string . string? ToString(Decimal? value, string format) . Converts given value to string . string? ToString(bool? value) . Converts given value to string . string? ToString(object? value) . Converts given value to string . string? ToString&lt;T&gt;(T? value) . Converts given value to string . string ToString(string[] value) . Converts given value to string . string ToString&lt;T&gt;(T[] value) . Converts given value to string . TimeSpan? ToTimeSpan(string value) . Converts given value to TimeSpan . TimeSpan? ToTimeSpan(string value, string culture) . Converts given value to TimeSpan . IEnumerable&lt;T&gt; Window&lt;T&gt;(string name) . Gets the window . ",
    "url": "/data-sources/Kubernetes/linux-arm64.html#base-methods",
    
    "relUrl": "/data-sources/Kubernetes/linux-arm64.html#base-methods"
  },"86": {
    "doc": "Linux Arm64",
    "title": "Linux Arm64",
    "content": " ",
    "url": "/data-sources/Kubernetes/linux-arm64.html",
    
    "relUrl": "/data-sources/Kubernetes/linux-arm64.html"
  },"87": {
    "doc": "Linux Arm64",
    "title": "Musoq.DataSources.Postgres",
    "content": "Provides schema to work with postgres database . ",
    "url": "/data-sources/Postgres/linux-arm64.html#musoqdatasourcespostgres",
    
    "relUrl": "/data-sources/Postgres/linux-arm64.html#musoqdatasourcespostgres"
  },"88": {
    "doc": "Linux Arm64",
    "title": "Tables",
    "content": "Table is a collection of rows and columns that the plugin exposes. Below are the tables that are exposed by this data source. postgres.tableName(‘schemaName’) . Gives ability to process sqlite table . Environment variables . In order to use the plugin, the user must set any required environment variables as specified in the environments element. Failure to do so may result in the plugin not functioning correctly. | Name | Is required | Description | . | NPGSQL_CONNECTION_STRING | true | Postgres connections string | . Columns . This table has a dynamic structure, which means that its columns and other details cannot be determined until runtime. As a result, it is not possible to include a complete description of this table in the documentation. Instead, the actual columns and other details of this table will be determined at runtime. ",
    "url": "/data-sources/Postgres/linux-arm64.html#tables",
    
    "relUrl": "/data-sources/Postgres/linux-arm64.html#tables"
  },"89": {
    "doc": "Linux Arm64",
    "title": "Base Methods",
    "content": "Base methods are methods that can be called on the data source specific column. Those methods are automatically inherited and enriches the data source specific methods. Below are those base methods that are exposed by this data source. int RowNumber() . Gets the row number of the current row. string? GetTypeName(object? obj) . Gets the typename of passed object. string AggregateValues(string name) . Aggregates values into a single value. string AggregateValues(string name, int parent) . Aggregates values into a single value. Decimal Avg(string name) . Gets the aggregated average value from the given group name . Decimal Avg(string name, int parent) . Gets the aggregated average value from the given group name . byte? ShiftLeft(byte? value, int shift) . Shifts the value to the left by the specified number of bits. short? ShiftLeft(short? value, int shift) . Shifts the value to the left by the specified number of bits. int? ShiftLeft(int? value, int shift) . Shifts the value to the left by the specified number of bits. long? ShiftLeft(long? value, int shift) . Shifts the value to the left by the specified number of bits. sbyte? ShiftLeft(sbyte? value, int shift) . Shifts the value to the left by the specified number of bits. ushort? ShiftLeft(ushort? value, int shift) . Shifts the value to the left by the specified number of bits. uint? ShiftLeft(uint? value, int shift) . Shifts the value to the left by the specified number of bits. ulong? ShiftLeft(ulong? value, int shift) . Shifts the value to the left by the specified number of bits. byte? ShiftRight(byte? value, int shift) . Shifts the value to the right by the specified number of bits. short? ShiftRight(short? value, int shift) . Shifts the value to the right by the specified number of bits. int? ShiftRight(int? value, int shift) . Shifts the value to the right by the specified number of bits. long? ShiftRight(long? value, int shift) . Shifts the value to the right by the specified number of bits. sbyte? ShiftRight(sbyte? value, int shift) . Shifts the value to the right by the specified number of bits. ushort? ShiftRight(ushort? value, int shift) . Shifts the value to the right by the specified number of bits. uint? ShiftRight(uint? value, int shift) . Shifts the value to the right by the specified number of bits. ulong? ShiftRight(ulong? value, int shift) . Shifts the value to the right by the specified number of bits. byte? Not(byte? value) . Performs bitwise NOT operation on a given value. short? Not(short? value) . Performs bitwise NOT operation on a given value. int? Not(int? value) . Performs bitwise NOT operation on a given value. long? Not(long? value) . Performs bitwise NOT operation on a given value. sbyte? Not(sbyte? value) . Performs bitwise NOT operation on a given value. ushort? Not(ushort? value) . Performs bitwise NOT operation on a given value. uint? Not(uint? value) . Performs bitwise NOT operation on a given value. ulong? Not(ulong? value) . Performs bitwise NOT operation on a given value. byte? And(byte? left, byte? right) . Performs bitwise AND operation on two given values. int? And(byte? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(byte? left, short? right) . Performs bitwise AND operation on two given values. int? And(byte? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(byte? left, int? right) . Performs bitwise AND operation on two given values. uint? And(byte? left, uint? right) . Performs bitwise AND operation on two given values. long? And(byte? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(byte? left, ulong? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, byte? right) . Performs bitwise AND operation on two given values. sbyte? And(sbyte? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, short? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, int? right) . Performs bitwise AND operation on two given values. uint? And(sbyte? left, uint? right) . Performs bitwise AND operation on two given values. long? And(sbyte? left, long? right) . Performs bitwise AND operation on two given values. int? And(short? left, byte? right) . Performs bitwise AND operation on two given values. int? And(short? left, sbyte? right) . Performs bitwise AND operation on two given values. short? And(short? left, short? right) . Performs bitwise AND operation on two given values. int? And(short? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(short? left, int? right) . Performs bitwise AND operation on two given values. uint? And(short? left, uint? right) . Performs bitwise AND operation on two given values. long? And(short? left, long? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, byte? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, short? right) . Performs bitwise AND operation on two given values. ushort? And(ushort? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, int? right) . Performs bitwise AND operation on two given values. uint? And(ushort? left, uint? right) . Performs bitwise AND operation on two given values. long? And(ushort? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(ushort? left, ulong? right) . Performs bitwise AND operation on two given values. int? And(int? left, byte? right) . Performs bitwise AND operation on two given values. int? And(int? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(int? left, short? right) . Performs bitwise AND operation on two given values. int? And(int? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(int? left, int? right) . Performs bitwise AND operation on two given values. uint? And(int? left, uint? right) . Performs bitwise AND operation on two given values. long? And(int? left, long? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, uint? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, byte? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, sbyte? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, short? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, ushort? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, int? right) . Performs bitwise AND operation on two given values. ulong? And(uint? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(uint? left, ulong? right) . Performs bitwise AND operation on two given values. long? And(long? left, long? right) . Performs bitwise AND operation on two given values. long? And(long? left, byte? right) . Performs bitwise AND operation on two given values. long? And(long? left, sbyte? right) . Performs bitwise AND operation on two given values. long? And(long? left, short? right) . Performs bitwise AND operation on two given values. long? And(long? left, ushort? right) . Performs bitwise AND operation on two given values. long? And(long? left, int? right) . Performs bitwise AND operation on two given values. long? And(long? left, uint? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, byte? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, ushort? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, uint? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, ulong? right) . Performs bitwise AND operation on two given values. byte? Or(byte? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, short? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(byte? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(byte? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(byte? left, ulong? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, byte? right) . Performs bitwise OR operation on two given values. sbyte? Or(sbyte? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, short? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(sbyte? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(sbyte? left, long? right) . Performs bitwise OR operation on two given values. int? Or(short? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(short? left, sbyte? right) . Performs bitwise OR operation on two given values. short? Or(short? left, short? right) . Performs bitwise OR operation on two given values. int? Or(short? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(short? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(short? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(short? left, long? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, short? right) . Performs bitwise OR operation on two given values. ushort? Or(ushort? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(ushort? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(ushort? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(ushort? left, ulong? right) . Performs bitwise OR operation on two given values. int? Or(int? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(int? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(int? left, short? right) . Performs bitwise OR operation on two given values. int? Or(int? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(int? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(int? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(int? left, long? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, uint? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, byte? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, sbyte? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, short? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, ushort? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, int? right) . Performs bitwise OR operation on two given values. ulong? Or(uint? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(uint? left, ulong? right) . Performs bitwise OR operation on two given values. long? Or(long? left, long? right) . Performs bitwise OR operation on two given values. long? Or(long? left, byte? right) . Performs bitwise OR operation on two given values. long? Or(long? left, sbyte? right) . Performs bitwise OR operation on two given values. long? Or(long? left, short? right) . Performs bitwise OR operation on two given values. long? Or(long? left, ushort? right) . Performs bitwise OR operation on two given values. long? Or(long? left, int? right) . Performs bitwise OR operation on two given values. long? Or(long? left, uint? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, byte? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, ushort? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, uint? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, ulong? right) . Performs bitwise OR operation on two given values. byte? Xor(byte? left, byte? right) . Performs bitwise OR operation on two given values. int? Xor(byte? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(byte? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(byte? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(byte? left, ulong? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, byte? right) . Performs bitwise Xor operation on two given values. sbyte? Xor(sbyte? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(sbyte? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(sbyte? left, long? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, sbyte? right) . Performs bitwise Xor operation on two given values. short? Xor(short? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, ushort? right) . Performs bitwise XOR operation on two given values. int? Xor(short? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(short? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(short? left, long? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, short? right) . Performs bitwise Xor operation on two given values. ushort? Xor(ushort? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(ushort? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(ushort? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ushort? left, ulong? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(int? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(int? left, long? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, uint? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, byte? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, sbyte? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, short? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, ushort? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, int? right) . Performs bitwise Xor operation on two given values. ulong? Xor(uint? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(uint? left, ulong? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, long? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, byte? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, sbyte? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, short? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, ushort? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, int? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, uint? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, ulong? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, byte? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, ushort? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, uint? right) . Performs bitwise Xor operation on two given values. byte[] GetBytes(string? content) . Gets the bytes from the given string. byte[] GetBytes(string? content, int length, int offset) . Gets the bytes from the given string within given offset and length. byte?[]? GetBytes(char? character) . Gets the bytes from the given character. byte?[]? GetBytes(bool? bit) . Gets the bytes from the given boolean. byte?[]? GetBytes(long? value) . Gets the bytes from the given long. byte?[]? GetBytes(int? value) . Gets the bytes from the given int. byte?[]? GetBytes(short? value) . Gets the bytes from the given short. byte?[]? GetBytes(ulong? value) . Gets the bytes from the given ulong. byte?[]? GetBytes(ushort? value) . Gets the bytes from the given ushort. byte?[]? GetBytes(uint? value) . Gets the bytes from the given uint. byte?[]? GetBytes(Decimal? value) . Gets the bytes from the given decimal. byte?[]? GetBytes(double? value) . Gets the bytes from the given double. byte?[]? GetBytes(float? value) . Gets the bytes from the given float. string? ToBin(byte?[]? bytes, string delimiter) . Converts given bytes to binary with defined delimiter . string ToBin&lt;T&gt;(T value) . Converts given value to binary . string ToOcta&lt;T&gt;(T value) . Converts given value to octal . string ToDec&lt;T&gt;(T value) . Converts given value to decimal . string ToBase64(byte[] value) . Converts given value to string . string ToBase64(byte[] value, int offset, int length) . Converts given array of bytes to string . byte[] FromBase64(string value) . Converts given string to bytes array . bool FromBytesToBool(byte[] value) . Converts bytes to boolean value. short FromBytesToInt16(byte[] value) . Converts bytes to a 16-bit signed integer. ushort FromBytesToUInt16(byte[] value) . Converts bytes to a 16-bit unsigned integer. int FromBytesToInt32(byte[] value) . Converts bytes to a 32-bit signed integer. uint FromBytesToUInt32(byte[] value) . Converts bytes to a 32-bit unsigned integer. long FromBytesToInt64(byte[] value) . Converts bytes to a 64-bit signed integer. ulong FromBytesToUInt64(byte[] value) . Converts bytes to a 64-bit unsigned integer. float FromBytesToFloat(byte[] value) . Converts bytes to a float value. double FromBytesToDouble(byte[] value) . Converts bytes to a float value. string FromBytesToString(byte[] value) . Converts bytes to a string. byte[] ToBytes(bool value) . Converts boolean value to bytes. byte[] ToBytes(short value) . Converts short value to bytes. byte[] ToBytes(ushort value) . Converts ushort value to bytes. byte[] ToBytes(int value) . Converts int value to bytes. byte[] ToBytes(uint value) . Converts uint value to bytes. byte[] ToBytes(long value) . Converts long value to bytes. byte[] ToBytes(ulong value) . Converts long value to bytes. string? ToHex(byte?[]? bytes, string delimiter) . Converts given bytes to hex with defined delimiter . string? ToHex&lt;T&gt;(T value) . Converts given value to binary . int Count(string name) . Gets the count value of a given group. int Count(string name, int parent) . Gets the count value of a given group. int ExtractFromDate(string? date, string partOfDate) . Extracts part of the date from the date . int ExtractFromDate(string date, string culture, string partOfDate) . Extracts part of the date from the date based on given culture . DateTimeOffset? GetDate() . Gets the current datetime . DateTimeOffset? UtcGetDate() . Gets the current datetime in UTC . int? Month(DateTimeOffset? value) . Gets the month from DateTimeOffset . int? Year(DateTimeOffset? value) . Gets the year from DateTimeOffset . int? Day(DateTimeOffset? value) . Gets the day from DateTimeOffset . int? Hour(DateTimeOffset? value) . Gets the hour from DateTimeOffset . int? Minute(DateTimeOffset? value) . Gets the minute from DateTimeOffset . int? Second(DateTimeOffset? value) . Gets the second from DateTimeOffset . int? Milliseconds(DateTimeOffset? value) . Gets the millisecond from DateTimeOffset . int? DayOfWeek(DateTimeOffset? value) . Gets the day of week from DateTimeOffset . TimeSpan? ExtractTimeSpan(DateTimeOffset? dateTimeOffset) . Extracts time from DateTimeOffset . DateTime? ToDateTimeOffset(string value) . Converts given value to DateTimeOffset . DateTimeOffset? ToDateTimeOffset(string value, string culture) . Converts given value to DateTimeOffset . IEnumerable&lt;T&gt;? Skip&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? skipCount) . Skips elements from the beginning of the sequence. IEnumerable&lt;T&gt;? Take&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? takeCount) . Takes elements from the beginning of the sequence. IEnumerable&lt;T&gt;? SkipAndTake&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? skipCount, int? takeCount) . Skip and takes elements from the beginning of the sequence. T[]? EnumerableToArray&lt;T&gt;(IEnumerable&lt;T&gt;? values) . Turn array arguments of T into a single array. T[]? MergeArrays&lt;T&gt;(T[][]? values) . Turn array arguments of T into a single array. IEnumerable&lt;T&gt;? LongestCommonSequence&lt;T&gt;(IEnumerable&lt;T&gt;? source, IEnumerable&lt;T&gt;? pattern) . Computes longest common sequence of two given sequences . T? GetElementAtOrDefault&lt;T&gt;(IEnumerable&lt;T&gt;? enumerable, int? index) . Gets the element at the specified index in a sequence . int? Length&lt;T&gt;(IEnumerable&lt;T&gt;? enumerable) . Gets the length of the sequence . int? Length&lt;T&gt;(T[]? array) . Gets the length of the array . T? Choose&lt;T&gt;(int? index, T[] values) . Gets the value of an array at the specified index . T If&lt;T&gt;(bool expressionResult, T a, T b) . Chose a or b value based on the expression result . bool? Match(string? regex, string? content) . Determine whether content matches the specified pattern . byte? Coalesce(byte?[] array) . Gets the first non-null value in a list . sbyte? Coalesce(sbyte?[] array) . Gets the first non-null value in a list . short? Coalesce(short?[] array) . Gets the first non-null value in a list . ushort? Coalesce(ushort?[] array) . Gets the first non-null value in a list . int? Coalesce(int?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(uint?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(long?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(ulong?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(Decimal?[] array) . Gets the first non-null value in a list . T? Coalesce&lt;T&gt;(T[] array) . Gets the first non-null value in a list . IEnumerable&lt;T&gt;? Distinct&lt;T&gt;(IEnumerable&lt;T&gt;? values) . Returns distinct elements from a collection. string? Md5(string? content) . Gets the md5 hash of the given string. string? Md5(byte?[]? content) . Gets the md5 hash of the given bytes array. string? Sha1(string? content) . Gets the sha256 hash of the given string. string? Sha1(byte?[]? content) . Gets the sha256 hash of the given bytes array. string? Sha256(string? content) . Gets the sha256 hash of the given string. string? Sha256(byte?[]? content) . Gets the sha256 hash of the given bytes array. string? Sha512(string? content) . Gets the sha256 hash of the given string. string? Sha512(byte?[]? content) . Gets the sha256 hash of the bytes array. string? ToJson&lt;T&gt;(T? obj) . Converts object to json. string[] ExtractFromJsonToArray(string? json, string? path) . Extracts values from json by path. string? ExtractFromJson(string? json, string? path) . Extracts values from json by path and joins them with comma. Decimal? Abs(Decimal? value) . Gets the absolute value . long? Abs(long? value) . Gets the absolute value . int? Abs(int? value) . Gets the absolute value . Decimal? Ceil(Decimal? value) . Gets the ceiling value . Decimal? Floor(Decimal? value) . Gets the floor value . Decimal? Sign(Decimal? value) . Determine whether value is greater, equal or less that zero . long? Sign(long? value) . Determine whether value is greater, equal or less that zero . Decimal? Round(Decimal? value, int precision) . Rounds the value within given precision . Decimal? PercentOf(Decimal? value, Decimal? max) . Gets the percentage of the value . int Rand() . Gets the random integer value . int? Rand(int? min, int? max) . Gets the random integer value . double? Pow(Decimal? x, Decimal? y) . Computes the pow between two values . double? Pow(double? x, double? y) . Computes the pow between two values . double? Sqrt(Decimal? x) . Computes the sqrt of a given value . double? Sqrt(double? x) . Computes the sqrt of a given value . double? Sqrt(long? x) . Computes the sqrt of a given value . double? PercentRank&lt;T&gt;(IEnumerable&lt;T&gt;? window, T? value) . Computes the percent rank of a given window . double? Log(Decimal? base, Decimal? value) . Calculates the logarithm of a value with a specified base. Decimal? Sin(Decimal? value) . Calculates sine of a value. double? Sin(double? value) . Calculates sine of a value. float? Sin(float? value) . Calculates sine of a value. Decimal? Cos(Decimal? value) . Calculates cosine of a value. double? Cos(double? value) . Calculates cosine of a value. float? Cos(float? value) . Calculates cosine of a value. Decimal Max(string name) . Gets the max value of a given group. Decimal Max(string name, int parent) . Gets the max value of a given group. Decimal Min(string name) . Gets the min value of a given group. Decimal Min(string name, int parent) . Gets the min value of a given group. Decimal StDev(string name, int parent) . Gets the StDev value of a given group. string NewId() . Gets the new identifier . string? Trim(string? value) . Removes leading and trailing whitespace from a string. string? TrimStart(string? value) . Removes leading whitespace from a string. string? TrimEnd(string? value) . Removes trailing whitespace from a string. string? Substring(string? value, int? index, int? length) . Gets the substring from the string. string? Substring(string value, int? length) . Gets the substring from the string . string? Concat(string[]? strings) . Concatenates the specified values . string? Concat(char?[]? characters) . Concatenates the specified characters . string? Concat(string? firstString, char?[]? chars) . Concatenates specified string fir characters . string? Concat(char? firstChar, string[]? strings) . Concatenate specific character with strings . string? Concat(object[]? objects) . Concatenates the specified strings . string? Concat&lt;T&gt;(T[]? objects) . Concatenates the specified strings . bool? Contains(string? content, string? what) . Determine whether the string contains the specified value . int? IndexOf(string? value, string? text) . Position of the first occurrence of the specified value . string? Soundex(string? value) . Computes soundex for the specified value . bool HasFuzzyMatchedWord(string text, string word, string separator) . Matches the specified text by splitting it with separator and applying fuzzy comparison . bool HasWordThatHasSmallerLevenshteinDistanceThan(string text, string word, int distance, string separator) . Matches the specified text by splitting it with separator and applying fuzzy comparison with a given distance . bool HasWordThatSoundLike(string text, string word, string separator) . Matches whether the specified word is present after being fuzzified within the specified text . bool HasTextThatSoundLikeSentence(string text, string sentence, string separator) . Matches whether the specified text is present in sentence after being fuzified . string? ToUpper(string value) . Makes the string uppercase . string? ToUpper(string value, string culture) . Makes the string uppercase within specified culture . string? ToUpperInvariant(string value) . Makes the string uppercase . string? ToLower(string value) . Makes the string lowercase . string? ToLower(string value, string culture) . Makes the string lowercase within specified culture . string? ToLowerInvariant(string value) . Makes the string lowercase . string? PadLeft(string? value, string? character, int? totalWidth) . Returns a new string that right-aligns the characters in this instance by padding them on the left with a specified Unicode character, for a specified total lengt . string? PadRight(string? value, string? character, int? totalWidth) . Returns a new string that left-aligns the characters in this instance by padding them on the right with a specified Unicode character, for a specified total length . string? Head(string? value, int? length) . Gets the first N characters of the string . string? Tail(string? value, int? length) . Gets the last N characters of the string . int? LevenshteinDistance(string? firstValue, string? secondValue) . Computes the Levenshtein distance between two strings . char? GetCharacterOf(string value, int index) . Gets the character at specified index . string? Reverse(string? value) . Reverses the string . string[] Split(string value, string[] separators) . Splits the string into an array of substrings based on the specified separators . char[] ToCharArray(string value) . Splits the string into an array of characters . string? LongestCommonSubstring(string source, string pattern) . Computes the longest common subsequence between two source and pattern . string Replicate(string value, int integer) . Clones the value n times . string? Translate(string? value, string? characters, string? translations) . Returns the string from the first argument after the characters specified in the second argument are translated into the characters specified in the third argument. string? Replace(string? text, string lookFor, string? changeTo) . Replaces the first occurrence of a specified string in this instance with another specified string . string? ToTitleCase(string? value) . Capitalizes the first letter of the string . string? GetNthWord(string? text, int? wordIndex, string? separator) . Gets the nth word of the string . string? GetFirstWord(string text, string separator) . Gets the first word of the string . string? GetSecondWord(string text, string separator) . Gets the second word of the string . string? GetThirdWord(string text, string separator) . Gets the third word of the string . string? GetLastWord(string? text, string? separator) . Gets last word of the string . bool? IsNullOrEmpty(string? value) . Determines whether the string is null or empty . bool? IsNullOrWhiteSpace(string? value) . Determines whether the string is null or whitespace . string? UrlEncode(string? value) . Encodes the value . string? UrlDecode(string? value) . Decodes the value . string? UriEncode(string? value) . Encodes the value . string? UriDecode(string? value) . Decodes the value . bool? StartsWith(string? value, string? prefix) . Determines whether the string starts with the specified prefix . bool? StartsWith(string? value, string? prefix, string comparison) . Determines whether the string starts with the specified prefix . bool? EndsWith(string? value, string? suffix) . Determines whether the string ends with the specified suffix . bool? EndsWith(string? value, string? suffix, string comparison) . Determines whether the string ends with the specified suffix . string? RegexReplace(string? value, string? pattern, string? replacement) . Replace the specified value part that matches the pattern with the replacement . string[]? SplitByLinuxNewLines(string? input) . Split string by Linux-style newlines (\\n) . string[]? SplitByWindowsNewLines(string? input) . Split string by Windows-style newlines (\\r\\n) . string[]? SplitByNewLines(string? input) . Smart split that handles both Windows (\\r\\n) and Linux (\\n) newlines . Decimal Sum(string name) . Gets the sum value of a given group. Decimal Sum(string name, int parent) . Gets the sum value of a given group. Decimal SumIncome(string name) . Gets the sum value of a given group. Decimal SumIncome(string name, int parent) . Gets the sum value of a given group. Decimal SumOutcome(string name) . Gets the outcome value of a given group. Decimal SumOutcome(string name, int parent) . Gets the outcome value of a given group. TimeSpan? SumTimeSpan(string name) . Gets the sum value of a given group. TimeSpan? SumTimeSpan(string name, int parent) . Gets the sum value of a given group. TimeSpan? MinTimeSpan(string name) . Gets the min value of a given group. TimeSpan? MinTimeSpan(string name, int parent) . Gets the min value of a given group. TimeSpan? MaxTimeSpan(string name) . Gets the max value of a given group. TimeSpan? MaxTimeSpan(string name, int parent) . Gets the min value of a given group. char? ToChar(string? value) . Converts given value to character . char? ToChar(int? value) . Converts given value to character . char? ToChar(short? value) . Converts given value to character . char? ToChar(byte? value) . Converts given value to character . char? ToChar(object? value) . Converts given value to character . DateTime? ToDateTime(string value) . Converts given value to DateTime . DateTime? ToDateTime(string value, string culture) . Converts given value to DateTime . Decimal? ToDecimal(string? value) . Converts given value to decimal . Decimal? ToDecimal(string value, string culture) . Converts given value to decimal withing given culture . Decimal? ToDecimal(byte? value) . Converts given value to Decimal . Decimal? ToDecimal(sbyte? value) . Converts given value to Decimal . Decimal? ToDecimal(short? value) . Converts given value to Decimal . Decimal? ToDecimal(ushort? value) . Converts given value to Decimal . Decimal? ToDecimal(long? value) . Converts given value to Decimal . Decimal? ToDecimal(ulong? value) . Converts given value to Decimal . Decimal? ToDecimal(float? value) . Converts given value to Decimal . Decimal? ToDecimal(double? value) . Converts given value to Decimal . Decimal? ToDecimal(object? value) . Converts given value to Decimal . double? ToDouble(object? value) . Converts given value to double . double? ToDouble(string? value) . Converts given value to double . double? ToDouble(byte? value) . Converts given value to double . double? ToDouble(sbyte? value) . Converts given value to double . double? ToDouble(short? value) . Converts given value to double . double? ToDouble(ushort? value) . Converts given value to double . double? ToDouble(int? value) . Converts given value to double . double? ToDouble(uint? value) . Converts given value to double . double? ToDouble(long? value) . Converts given value to double . double? ToDouble(ulong? value) . Converts given value to double . double? ToDouble(float? value) . Converts given value to double . double? ToDouble(double? value) . Converts given value to double . double? ToDouble(Decimal? value) . Converts given value to double . float? ToFloat(string? value) . Converts given value to float . float? ToFloat(byte? value) . Converts given value to float . float? ToFloat(sbyte? value) . Converts given value to float . float? ToFloat(short? value) . Converts given value to float . float? ToFloat(ushort? value) . Converts given value to float . float? ToFloat(int? value) . Converts given value to float . float? ToFloat(uint? value) . Converts given value to float . float? ToFloat(long? value) . Converts given value to float . float? ToFloat(ulong? value) . Converts given value to float . float? ToFloat(float? value) . Converts given value to float . float? ToFloat(Decimal? value) . Converts given value to float . int? ToInt32(string value) . Converts given value to int . int? ToInt32(byte? value) . Converts given value to int . int? ToInt32(sbyte? value) . Converts given value to int . int? ToInt32(short? value) . Converts given value to int . int? ToInt32(ushort? value) . Converts given value to int . int? ToInt32(int? value) . Converts given value to int . int? ToInt32(uint? value) . Converts given value to int . int? ToInt32(long? value) . Converts given value to int . int? ToInt32(ulong? value) . Converts given value to int . int? ToInt32(float? value) . Converts given value to int . int? ToInt32(double? value) . Converts given value to int . int? ToInt32(Decimal? value) . Converts given value to int . int? ToInt32(object? value) . Converts given value to int . long? ToInt64(string value) . Converts given value to Int64 . long? ToInt64(byte? value) . Converts given value to long . long? ToInt64(sbyte? value) . Converts given value to long . long? ToInt64(short? value) . Converts given value to long . long? ToInt64(ushort? value) . Converts given value to long . long? ToInt64(int? value) . Converts given value to long . long? ToInt64(uint? value) . Converts given value to long . long? ToInt64(long? value) . Converts given value to long . long? ToInt64(ulong? value) . Converts given value to long . long? ToInt64(float? value) . Converts given value to long . long? ToInt64(double? value) . Converts given value to long . long? ToInt64(Decimal? value) . Converts given value to long . long? ToInt64(object? value) . Converts given value to long . string? ToString(char? value) . Converts given value to string . string? ToString(DateTimeOffset? value) . Converts given value to string . string? ToString(DateTimeOffset? value, string format) . Converts given value to string . string? ToString(byte? value) . Converts given value to string . string? ToString(byte? value, string format) . Converts given value to string . string? ToString(sbyte? value) . Converts given value to string . string? ToString(sbyte? value, string format) . Converts given value to string . string? ToString(int? value) . Converts given value to string . string? ToString(int? value, string format) . Converts given value to string . string? ToString(uint? value) . Converts given value to string . string? ToString(uint? value, string format) . Converts given value to string . string? ToString(long? value) . Converts given value to string . string? ToString(long? value, string format) . Converts given value to string . string? ToString(ulong? value) . Converts given value to string . string? ToString(ulong? value, string format) . Converts given value to string . string? ToString(float? value) . Converts given value to string . string? ToString(float? value, string format) . Converts given value to string . string? ToString(double? value) . Converts given value to string . string? ToString(double? value, string format) . Converts given value to string . string? ToString(Decimal? value) . Converts given value to string . string? ToString(Decimal? value, string format) . Converts given value to string . string? ToString(bool? value) . Converts given value to string . string? ToString(object? value) . Converts given value to string . string? ToString&lt;T&gt;(T? value) . Converts given value to string . string ToString(string[] value) . Converts given value to string . string ToString&lt;T&gt;(T[] value) . Converts given value to string . TimeSpan? ToTimeSpan(string value) . Converts given value to TimeSpan . TimeSpan? ToTimeSpan(string value, string culture) . Converts given value to TimeSpan . IEnumerable&lt;T&gt; Window&lt;T&gt;(string name) . Gets the window . ",
    "url": "/data-sources/Postgres/linux-arm64.html#base-methods",
    
    "relUrl": "/data-sources/Postgres/linux-arm64.html#base-methods"
  },"90": {
    "doc": "Linux Arm64",
    "title": "Linux Arm64",
    "content": " ",
    "url": "/data-sources/Postgres/linux-arm64.html",
    
    "relUrl": "/data-sources/Postgres/linux-arm64.html"
  },"91": {
    "doc": "Linux Arm64",
    "title": "Musoq.DataSources.Sqlite",
    "content": "Provides ability to work with sqlite database . ",
    "url": "/data-sources/Sqlite/linux-arm64.html#musoqdatasourcessqlite",
    
    "relUrl": "/data-sources/Sqlite/linux-arm64.html#musoqdatasourcessqlite"
  },"92": {
    "doc": "Linux Arm64",
    "title": "Tables",
    "content": "Table is a collection of rows and columns that the plugin exposes. Below are the tables that are exposed by this data source. sqlite.tableName() . Gives ability to process sqlite table . Environment variables . In order to use the plugin, the user must set any required environment variables as specified in the environments element. Failure to do so may result in the plugin not functioning correctly. | Name | Is required | Description | . | SQLITE_CONNECTION_STRING | true | Sqlite connection string | . Columns . This table has a dynamic structure, which means that its columns and other details cannot be determined until runtime. As a result, it is not possible to include a complete description of this table in the documentation. Instead, the actual columns and other details of this table will be determined at runtime. ",
    "url": "/data-sources/Sqlite/linux-arm64.html#tables",
    
    "relUrl": "/data-sources/Sqlite/linux-arm64.html#tables"
  },"93": {
    "doc": "Linux Arm64",
    "title": "Base Methods",
    "content": "Base methods are methods that can be called on the data source specific column. Those methods are automatically inherited and enriches the data source specific methods. Below are those base methods that are exposed by this data source. int RowNumber() . Gets the row number of the current row. string? GetTypeName(object? obj) . Gets the typename of passed object. string AggregateValues(string name) . Aggregates values into a single value. string AggregateValues(string name, int parent) . Aggregates values into a single value. Decimal Avg(string name) . Gets the aggregated average value from the given group name . Decimal Avg(string name, int parent) . Gets the aggregated average value from the given group name . byte? ShiftLeft(byte? value, int shift) . Shifts the value to the left by the specified number of bits. short? ShiftLeft(short? value, int shift) . Shifts the value to the left by the specified number of bits. int? ShiftLeft(int? value, int shift) . Shifts the value to the left by the specified number of bits. long? ShiftLeft(long? value, int shift) . Shifts the value to the left by the specified number of bits. sbyte? ShiftLeft(sbyte? value, int shift) . Shifts the value to the left by the specified number of bits. ushort? ShiftLeft(ushort? value, int shift) . Shifts the value to the left by the specified number of bits. uint? ShiftLeft(uint? value, int shift) . Shifts the value to the left by the specified number of bits. ulong? ShiftLeft(ulong? value, int shift) . Shifts the value to the left by the specified number of bits. byte? ShiftRight(byte? value, int shift) . Shifts the value to the right by the specified number of bits. short? ShiftRight(short? value, int shift) . Shifts the value to the right by the specified number of bits. int? ShiftRight(int? value, int shift) . Shifts the value to the right by the specified number of bits. long? ShiftRight(long? value, int shift) . Shifts the value to the right by the specified number of bits. sbyte? ShiftRight(sbyte? value, int shift) . Shifts the value to the right by the specified number of bits. ushort? ShiftRight(ushort? value, int shift) . Shifts the value to the right by the specified number of bits. uint? ShiftRight(uint? value, int shift) . Shifts the value to the right by the specified number of bits. ulong? ShiftRight(ulong? value, int shift) . Shifts the value to the right by the specified number of bits. byte? Not(byte? value) . Performs bitwise NOT operation on a given value. short? Not(short? value) . Performs bitwise NOT operation on a given value. int? Not(int? value) . Performs bitwise NOT operation on a given value. long? Not(long? value) . Performs bitwise NOT operation on a given value. sbyte? Not(sbyte? value) . Performs bitwise NOT operation on a given value. ushort? Not(ushort? value) . Performs bitwise NOT operation on a given value. uint? Not(uint? value) . Performs bitwise NOT operation on a given value. ulong? Not(ulong? value) . Performs bitwise NOT operation on a given value. byte? And(byte? left, byte? right) . Performs bitwise AND operation on two given values. int? And(byte? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(byte? left, short? right) . Performs bitwise AND operation on two given values. int? And(byte? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(byte? left, int? right) . Performs bitwise AND operation on two given values. uint? And(byte? left, uint? right) . Performs bitwise AND operation on two given values. long? And(byte? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(byte? left, ulong? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, byte? right) . Performs bitwise AND operation on two given values. sbyte? And(sbyte? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, short? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, int? right) . Performs bitwise AND operation on two given values. uint? And(sbyte? left, uint? right) . Performs bitwise AND operation on two given values. long? And(sbyte? left, long? right) . Performs bitwise AND operation on two given values. int? And(short? left, byte? right) . Performs bitwise AND operation on two given values. int? And(short? left, sbyte? right) . Performs bitwise AND operation on two given values. short? And(short? left, short? right) . Performs bitwise AND operation on two given values. int? And(short? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(short? left, int? right) . Performs bitwise AND operation on two given values. uint? And(short? left, uint? right) . Performs bitwise AND operation on two given values. long? And(short? left, long? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, byte? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, short? right) . Performs bitwise AND operation on two given values. ushort? And(ushort? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, int? right) . Performs bitwise AND operation on two given values. uint? And(ushort? left, uint? right) . Performs bitwise AND operation on two given values. long? And(ushort? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(ushort? left, ulong? right) . Performs bitwise AND operation on two given values. int? And(int? left, byte? right) . Performs bitwise AND operation on two given values. int? And(int? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(int? left, short? right) . Performs bitwise AND operation on two given values. int? And(int? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(int? left, int? right) . Performs bitwise AND operation on two given values. uint? And(int? left, uint? right) . Performs bitwise AND operation on two given values. long? And(int? left, long? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, uint? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, byte? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, sbyte? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, short? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, ushort? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, int? right) . Performs bitwise AND operation on two given values. ulong? And(uint? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(uint? left, ulong? right) . Performs bitwise AND operation on two given values. long? And(long? left, long? right) . Performs bitwise AND operation on two given values. long? And(long? left, byte? right) . Performs bitwise AND operation on two given values. long? And(long? left, sbyte? right) . Performs bitwise AND operation on two given values. long? And(long? left, short? right) . Performs bitwise AND operation on two given values. long? And(long? left, ushort? right) . Performs bitwise AND operation on two given values. long? And(long? left, int? right) . Performs bitwise AND operation on two given values. long? And(long? left, uint? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, byte? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, ushort? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, uint? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, ulong? right) . Performs bitwise AND operation on two given values. byte? Or(byte? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, short? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(byte? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(byte? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(byte? left, ulong? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, byte? right) . Performs bitwise OR operation on two given values. sbyte? Or(sbyte? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, short? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(sbyte? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(sbyte? left, long? right) . Performs bitwise OR operation on two given values. int? Or(short? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(short? left, sbyte? right) . Performs bitwise OR operation on two given values. short? Or(short? left, short? right) . Performs bitwise OR operation on two given values. int? Or(short? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(short? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(short? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(short? left, long? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, short? right) . Performs bitwise OR operation on two given values. ushort? Or(ushort? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(ushort? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(ushort? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(ushort? left, ulong? right) . Performs bitwise OR operation on two given values. int? Or(int? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(int? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(int? left, short? right) . Performs bitwise OR operation on two given values. int? Or(int? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(int? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(int? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(int? left, long? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, uint? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, byte? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, sbyte? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, short? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, ushort? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, int? right) . Performs bitwise OR operation on two given values. ulong? Or(uint? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(uint? left, ulong? right) . Performs bitwise OR operation on two given values. long? Or(long? left, long? right) . Performs bitwise OR operation on two given values. long? Or(long? left, byte? right) . Performs bitwise OR operation on two given values. long? Or(long? left, sbyte? right) . Performs bitwise OR operation on two given values. long? Or(long? left, short? right) . Performs bitwise OR operation on two given values. long? Or(long? left, ushort? right) . Performs bitwise OR operation on two given values. long? Or(long? left, int? right) . Performs bitwise OR operation on two given values. long? Or(long? left, uint? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, byte? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, ushort? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, uint? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, ulong? right) . Performs bitwise OR operation on two given values. byte? Xor(byte? left, byte? right) . Performs bitwise OR operation on two given values. int? Xor(byte? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(byte? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(byte? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(byte? left, ulong? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, byte? right) . Performs bitwise Xor operation on two given values. sbyte? Xor(sbyte? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(sbyte? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(sbyte? left, long? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, sbyte? right) . Performs bitwise Xor operation on two given values. short? Xor(short? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, ushort? right) . Performs bitwise XOR operation on two given values. int? Xor(short? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(short? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(short? left, long? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, short? right) . Performs bitwise Xor operation on two given values. ushort? Xor(ushort? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(ushort? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(ushort? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ushort? left, ulong? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(int? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(int? left, long? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, uint? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, byte? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, sbyte? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, short? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, ushort? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, int? right) . Performs bitwise Xor operation on two given values. ulong? Xor(uint? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(uint? left, ulong? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, long? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, byte? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, sbyte? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, short? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, ushort? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, int? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, uint? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, ulong? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, byte? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, ushort? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, uint? right) . Performs bitwise Xor operation on two given values. byte[] GetBytes(string? content) . Gets the bytes from the given string. byte[] GetBytes(string? content, int length, int offset) . Gets the bytes from the given string within given offset and length. byte?[]? GetBytes(char? character) . Gets the bytes from the given character. byte?[]? GetBytes(bool? bit) . Gets the bytes from the given boolean. byte?[]? GetBytes(long? value) . Gets the bytes from the given long. byte?[]? GetBytes(int? value) . Gets the bytes from the given int. byte?[]? GetBytes(short? value) . Gets the bytes from the given short. byte?[]? GetBytes(ulong? value) . Gets the bytes from the given ulong. byte?[]? GetBytes(ushort? value) . Gets the bytes from the given ushort. byte?[]? GetBytes(uint? value) . Gets the bytes from the given uint. byte?[]? GetBytes(Decimal? value) . Gets the bytes from the given decimal. byte?[]? GetBytes(double? value) . Gets the bytes from the given double. byte?[]? GetBytes(float? value) . Gets the bytes from the given float. string? ToBin(byte?[]? bytes, string delimiter) . Converts given bytes to binary with defined delimiter . string ToBin&lt;T&gt;(T value) . Converts given value to binary . string ToOcta&lt;T&gt;(T value) . Converts given value to octal . string ToDec&lt;T&gt;(T value) . Converts given value to decimal . string ToBase64(byte[] value) . Converts given value to string . string ToBase64(byte[] value, int offset, int length) . Converts given array of bytes to string . byte[] FromBase64(string value) . Converts given string to bytes array . bool FromBytesToBool(byte[] value) . Converts bytes to boolean value. short FromBytesToInt16(byte[] value) . Converts bytes to a 16-bit signed integer. ushort FromBytesToUInt16(byte[] value) . Converts bytes to a 16-bit unsigned integer. int FromBytesToInt32(byte[] value) . Converts bytes to a 32-bit signed integer. uint FromBytesToUInt32(byte[] value) . Converts bytes to a 32-bit unsigned integer. long FromBytesToInt64(byte[] value) . Converts bytes to a 64-bit signed integer. ulong FromBytesToUInt64(byte[] value) . Converts bytes to a 64-bit unsigned integer. float FromBytesToFloat(byte[] value) . Converts bytes to a float value. double FromBytesToDouble(byte[] value) . Converts bytes to a float value. string FromBytesToString(byte[] value) . Converts bytes to a string. byte[] ToBytes(bool value) . Converts boolean value to bytes. byte[] ToBytes(short value) . Converts short value to bytes. byte[] ToBytes(ushort value) . Converts ushort value to bytes. byte[] ToBytes(int value) . Converts int value to bytes. byte[] ToBytes(uint value) . Converts uint value to bytes. byte[] ToBytes(long value) . Converts long value to bytes. byte[] ToBytes(ulong value) . Converts long value to bytes. string? ToHex(byte?[]? bytes, string delimiter) . Converts given bytes to hex with defined delimiter . string? ToHex&lt;T&gt;(T value) . Converts given value to binary . int Count(string name) . Gets the count value of a given group. int Count(string name, int parent) . Gets the count value of a given group. int ExtractFromDate(string? date, string partOfDate) . Extracts part of the date from the date . int ExtractFromDate(string date, string culture, string partOfDate) . Extracts part of the date from the date based on given culture . DateTimeOffset? GetDate() . Gets the current datetime . DateTimeOffset? UtcGetDate() . Gets the current datetime in UTC . int? Month(DateTimeOffset? value) . Gets the month from DateTimeOffset . int? Year(DateTimeOffset? value) . Gets the year from DateTimeOffset . int? Day(DateTimeOffset? value) . Gets the day from DateTimeOffset . int? Hour(DateTimeOffset? value) . Gets the hour from DateTimeOffset . int? Minute(DateTimeOffset? value) . Gets the minute from DateTimeOffset . int? Second(DateTimeOffset? value) . Gets the second from DateTimeOffset . int? Milliseconds(DateTimeOffset? value) . Gets the millisecond from DateTimeOffset . int? DayOfWeek(DateTimeOffset? value) . Gets the day of week from DateTimeOffset . TimeSpan? ExtractTimeSpan(DateTimeOffset? dateTimeOffset) . Extracts time from DateTimeOffset . DateTime? ToDateTimeOffset(string value) . Converts given value to DateTimeOffset . DateTimeOffset? ToDateTimeOffset(string value, string culture) . Converts given value to DateTimeOffset . IEnumerable&lt;T&gt;? Skip&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? skipCount) . Skips elements from the beginning of the sequence. IEnumerable&lt;T&gt;? Take&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? takeCount) . Takes elements from the beginning of the sequence. IEnumerable&lt;T&gt;? SkipAndTake&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? skipCount, int? takeCount) . Skip and takes elements from the beginning of the sequence. T[]? EnumerableToArray&lt;T&gt;(IEnumerable&lt;T&gt;? values) . Turn array arguments of T into a single array. T[]? MergeArrays&lt;T&gt;(T[][]? values) . Turn array arguments of T into a single array. IEnumerable&lt;T&gt;? LongestCommonSequence&lt;T&gt;(IEnumerable&lt;T&gt;? source, IEnumerable&lt;T&gt;? pattern) . Computes longest common sequence of two given sequences . T? GetElementAtOrDefault&lt;T&gt;(IEnumerable&lt;T&gt;? enumerable, int? index) . Gets the element at the specified index in a sequence . int? Length&lt;T&gt;(IEnumerable&lt;T&gt;? enumerable) . Gets the length of the sequence . int? Length&lt;T&gt;(T[]? array) . Gets the length of the array . T? Choose&lt;T&gt;(int? index, T[] values) . Gets the value of an array at the specified index . T If&lt;T&gt;(bool expressionResult, T a, T b) . Chose a or b value based on the expression result . bool? Match(string? regex, string? content) . Determine whether content matches the specified pattern . byte? Coalesce(byte?[] array) . Gets the first non-null value in a list . sbyte? Coalesce(sbyte?[] array) . Gets the first non-null value in a list . short? Coalesce(short?[] array) . Gets the first non-null value in a list . ushort? Coalesce(ushort?[] array) . Gets the first non-null value in a list . int? Coalesce(int?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(uint?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(long?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(ulong?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(Decimal?[] array) . Gets the first non-null value in a list . T? Coalesce&lt;T&gt;(T[] array) . Gets the first non-null value in a list . IEnumerable&lt;T&gt;? Distinct&lt;T&gt;(IEnumerable&lt;T&gt;? values) . Returns distinct elements from a collection. string? Md5(string? content) . Gets the md5 hash of the given string. string? Md5(byte?[]? content) . Gets the md5 hash of the given bytes array. string? Sha1(string? content) . Gets the sha256 hash of the given string. string? Sha1(byte?[]? content) . Gets the sha256 hash of the given bytes array. string? Sha256(string? content) . Gets the sha256 hash of the given string. string? Sha256(byte?[]? content) . Gets the sha256 hash of the given bytes array. string? Sha512(string? content) . Gets the sha256 hash of the given string. string? Sha512(byte?[]? content) . Gets the sha256 hash of the bytes array. string? ToJson&lt;T&gt;(T? obj) . Converts object to json. string[] ExtractFromJsonToArray(string? json, string? path) . Extracts values from json by path. string? ExtractFromJson(string? json, string? path) . Extracts values from json by path and joins them with comma. Decimal? Abs(Decimal? value) . Gets the absolute value . long? Abs(long? value) . Gets the absolute value . int? Abs(int? value) . Gets the absolute value . Decimal? Ceil(Decimal? value) . Gets the ceiling value . Decimal? Floor(Decimal? value) . Gets the floor value . Decimal? Sign(Decimal? value) . Determine whether value is greater, equal or less that zero . long? Sign(long? value) . Determine whether value is greater, equal or less that zero . Decimal? Round(Decimal? value, int precision) . Rounds the value within given precision . Decimal? PercentOf(Decimal? value, Decimal? max) . Gets the percentage of the value . int Rand() . Gets the random integer value . int? Rand(int? min, int? max) . Gets the random integer value . double? Pow(Decimal? x, Decimal? y) . Computes the pow between two values . double? Pow(double? x, double? y) . Computes the pow between two values . double? Sqrt(Decimal? x) . Computes the sqrt of a given value . double? Sqrt(double? x) . Computes the sqrt of a given value . double? Sqrt(long? x) . Computes the sqrt of a given value . double? PercentRank&lt;T&gt;(IEnumerable&lt;T&gt;? window, T? value) . Computes the percent rank of a given window . double? Log(Decimal? base, Decimal? value) . Calculates the logarithm of a value with a specified base. Decimal? Sin(Decimal? value) . Calculates sine of a value. double? Sin(double? value) . Calculates sine of a value. float? Sin(float? value) . Calculates sine of a value. Decimal? Cos(Decimal? value) . Calculates cosine of a value. double? Cos(double? value) . Calculates cosine of a value. float? Cos(float? value) . Calculates cosine of a value. Decimal Max(string name) . Gets the max value of a given group. Decimal Max(string name, int parent) . Gets the max value of a given group. Decimal Min(string name) . Gets the min value of a given group. Decimal Min(string name, int parent) . Gets the min value of a given group. Decimal StDev(string name, int parent) . Gets the StDev value of a given group. string NewId() . Gets the new identifier . string? Trim(string? value) . Removes leading and trailing whitespace from a string. string? TrimStart(string? value) . Removes leading whitespace from a string. string? TrimEnd(string? value) . Removes trailing whitespace from a string. string? Substring(string? value, int? index, int? length) . Gets the substring from the string. string? Substring(string value, int? length) . Gets the substring from the string . string? Concat(string[]? strings) . Concatenates the specified values . string? Concat(char?[]? characters) . Concatenates the specified characters . string? Concat(string? firstString, char?[]? chars) . Concatenates specified string fir characters . string? Concat(char? firstChar, string[]? strings) . Concatenate specific character with strings . string? Concat(object[]? objects) . Concatenates the specified strings . string? Concat&lt;T&gt;(T[]? objects) . Concatenates the specified strings . bool? Contains(string? content, string? what) . Determine whether the string contains the specified value . int? IndexOf(string? value, string? text) . Position of the first occurrence of the specified value . string? Soundex(string? value) . Computes soundex for the specified value . bool HasFuzzyMatchedWord(string text, string word, string separator) . Matches the specified text by splitting it with separator and applying fuzzy comparison . bool HasWordThatHasSmallerLevenshteinDistanceThan(string text, string word, int distance, string separator) . Matches the specified text by splitting it with separator and applying fuzzy comparison with a given distance . bool HasWordThatSoundLike(string text, string word, string separator) . Matches whether the specified word is present after being fuzzified within the specified text . bool HasTextThatSoundLikeSentence(string text, string sentence, string separator) . Matches whether the specified text is present in sentence after being fuzified . string? ToUpper(string value) . Makes the string uppercase . string? ToUpper(string value, string culture) . Makes the string uppercase within specified culture . string? ToUpperInvariant(string value) . Makes the string uppercase . string? ToLower(string value) . Makes the string lowercase . string? ToLower(string value, string culture) . Makes the string lowercase within specified culture . string? ToLowerInvariant(string value) . Makes the string lowercase . string? PadLeft(string? value, string? character, int? totalWidth) . Returns a new string that right-aligns the characters in this instance by padding them on the left with a specified Unicode character, for a specified total lengt . string? PadRight(string? value, string? character, int? totalWidth) . Returns a new string that left-aligns the characters in this instance by padding them on the right with a specified Unicode character, for a specified total length . string? Head(string? value, int? length) . Gets the first N characters of the string . string? Tail(string? value, int? length) . Gets the last N characters of the string . int? LevenshteinDistance(string? firstValue, string? secondValue) . Computes the Levenshtein distance between two strings . char? GetCharacterOf(string value, int index) . Gets the character at specified index . string? Reverse(string? value) . Reverses the string . string[] Split(string value, string[] separators) . Splits the string into an array of substrings based on the specified separators . char[] ToCharArray(string value) . Splits the string into an array of characters . string? LongestCommonSubstring(string source, string pattern) . Computes the longest common subsequence between two source and pattern . string Replicate(string value, int integer) . Clones the value n times . string? Translate(string? value, string? characters, string? translations) . Returns the string from the first argument after the characters specified in the second argument are translated into the characters specified in the third argument. string? Replace(string? text, string lookFor, string? changeTo) . Replaces the first occurrence of a specified string in this instance with another specified string . string? ToTitleCase(string? value) . Capitalizes the first letter of the string . string? GetNthWord(string? text, int? wordIndex, string? separator) . Gets the nth word of the string . string? GetFirstWord(string text, string separator) . Gets the first word of the string . string? GetSecondWord(string text, string separator) . Gets the second word of the string . string? GetThirdWord(string text, string separator) . Gets the third word of the string . string? GetLastWord(string? text, string? separator) . Gets last word of the string . bool? IsNullOrEmpty(string? value) . Determines whether the string is null or empty . bool? IsNullOrWhiteSpace(string? value) . Determines whether the string is null or whitespace . string? UrlEncode(string? value) . Encodes the value . string? UrlDecode(string? value) . Decodes the value . string? UriEncode(string? value) . Encodes the value . string? UriDecode(string? value) . Decodes the value . bool? StartsWith(string? value, string? prefix) . Determines whether the string starts with the specified prefix . bool? StartsWith(string? value, string? prefix, string comparison) . Determines whether the string starts with the specified prefix . bool? EndsWith(string? value, string? suffix) . Determines whether the string ends with the specified suffix . bool? EndsWith(string? value, string? suffix, string comparison) . Determines whether the string ends with the specified suffix . string? RegexReplace(string? value, string? pattern, string? replacement) . Replace the specified value part that matches the pattern with the replacement . string[]? SplitByLinuxNewLines(string? input) . Split string by Linux-style newlines (\\n) . string[]? SplitByWindowsNewLines(string? input) . Split string by Windows-style newlines (\\r\\n) . string[]? SplitByNewLines(string? input) . Smart split that handles both Windows (\\r\\n) and Linux (\\n) newlines . Decimal Sum(string name) . Gets the sum value of a given group. Decimal Sum(string name, int parent) . Gets the sum value of a given group. Decimal SumIncome(string name) . Gets the sum value of a given group. Decimal SumIncome(string name, int parent) . Gets the sum value of a given group. Decimal SumOutcome(string name) . Gets the outcome value of a given group. Decimal SumOutcome(string name, int parent) . Gets the outcome value of a given group. TimeSpan? SumTimeSpan(string name) . Gets the sum value of a given group. TimeSpan? SumTimeSpan(string name, int parent) . Gets the sum value of a given group. TimeSpan? MinTimeSpan(string name) . Gets the min value of a given group. TimeSpan? MinTimeSpan(string name, int parent) . Gets the min value of a given group. TimeSpan? MaxTimeSpan(string name) . Gets the max value of a given group. TimeSpan? MaxTimeSpan(string name, int parent) . Gets the min value of a given group. char? ToChar(string? value) . Converts given value to character . char? ToChar(int? value) . Converts given value to character . char? ToChar(short? value) . Converts given value to character . char? ToChar(byte? value) . Converts given value to character . char? ToChar(object? value) . Converts given value to character . DateTime? ToDateTime(string value) . Converts given value to DateTime . DateTime? ToDateTime(string value, string culture) . Converts given value to DateTime . Decimal? ToDecimal(string? value) . Converts given value to decimal . Decimal? ToDecimal(string value, string culture) . Converts given value to decimal withing given culture . Decimal? ToDecimal(byte? value) . Converts given value to Decimal . Decimal? ToDecimal(sbyte? value) . Converts given value to Decimal . Decimal? ToDecimal(short? value) . Converts given value to Decimal . Decimal? ToDecimal(ushort? value) . Converts given value to Decimal . Decimal? ToDecimal(long? value) . Converts given value to Decimal . Decimal? ToDecimal(ulong? value) . Converts given value to Decimal . Decimal? ToDecimal(float? value) . Converts given value to Decimal . Decimal? ToDecimal(double? value) . Converts given value to Decimal . Decimal? ToDecimal(object? value) . Converts given value to Decimal . double? ToDouble(object? value) . Converts given value to double . double? ToDouble(string? value) . Converts given value to double . double? ToDouble(byte? value) . Converts given value to double . double? ToDouble(sbyte? value) . Converts given value to double . double? ToDouble(short? value) . Converts given value to double . double? ToDouble(ushort? value) . Converts given value to double . double? ToDouble(int? value) . Converts given value to double . double? ToDouble(uint? value) . Converts given value to double . double? ToDouble(long? value) . Converts given value to double . double? ToDouble(ulong? value) . Converts given value to double . double? ToDouble(float? value) . Converts given value to double . double? ToDouble(double? value) . Converts given value to double . double? ToDouble(Decimal? value) . Converts given value to double . float? ToFloat(string? value) . Converts given value to float . float? ToFloat(byte? value) . Converts given value to float . float? ToFloat(sbyte? value) . Converts given value to float . float? ToFloat(short? value) . Converts given value to float . float? ToFloat(ushort? value) . Converts given value to float . float? ToFloat(int? value) . Converts given value to float . float? ToFloat(uint? value) . Converts given value to float . float? ToFloat(long? value) . Converts given value to float . float? ToFloat(ulong? value) . Converts given value to float . float? ToFloat(float? value) . Converts given value to float . float? ToFloat(Decimal? value) . Converts given value to float . int? ToInt32(string value) . Converts given value to int . int? ToInt32(byte? value) . Converts given value to int . int? ToInt32(sbyte? value) . Converts given value to int . int? ToInt32(short? value) . Converts given value to int . int? ToInt32(ushort? value) . Converts given value to int . int? ToInt32(int? value) . Converts given value to int . int? ToInt32(uint? value) . Converts given value to int . int? ToInt32(long? value) . Converts given value to int . int? ToInt32(ulong? value) . Converts given value to int . int? ToInt32(float? value) . Converts given value to int . int? ToInt32(double? value) . Converts given value to int . int? ToInt32(Decimal? value) . Converts given value to int . int? ToInt32(object? value) . Converts given value to int . long? ToInt64(string value) . Converts given value to Int64 . long? ToInt64(byte? value) . Converts given value to long . long? ToInt64(sbyte? value) . Converts given value to long . long? ToInt64(short? value) . Converts given value to long . long? ToInt64(ushort? value) . Converts given value to long . long? ToInt64(int? value) . Converts given value to long . long? ToInt64(uint? value) . Converts given value to long . long? ToInt64(long? value) . Converts given value to long . long? ToInt64(ulong? value) . Converts given value to long . long? ToInt64(float? value) . Converts given value to long . long? ToInt64(double? value) . Converts given value to long . long? ToInt64(Decimal? value) . Converts given value to long . long? ToInt64(object? value) . Converts given value to long . string? ToString(char? value) . Converts given value to string . string? ToString(DateTimeOffset? value) . Converts given value to string . string? ToString(DateTimeOffset? value, string format) . Converts given value to string . string? ToString(byte? value) . Converts given value to string . string? ToString(byte? value, string format) . Converts given value to string . string? ToString(sbyte? value) . Converts given value to string . string? ToString(sbyte? value, string format) . Converts given value to string . string? ToString(int? value) . Converts given value to string . string? ToString(int? value, string format) . Converts given value to string . string? ToString(uint? value) . Converts given value to string . string? ToString(uint? value, string format) . Converts given value to string . string? ToString(long? value) . Converts given value to string . string? ToString(long? value, string format) . Converts given value to string . string? ToString(ulong? value) . Converts given value to string . string? ToString(ulong? value, string format) . Converts given value to string . string? ToString(float? value) . Converts given value to string . string? ToString(float? value, string format) . Converts given value to string . string? ToString(double? value) . Converts given value to string . string? ToString(double? value, string format) . Converts given value to string . string? ToString(Decimal? value) . Converts given value to string . string? ToString(Decimal? value, string format) . Converts given value to string . string? ToString(bool? value) . Converts given value to string . string? ToString(object? value) . Converts given value to string . string? ToString&lt;T&gt;(T? value) . Converts given value to string . string ToString(string[] value) . Converts given value to string . string ToString&lt;T&gt;(T[] value) . Converts given value to string . TimeSpan? ToTimeSpan(string value) . Converts given value to TimeSpan . TimeSpan? ToTimeSpan(string value, string culture) . Converts given value to TimeSpan . IEnumerable&lt;T&gt; Window&lt;T&gt;(string name) . Gets the window . ",
    "url": "/data-sources/Sqlite/linux-arm64.html#base-methods",
    
    "relUrl": "/data-sources/Sqlite/linux-arm64.html#base-methods"
  },"94": {
    "doc": "Linux Arm64",
    "title": "Linux Arm64",
    "content": " ",
    "url": "/data-sources/Sqlite/linux-arm64.html",
    
    "relUrl": "/data-sources/Sqlite/linux-arm64.html"
  },"95": {
    "doc": "Linux Arm64",
    "title": "Musoq.DataSources.FlatFile",
    "content": "Provides schema to work with flat files . ",
    "url": "/data-sources/FlatFile/linux-arm64.html#musoqdatasourcesflatfile",
    
    "relUrl": "/data-sources/FlatFile/linux-arm64.html#musoqdatasourcesflatfile"
  },"96": {
    "doc": "Linux Arm64",
    "title": "Tables",
    "content": "Table is a collection of rows and columns that the plugin exposes. Below are the tables that are exposed by this data source. flat.file(string path) . Gives ability to process flat files . | Name | Type | Description | . | LineNumber | int | Line number of a given file | . | Line | string | Line of a given file | . ",
    "url": "/data-sources/FlatFile/linux-arm64.html#tables",
    
    "relUrl": "/data-sources/FlatFile/linux-arm64.html#tables"
  },"97": {
    "doc": "Linux Arm64",
    "title": "Base Methods",
    "content": "Base methods are methods that can be called on the data source specific column. Those methods are automatically inherited and enriches the data source specific methods. Below are those base methods that are exposed by this data source. int RowNumber() . Gets the row number of the current row. string? GetTypeName(object? obj) . Gets the typename of passed object. string AggregateValues(string name) . Aggregates values into a single value. string AggregateValues(string name, int parent) . Aggregates values into a single value. Decimal Avg(string name) . Gets the aggregated average value from the given group name . Decimal Avg(string name, int parent) . Gets the aggregated average value from the given group name . byte? ShiftLeft(byte? value, int shift) . Shifts the value to the left by the specified number of bits. short? ShiftLeft(short? value, int shift) . Shifts the value to the left by the specified number of bits. int? ShiftLeft(int? value, int shift) . Shifts the value to the left by the specified number of bits. long? ShiftLeft(long? value, int shift) . Shifts the value to the left by the specified number of bits. sbyte? ShiftLeft(sbyte? value, int shift) . Shifts the value to the left by the specified number of bits. ushort? ShiftLeft(ushort? value, int shift) . Shifts the value to the left by the specified number of bits. uint? ShiftLeft(uint? value, int shift) . Shifts the value to the left by the specified number of bits. ulong? ShiftLeft(ulong? value, int shift) . Shifts the value to the left by the specified number of bits. byte? ShiftRight(byte? value, int shift) . Shifts the value to the right by the specified number of bits. short? ShiftRight(short? value, int shift) . Shifts the value to the right by the specified number of bits. int? ShiftRight(int? value, int shift) . Shifts the value to the right by the specified number of bits. long? ShiftRight(long? value, int shift) . Shifts the value to the right by the specified number of bits. sbyte? ShiftRight(sbyte? value, int shift) . Shifts the value to the right by the specified number of bits. ushort? ShiftRight(ushort? value, int shift) . Shifts the value to the right by the specified number of bits. uint? ShiftRight(uint? value, int shift) . Shifts the value to the right by the specified number of bits. ulong? ShiftRight(ulong? value, int shift) . Shifts the value to the right by the specified number of bits. byte? Not(byte? value) . Performs bitwise NOT operation on a given value. short? Not(short? value) . Performs bitwise NOT operation on a given value. int? Not(int? value) . Performs bitwise NOT operation on a given value. long? Not(long? value) . Performs bitwise NOT operation on a given value. sbyte? Not(sbyte? value) . Performs bitwise NOT operation on a given value. ushort? Not(ushort? value) . Performs bitwise NOT operation on a given value. uint? Not(uint? value) . Performs bitwise NOT operation on a given value. ulong? Not(ulong? value) . Performs bitwise NOT operation on a given value. byte? And(byte? left, byte? right) . Performs bitwise AND operation on two given values. int? And(byte? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(byte? left, short? right) . Performs bitwise AND operation on two given values. int? And(byte? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(byte? left, int? right) . Performs bitwise AND operation on two given values. uint? And(byte? left, uint? right) . Performs bitwise AND operation on two given values. long? And(byte? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(byte? left, ulong? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, byte? right) . Performs bitwise AND operation on two given values. sbyte? And(sbyte? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, short? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, int? right) . Performs bitwise AND operation on two given values. uint? And(sbyte? left, uint? right) . Performs bitwise AND operation on two given values. long? And(sbyte? left, long? right) . Performs bitwise AND operation on two given values. int? And(short? left, byte? right) . Performs bitwise AND operation on two given values. int? And(short? left, sbyte? right) . Performs bitwise AND operation on two given values. short? And(short? left, short? right) . Performs bitwise AND operation on two given values. int? And(short? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(short? left, int? right) . Performs bitwise AND operation on two given values. uint? And(short? left, uint? right) . Performs bitwise AND operation on two given values. long? And(short? left, long? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, byte? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, short? right) . Performs bitwise AND operation on two given values. ushort? And(ushort? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, int? right) . Performs bitwise AND operation on two given values. uint? And(ushort? left, uint? right) . Performs bitwise AND operation on two given values. long? And(ushort? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(ushort? left, ulong? right) . Performs bitwise AND operation on two given values. int? And(int? left, byte? right) . Performs bitwise AND operation on two given values. int? And(int? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(int? left, short? right) . Performs bitwise AND operation on two given values. int? And(int? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(int? left, int? right) . Performs bitwise AND operation on two given values. uint? And(int? left, uint? right) . Performs bitwise AND operation on two given values. long? And(int? left, long? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, uint? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, byte? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, sbyte? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, short? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, ushort? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, int? right) . Performs bitwise AND operation on two given values. ulong? And(uint? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(uint? left, ulong? right) . Performs bitwise AND operation on two given values. long? And(long? left, long? right) . Performs bitwise AND operation on two given values. long? And(long? left, byte? right) . Performs bitwise AND operation on two given values. long? And(long? left, sbyte? right) . Performs bitwise AND operation on two given values. long? And(long? left, short? right) . Performs bitwise AND operation on two given values. long? And(long? left, ushort? right) . Performs bitwise AND operation on two given values. long? And(long? left, int? right) . Performs bitwise AND operation on two given values. long? And(long? left, uint? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, byte? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, ushort? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, uint? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, ulong? right) . Performs bitwise AND operation on two given values. byte? Or(byte? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, short? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(byte? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(byte? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(byte? left, ulong? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, byte? right) . Performs bitwise OR operation on two given values. sbyte? Or(sbyte? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, short? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(sbyte? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(sbyte? left, long? right) . Performs bitwise OR operation on two given values. int? Or(short? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(short? left, sbyte? right) . Performs bitwise OR operation on two given values. short? Or(short? left, short? right) . Performs bitwise OR operation on two given values. int? Or(short? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(short? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(short? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(short? left, long? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, short? right) . Performs bitwise OR operation on two given values. ushort? Or(ushort? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(ushort? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(ushort? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(ushort? left, ulong? right) . Performs bitwise OR operation on two given values. int? Or(int? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(int? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(int? left, short? right) . Performs bitwise OR operation on two given values. int? Or(int? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(int? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(int? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(int? left, long? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, uint? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, byte? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, sbyte? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, short? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, ushort? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, int? right) . Performs bitwise OR operation on two given values. ulong? Or(uint? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(uint? left, ulong? right) . Performs bitwise OR operation on two given values. long? Or(long? left, long? right) . Performs bitwise OR operation on two given values. long? Or(long? left, byte? right) . Performs bitwise OR operation on two given values. long? Or(long? left, sbyte? right) . Performs bitwise OR operation on two given values. long? Or(long? left, short? right) . Performs bitwise OR operation on two given values. long? Or(long? left, ushort? right) . Performs bitwise OR operation on two given values. long? Or(long? left, int? right) . Performs bitwise OR operation on two given values. long? Or(long? left, uint? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, byte? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, ushort? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, uint? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, ulong? right) . Performs bitwise OR operation on two given values. byte? Xor(byte? left, byte? right) . Performs bitwise OR operation on two given values. int? Xor(byte? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(byte? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(byte? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(byte? left, ulong? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, byte? right) . Performs bitwise Xor operation on two given values. sbyte? Xor(sbyte? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(sbyte? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(sbyte? left, long? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, sbyte? right) . Performs bitwise Xor operation on two given values. short? Xor(short? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, ushort? right) . Performs bitwise XOR operation on two given values. int? Xor(short? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(short? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(short? left, long? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, short? right) . Performs bitwise Xor operation on two given values. ushort? Xor(ushort? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(ushort? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(ushort? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ushort? left, ulong? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(int? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(int? left, long? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, uint? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, byte? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, sbyte? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, short? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, ushort? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, int? right) . Performs bitwise Xor operation on two given values. ulong? Xor(uint? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(uint? left, ulong? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, long? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, byte? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, sbyte? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, short? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, ushort? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, int? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, uint? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, ulong? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, byte? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, ushort? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, uint? right) . Performs bitwise Xor operation on two given values. byte[] GetBytes(string? content) . Gets the bytes from the given string. byte[] GetBytes(string? content, int length, int offset) . Gets the bytes from the given string within given offset and length. byte?[]? GetBytes(char? character) . Gets the bytes from the given character. byte?[]? GetBytes(bool? bit) . Gets the bytes from the given boolean. byte?[]? GetBytes(long? value) . Gets the bytes from the given long. byte?[]? GetBytes(int? value) . Gets the bytes from the given int. byte?[]? GetBytes(short? value) . Gets the bytes from the given short. byte?[]? GetBytes(ulong? value) . Gets the bytes from the given ulong. byte?[]? GetBytes(ushort? value) . Gets the bytes from the given ushort. byte?[]? GetBytes(uint? value) . Gets the bytes from the given uint. byte?[]? GetBytes(Decimal? value) . Gets the bytes from the given decimal. byte?[]? GetBytes(double? value) . Gets the bytes from the given double. byte?[]? GetBytes(float? value) . Gets the bytes from the given float. string? ToBin(byte?[]? bytes, string delimiter) . Converts given bytes to binary with defined delimiter . string ToBin&lt;T&gt;(T value) . Converts given value to binary . string ToOcta&lt;T&gt;(T value) . Converts given value to octal . string ToDec&lt;T&gt;(T value) . Converts given value to decimal . string ToBase64(byte[] value) . Converts given value to string . string ToBase64(byte[] value, int offset, int length) . Converts given array of bytes to string . byte[] FromBase64(string value) . Converts given string to bytes array . bool FromBytesToBool(byte[] value) . Converts bytes to boolean value. short FromBytesToInt16(byte[] value) . Converts bytes to a 16-bit signed integer. ushort FromBytesToUInt16(byte[] value) . Converts bytes to a 16-bit unsigned integer. int FromBytesToInt32(byte[] value) . Converts bytes to a 32-bit signed integer. uint FromBytesToUInt32(byte[] value) . Converts bytes to a 32-bit unsigned integer. long FromBytesToInt64(byte[] value) . Converts bytes to a 64-bit signed integer. ulong FromBytesToUInt64(byte[] value) . Converts bytes to a 64-bit unsigned integer. float FromBytesToFloat(byte[] value) . Converts bytes to a float value. double FromBytesToDouble(byte[] value) . Converts bytes to a float value. string FromBytesToString(byte[] value) . Converts bytes to a string. byte[] ToBytes(bool value) . Converts boolean value to bytes. byte[] ToBytes(short value) . Converts short value to bytes. byte[] ToBytes(ushort value) . Converts ushort value to bytes. byte[] ToBytes(int value) . Converts int value to bytes. byte[] ToBytes(uint value) . Converts uint value to bytes. byte[] ToBytes(long value) . Converts long value to bytes. byte[] ToBytes(ulong value) . Converts long value to bytes. string? ToHex(byte?[]? bytes, string delimiter) . Converts given bytes to hex with defined delimiter . string? ToHex&lt;T&gt;(T value) . Converts given value to binary . int Count(string name) . Gets the count value of a given group. int Count(string name, int parent) . Gets the count value of a given group. int ExtractFromDate(string? date, string partOfDate) . Extracts part of the date from the date . int ExtractFromDate(string date, string culture, string partOfDate) . Extracts part of the date from the date based on given culture . DateTimeOffset? GetDate() . Gets the current datetime . DateTimeOffset? UtcGetDate() . Gets the current datetime in UTC . int? Month(DateTimeOffset? value) . Gets the month from DateTimeOffset . int? Year(DateTimeOffset? value) . Gets the year from DateTimeOffset . int? Day(DateTimeOffset? value) . Gets the day from DateTimeOffset . int? Hour(DateTimeOffset? value) . Gets the hour from DateTimeOffset . int? Minute(DateTimeOffset? value) . Gets the minute from DateTimeOffset . int? Second(DateTimeOffset? value) . Gets the second from DateTimeOffset . int? Milliseconds(DateTimeOffset? value) . Gets the millisecond from DateTimeOffset . int? DayOfWeek(DateTimeOffset? value) . Gets the day of week from DateTimeOffset . TimeSpan? ExtractTimeSpan(DateTimeOffset? dateTimeOffset) . Extracts time from DateTimeOffset . DateTime? ToDateTimeOffset(string value) . Converts given value to DateTimeOffset . DateTimeOffset? ToDateTimeOffset(string value, string culture) . Converts given value to DateTimeOffset . IEnumerable&lt;T&gt;? Skip&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? skipCount) . Skips elements from the beginning of the sequence. IEnumerable&lt;T&gt;? Take&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? takeCount) . Takes elements from the beginning of the sequence. IEnumerable&lt;T&gt;? SkipAndTake&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? skipCount, int? takeCount) . Skip and takes elements from the beginning of the sequence. T[]? EnumerableToArray&lt;T&gt;(IEnumerable&lt;T&gt;? values) . Turn array arguments of T into a single array. T[]? MergeArrays&lt;T&gt;(T[][]? values) . Turn array arguments of T into a single array. IEnumerable&lt;T&gt;? LongestCommonSequence&lt;T&gt;(IEnumerable&lt;T&gt;? source, IEnumerable&lt;T&gt;? pattern) . Computes longest common sequence of two given sequences . T? GetElementAtOrDefault&lt;T&gt;(IEnumerable&lt;T&gt;? enumerable, int? index) . Gets the element at the specified index in a sequence . int? Length&lt;T&gt;(IEnumerable&lt;T&gt;? enumerable) . Gets the length of the sequence . int? Length&lt;T&gt;(T[]? array) . Gets the length of the array . T? Choose&lt;T&gt;(int? index, T[] values) . Gets the value of an array at the specified index . T If&lt;T&gt;(bool expressionResult, T a, T b) . Chose a or b value based on the expression result . bool? Match(string? regex, string? content) . Determine whether content matches the specified pattern . byte? Coalesce(byte?[] array) . Gets the first non-null value in a list . sbyte? Coalesce(sbyte?[] array) . Gets the first non-null value in a list . short? Coalesce(short?[] array) . Gets the first non-null value in a list . ushort? Coalesce(ushort?[] array) . Gets the first non-null value in a list . int? Coalesce(int?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(uint?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(long?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(ulong?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(Decimal?[] array) . Gets the first non-null value in a list . T? Coalesce&lt;T&gt;(T[] array) . Gets the first non-null value in a list . IEnumerable&lt;T&gt;? Distinct&lt;T&gt;(IEnumerable&lt;T&gt;? values) . Returns distinct elements from a collection. string? Md5(string? content) . Gets the md5 hash of the given string. string? Md5(byte?[]? content) . Gets the md5 hash of the given bytes array. string? Sha1(string? content) . Gets the sha256 hash of the given string. string? Sha1(byte?[]? content) . Gets the sha256 hash of the given bytes array. string? Sha256(string? content) . Gets the sha256 hash of the given string. string? Sha256(byte?[]? content) . Gets the sha256 hash of the given bytes array. string? Sha512(string? content) . Gets the sha256 hash of the given string. string? Sha512(byte?[]? content) . Gets the sha256 hash of the bytes array. string? ToJson&lt;T&gt;(T? obj) . Converts object to json. string[] ExtractFromJsonToArray(string? json, string? path) . Extracts values from json by path. string? ExtractFromJson(string? json, string? path) . Extracts values from json by path and joins them with comma. Decimal? Abs(Decimal? value) . Gets the absolute value . long? Abs(long? value) . Gets the absolute value . int? Abs(int? value) . Gets the absolute value . Decimal? Ceil(Decimal? value) . Gets the ceiling value . Decimal? Floor(Decimal? value) . Gets the floor value . Decimal? Sign(Decimal? value) . Determine whether value is greater, equal or less that zero . long? Sign(long? value) . Determine whether value is greater, equal or less that zero . Decimal? Round(Decimal? value, int precision) . Rounds the value within given precision . Decimal? PercentOf(Decimal? value, Decimal? max) . Gets the percentage of the value . int Rand() . Gets the random integer value . int? Rand(int? min, int? max) . Gets the random integer value . double? Pow(Decimal? x, Decimal? y) . Computes the pow between two values . double? Pow(double? x, double? y) . Computes the pow between two values . double? Sqrt(Decimal? x) . Computes the sqrt of a given value . double? Sqrt(double? x) . Computes the sqrt of a given value . double? Sqrt(long? x) . Computes the sqrt of a given value . double? PercentRank&lt;T&gt;(IEnumerable&lt;T&gt;? window, T? value) . Computes the percent rank of a given window . double? Log(Decimal? base, Decimal? value) . Calculates the logarithm of a value with a specified base. Decimal? Sin(Decimal? value) . Calculates sine of a value. double? Sin(double? value) . Calculates sine of a value. float? Sin(float? value) . Calculates sine of a value. Decimal? Cos(Decimal? value) . Calculates cosine of a value. double? Cos(double? value) . Calculates cosine of a value. float? Cos(float? value) . Calculates cosine of a value. Decimal Max(string name) . Gets the max value of a given group. Decimal Max(string name, int parent) . Gets the max value of a given group. Decimal Min(string name) . Gets the min value of a given group. Decimal Min(string name, int parent) . Gets the min value of a given group. Decimal StDev(string name, int parent) . Gets the StDev value of a given group. string NewId() . Gets the new identifier . string? Trim(string? value) . Removes leading and trailing whitespace from a string. string? TrimStart(string? value) . Removes leading whitespace from a string. string? TrimEnd(string? value) . Removes trailing whitespace from a string. string? Substring(string? value, int? index, int? length) . Gets the substring from the string. string? Substring(string value, int? length) . Gets the substring from the string . string? Concat(string[]? strings) . Concatenates the specified values . string? Concat(char?[]? characters) . Concatenates the specified characters . string? Concat(string? firstString, char?[]? chars) . Concatenates specified string fir characters . string? Concat(char? firstChar, string[]? strings) . Concatenate specific character with strings . string? Concat(object[]? objects) . Concatenates the specified strings . string? Concat&lt;T&gt;(T[]? objects) . Concatenates the specified strings . bool? Contains(string? content, string? what) . Determine whether the string contains the specified value . int? IndexOf(string? value, string? text) . Position of the first occurrence of the specified value . string? Soundex(string? value) . Computes soundex for the specified value . bool HasFuzzyMatchedWord(string text, string word, string separator) . Matches the specified text by splitting it with separator and applying fuzzy comparison . bool HasWordThatHasSmallerLevenshteinDistanceThan(string text, string word, int distance, string separator) . Matches the specified text by splitting it with separator and applying fuzzy comparison with a given distance . bool HasWordThatSoundLike(string text, string word, string separator) . Matches whether the specified word is present after being fuzzified within the specified text . bool HasTextThatSoundLikeSentence(string text, string sentence, string separator) . Matches whether the specified text is present in sentence after being fuzified . string? ToUpper(string value) . Makes the string uppercase . string? ToUpper(string value, string culture) . Makes the string uppercase within specified culture . string? ToUpperInvariant(string value) . Makes the string uppercase . string? ToLower(string value) . Makes the string lowercase . string? ToLower(string value, string culture) . Makes the string lowercase within specified culture . string? ToLowerInvariant(string value) . Makes the string lowercase . string? PadLeft(string? value, string? character, int? totalWidth) . Returns a new string that right-aligns the characters in this instance by padding them on the left with a specified Unicode character, for a specified total lengt . string? PadRight(string? value, string? character, int? totalWidth) . Returns a new string that left-aligns the characters in this instance by padding them on the right with a specified Unicode character, for a specified total length . string? Head(string? value, int? length) . Gets the first N characters of the string . string? Tail(string? value, int? length) . Gets the last N characters of the string . int? LevenshteinDistance(string? firstValue, string? secondValue) . Computes the Levenshtein distance between two strings . char? GetCharacterOf(string value, int index) . Gets the character at specified index . string? Reverse(string? value) . Reverses the string . string[] Split(string value, string[] separators) . Splits the string into an array of substrings based on the specified separators . char[] ToCharArray(string value) . Splits the string into an array of characters . string? LongestCommonSubstring(string source, string pattern) . Computes the longest common subsequence between two source and pattern . string Replicate(string value, int integer) . Clones the value n times . string? Translate(string? value, string? characters, string? translations) . Returns the string from the first argument after the characters specified in the second argument are translated into the characters specified in the third argument. string? Replace(string? text, string lookFor, string? changeTo) . Replaces the first occurrence of a specified string in this instance with another specified string . string? ToTitleCase(string? value) . Capitalizes the first letter of the string . string? GetNthWord(string? text, int? wordIndex, string? separator) . Gets the nth word of the string . string? GetFirstWord(string text, string separator) . Gets the first word of the string . string? GetSecondWord(string text, string separator) . Gets the second word of the string . string? GetThirdWord(string text, string separator) . Gets the third word of the string . string? GetLastWord(string? text, string? separator) . Gets last word of the string . bool? IsNullOrEmpty(string? value) . Determines whether the string is null or empty . bool? IsNullOrWhiteSpace(string? value) . Determines whether the string is null or whitespace . string? UrlEncode(string? value) . Encodes the value . string? UrlDecode(string? value) . Decodes the value . string? UriEncode(string? value) . Encodes the value . string? UriDecode(string? value) . Decodes the value . bool? StartsWith(string? value, string? prefix) . Determines whether the string starts with the specified prefix . bool? StartsWith(string? value, string? prefix, string comparison) . Determines whether the string starts with the specified prefix . bool? EndsWith(string? value, string? suffix) . Determines whether the string ends with the specified suffix . bool? EndsWith(string? value, string? suffix, string comparison) . Determines whether the string ends with the specified suffix . string? RegexReplace(string? value, string? pattern, string? replacement) . Replace the specified value part that matches the pattern with the replacement . string[]? SplitByLinuxNewLines(string? input) . Split string by Linux-style newlines (\\n) . string[]? SplitByWindowsNewLines(string? input) . Split string by Windows-style newlines (\\r\\n) . string[]? SplitByNewLines(string? input) . Smart split that handles both Windows (\\r\\n) and Linux (\\n) newlines . Decimal Sum(string name) . Gets the sum value of a given group. Decimal Sum(string name, int parent) . Gets the sum value of a given group. Decimal SumIncome(string name) . Gets the sum value of a given group. Decimal SumIncome(string name, int parent) . Gets the sum value of a given group. Decimal SumOutcome(string name) . Gets the outcome value of a given group. Decimal SumOutcome(string name, int parent) . Gets the outcome value of a given group. TimeSpan? SumTimeSpan(string name) . Gets the sum value of a given group. TimeSpan? SumTimeSpan(string name, int parent) . Gets the sum value of a given group. TimeSpan? MinTimeSpan(string name) . Gets the min value of a given group. TimeSpan? MinTimeSpan(string name, int parent) . Gets the min value of a given group. TimeSpan? MaxTimeSpan(string name) . Gets the max value of a given group. TimeSpan? MaxTimeSpan(string name, int parent) . Gets the min value of a given group. char? ToChar(string? value) . Converts given value to character . char? ToChar(int? value) . Converts given value to character . char? ToChar(short? value) . Converts given value to character . char? ToChar(byte? value) . Converts given value to character . char? ToChar(object? value) . Converts given value to character . DateTime? ToDateTime(string value) . Converts given value to DateTime . DateTime? ToDateTime(string value, string culture) . Converts given value to DateTime . Decimal? ToDecimal(string? value) . Converts given value to decimal . Decimal? ToDecimal(string value, string culture) . Converts given value to decimal withing given culture . Decimal? ToDecimal(byte? value) . Converts given value to Decimal . Decimal? ToDecimal(sbyte? value) . Converts given value to Decimal . Decimal? ToDecimal(short? value) . Converts given value to Decimal . Decimal? ToDecimal(ushort? value) . Converts given value to Decimal . Decimal? ToDecimal(long? value) . Converts given value to Decimal . Decimal? ToDecimal(ulong? value) . Converts given value to Decimal . Decimal? ToDecimal(float? value) . Converts given value to Decimal . Decimal? ToDecimal(double? value) . Converts given value to Decimal . Decimal? ToDecimal(object? value) . Converts given value to Decimal . double? ToDouble(object? value) . Converts given value to double . double? ToDouble(string? value) . Converts given value to double . double? ToDouble(byte? value) . Converts given value to double . double? ToDouble(sbyte? value) . Converts given value to double . double? ToDouble(short? value) . Converts given value to double . double? ToDouble(ushort? value) . Converts given value to double . double? ToDouble(int? value) . Converts given value to double . double? ToDouble(uint? value) . Converts given value to double . double? ToDouble(long? value) . Converts given value to double . double? ToDouble(ulong? value) . Converts given value to double . double? ToDouble(float? value) . Converts given value to double . double? ToDouble(double? value) . Converts given value to double . double? ToDouble(Decimal? value) . Converts given value to double . float? ToFloat(string? value) . Converts given value to float . float? ToFloat(byte? value) . Converts given value to float . float? ToFloat(sbyte? value) . Converts given value to float . float? ToFloat(short? value) . Converts given value to float . float? ToFloat(ushort? value) . Converts given value to float . float? ToFloat(int? value) . Converts given value to float . float? ToFloat(uint? value) . Converts given value to float . float? ToFloat(long? value) . Converts given value to float . float? ToFloat(ulong? value) . Converts given value to float . float? ToFloat(float? value) . Converts given value to float . float? ToFloat(Decimal? value) . Converts given value to float . int? ToInt32(string value) . Converts given value to int . int? ToInt32(byte? value) . Converts given value to int . int? ToInt32(sbyte? value) . Converts given value to int . int? ToInt32(short? value) . Converts given value to int . int? ToInt32(ushort? value) . Converts given value to int . int? ToInt32(int? value) . Converts given value to int . int? ToInt32(uint? value) . Converts given value to int . int? ToInt32(long? value) . Converts given value to int . int? ToInt32(ulong? value) . Converts given value to int . int? ToInt32(float? value) . Converts given value to int . int? ToInt32(double? value) . Converts given value to int . int? ToInt32(Decimal? value) . Converts given value to int . int? ToInt32(object? value) . Converts given value to int . long? ToInt64(string value) . Converts given value to Int64 . long? ToInt64(byte? value) . Converts given value to long . long? ToInt64(sbyte? value) . Converts given value to long . long? ToInt64(short? value) . Converts given value to long . long? ToInt64(ushort? value) . Converts given value to long . long? ToInt64(int? value) . Converts given value to long . long? ToInt64(uint? value) . Converts given value to long . long? ToInt64(long? value) . Converts given value to long . long? ToInt64(ulong? value) . Converts given value to long . long? ToInt64(float? value) . Converts given value to long . long? ToInt64(double? value) . Converts given value to long . long? ToInt64(Decimal? value) . Converts given value to long . long? ToInt64(object? value) . Converts given value to long . string? ToString(char? value) . Converts given value to string . string? ToString(DateTimeOffset? value) . Converts given value to string . string? ToString(DateTimeOffset? value, string format) . Converts given value to string . string? ToString(byte? value) . Converts given value to string . string? ToString(byte? value, string format) . Converts given value to string . string? ToString(sbyte? value) . Converts given value to string . string? ToString(sbyte? value, string format) . Converts given value to string . string? ToString(int? value) . Converts given value to string . string? ToString(int? value, string format) . Converts given value to string . string? ToString(uint? value) . Converts given value to string . string? ToString(uint? value, string format) . Converts given value to string . string? ToString(long? value) . Converts given value to string . string? ToString(long? value, string format) . Converts given value to string . string? ToString(ulong? value) . Converts given value to string . string? ToString(ulong? value, string format) . Converts given value to string . string? ToString(float? value) . Converts given value to string . string? ToString(float? value, string format) . Converts given value to string . string? ToString(double? value) . Converts given value to string . string? ToString(double? value, string format) . Converts given value to string . string? ToString(Decimal? value) . Converts given value to string . string? ToString(Decimal? value, string format) . Converts given value to string . string? ToString(bool? value) . Converts given value to string . string? ToString(object? value) . Converts given value to string . string? ToString&lt;T&gt;(T? value) . Converts given value to string . string ToString(string[] value) . Converts given value to string . string ToString&lt;T&gt;(T[] value) . Converts given value to string . TimeSpan? ToTimeSpan(string value) . Converts given value to TimeSpan . TimeSpan? ToTimeSpan(string value, string culture) . Converts given value to TimeSpan . IEnumerable&lt;T&gt; Window&lt;T&gt;(string name) . Gets the window . ",
    "url": "/data-sources/FlatFile/linux-arm64.html#base-methods",
    
    "relUrl": "/data-sources/FlatFile/linux-arm64.html#base-methods"
  },"98": {
    "doc": "Linux Arm64",
    "title": "Linux Arm64",
    "content": " ",
    "url": "/data-sources/FlatFile/linux-arm64.html",
    
    "relUrl": "/data-sources/FlatFile/linux-arm64.html"
  },"99": {
    "doc": "Linux Arm64",
    "title": "Musoq.DataSources.CANBus",
    "content": "Provides schema to work with CAN bus data. ",
    "url": "/data-sources/CANBus/linux-arm64.html#musoqdatasourcescanbus",
    
    "relUrl": "/data-sources/CANBus/linux-arm64.html#musoqdatasourcescanbus"
  },"100": {
    "doc": "Linux Arm64",
    "title": "Tables",
    "content": "Table is a collection of rows and columns that the plugin exposes. Below are the tables that are exposed by this data source. can.separatedvalues(string csvData, string dbcData, string idOfType = “dec” | “hex” | “bin”) . Treats csv, tsv or others separated values files as CAN bus records. The file must be of format Timestamp, ID, DLC, Data where Data values must be in format of unsigned integer number (123) or in hexadecimal (0x7b). Based on the loaded dbc file, you will have access access to additional column named {DBC_MESSAGE_NAME}. From here, you can access value {DBC_SIGNAL_NAME} of a message (ie. {DBC_MESSAGE_NAME}.{DBC_SIGNAL_NAME}). Returned value will be of type double . This table has a dynamic structure, which means that its columns and other details cannot be determined until runtime. As a result, it is not possible to include a complete description of this table in the documentation. Instead, the actual columns and other details of this table will be determined at runtime. However, this table has a well-known set of columns that are always present. These columns are described below. | Name | Type | Description | . | ID | uint | ID of the message entity | . | Timestamp | ulong | Timestamp of the message entity | . | Message | MessageEntity | The Message | . | IsWellKnown | uint | Whether the message is well known or not (is within dbc file) | . | DataAsBytes | byte[] | Data as bytes | . | Data | ulong | Data as ulong | . can.messages(string dbc) . Parses dbc file and returns all messages defined within it. | Name | Type | Description | . | Id | uint | ID of the message entity | . | IsExtId | bool | Is external Id | . | Name | string | Name of the message entity | . | DLC | ushort | DLC of the message entity | . | Transmitter | string | Transmitter of the message entity | . | Comment | string | Comment for the message entity | . | CycleTime | int | Cycle time for the message entity | . | Signals | SignalEntity[] | Signals of the message | . can.signals(string dbc) . Parses dbc file and returns all signals defined within it. | Name | Type | Description | . | Id | uint | Id of the signal entity | . | Name | string | Name of the signal entity | . | StartBit | ushort | Start bit of the signal entity | . | Length | ushort | Length of the signal entity | . | ByteOrder | byte | Byte order of the signal entity | . | InitialValue | double | Initial value of the signal entity | . | Factor | double | Factor for the signal entity | . | IsInteger | bool | Whether the signal entity is integer or not | . | Offset | double | Offset for the signal entity | . | Minimum | double | Minimum value for the signal entity | . | Maximum | double | Maximum value for the signal entity | . | Unit | string | Unit for the signal entity | . | Receiver | string[] | Receiver for the signal entity | . | Comment | string | Comment for the signal entity | . | Multiplexing | string | Multiplexing details for the signal entity | . | MessageName | string | Message name for the signal entity | . | ValueMap | string | Value map for the signal entity | . | MessageOrder | int | Order of signal within the message definition | . ",
    "url": "/data-sources/CANBus/linux-arm64.html#tables",
    
    "relUrl": "/data-sources/CANBus/linux-arm64.html#tables"
  },"101": {
    "doc": "Linux Arm64",
    "title": "Private Tables",
    "content": "Private tables are tables that are not exposed by the plugin, but are available for use in queries when using CROSS / OUTER APPLY operator. ValueMapEntity[] . Represent possible values of a signal . | Name | Type | Description | . | Value | int | Value of signal | . | Name | string | Name of the value | . ",
    "url": "/data-sources/CANBus/linux-arm64.html#private-tables",
    
    "relUrl": "/data-sources/CANBus/linux-arm64.html#private-tables"
  },"102": {
    "doc": "Linux Arm64",
    "title": "Methods",
    "content": "Methods are functions that can be called on the data source specific column. Below are the methods that are exposed by this data source. ulong EncodeMessage(string name, byte value) . Converts bytes to encoded signal of a message for CAN bus. ulong EncodeMessage(string name, short value) . Converts short to encoded signal of a message for CAN bus. ulong EncodeMessage(string name, ushort value) . Converts ushort to encoded signal of a message for CAN bus. ulong EncodeMessage(string name, int value) . Converts int to encoded signal of a message for CAN bus. ulong EncodeMessage(string name, uint value) . Converts uint to encoded signal of a message for CAN bus. ulong EncodeMessage(string name, long value) . Converts long to encoded signal of a message for CAN bus. ulong EncodeMessage(string name, ulong value) . Converts ulong to encoded signal of a message for CAN bus. ulong EncodeMessage(string name, float value) . Converts float to encoded signal of a message for CAN bus. ulong EncodeMessage(string name, double value) . Converts double to encoded signal of a message for CAN bus. ulong EncodeMessage(string jsonValues) . Converts structured json to encoded signals of a message for CAN bus. It’s structure is of { signalName1: signalValue1, ..., signalNameN : signalValueN } . double DecodeMessage(string name, byte value) . Treats byte as encoded signal of a message for CAN bus and decodes it. double DecodeMessage(string name, short value) . Treats short as encoded signal of a message for CAN bus and decodes it. double DecodeMessage(string name, ushort value) . Treats ushort as encoded signal of a message for CAN bus and decodes it. double DecodeMessage(string name, int value) . Treats int as encoded signal of a message for CAN bus and decodes it. double DecodeMessage(string name, uint value) . Treats uint as encoded signal of a message for CAN bus and decodes it. double DecodeMessage(string name, long value) . Treats long as encoded signal of a message for CAN bus and decodes it. double DecodeMessage(string name, ulong value) . Treats ulong as encoded signal of a message for CAN bus and decodes it. DateTimeOffset? FromTimestamp(ulong timestamp, string resolution) . Converts timestamp to date time offset. DateTimeOffset? ToDateTimeOffset(string date, string format) . Creates the date time offset from given date and time in a given format. ",
    "url": "/data-sources/CANBus/linux-arm64.html#methods",
    
    "relUrl": "/data-sources/CANBus/linux-arm64.html#methods"
  },"103": {
    "doc": "Linux Arm64",
    "title": "Base Methods",
    "content": "Base methods are methods that can be called on the data source specific column. Those methods are automatically inherited and enriches the data source specific methods. Below are those base methods that are exposed by this data source. int RowNumber() . Gets the row number of the current row. string? GetTypeName(object? obj) . Gets the typename of passed object. string AggregateValues(string name) . Aggregates values into a single value. string AggregateValues(string name, int parent) . Aggregates values into a single value. Decimal Avg(string name) . Gets the aggregated average value from the given group name . Decimal Avg(string name, int parent) . Gets the aggregated average value from the given group name . byte? ShiftLeft(byte? value, int shift) . Shifts the value to the left by the specified number of bits. short? ShiftLeft(short? value, int shift) . Shifts the value to the left by the specified number of bits. int? ShiftLeft(int? value, int shift) . Shifts the value to the left by the specified number of bits. long? ShiftLeft(long? value, int shift) . Shifts the value to the left by the specified number of bits. sbyte? ShiftLeft(sbyte? value, int shift) . Shifts the value to the left by the specified number of bits. ushort? ShiftLeft(ushort? value, int shift) . Shifts the value to the left by the specified number of bits. uint? ShiftLeft(uint? value, int shift) . Shifts the value to the left by the specified number of bits. ulong? ShiftLeft(ulong? value, int shift) . Shifts the value to the left by the specified number of bits. byte? ShiftRight(byte? value, int shift) . Shifts the value to the right by the specified number of bits. short? ShiftRight(short? value, int shift) . Shifts the value to the right by the specified number of bits. int? ShiftRight(int? value, int shift) . Shifts the value to the right by the specified number of bits. long? ShiftRight(long? value, int shift) . Shifts the value to the right by the specified number of bits. sbyte? ShiftRight(sbyte? value, int shift) . Shifts the value to the right by the specified number of bits. ushort? ShiftRight(ushort? value, int shift) . Shifts the value to the right by the specified number of bits. uint? ShiftRight(uint? value, int shift) . Shifts the value to the right by the specified number of bits. ulong? ShiftRight(ulong? value, int shift) . Shifts the value to the right by the specified number of bits. byte? Not(byte? value) . Performs bitwise NOT operation on a given value. short? Not(short? value) . Performs bitwise NOT operation on a given value. int? Not(int? value) . Performs bitwise NOT operation on a given value. long? Not(long? value) . Performs bitwise NOT operation on a given value. sbyte? Not(sbyte? value) . Performs bitwise NOT operation on a given value. ushort? Not(ushort? value) . Performs bitwise NOT operation on a given value. uint? Not(uint? value) . Performs bitwise NOT operation on a given value. ulong? Not(ulong? value) . Performs bitwise NOT operation on a given value. byte? And(byte? left, byte? right) . Performs bitwise AND operation on two given values. int? And(byte? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(byte? left, short? right) . Performs bitwise AND operation on two given values. int? And(byte? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(byte? left, int? right) . Performs bitwise AND operation on two given values. uint? And(byte? left, uint? right) . Performs bitwise AND operation on two given values. long? And(byte? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(byte? left, ulong? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, byte? right) . Performs bitwise AND operation on two given values. sbyte? And(sbyte? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, short? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, int? right) . Performs bitwise AND operation on two given values. uint? And(sbyte? left, uint? right) . Performs bitwise AND operation on two given values. long? And(sbyte? left, long? right) . Performs bitwise AND operation on two given values. int? And(short? left, byte? right) . Performs bitwise AND operation on two given values. int? And(short? left, sbyte? right) . Performs bitwise AND operation on two given values. short? And(short? left, short? right) . Performs bitwise AND operation on two given values. int? And(short? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(short? left, int? right) . Performs bitwise AND operation on two given values. uint? And(short? left, uint? right) . Performs bitwise AND operation on two given values. long? And(short? left, long? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, byte? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, short? right) . Performs bitwise AND operation on two given values. ushort? And(ushort? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, int? right) . Performs bitwise AND operation on two given values. uint? And(ushort? left, uint? right) . Performs bitwise AND operation on two given values. long? And(ushort? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(ushort? left, ulong? right) . Performs bitwise AND operation on two given values. int? And(int? left, byte? right) . Performs bitwise AND operation on two given values. int? And(int? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(int? left, short? right) . Performs bitwise AND operation on two given values. int? And(int? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(int? left, int? right) . Performs bitwise AND operation on two given values. uint? And(int? left, uint? right) . Performs bitwise AND operation on two given values. long? And(int? left, long? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, uint? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, byte? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, sbyte? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, short? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, ushort? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, int? right) . Performs bitwise AND operation on two given values. ulong? And(uint? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(uint? left, ulong? right) . Performs bitwise AND operation on two given values. long? And(long? left, long? right) . Performs bitwise AND operation on two given values. long? And(long? left, byte? right) . Performs bitwise AND operation on two given values. long? And(long? left, sbyte? right) . Performs bitwise AND operation on two given values. long? And(long? left, short? right) . Performs bitwise AND operation on two given values. long? And(long? left, ushort? right) . Performs bitwise AND operation on two given values. long? And(long? left, int? right) . Performs bitwise AND operation on two given values. long? And(long? left, uint? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, byte? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, ushort? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, uint? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, ulong? right) . Performs bitwise AND operation on two given values. byte? Or(byte? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, short? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(byte? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(byte? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(byte? left, ulong? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, byte? right) . Performs bitwise OR operation on two given values. sbyte? Or(sbyte? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, short? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(sbyte? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(sbyte? left, long? right) . Performs bitwise OR operation on two given values. int? Or(short? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(short? left, sbyte? right) . Performs bitwise OR operation on two given values. short? Or(short? left, short? right) . Performs bitwise OR operation on two given values. int? Or(short? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(short? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(short? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(short? left, long? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, short? right) . Performs bitwise OR operation on two given values. ushort? Or(ushort? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(ushort? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(ushort? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(ushort? left, ulong? right) . Performs bitwise OR operation on two given values. int? Or(int? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(int? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(int? left, short? right) . Performs bitwise OR operation on two given values. int? Or(int? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(int? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(int? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(int? left, long? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, uint? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, byte? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, sbyte? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, short? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, ushort? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, int? right) . Performs bitwise OR operation on two given values. ulong? Or(uint? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(uint? left, ulong? right) . Performs bitwise OR operation on two given values. long? Or(long? left, long? right) . Performs bitwise OR operation on two given values. long? Or(long? left, byte? right) . Performs bitwise OR operation on two given values. long? Or(long? left, sbyte? right) . Performs bitwise OR operation on two given values. long? Or(long? left, short? right) . Performs bitwise OR operation on two given values. long? Or(long? left, ushort? right) . Performs bitwise OR operation on two given values. long? Or(long? left, int? right) . Performs bitwise OR operation on two given values. long? Or(long? left, uint? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, byte? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, ushort? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, uint? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, ulong? right) . Performs bitwise OR operation on two given values. byte? Xor(byte? left, byte? right) . Performs bitwise OR operation on two given values. int? Xor(byte? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(byte? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(byte? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(byte? left, ulong? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, byte? right) . Performs bitwise Xor operation on two given values. sbyte? Xor(sbyte? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(sbyte? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(sbyte? left, long? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, sbyte? right) . Performs bitwise Xor operation on two given values. short? Xor(short? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, ushort? right) . Performs bitwise XOR operation on two given values. int? Xor(short? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(short? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(short? left, long? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, short? right) . Performs bitwise Xor operation on two given values. ushort? Xor(ushort? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(ushort? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(ushort? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ushort? left, ulong? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(int? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(int? left, long? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, uint? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, byte? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, sbyte? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, short? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, ushort? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, int? right) . Performs bitwise Xor operation on two given values. ulong? Xor(uint? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(uint? left, ulong? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, long? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, byte? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, sbyte? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, short? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, ushort? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, int? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, uint? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, ulong? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, byte? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, ushort? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, uint? right) . Performs bitwise Xor operation on two given values. byte[] GetBytes(string? content) . Gets the bytes from the given string. byte[] GetBytes(string? content, int length, int offset) . Gets the bytes from the given string within given offset and length. byte?[]? GetBytes(char? character) . Gets the bytes from the given character. byte?[]? GetBytes(bool? bit) . Gets the bytes from the given boolean. byte?[]? GetBytes(long? value) . Gets the bytes from the given long. byte?[]? GetBytes(int? value) . Gets the bytes from the given int. byte?[]? GetBytes(short? value) . Gets the bytes from the given short. byte?[]? GetBytes(ulong? value) . Gets the bytes from the given ulong. byte?[]? GetBytes(ushort? value) . Gets the bytes from the given ushort. byte?[]? GetBytes(uint? value) . Gets the bytes from the given uint. byte?[]? GetBytes(Decimal? value) . Gets the bytes from the given decimal. byte?[]? GetBytes(double? value) . Gets the bytes from the given double. byte?[]? GetBytes(float? value) . Gets the bytes from the given float. string? ToBin(byte?[]? bytes, string delimiter) . Converts given bytes to binary with defined delimiter . string ToBin&lt;T&gt;(T value) . Converts given value to binary . string ToOcta&lt;T&gt;(T value) . Converts given value to octal . string ToDec&lt;T&gt;(T value) . Converts given value to decimal . string ToBase64(byte[] value) . Converts given value to string . string ToBase64(byte[] value, int offset, int length) . Converts given array of bytes to string . byte[] FromBase64(string value) . Converts given string to bytes array . bool FromBytesToBool(byte[] value) . Converts bytes to boolean value. short FromBytesToInt16(byte[] value) . Converts bytes to a 16-bit signed integer. ushort FromBytesToUInt16(byte[] value) . Converts bytes to a 16-bit unsigned integer. int FromBytesToInt32(byte[] value) . Converts bytes to a 32-bit signed integer. uint FromBytesToUInt32(byte[] value) . Converts bytes to a 32-bit unsigned integer. long FromBytesToInt64(byte[] value) . Converts bytes to a 64-bit signed integer. ulong FromBytesToUInt64(byte[] value) . Converts bytes to a 64-bit unsigned integer. float FromBytesToFloat(byte[] value) . Converts bytes to a float value. double FromBytesToDouble(byte[] value) . Converts bytes to a float value. string FromBytesToString(byte[] value) . Converts bytes to a string. byte[] ToBytes(bool value) . Converts boolean value to bytes. byte[] ToBytes(short value) . Converts short value to bytes. byte[] ToBytes(ushort value) . Converts ushort value to bytes. byte[] ToBytes(int value) . Converts int value to bytes. byte[] ToBytes(uint value) . Converts uint value to bytes. byte[] ToBytes(long value) . Converts long value to bytes. byte[] ToBytes(ulong value) . Converts long value to bytes. string? ToHex(byte?[]? bytes, string delimiter) . Converts given bytes to hex with defined delimiter . string? ToHex&lt;T&gt;(T value) . Converts given value to binary . int Count(string name) . Gets the count value of a given group. int Count(string name, int parent) . Gets the count value of a given group. int ExtractFromDate(string? date, string partOfDate) . Extracts part of the date from the date . int ExtractFromDate(string date, string culture, string partOfDate) . Extracts part of the date from the date based on given culture . DateTimeOffset? GetDate() . Gets the current datetime . DateTimeOffset? UtcGetDate() . Gets the current datetime in UTC . int? Month(DateTimeOffset? value) . Gets the month from DateTimeOffset . int? Year(DateTimeOffset? value) . Gets the year from DateTimeOffset . int? Day(DateTimeOffset? value) . Gets the day from DateTimeOffset . int? Hour(DateTimeOffset? value) . Gets the hour from DateTimeOffset . int? Minute(DateTimeOffset? value) . Gets the minute from DateTimeOffset . int? Second(DateTimeOffset? value) . Gets the second from DateTimeOffset . int? Milliseconds(DateTimeOffset? value) . Gets the millisecond from DateTimeOffset . int? DayOfWeek(DateTimeOffset? value) . Gets the day of week from DateTimeOffset . TimeSpan? ExtractTimeSpan(DateTimeOffset? dateTimeOffset) . Extracts time from DateTimeOffset . DateTime? ToDateTimeOffset(string value) . Converts given value to DateTimeOffset . DateTimeOffset? ToDateTimeOffset(string value, string culture) . Converts given value to DateTimeOffset . IEnumerable&lt;T&gt;? Skip&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? skipCount) . Skips elements from the beginning of the sequence. IEnumerable&lt;T&gt;? Take&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? takeCount) . Takes elements from the beginning of the sequence. IEnumerable&lt;T&gt;? SkipAndTake&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? skipCount, int? takeCount) . Skip and takes elements from the beginning of the sequence. T[]? EnumerableToArray&lt;T&gt;(IEnumerable&lt;T&gt;? values) . Turn array arguments of T into a single array. T[]? MergeArrays&lt;T&gt;(T[][]? values) . Turn array arguments of T into a single array. IEnumerable&lt;T&gt;? LongestCommonSequence&lt;T&gt;(IEnumerable&lt;T&gt;? source, IEnumerable&lt;T&gt;? pattern) . Computes longest common sequence of two given sequences . T? GetElementAtOrDefault&lt;T&gt;(IEnumerable&lt;T&gt;? enumerable, int? index) . Gets the element at the specified index in a sequence . int? Length&lt;T&gt;(IEnumerable&lt;T&gt;? enumerable) . Gets the length of the sequence . int? Length&lt;T&gt;(T[]? array) . Gets the length of the array . T? Choose&lt;T&gt;(int? index, T[] values) . Gets the value of an array at the specified index . T If&lt;T&gt;(bool expressionResult, T a, T b) . Chose a or b value based on the expression result . bool? Match(string? regex, string? content) . Determine whether content matches the specified pattern . byte? Coalesce(byte?[] array) . Gets the first non-null value in a list . sbyte? Coalesce(sbyte?[] array) . Gets the first non-null value in a list . short? Coalesce(short?[] array) . Gets the first non-null value in a list . ushort? Coalesce(ushort?[] array) . Gets the first non-null value in a list . int? Coalesce(int?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(uint?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(long?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(ulong?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(Decimal?[] array) . Gets the first non-null value in a list . T? Coalesce&lt;T&gt;(T[] array) . Gets the first non-null value in a list . IEnumerable&lt;T&gt;? Distinct&lt;T&gt;(IEnumerable&lt;T&gt;? values) . Returns distinct elements from a collection. string? Md5(string? content) . Gets the md5 hash of the given string. string? Md5(byte?[]? content) . Gets the md5 hash of the given bytes array. string? Sha1(string? content) . Gets the sha256 hash of the given string. string? Sha1(byte?[]? content) . Gets the sha256 hash of the given bytes array. string? Sha256(string? content) . Gets the sha256 hash of the given string. string? Sha256(byte?[]? content) . Gets the sha256 hash of the given bytes array. string? Sha512(string? content) . Gets the sha256 hash of the given string. string? Sha512(byte?[]? content) . Gets the sha256 hash of the bytes array. string? ToJson&lt;T&gt;(T? obj) . Converts object to json. string[] ExtractFromJsonToArray(string? json, string? path) . Extracts values from json by path. string? ExtractFromJson(string? json, string? path) . Extracts values from json by path and joins them with comma. Decimal? Abs(Decimal? value) . Gets the absolute value . long? Abs(long? value) . Gets the absolute value . int? Abs(int? value) . Gets the absolute value . Decimal? Ceil(Decimal? value) . Gets the ceiling value . Decimal? Floor(Decimal? value) . Gets the floor value . Decimal? Sign(Decimal? value) . Determine whether value is greater, equal or less that zero . long? Sign(long? value) . Determine whether value is greater, equal or less that zero . Decimal? Round(Decimal? value, int precision) . Rounds the value within given precision . Decimal? PercentOf(Decimal? value, Decimal? max) . Gets the percentage of the value . int Rand() . Gets the random integer value . int? Rand(int? min, int? max) . Gets the random integer value . double? Pow(Decimal? x, Decimal? y) . Computes the pow between two values . double? Pow(double? x, double? y) . Computes the pow between two values . double? Sqrt(Decimal? x) . Computes the sqrt of a given value . double? Sqrt(double? x) . Computes the sqrt of a given value . double? Sqrt(long? x) . Computes the sqrt of a given value . double? PercentRank&lt;T&gt;(IEnumerable&lt;T&gt;? window, T? value) . Computes the percent rank of a given window . double? Log(Decimal? base, Decimal? value) . Calculates the logarithm of a value with a specified base. Decimal? Sin(Decimal? value) . Calculates sine of a value. double? Sin(double? value) . Calculates sine of a value. float? Sin(float? value) . Calculates sine of a value. Decimal? Cos(Decimal? value) . Calculates cosine of a value. double? Cos(double? value) . Calculates cosine of a value. float? Cos(float? value) . Calculates cosine of a value. Decimal Max(string name) . Gets the max value of a given group. Decimal Max(string name, int parent) . Gets the max value of a given group. Decimal Min(string name) . Gets the min value of a given group. Decimal Min(string name, int parent) . Gets the min value of a given group. Decimal StDev(string name, int parent) . Gets the StDev value of a given group. string NewId() . Gets the new identifier . string? Trim(string? value) . Removes leading and trailing whitespace from a string. string? TrimStart(string? value) . Removes leading whitespace from a string. string? TrimEnd(string? value) . Removes trailing whitespace from a string. string? Substring(string? value, int? index, int? length) . Gets the substring from the string. string? Substring(string value, int? length) . Gets the substring from the string . string? Concat(string[]? strings) . Concatenates the specified values . string? Concat(char?[]? characters) . Concatenates the specified characters . string? Concat(string? firstString, char?[]? chars) . Concatenates specified string fir characters . string? Concat(char? firstChar, string[]? strings) . Concatenate specific character with strings . string? Concat(object[]? objects) . Concatenates the specified strings . string? Concat&lt;T&gt;(T[]? objects) . Concatenates the specified strings . bool? Contains(string? content, string? what) . Determine whether the string contains the specified value . int? IndexOf(string? value, string? text) . Position of the first occurrence of the specified value . string? Soundex(string? value) . Computes soundex for the specified value . bool HasFuzzyMatchedWord(string text, string word, string separator) . Matches the specified text by splitting it with separator and applying fuzzy comparison . bool HasWordThatHasSmallerLevenshteinDistanceThan(string text, string word, int distance, string separator) . Matches the specified text by splitting it with separator and applying fuzzy comparison with a given distance . bool HasWordThatSoundLike(string text, string word, string separator) . Matches whether the specified word is present after being fuzzified within the specified text . bool HasTextThatSoundLikeSentence(string text, string sentence, string separator) . Matches whether the specified text is present in sentence after being fuzified . string? ToUpper(string value) . Makes the string uppercase . string? ToUpper(string value, string culture) . Makes the string uppercase within specified culture . string? ToUpperInvariant(string value) . Makes the string uppercase . string? ToLower(string value) . Makes the string lowercase . string? ToLower(string value, string culture) . Makes the string lowercase within specified culture . string? ToLowerInvariant(string value) . Makes the string lowercase . string? PadLeft(string? value, string? character, int? totalWidth) . Returns a new string that right-aligns the characters in this instance by padding them on the left with a specified Unicode character, for a specified total lengt . string? PadRight(string? value, string? character, int? totalWidth) . Returns a new string that left-aligns the characters in this instance by padding them on the right with a specified Unicode character, for a specified total length . string? Head(string? value, int? length) . Gets the first N characters of the string . string? Tail(string? value, int? length) . Gets the last N characters of the string . int? LevenshteinDistance(string? firstValue, string? secondValue) . Computes the Levenshtein distance between two strings . char? GetCharacterOf(string value, int index) . Gets the character at specified index . string? Reverse(string? value) . Reverses the string . string[] Split(string value, string[] separators) . Splits the string into an array of substrings based on the specified separators . char[] ToCharArray(string value) . Splits the string into an array of characters . string? LongestCommonSubstring(string source, string pattern) . Computes the longest common subsequence between two source and pattern . string Replicate(string value, int integer) . Clones the value n times . string? Translate(string? value, string? characters, string? translations) . Returns the string from the first argument after the characters specified in the second argument are translated into the characters specified in the third argument. string? Replace(string? text, string lookFor, string? changeTo) . Replaces the first occurrence of a specified string in this instance with another specified string . string? ToTitleCase(string? value) . Capitalizes the first letter of the string . string? GetNthWord(string? text, int? wordIndex, string? separator) . Gets the nth word of the string . string? GetFirstWord(string text, string separator) . Gets the first word of the string . string? GetSecondWord(string text, string separator) . Gets the second word of the string . string? GetThirdWord(string text, string separator) . Gets the third word of the string . string? GetLastWord(string? text, string? separator) . Gets last word of the string . bool? IsNullOrEmpty(string? value) . Determines whether the string is null or empty . bool? IsNullOrWhiteSpace(string? value) . Determines whether the string is null or whitespace . string? UrlEncode(string? value) . Encodes the value . string? UrlDecode(string? value) . Decodes the value . string? UriEncode(string? value) . Encodes the value . string? UriDecode(string? value) . Decodes the value . bool? StartsWith(string? value, string? prefix) . Determines whether the string starts with the specified prefix . bool? StartsWith(string? value, string? prefix, string comparison) . Determines whether the string starts with the specified prefix . bool? EndsWith(string? value, string? suffix) . Determines whether the string ends with the specified suffix . bool? EndsWith(string? value, string? suffix, string comparison) . Determines whether the string ends with the specified suffix . string? RegexReplace(string? value, string? pattern, string? replacement) . Replace the specified value part that matches the pattern with the replacement . string[]? SplitByLinuxNewLines(string? input) . Split string by Linux-style newlines (\\n) . string[]? SplitByWindowsNewLines(string? input) . Split string by Windows-style newlines (\\r\\n) . string[]? SplitByNewLines(string? input) . Smart split that handles both Windows (\\r\\n) and Linux (\\n) newlines . Decimal Sum(string name) . Gets the sum value of a given group. Decimal Sum(string name, int parent) . Gets the sum value of a given group. Decimal SumIncome(string name) . Gets the sum value of a given group. Decimal SumIncome(string name, int parent) . Gets the sum value of a given group. Decimal SumOutcome(string name) . Gets the outcome value of a given group. Decimal SumOutcome(string name, int parent) . Gets the outcome value of a given group. TimeSpan? SumTimeSpan(string name) . Gets the sum value of a given group. TimeSpan? SumTimeSpan(string name, int parent) . Gets the sum value of a given group. TimeSpan? MinTimeSpan(string name) . Gets the min value of a given group. TimeSpan? MinTimeSpan(string name, int parent) . Gets the min value of a given group. TimeSpan? MaxTimeSpan(string name) . Gets the max value of a given group. TimeSpan? MaxTimeSpan(string name, int parent) . Gets the min value of a given group. char? ToChar(string? value) . Converts given value to character . char? ToChar(int? value) . Converts given value to character . char? ToChar(short? value) . Converts given value to character . char? ToChar(byte? value) . Converts given value to character . char? ToChar(object? value) . Converts given value to character . DateTime? ToDateTime(string value) . Converts given value to DateTime . DateTime? ToDateTime(string value, string culture) . Converts given value to DateTime . Decimal? ToDecimal(string? value) . Converts given value to decimal . Decimal? ToDecimal(string value, string culture) . Converts given value to decimal withing given culture . Decimal? ToDecimal(byte? value) . Converts given value to Decimal . Decimal? ToDecimal(sbyte? value) . Converts given value to Decimal . Decimal? ToDecimal(short? value) . Converts given value to Decimal . Decimal? ToDecimal(ushort? value) . Converts given value to Decimal . Decimal? ToDecimal(long? value) . Converts given value to Decimal . Decimal? ToDecimal(ulong? value) . Converts given value to Decimal . Decimal? ToDecimal(float? value) . Converts given value to Decimal . Decimal? ToDecimal(double? value) . Converts given value to Decimal . Decimal? ToDecimal(object? value) . Converts given value to Decimal . double? ToDouble(object? value) . Converts given value to double . double? ToDouble(string? value) . Converts given value to double . double? ToDouble(byte? value) . Converts given value to double . double? ToDouble(sbyte? value) . Converts given value to double . double? ToDouble(short? value) . Converts given value to double . double? ToDouble(ushort? value) . Converts given value to double . double? ToDouble(int? value) . Converts given value to double . double? ToDouble(uint? value) . Converts given value to double . double? ToDouble(long? value) . Converts given value to double . double? ToDouble(ulong? value) . Converts given value to double . double? ToDouble(float? value) . Converts given value to double . double? ToDouble(double? value) . Converts given value to double . double? ToDouble(Decimal? value) . Converts given value to double . float? ToFloat(string? value) . Converts given value to float . float? ToFloat(byte? value) . Converts given value to float . float? ToFloat(sbyte? value) . Converts given value to float . float? ToFloat(short? value) . Converts given value to float . float? ToFloat(ushort? value) . Converts given value to float . float? ToFloat(int? value) . Converts given value to float . float? ToFloat(uint? value) . Converts given value to float . float? ToFloat(long? value) . Converts given value to float . float? ToFloat(ulong? value) . Converts given value to float . float? ToFloat(float? value) . Converts given value to float . float? ToFloat(Decimal? value) . Converts given value to float . int? ToInt32(string value) . Converts given value to int . int? ToInt32(byte? value) . Converts given value to int . int? ToInt32(sbyte? value) . Converts given value to int . int? ToInt32(short? value) . Converts given value to int . int? ToInt32(ushort? value) . Converts given value to int . int? ToInt32(int? value) . Converts given value to int . int? ToInt32(uint? value) . Converts given value to int . int? ToInt32(long? value) . Converts given value to int . int? ToInt32(ulong? value) . Converts given value to int . int? ToInt32(float? value) . Converts given value to int . int? ToInt32(double? value) . Converts given value to int . int? ToInt32(Decimal? value) . Converts given value to int . int? ToInt32(object? value) . Converts given value to int . long? ToInt64(string value) . Converts given value to Int64 . long? ToInt64(byte? value) . Converts given value to long . long? ToInt64(sbyte? value) . Converts given value to long . long? ToInt64(short? value) . Converts given value to long . long? ToInt64(ushort? value) . Converts given value to long . long? ToInt64(int? value) . Converts given value to long . long? ToInt64(uint? value) . Converts given value to long . long? ToInt64(long? value) . Converts given value to long . long? ToInt64(ulong? value) . Converts given value to long . long? ToInt64(float? value) . Converts given value to long . long? ToInt64(double? value) . Converts given value to long . long? ToInt64(Decimal? value) . Converts given value to long . long? ToInt64(object? value) . Converts given value to long . string? ToString(char? value) . Converts given value to string . string? ToString(DateTimeOffset? value) . Converts given value to string . string? ToString(DateTimeOffset? value, string format) . Converts given value to string . string? ToString(byte? value) . Converts given value to string . string? ToString(byte? value, string format) . Converts given value to string . string? ToString(sbyte? value) . Converts given value to string . string? ToString(sbyte? value, string format) . Converts given value to string . string? ToString(int? value) . Converts given value to string . string? ToString(int? value, string format) . Converts given value to string . string? ToString(uint? value) . Converts given value to string . string? ToString(uint? value, string format) . Converts given value to string . string? ToString(long? value) . Converts given value to string . string? ToString(long? value, string format) . Converts given value to string . string? ToString(ulong? value) . Converts given value to string . string? ToString(ulong? value, string format) . Converts given value to string . string? ToString(float? value) . Converts given value to string . string? ToString(float? value, string format) . Converts given value to string . string? ToString(double? value) . Converts given value to string . string? ToString(double? value, string format) . Converts given value to string . string? ToString(Decimal? value) . Converts given value to string . string? ToString(Decimal? value, string format) . Converts given value to string . string? ToString(bool? value) . Converts given value to string . string? ToString(object? value) . Converts given value to string . string? ToString&lt;T&gt;(T? value) . Converts given value to string . string ToString(string[] value) . Converts given value to string . string ToString&lt;T&gt;(T[] value) . Converts given value to string . TimeSpan? ToTimeSpan(string value) . Converts given value to TimeSpan . TimeSpan? ToTimeSpan(string value, string culture) . Converts given value to TimeSpan . IEnumerable&lt;T&gt; Window&lt;T&gt;(string name) . Gets the window . ",
    "url": "/data-sources/CANBus/linux-arm64.html#base-methods",
    
    "relUrl": "/data-sources/CANBus/linux-arm64.html#base-methods"
  },"104": {
    "doc": "Linux Arm64",
    "title": "Linux Arm64",
    "content": " ",
    "url": "/data-sources/CANBus/linux-arm64.html",
    
    "relUrl": "/data-sources/CANBus/linux-arm64.html"
  },"105": {
    "doc": "Linux Arm64",
    "title": "Musoq.DataSources.Ollama",
    "content": "Provides interface to work with Ollama API. ",
    "url": "/data-sources/Ollama/linux-arm64.html#musoqdatasourcesollama",
    
    "relUrl": "/data-sources/Ollama/linux-arm64.html#musoqdatasourcesollama"
  },"106": {
    "doc": "Linux Arm64",
    "title": "Tables",
    "content": "Table is a collection of rows and columns that the plugin exposes. Below are the tables that are exposed by this data source. ollama.llm(string model) . Gives the access to Ollama api . Environment variables . In order to use the plugin, the user must set any required environment variables as specified in the environments element. Failure to do so may result in the plugin not functioning correctly. | Name | Is required | Description | . | OLLAMA_BASE_URL | false | Ollama base url, default http://localhost:11434 | . Columns . This table has a dynamic structure, which means that its columns and other details cannot be determined until runtime. As a result, it is not possible to include a complete description of this table in the documentation. Instead, the actual columns and other details of this table will be determined at runtime. ollama.llm(string model, float temperature) . Gives the access to Ollama api . Environment variables . In order to use the plugin, the user must set any required environment variables as specified in the environments element. Failure to do so may result in the plugin not functioning correctly. | Name | Is required | Description | . | OLLAMA_BASE_URL | false | Ollama base url, default http://localhost:11434 | . Columns . This table has a dynamic structure, which means that its columns and other details cannot be determined until runtime. As a result, it is not possible to include a complete description of this table in the documentation. Instead, the actual columns and other details of this table will be determined at runtime. ",
    "url": "/data-sources/Ollama/linux-arm64.html#tables",
    
    "relUrl": "/data-sources/Ollama/linux-arm64.html#tables"
  },"107": {
    "doc": "Linux Arm64",
    "title": "Methods",
    "content": "Methods are functions that can be called on the data source specific column. Below are the methods that are exposed by this data source. bool IsContentAbout(string content, string question) . Determines whether the provided content is related to the given question. Returns true if the content is related, otherwise returns false. string Sentiment(string content, bool throwOnUnknown) . Performs sentiment analysis on the provided content and returns the sentiment as one of the following strings: “POSITIVE”, “NEGATIVE”, “NEUTRAL”, or “UNKNOWN”. string SummarizeContent(string content) . Summarizes the provided content using the OpenAI API and returns the summarized text. string TranslateContent(string content, string from, string to) . Translates the provided content from the source language to the destination language using the OpenAI API. string[] Entities(string content, bool throwOnException) . Extracts entities from the provided content using the OpenAI API and returns an array of entity strings. string DescribeImage(string imageBase64) . Describes the provided image using the Ollama API and returns the description. string AskImage(string question, string imageBase64) . Ask the provided image using the Ollama API and returns the response. bool IsQuestionApplicableToImage(string question, string imageBase64) . Ask the provided image using the Ollama API and returns the response. string LlmPerform&lt;TColumnType&gt;(string whatToDo, TColumnType column) . Ask the provided image using the Ollama API and returns the response. int CountTokens(string content) . Counts the number of tokens in the provided content using the specified model. int CountTokens(string content) . Counts the number of tokens in the provided content using the specified model. ",
    "url": "/data-sources/Ollama/linux-arm64.html#methods",
    
    "relUrl": "/data-sources/Ollama/linux-arm64.html#methods"
  },"108": {
    "doc": "Linux Arm64",
    "title": "Base Methods",
    "content": "Base methods are methods that can be called on the data source specific column. Those methods are automatically inherited and enriches the data source specific methods. Below are those base methods that are exposed by this data source. int RowNumber() . Gets the row number of the current row. string? GetTypeName(object? obj) . Gets the typename of passed object. string AggregateValues(string name) . Aggregates values into a single value. string AggregateValues(string name, int parent) . Aggregates values into a single value. Decimal Avg(string name) . Gets the aggregated average value from the given group name . Decimal Avg(string name, int parent) . Gets the aggregated average value from the given group name . byte? ShiftLeft(byte? value, int shift) . Shifts the value to the left by the specified number of bits. short? ShiftLeft(short? value, int shift) . Shifts the value to the left by the specified number of bits. int? ShiftLeft(int? value, int shift) . Shifts the value to the left by the specified number of bits. long? ShiftLeft(long? value, int shift) . Shifts the value to the left by the specified number of bits. sbyte? ShiftLeft(sbyte? value, int shift) . Shifts the value to the left by the specified number of bits. ushort? ShiftLeft(ushort? value, int shift) . Shifts the value to the left by the specified number of bits. uint? ShiftLeft(uint? value, int shift) . Shifts the value to the left by the specified number of bits. ulong? ShiftLeft(ulong? value, int shift) . Shifts the value to the left by the specified number of bits. byte? ShiftRight(byte? value, int shift) . Shifts the value to the right by the specified number of bits. short? ShiftRight(short? value, int shift) . Shifts the value to the right by the specified number of bits. int? ShiftRight(int? value, int shift) . Shifts the value to the right by the specified number of bits. long? ShiftRight(long? value, int shift) . Shifts the value to the right by the specified number of bits. sbyte? ShiftRight(sbyte? value, int shift) . Shifts the value to the right by the specified number of bits. ushort? ShiftRight(ushort? value, int shift) . Shifts the value to the right by the specified number of bits. uint? ShiftRight(uint? value, int shift) . Shifts the value to the right by the specified number of bits. ulong? ShiftRight(ulong? value, int shift) . Shifts the value to the right by the specified number of bits. byte? Not(byte? value) . Performs bitwise NOT operation on a given value. short? Not(short? value) . Performs bitwise NOT operation on a given value. int? Not(int? value) . Performs bitwise NOT operation on a given value. long? Not(long? value) . Performs bitwise NOT operation on a given value. sbyte? Not(sbyte? value) . Performs bitwise NOT operation on a given value. ushort? Not(ushort? value) . Performs bitwise NOT operation on a given value. uint? Not(uint? value) . Performs bitwise NOT operation on a given value. ulong? Not(ulong? value) . Performs bitwise NOT operation on a given value. byte? And(byte? left, byte? right) . Performs bitwise AND operation on two given values. int? And(byte? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(byte? left, short? right) . Performs bitwise AND operation on two given values. int? And(byte? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(byte? left, int? right) . Performs bitwise AND operation on two given values. uint? And(byte? left, uint? right) . Performs bitwise AND operation on two given values. long? And(byte? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(byte? left, ulong? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, byte? right) . Performs bitwise AND operation on two given values. sbyte? And(sbyte? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, short? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, int? right) . Performs bitwise AND operation on two given values. uint? And(sbyte? left, uint? right) . Performs bitwise AND operation on two given values. long? And(sbyte? left, long? right) . Performs bitwise AND operation on two given values. int? And(short? left, byte? right) . Performs bitwise AND operation on two given values. int? And(short? left, sbyte? right) . Performs bitwise AND operation on two given values. short? And(short? left, short? right) . Performs bitwise AND operation on two given values. int? And(short? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(short? left, int? right) . Performs bitwise AND operation on two given values. uint? And(short? left, uint? right) . Performs bitwise AND operation on two given values. long? And(short? left, long? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, byte? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, short? right) . Performs bitwise AND operation on two given values. ushort? And(ushort? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, int? right) . Performs bitwise AND operation on two given values. uint? And(ushort? left, uint? right) . Performs bitwise AND operation on two given values. long? And(ushort? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(ushort? left, ulong? right) . Performs bitwise AND operation on two given values. int? And(int? left, byte? right) . Performs bitwise AND operation on two given values. int? And(int? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(int? left, short? right) . Performs bitwise AND operation on two given values. int? And(int? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(int? left, int? right) . Performs bitwise AND operation on two given values. uint? And(int? left, uint? right) . Performs bitwise AND operation on two given values. long? And(int? left, long? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, uint? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, byte? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, sbyte? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, short? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, ushort? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, int? right) . Performs bitwise AND operation on two given values. ulong? And(uint? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(uint? left, ulong? right) . Performs bitwise AND operation on two given values. long? And(long? left, long? right) . Performs bitwise AND operation on two given values. long? And(long? left, byte? right) . Performs bitwise AND operation on two given values. long? And(long? left, sbyte? right) . Performs bitwise AND operation on two given values. long? And(long? left, short? right) . Performs bitwise AND operation on two given values. long? And(long? left, ushort? right) . Performs bitwise AND operation on two given values. long? And(long? left, int? right) . Performs bitwise AND operation on two given values. long? And(long? left, uint? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, byte? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, ushort? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, uint? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, ulong? right) . Performs bitwise AND operation on two given values. byte? Or(byte? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, short? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(byte? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(byte? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(byte? left, ulong? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, byte? right) . Performs bitwise OR operation on two given values. sbyte? Or(sbyte? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, short? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(sbyte? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(sbyte? left, long? right) . Performs bitwise OR operation on two given values. int? Or(short? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(short? left, sbyte? right) . Performs bitwise OR operation on two given values. short? Or(short? left, short? right) . Performs bitwise OR operation on two given values. int? Or(short? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(short? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(short? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(short? left, long? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, short? right) . Performs bitwise OR operation on two given values. ushort? Or(ushort? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(ushort? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(ushort? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(ushort? left, ulong? right) . Performs bitwise OR operation on two given values. int? Or(int? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(int? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(int? left, short? right) . Performs bitwise OR operation on two given values. int? Or(int? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(int? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(int? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(int? left, long? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, uint? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, byte? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, sbyte? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, short? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, ushort? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, int? right) . Performs bitwise OR operation on two given values. ulong? Or(uint? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(uint? left, ulong? right) . Performs bitwise OR operation on two given values. long? Or(long? left, long? right) . Performs bitwise OR operation on two given values. long? Or(long? left, byte? right) . Performs bitwise OR operation on two given values. long? Or(long? left, sbyte? right) . Performs bitwise OR operation on two given values. long? Or(long? left, short? right) . Performs bitwise OR operation on two given values. long? Or(long? left, ushort? right) . Performs bitwise OR operation on two given values. long? Or(long? left, int? right) . Performs bitwise OR operation on two given values. long? Or(long? left, uint? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, byte? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, ushort? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, uint? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, ulong? right) . Performs bitwise OR operation on two given values. byte? Xor(byte? left, byte? right) . Performs bitwise OR operation on two given values. int? Xor(byte? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(byte? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(byte? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(byte? left, ulong? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, byte? right) . Performs bitwise Xor operation on two given values. sbyte? Xor(sbyte? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(sbyte? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(sbyte? left, long? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, sbyte? right) . Performs bitwise Xor operation on two given values. short? Xor(short? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, ushort? right) . Performs bitwise XOR operation on two given values. int? Xor(short? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(short? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(short? left, long? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, short? right) . Performs bitwise Xor operation on two given values. ushort? Xor(ushort? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(ushort? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(ushort? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ushort? left, ulong? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(int? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(int? left, long? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, uint? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, byte? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, sbyte? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, short? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, ushort? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, int? right) . Performs bitwise Xor operation on two given values. ulong? Xor(uint? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(uint? left, ulong? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, long? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, byte? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, sbyte? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, short? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, ushort? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, int? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, uint? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, ulong? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, byte? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, ushort? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, uint? right) . Performs bitwise Xor operation on two given values. byte[] GetBytes(string? content) . Gets the bytes from the given string. byte[] GetBytes(string? content, int length, int offset) . Gets the bytes from the given string within given offset and length. byte?[]? GetBytes(char? character) . Gets the bytes from the given character. byte?[]? GetBytes(bool? bit) . Gets the bytes from the given boolean. byte?[]? GetBytes(long? value) . Gets the bytes from the given long. byte?[]? GetBytes(int? value) . Gets the bytes from the given int. byte?[]? GetBytes(short? value) . Gets the bytes from the given short. byte?[]? GetBytes(ulong? value) . Gets the bytes from the given ulong. byte?[]? GetBytes(ushort? value) . Gets the bytes from the given ushort. byte?[]? GetBytes(uint? value) . Gets the bytes from the given uint. byte?[]? GetBytes(Decimal? value) . Gets the bytes from the given decimal. byte?[]? GetBytes(double? value) . Gets the bytes from the given double. byte?[]? GetBytes(float? value) . Gets the bytes from the given float. string? ToBin(byte?[]? bytes, string delimiter) . Converts given bytes to binary with defined delimiter . string ToBin&lt;T&gt;(T value) . Converts given value to binary . string ToOcta&lt;T&gt;(T value) . Converts given value to octal . string ToDec&lt;T&gt;(T value) . Converts given value to decimal . string ToBase64(byte[] value) . Converts given value to string . string ToBase64(byte[] value, int offset, int length) . Converts given array of bytes to string . byte[] FromBase64(string value) . Converts given string to bytes array . bool FromBytesToBool(byte[] value) . Converts bytes to boolean value. short FromBytesToInt16(byte[] value) . Converts bytes to a 16-bit signed integer. ushort FromBytesToUInt16(byte[] value) . Converts bytes to a 16-bit unsigned integer. int FromBytesToInt32(byte[] value) . Converts bytes to a 32-bit signed integer. uint FromBytesToUInt32(byte[] value) . Converts bytes to a 32-bit unsigned integer. long FromBytesToInt64(byte[] value) . Converts bytes to a 64-bit signed integer. ulong FromBytesToUInt64(byte[] value) . Converts bytes to a 64-bit unsigned integer. float FromBytesToFloat(byte[] value) . Converts bytes to a float value. double FromBytesToDouble(byte[] value) . Converts bytes to a float value. string FromBytesToString(byte[] value) . Converts bytes to a string. byte[] ToBytes(bool value) . Converts boolean value to bytes. byte[] ToBytes(short value) . Converts short value to bytes. byte[] ToBytes(ushort value) . Converts ushort value to bytes. byte[] ToBytes(int value) . Converts int value to bytes. byte[] ToBytes(uint value) . Converts uint value to bytes. byte[] ToBytes(long value) . Converts long value to bytes. byte[] ToBytes(ulong value) . Converts long value to bytes. string? ToHex(byte?[]? bytes, string delimiter) . Converts given bytes to hex with defined delimiter . string? ToHex&lt;T&gt;(T value) . Converts given value to binary . int Count(string name) . Gets the count value of a given group. int Count(string name, int parent) . Gets the count value of a given group. int ExtractFromDate(string? date, string partOfDate) . Extracts part of the date from the date . int ExtractFromDate(string date, string culture, string partOfDate) . Extracts part of the date from the date based on given culture . DateTimeOffset? GetDate() . Gets the current datetime . DateTimeOffset? UtcGetDate() . Gets the current datetime in UTC . int? Month(DateTimeOffset? value) . Gets the month from DateTimeOffset . int? Year(DateTimeOffset? value) . Gets the year from DateTimeOffset . int? Day(DateTimeOffset? value) . Gets the day from DateTimeOffset . int? Hour(DateTimeOffset? value) . Gets the hour from DateTimeOffset . int? Minute(DateTimeOffset? value) . Gets the minute from DateTimeOffset . int? Second(DateTimeOffset? value) . Gets the second from DateTimeOffset . int? Milliseconds(DateTimeOffset? value) . Gets the millisecond from DateTimeOffset . int? DayOfWeek(DateTimeOffset? value) . Gets the day of week from DateTimeOffset . TimeSpan? ExtractTimeSpan(DateTimeOffset? dateTimeOffset) . Extracts time from DateTimeOffset . DateTime? ToDateTimeOffset(string value) . Converts given value to DateTimeOffset . DateTimeOffset? ToDateTimeOffset(string value, string culture) . Converts given value to DateTimeOffset . IEnumerable&lt;T&gt;? Skip&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? skipCount) . Skips elements from the beginning of the sequence. IEnumerable&lt;T&gt;? Take&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? takeCount) . Takes elements from the beginning of the sequence. IEnumerable&lt;T&gt;? SkipAndTake&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? skipCount, int? takeCount) . Skip and takes elements from the beginning of the sequence. T[]? EnumerableToArray&lt;T&gt;(IEnumerable&lt;T&gt;? values) . Turn array arguments of T into a single array. T[]? MergeArrays&lt;T&gt;(T[][]? values) . Turn array arguments of T into a single array. IEnumerable&lt;T&gt;? LongestCommonSequence&lt;T&gt;(IEnumerable&lt;T&gt;? source, IEnumerable&lt;T&gt;? pattern) . Computes longest common sequence of two given sequences . T? GetElementAtOrDefault&lt;T&gt;(IEnumerable&lt;T&gt;? enumerable, int? index) . Gets the element at the specified index in a sequence . int? Length&lt;T&gt;(IEnumerable&lt;T&gt;? enumerable) . Gets the length of the sequence . int? Length&lt;T&gt;(T[]? array) . Gets the length of the array . T? Choose&lt;T&gt;(int? index, T[] values) . Gets the value of an array at the specified index . T If&lt;T&gt;(bool expressionResult, T a, T b) . Chose a or b value based on the expression result . bool? Match(string? regex, string? content) . Determine whether content matches the specified pattern . byte? Coalesce(byte?[] array) . Gets the first non-null value in a list . sbyte? Coalesce(sbyte?[] array) . Gets the first non-null value in a list . short? Coalesce(short?[] array) . Gets the first non-null value in a list . ushort? Coalesce(ushort?[] array) . Gets the first non-null value in a list . int? Coalesce(int?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(uint?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(long?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(ulong?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(Decimal?[] array) . Gets the first non-null value in a list . T? Coalesce&lt;T&gt;(T[] array) . Gets the first non-null value in a list . IEnumerable&lt;T&gt;? Distinct&lt;T&gt;(IEnumerable&lt;T&gt;? values) . Returns distinct elements from a collection. string? Md5(string? content) . Gets the md5 hash of the given string. string? Md5(byte?[]? content) . Gets the md5 hash of the given bytes array. string? Sha1(string? content) . Gets the sha256 hash of the given string. string? Sha1(byte?[]? content) . Gets the sha256 hash of the given bytes array. string? Sha256(string? content) . Gets the sha256 hash of the given string. string? Sha256(byte?[]? content) . Gets the sha256 hash of the given bytes array. string? Sha512(string? content) . Gets the sha256 hash of the given string. string? Sha512(byte?[]? content) . Gets the sha256 hash of the bytes array. string? ToJson&lt;T&gt;(T? obj) . Converts object to json. string[] ExtractFromJsonToArray(string? json, string? path) . Extracts values from json by path. string? ExtractFromJson(string? json, string? path) . Extracts values from json by path and joins them with comma. Decimal? Abs(Decimal? value) . Gets the absolute value . long? Abs(long? value) . Gets the absolute value . int? Abs(int? value) . Gets the absolute value . Decimal? Ceil(Decimal? value) . Gets the ceiling value . Decimal? Floor(Decimal? value) . Gets the floor value . Decimal? Sign(Decimal? value) . Determine whether value is greater, equal or less that zero . long? Sign(long? value) . Determine whether value is greater, equal or less that zero . Decimal? Round(Decimal? value, int precision) . Rounds the value within given precision . Decimal? PercentOf(Decimal? value, Decimal? max) . Gets the percentage of the value . int Rand() . Gets the random integer value . int? Rand(int? min, int? max) . Gets the random integer value . double? Pow(Decimal? x, Decimal? y) . Computes the pow between two values . double? Pow(double? x, double? y) . Computes the pow between two values . double? Sqrt(Decimal? x) . Computes the sqrt of a given value . double? Sqrt(double? x) . Computes the sqrt of a given value . double? Sqrt(long? x) . Computes the sqrt of a given value . double? PercentRank&lt;T&gt;(IEnumerable&lt;T&gt;? window, T? value) . Computes the percent rank of a given window . double? Log(Decimal? base, Decimal? value) . Calculates the logarithm of a value with a specified base. Decimal? Sin(Decimal? value) . Calculates sine of a value. double? Sin(double? value) . Calculates sine of a value. float? Sin(float? value) . Calculates sine of a value. Decimal? Cos(Decimal? value) . Calculates cosine of a value. double? Cos(double? value) . Calculates cosine of a value. float? Cos(float? value) . Calculates cosine of a value. Decimal Max(string name) . Gets the max value of a given group. Decimal Max(string name, int parent) . Gets the max value of a given group. Decimal Min(string name) . Gets the min value of a given group. Decimal Min(string name, int parent) . Gets the min value of a given group. Decimal StDev(string name, int parent) . Gets the StDev value of a given group. string NewId() . Gets the new identifier . string? Trim(string? value) . Removes leading and trailing whitespace from a string. string? TrimStart(string? value) . Removes leading whitespace from a string. string? TrimEnd(string? value) . Removes trailing whitespace from a string. string? Substring(string? value, int? index, int? length) . Gets the substring from the string. string? Substring(string value, int? length) . Gets the substring from the string . string? Concat(string[]? strings) . Concatenates the specified values . string? Concat(char?[]? characters) . Concatenates the specified characters . string? Concat(string? firstString, char?[]? chars) . Concatenates specified string fir characters . string? Concat(char? firstChar, string[]? strings) . Concatenate specific character with strings . string? Concat(object[]? objects) . Concatenates the specified strings . string? Concat&lt;T&gt;(T[]? objects) . Concatenates the specified strings . bool? Contains(string? content, string? what) . Determine whether the string contains the specified value . int? IndexOf(string? value, string? text) . Position of the first occurrence of the specified value . string? Soundex(string? value) . Computes soundex for the specified value . bool HasFuzzyMatchedWord(string text, string word, string separator) . Matches the specified text by splitting it with separator and applying fuzzy comparison . bool HasWordThatHasSmallerLevenshteinDistanceThan(string text, string word, int distance, string separator) . Matches the specified text by splitting it with separator and applying fuzzy comparison with a given distance . bool HasWordThatSoundLike(string text, string word, string separator) . Matches whether the specified word is present after being fuzzified within the specified text . bool HasTextThatSoundLikeSentence(string text, string sentence, string separator) . Matches whether the specified text is present in sentence after being fuzified . string? ToUpper(string value) . Makes the string uppercase . string? ToUpper(string value, string culture) . Makes the string uppercase within specified culture . string? ToUpperInvariant(string value) . Makes the string uppercase . string? ToLower(string value) . Makes the string lowercase . string? ToLower(string value, string culture) . Makes the string lowercase within specified culture . string? ToLowerInvariant(string value) . Makes the string lowercase . string? PadLeft(string? value, string? character, int? totalWidth) . Returns a new string that right-aligns the characters in this instance by padding them on the left with a specified Unicode character, for a specified total lengt . string? PadRight(string? value, string? character, int? totalWidth) . Returns a new string that left-aligns the characters in this instance by padding them on the right with a specified Unicode character, for a specified total length . string? Head(string? value, int? length) . Gets the first N characters of the string . string? Tail(string? value, int? length) . Gets the last N characters of the string . int? LevenshteinDistance(string? firstValue, string? secondValue) . Computes the Levenshtein distance between two strings . char? GetCharacterOf(string value, int index) . Gets the character at specified index . string? Reverse(string? value) . Reverses the string . string[] Split(string value, string[] separators) . Splits the string into an array of substrings based on the specified separators . char[] ToCharArray(string value) . Splits the string into an array of characters . string? LongestCommonSubstring(string source, string pattern) . Computes the longest common subsequence between two source and pattern . string Replicate(string value, int integer) . Clones the value n times . string? Translate(string? value, string? characters, string? translations) . Returns the string from the first argument after the characters specified in the second argument are translated into the characters specified in the third argument. string? Replace(string? text, string lookFor, string? changeTo) . Replaces the first occurrence of a specified string in this instance with another specified string . string? ToTitleCase(string? value) . Capitalizes the first letter of the string . string? GetNthWord(string? text, int? wordIndex, string? separator) . Gets the nth word of the string . string? GetFirstWord(string text, string separator) . Gets the first word of the string . string? GetSecondWord(string text, string separator) . Gets the second word of the string . string? GetThirdWord(string text, string separator) . Gets the third word of the string . string? GetLastWord(string? text, string? separator) . Gets last word of the string . bool? IsNullOrEmpty(string? value) . Determines whether the string is null or empty . bool? IsNullOrWhiteSpace(string? value) . Determines whether the string is null or whitespace . string? UrlEncode(string? value) . Encodes the value . string? UrlDecode(string? value) . Decodes the value . string? UriEncode(string? value) . Encodes the value . string? UriDecode(string? value) . Decodes the value . bool? StartsWith(string? value, string? prefix) . Determines whether the string starts with the specified prefix . bool? StartsWith(string? value, string? prefix, string comparison) . Determines whether the string starts with the specified prefix . bool? EndsWith(string? value, string? suffix) . Determines whether the string ends with the specified suffix . bool? EndsWith(string? value, string? suffix, string comparison) . Determines whether the string ends with the specified suffix . string? RegexReplace(string? value, string? pattern, string? replacement) . Replace the specified value part that matches the pattern with the replacement . string[]? SplitByLinuxNewLines(string? input) . Split string by Linux-style newlines (\\n) . string[]? SplitByWindowsNewLines(string? input) . Split string by Windows-style newlines (\\r\\n) . string[]? SplitByNewLines(string? input) . Smart split that handles both Windows (\\r\\n) and Linux (\\n) newlines . Decimal Sum(string name) . Gets the sum value of a given group. Decimal Sum(string name, int parent) . Gets the sum value of a given group. Decimal SumIncome(string name) . Gets the sum value of a given group. Decimal SumIncome(string name, int parent) . Gets the sum value of a given group. Decimal SumOutcome(string name) . Gets the outcome value of a given group. Decimal SumOutcome(string name, int parent) . Gets the outcome value of a given group. TimeSpan? SumTimeSpan(string name) . Gets the sum value of a given group. TimeSpan? SumTimeSpan(string name, int parent) . Gets the sum value of a given group. TimeSpan? MinTimeSpan(string name) . Gets the min value of a given group. TimeSpan? MinTimeSpan(string name, int parent) . Gets the min value of a given group. TimeSpan? MaxTimeSpan(string name) . Gets the max value of a given group. TimeSpan? MaxTimeSpan(string name, int parent) . Gets the min value of a given group. char? ToChar(string? value) . Converts given value to character . char? ToChar(int? value) . Converts given value to character . char? ToChar(short? value) . Converts given value to character . char? ToChar(byte? value) . Converts given value to character . char? ToChar(object? value) . Converts given value to character . DateTime? ToDateTime(string value) . Converts given value to DateTime . DateTime? ToDateTime(string value, string culture) . Converts given value to DateTime . Decimal? ToDecimal(string? value) . Converts given value to decimal . Decimal? ToDecimal(string value, string culture) . Converts given value to decimal withing given culture . Decimal? ToDecimal(byte? value) . Converts given value to Decimal . Decimal? ToDecimal(sbyte? value) . Converts given value to Decimal . Decimal? ToDecimal(short? value) . Converts given value to Decimal . Decimal? ToDecimal(ushort? value) . Converts given value to Decimal . Decimal? ToDecimal(long? value) . Converts given value to Decimal . Decimal? ToDecimal(ulong? value) . Converts given value to Decimal . Decimal? ToDecimal(float? value) . Converts given value to Decimal . Decimal? ToDecimal(double? value) . Converts given value to Decimal . Decimal? ToDecimal(object? value) . Converts given value to Decimal . double? ToDouble(object? value) . Converts given value to double . double? ToDouble(string? value) . Converts given value to double . double? ToDouble(byte? value) . Converts given value to double . double? ToDouble(sbyte? value) . Converts given value to double . double? ToDouble(short? value) . Converts given value to double . double? ToDouble(ushort? value) . Converts given value to double . double? ToDouble(int? value) . Converts given value to double . double? ToDouble(uint? value) . Converts given value to double . double? ToDouble(long? value) . Converts given value to double . double? ToDouble(ulong? value) . Converts given value to double . double? ToDouble(float? value) . Converts given value to double . double? ToDouble(double? value) . Converts given value to double . double? ToDouble(Decimal? value) . Converts given value to double . float? ToFloat(string? value) . Converts given value to float . float? ToFloat(byte? value) . Converts given value to float . float? ToFloat(sbyte? value) . Converts given value to float . float? ToFloat(short? value) . Converts given value to float . float? ToFloat(ushort? value) . Converts given value to float . float? ToFloat(int? value) . Converts given value to float . float? ToFloat(uint? value) . Converts given value to float . float? ToFloat(long? value) . Converts given value to float . float? ToFloat(ulong? value) . Converts given value to float . float? ToFloat(float? value) . Converts given value to float . float? ToFloat(Decimal? value) . Converts given value to float . int? ToInt32(string value) . Converts given value to int . int? ToInt32(byte? value) . Converts given value to int . int? ToInt32(sbyte? value) . Converts given value to int . int? ToInt32(short? value) . Converts given value to int . int? ToInt32(ushort? value) . Converts given value to int . int? ToInt32(int? value) . Converts given value to int . int? ToInt32(uint? value) . Converts given value to int . int? ToInt32(long? value) . Converts given value to int . int? ToInt32(ulong? value) . Converts given value to int . int? ToInt32(float? value) . Converts given value to int . int? ToInt32(double? value) . Converts given value to int . int? ToInt32(Decimal? value) . Converts given value to int . int? ToInt32(object? value) . Converts given value to int . long? ToInt64(string value) . Converts given value to Int64 . long? ToInt64(byte? value) . Converts given value to long . long? ToInt64(sbyte? value) . Converts given value to long . long? ToInt64(short? value) . Converts given value to long . long? ToInt64(ushort? value) . Converts given value to long . long? ToInt64(int? value) . Converts given value to long . long? ToInt64(uint? value) . Converts given value to long . long? ToInt64(long? value) . Converts given value to long . long? ToInt64(ulong? value) . Converts given value to long . long? ToInt64(float? value) . Converts given value to long . long? ToInt64(double? value) . Converts given value to long . long? ToInt64(Decimal? value) . Converts given value to long . long? ToInt64(object? value) . Converts given value to long . string? ToString(char? value) . Converts given value to string . string? ToString(DateTimeOffset? value) . Converts given value to string . string? ToString(DateTimeOffset? value, string format) . Converts given value to string . string? ToString(byte? value) . Converts given value to string . string? ToString(byte? value, string format) . Converts given value to string . string? ToString(sbyte? value) . Converts given value to string . string? ToString(sbyte? value, string format) . Converts given value to string . string? ToString(int? value) . Converts given value to string . string? ToString(int? value, string format) . Converts given value to string . string? ToString(uint? value) . Converts given value to string . string? ToString(uint? value, string format) . Converts given value to string . string? ToString(long? value) . Converts given value to string . string? ToString(long? value, string format) . Converts given value to string . string? ToString(ulong? value) . Converts given value to string . string? ToString(ulong? value, string format) . Converts given value to string . string? ToString(float? value) . Converts given value to string . string? ToString(float? value, string format) . Converts given value to string . string? ToString(double? value) . Converts given value to string . string? ToString(double? value, string format) . Converts given value to string . string? ToString(Decimal? value) . Converts given value to string . string? ToString(Decimal? value, string format) . Converts given value to string . string? ToString(bool? value) . Converts given value to string . string? ToString(object? value) . Converts given value to string . string? ToString&lt;T&gt;(T? value) . Converts given value to string . string ToString(string[] value) . Converts given value to string . string ToString&lt;T&gt;(T[] value) . Converts given value to string . TimeSpan? ToTimeSpan(string value) . Converts given value to TimeSpan . TimeSpan? ToTimeSpan(string value, string culture) . Converts given value to TimeSpan . IEnumerable&lt;T&gt; Window&lt;T&gt;(string name) . Gets the window . ",
    "url": "/data-sources/Ollama/linux-arm64.html#base-methods",
    
    "relUrl": "/data-sources/Ollama/linux-arm64.html#base-methods"
  },"109": {
    "doc": "Linux Arm64",
    "title": "Linux Arm64",
    "content": " ",
    "url": "/data-sources/Ollama/linux-arm64.html",
    
    "relUrl": "/data-sources/Ollama/linux-arm64.html"
  },"110": {
    "doc": "Linux Arm64",
    "title": "Musoq.DataSources.Os",
    "content": "Provides schema to work with operating system abstractions . ",
    "url": "/data-sources/Os/linux-arm64.html#musoqdatasourcesos",
    
    "relUrl": "/data-sources/Os/linux-arm64.html#musoqdatasourcesos"
  },"111": {
    "doc": "Linux Arm64",
    "title": "Tables",
    "content": "Table is a collection of rows and columns that the plugin exposes. Below are the tables that are exposed by this data source. os.dirscompare(string, string) . Compares two directories . | Name | Type | Description | . | SourceFile | ExtendedFileInfo | Source file | . | DestinationFile | ExtendedFileInfo | Destination file | . | State | string | The Same / Modified / Added / Removed | . | SourceRoot | DirectoryInfo | Source directory | . | DestinationRoot | DirectoryInfo | Destination directory | . | SourceFileRelative | string | Relative path to source file | . | DestinationFileRelative | string | Relative path to destination file | . os.directories(string, boolean) . Gets the directories . | Name | Type | Description | . | FullName | string | Full name of the directory | . | Attributes | FileAttributes | Directory attributes | . | CreationTime | DateTime | Creation time | . | CreationTimeUtc | DateTime | Creation time in UTC | . | LastAccessTime | DateTime | Last access time | . | LastAccessTimeUtc | DateTime | Last access time in UTC | . | LastWriteTime | DateTime | Last write time | . | LastWriteTimeUtc | DateTime | Last write time in UTC | . | Exists | bool | Determine does the directory exists | . | Extension | string | Gets the extension part of the file name | . | LastAccessTime | DateTime | Gets the time the current file or directory was last accessed | . | LastAccessTimeUtc | DateTime | Gets the time, in coordinated universal time (UTC), that the current file or directory was last accessed | . | Name | string | Gets the directory name | . | LastWriteTime | DateTime | Gets the date when the file or directory was written to | . | Parent | DirectoryInfo | Gets the parent directory | . | Root | DirectoryInfo | Gets the root directory | . | DirectoryInfo | DirectoryInfo | Gets raw DirectoryInfo | . os.dlls(string path) . Gets the dlls . | Name | Type | Description | . | FileInfo | FileInfo | Gets the metadata about the DLL file | . | Assembly | Assembly | Gets the Assembly object | . | Version | FileVersionInfo | Gets the assembly version | . os.dlls(string path) . Gets the dlls . | Name | Type | Description | . | FileInfo | FileInfo | Gets the metadata about the DLL file | . | Assembly | Assembly | Gets the Assembly object | . | Version | FileVersionInfo | Gets the assembly version | . os.files(string, boolean) . Gets the files . | Name | Type | Description | . | Name | string | Full name of the directory | . | CreationTime | DateTime | Creation time | . | CreationTimeUtc | DateTime | Creation time in UTC | . | LastAccessTime | DateTime | Last access time | . | LastAccessTimeUtc | DateTime | Last access time in UTC | . | LastWriteTime | DateTime | Last write time | . | LastWriteTimeUtc | DateTime | Last write time in UTC | . | DirectoryName | string | Gets the directory name | . | Extension | string | Gets the extension part of the file name | . | FullName | string | Gets the full path of file | . | Exists | bool | Determine whether file exists or not | . | IsReadOnly | bool | Determine whether the file is readonly | . | Length | long | Gets the length of file | . os.processes() . Gets the processes . | Name | Type | Description | . | BasePriority | int | Gets the base priority of associated process | . | EnableRaisingEvents | bool | Gets whether the exited event should be raised when the process terminates | . | ExitCode | int | Gets the value describing process termination | . | ExitTime | DateTime | Exit time in UTC | . | Handle | IntPtr | Gets the native handle of the associated process | . | HandleCount | int | Gets the number of handles opened by the process | . | HasExited | bool | Gets a value indicating whether the associated process has been terminated | . | Id | int | Gets the unique identifier for the associated process | . | MachineName | string | Gets the name of the computer the associated process is running on | . | MainWindowTitle | string | Gets the caption of the main window of the process | . | PagedMemorySize64 | long | Gets a value indicating whether the user interface of the process is responding | . | ProcessName | string | The name that the system uses to identify the process to the user | . | ProcessorAffinity | IntPtr | Gets the processors on which the threads in this process can be scheduled to run | . | Responding | bool | Gets a value indicating whether the user interface of the process is responding | . | StartTime | DateTime | Gets the time that the associated process was started | . | TotalProcessorTime | TimeSpan | Gets the total processor time for this process | . | UserProcessorTime | TimeSpan | Gets the user processor time for this process | . | Directory | string | Gets the directory of the process | . | FileName | string | Gets the filename of the process | . os.zip(string path) . Gets the zip files . | Name | Type | Description | . | Name | string | Gets the file name of the entry in the zip archive | . | FullName | string | Gets the relative path of the entry in the zip archive | . | CompressedLength | long | Gets the compressed size of the entry in the zip archive | . | LastWriteTime | DateTimeOffset | Gets the last time the entry in the zip archive was changed | . | Length | long | Gets the uncompressed size of the entry in the zip archive | . | IsDirectory | bool | Determine whether the entry is a directory | . | Level | int | Gets the nesting level | . os.metadata(string directoryOrFile) . Gets the metadata for file or for files within the directory . | Name | Type | Description | . | FullName | string | Gets the full path of the file | . | DirectoryName | string | Gets the directory the metadata resides in | . | TagName | string | Gets the tag name | . | Description | string | Gets the description | . os.metadata(string directory, bool useSubdirectories) . Gets the metadata for files within directories . | Name | Type | Description | . | FullName | string | Gets the full path of the file | . | DirectoryName | string | Gets the directory the metadata resides in | . | TagName | string | Gets the tag name | . | Description | string | Gets the description | . ",
    "url": "/data-sources/Os/linux-arm64.html#tables",
    
    "relUrl": "/data-sources/Os/linux-arm64.html#tables"
  },"112": {
    "doc": "Linux Arm64",
    "title": "Methods",
    "content": "Methods are functions that can be called on the data source specific column. Below are the methods that are exposed by this data source. bool IsZipArchive(string extension) . Determines whether the extension is zip archive. bool IsZipArchive() . Determines whether the extension is zip archive. bool IsArchive(string extension) . Determine whether the extension is archive. bool IsArchive() . Determines whether the file is archive. bool IsAudio(string extension) . Determine whether the extension is audio. bool IsAudio() . Determine whether the extension is audio. bool IsBook(string extension) . Determine whether the extension is book. bool IsBook() . Determine whether the extension is book. bool IsDoc(string extension) . Determine whether the extension is document. bool IsDoc() . Determine whether the extension is document. bool IsImage(string extension) . Determine whether the extension is image. bool IsImage() . Determine whether the extension is image. bool IsSource(string extension) . Determine whether the extension is source. bool IsSource() . Determine whether the extension is source. bool IsVideo(string extension) . Determine whether the extension is video. bool IsVideo() . Determine whether the extension is video. string? GetFileContent() . Gets the file content . string GetRelativePath() . Gets the relative path of a file . string GetRelativePath(string basePath) . Gets the relative path of a file . byte[] Head(int length) . Gets head bytes of a file . byte[] Tail(int length) . Gets tail bytes of a file . byte[] GetFileBytes(long bytesCount, long offset) . Gets file bytes of a file . string Sha1File() . Computes Sha1 hash of a file . string Sha256File() . Computes Sha256 hash of a file . string Sha256File(IO.FileInfo file) . Computes Sha256 hash of a file . string Md5File() . Computes Md5 hash of a file . string Base64File() . Turns file into base64 string . bool HasContent(string pattern) . Determine whether file has specific content . bool HasAttribute(long flags) . Determine whether file has attribute . string GetLinesContainingWord(string word) . Gets lines containing word . long GetFileLength(string unit) . Gets the file length . long GetLengthOfFile(string unit) . Gets the file length . string? SubPath(int nesting) . Gets the SubPath from the path . string? SubPath(int nesting) . Gets the SubPath from the path . string? RelativeSubPath(int nesting) . Gets the relative SubPath from the path . string? SubPath(string? directoryPath, int? nesting) . Gets the relative SubPath from the path . long Length(string unit) . Gets the length of the file . Musoq.DataSources.Os.Files.ExtendedFileInfo? GetFileInfo(string fullPath) . Gets the file info . Musoq.DataSources.Os.Files.ExtendedFileInfo GetExtendedFileInfo() . Gets extended file info . long CountOfLines() . Gets the count of lines of a file . long CountOfNotEmptyLines() . Gets the count of non empty lines of a file . string Combine(string path1, string path2) . Combines the paths . string Combine(string path1, string path2, string path3) . Combines the paths . string Combine(string path1, string path2, string path3, string path4) . Combines the paths . string Combine(string path1, string path2, string path3, string path4, string path5) . Combines the paths . string Combine(string[] paths) . Combines the paths . string? GetDirectoryName(string? path) . Gets the directory name . string? GetFileName(string? path) . Gets the file name . string? GetFileNameWithoutExtension(string? path) . Gets the file name without extension . string? GetExtension(string? path) . Gets the extension . string? GetMetadata(string directoryName, string tagName) . Gets the metadata of a file . string? GetMetadata(string tagName) . Gets the metadata of a file . bool HasMetadataDirectory(string directoryName) . Checks whether file has metadata directory . bool HasMetadataTag(string directoryName, string tagName) . Checks whether file has metadata tag . bool HasMetadataTag(string tagName) . Checks whether file has metadata tag . string AllMetadataJson() . Gets all metadata of a file and returns it as json . IReadOnlyList&lt;Musoq.DataSources.Os.Files.ExtendedFileInfo&gt;? AggregateFiles(string name) . Gets the aggregated average value from the given group name . IReadOnlyList&lt;IO.DirectoryInfo&gt;? AggregateDirectories(string name) . Gets the aggregated average value from the given group name . ",
    "url": "/data-sources/Os/linux-arm64.html#methods",
    
    "relUrl": "/data-sources/Os/linux-arm64.html#methods"
  },"113": {
    "doc": "Linux Arm64",
    "title": "Base Methods",
    "content": "Base methods are methods that can be called on the data source specific column. Those methods are automatically inherited and enriches the data source specific methods. Below are those base methods that are exposed by this data source. int RowNumber() . Gets the row number of the current row. string? GetTypeName(object? obj) . Gets the typename of passed object. string AggregateValues(string name) . Aggregates values into a single value. string AggregateValues(string name, int parent) . Aggregates values into a single value. Decimal Avg(string name) . Gets the aggregated average value from the given group name . Decimal Avg(string name, int parent) . Gets the aggregated average value from the given group name . byte? ShiftLeft(byte? value, int shift) . Shifts the value to the left by the specified number of bits. short? ShiftLeft(short? value, int shift) . Shifts the value to the left by the specified number of bits. int? ShiftLeft(int? value, int shift) . Shifts the value to the left by the specified number of bits. long? ShiftLeft(long? value, int shift) . Shifts the value to the left by the specified number of bits. sbyte? ShiftLeft(sbyte? value, int shift) . Shifts the value to the left by the specified number of bits. ushort? ShiftLeft(ushort? value, int shift) . Shifts the value to the left by the specified number of bits. uint? ShiftLeft(uint? value, int shift) . Shifts the value to the left by the specified number of bits. ulong? ShiftLeft(ulong? value, int shift) . Shifts the value to the left by the specified number of bits. byte? ShiftRight(byte? value, int shift) . Shifts the value to the right by the specified number of bits. short? ShiftRight(short? value, int shift) . Shifts the value to the right by the specified number of bits. int? ShiftRight(int? value, int shift) . Shifts the value to the right by the specified number of bits. long? ShiftRight(long? value, int shift) . Shifts the value to the right by the specified number of bits. sbyte? ShiftRight(sbyte? value, int shift) . Shifts the value to the right by the specified number of bits. ushort? ShiftRight(ushort? value, int shift) . Shifts the value to the right by the specified number of bits. uint? ShiftRight(uint? value, int shift) . Shifts the value to the right by the specified number of bits. ulong? ShiftRight(ulong? value, int shift) . Shifts the value to the right by the specified number of bits. byte? Not(byte? value) . Performs bitwise NOT operation on a given value. short? Not(short? value) . Performs bitwise NOT operation on a given value. int? Not(int? value) . Performs bitwise NOT operation on a given value. long? Not(long? value) . Performs bitwise NOT operation on a given value. sbyte? Not(sbyte? value) . Performs bitwise NOT operation on a given value. ushort? Not(ushort? value) . Performs bitwise NOT operation on a given value. uint? Not(uint? value) . Performs bitwise NOT operation on a given value. ulong? Not(ulong? value) . Performs bitwise NOT operation on a given value. byte? And(byte? left, byte? right) . Performs bitwise AND operation on two given values. int? And(byte? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(byte? left, short? right) . Performs bitwise AND operation on two given values. int? And(byte? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(byte? left, int? right) . Performs bitwise AND operation on two given values. uint? And(byte? left, uint? right) . Performs bitwise AND operation on two given values. long? And(byte? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(byte? left, ulong? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, byte? right) . Performs bitwise AND operation on two given values. sbyte? And(sbyte? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, short? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, int? right) . Performs bitwise AND operation on two given values. uint? And(sbyte? left, uint? right) . Performs bitwise AND operation on two given values. long? And(sbyte? left, long? right) . Performs bitwise AND operation on two given values. int? And(short? left, byte? right) . Performs bitwise AND operation on two given values. int? And(short? left, sbyte? right) . Performs bitwise AND operation on two given values. short? And(short? left, short? right) . Performs bitwise AND operation on two given values. int? And(short? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(short? left, int? right) . Performs bitwise AND operation on two given values. uint? And(short? left, uint? right) . Performs bitwise AND operation on two given values. long? And(short? left, long? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, byte? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, short? right) . Performs bitwise AND operation on two given values. ushort? And(ushort? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, int? right) . Performs bitwise AND operation on two given values. uint? And(ushort? left, uint? right) . Performs bitwise AND operation on two given values. long? And(ushort? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(ushort? left, ulong? right) . Performs bitwise AND operation on two given values. int? And(int? left, byte? right) . Performs bitwise AND operation on two given values. int? And(int? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(int? left, short? right) . Performs bitwise AND operation on two given values. int? And(int? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(int? left, int? right) . Performs bitwise AND operation on two given values. uint? And(int? left, uint? right) . Performs bitwise AND operation on two given values. long? And(int? left, long? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, uint? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, byte? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, sbyte? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, short? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, ushort? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, int? right) . Performs bitwise AND operation on two given values. ulong? And(uint? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(uint? left, ulong? right) . Performs bitwise AND operation on two given values. long? And(long? left, long? right) . Performs bitwise AND operation on two given values. long? And(long? left, byte? right) . Performs bitwise AND operation on two given values. long? And(long? left, sbyte? right) . Performs bitwise AND operation on two given values. long? And(long? left, short? right) . Performs bitwise AND operation on two given values. long? And(long? left, ushort? right) . Performs bitwise AND operation on two given values. long? And(long? left, int? right) . Performs bitwise AND operation on two given values. long? And(long? left, uint? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, byte? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, ushort? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, uint? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, ulong? right) . Performs bitwise AND operation on two given values. byte? Or(byte? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, short? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(byte? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(byte? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(byte? left, ulong? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, byte? right) . Performs bitwise OR operation on two given values. sbyte? Or(sbyte? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, short? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(sbyte? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(sbyte? left, long? right) . Performs bitwise OR operation on two given values. int? Or(short? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(short? left, sbyte? right) . Performs bitwise OR operation on two given values. short? Or(short? left, short? right) . Performs bitwise OR operation on two given values. int? Or(short? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(short? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(short? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(short? left, long? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, short? right) . Performs bitwise OR operation on two given values. ushort? Or(ushort? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(ushort? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(ushort? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(ushort? left, ulong? right) . Performs bitwise OR operation on two given values. int? Or(int? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(int? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(int? left, short? right) . Performs bitwise OR operation on two given values. int? Or(int? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(int? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(int? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(int? left, long? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, uint? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, byte? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, sbyte? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, short? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, ushort? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, int? right) . Performs bitwise OR operation on two given values. ulong? Or(uint? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(uint? left, ulong? right) . Performs bitwise OR operation on two given values. long? Or(long? left, long? right) . Performs bitwise OR operation on two given values. long? Or(long? left, byte? right) . Performs bitwise OR operation on two given values. long? Or(long? left, sbyte? right) . Performs bitwise OR operation on two given values. long? Or(long? left, short? right) . Performs bitwise OR operation on two given values. long? Or(long? left, ushort? right) . Performs bitwise OR operation on two given values. long? Or(long? left, int? right) . Performs bitwise OR operation on two given values. long? Or(long? left, uint? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, byte? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, ushort? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, uint? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, ulong? right) . Performs bitwise OR operation on two given values. byte? Xor(byte? left, byte? right) . Performs bitwise OR operation on two given values. int? Xor(byte? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(byte? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(byte? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(byte? left, ulong? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, byte? right) . Performs bitwise Xor operation on two given values. sbyte? Xor(sbyte? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(sbyte? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(sbyte? left, long? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, sbyte? right) . Performs bitwise Xor operation on two given values. short? Xor(short? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, ushort? right) . Performs bitwise XOR operation on two given values. int? Xor(short? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(short? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(short? left, long? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, short? right) . Performs bitwise Xor operation on two given values. ushort? Xor(ushort? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(ushort? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(ushort? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ushort? left, ulong? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(int? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(int? left, long? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, uint? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, byte? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, sbyte? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, short? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, ushort? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, int? right) . Performs bitwise Xor operation on two given values. ulong? Xor(uint? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(uint? left, ulong? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, long? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, byte? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, sbyte? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, short? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, ushort? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, int? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, uint? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, ulong? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, byte? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, ushort? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, uint? right) . Performs bitwise Xor operation on two given values. byte[] GetBytes(string? content) . Gets the bytes from the given string. byte[] GetBytes(string? content, int length, int offset) . Gets the bytes from the given string within given offset and length. byte?[]? GetBytes(char? character) . Gets the bytes from the given character. byte?[]? GetBytes(bool? bit) . Gets the bytes from the given boolean. byte?[]? GetBytes(long? value) . Gets the bytes from the given long. byte?[]? GetBytes(int? value) . Gets the bytes from the given int. byte?[]? GetBytes(short? value) . Gets the bytes from the given short. byte?[]? GetBytes(ulong? value) . Gets the bytes from the given ulong. byte?[]? GetBytes(ushort? value) . Gets the bytes from the given ushort. byte?[]? GetBytes(uint? value) . Gets the bytes from the given uint. byte?[]? GetBytes(Decimal? value) . Gets the bytes from the given decimal. byte?[]? GetBytes(double? value) . Gets the bytes from the given double. byte?[]? GetBytes(float? value) . Gets the bytes from the given float. string? ToBin(byte?[]? bytes, string delimiter) . Converts given bytes to binary with defined delimiter . string ToBin&lt;T&gt;(T value) . Converts given value to binary . string ToOcta&lt;T&gt;(T value) . Converts given value to octal . string ToDec&lt;T&gt;(T value) . Converts given value to decimal . string ToBase64(byte[] value) . Converts given value to string . string ToBase64(byte[] value, int offset, int length) . Converts given array of bytes to string . byte[] FromBase64(string value) . Converts given string to bytes array . bool FromBytesToBool(byte[] value) . Converts bytes to boolean value. short FromBytesToInt16(byte[] value) . Converts bytes to a 16-bit signed integer. ushort FromBytesToUInt16(byte[] value) . Converts bytes to a 16-bit unsigned integer. int FromBytesToInt32(byte[] value) . Converts bytes to a 32-bit signed integer. uint FromBytesToUInt32(byte[] value) . Converts bytes to a 32-bit unsigned integer. long FromBytesToInt64(byte[] value) . Converts bytes to a 64-bit signed integer. ulong FromBytesToUInt64(byte[] value) . Converts bytes to a 64-bit unsigned integer. float FromBytesToFloat(byte[] value) . Converts bytes to a float value. double FromBytesToDouble(byte[] value) . Converts bytes to a float value. string FromBytesToString(byte[] value) . Converts bytes to a string. byte[] ToBytes(bool value) . Converts boolean value to bytes. byte[] ToBytes(short value) . Converts short value to bytes. byte[] ToBytes(ushort value) . Converts ushort value to bytes. byte[] ToBytes(int value) . Converts int value to bytes. byte[] ToBytes(uint value) . Converts uint value to bytes. byte[] ToBytes(long value) . Converts long value to bytes. byte[] ToBytes(ulong value) . Converts long value to bytes. string? ToHex(byte?[]? bytes, string delimiter) . Converts given bytes to hex with defined delimiter . string? ToHex&lt;T&gt;(T value) . Converts given value to binary . int Count(string name) . Gets the count value of a given group. int Count(string name, int parent) . Gets the count value of a given group. int ExtractFromDate(string? date, string partOfDate) . Extracts part of the date from the date . int ExtractFromDate(string date, string culture, string partOfDate) . Extracts part of the date from the date based on given culture . DateTimeOffset? GetDate() . Gets the current datetime . DateTimeOffset? UtcGetDate() . Gets the current datetime in UTC . int? Month(DateTimeOffset? value) . Gets the month from DateTimeOffset . int? Year(DateTimeOffset? value) . Gets the year from DateTimeOffset . int? Day(DateTimeOffset? value) . Gets the day from DateTimeOffset . int? Hour(DateTimeOffset? value) . Gets the hour from DateTimeOffset . int? Minute(DateTimeOffset? value) . Gets the minute from DateTimeOffset . int? Second(DateTimeOffset? value) . Gets the second from DateTimeOffset . int? Milliseconds(DateTimeOffset? value) . Gets the millisecond from DateTimeOffset . int? DayOfWeek(DateTimeOffset? value) . Gets the day of week from DateTimeOffset . TimeSpan? ExtractTimeSpan(DateTimeOffset? dateTimeOffset) . Extracts time from DateTimeOffset . DateTime? ToDateTimeOffset(string value) . Converts given value to DateTimeOffset . DateTimeOffset? ToDateTimeOffset(string value, string culture) . Converts given value to DateTimeOffset . IEnumerable&lt;T&gt;? Skip&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? skipCount) . Skips elements from the beginning of the sequence. IEnumerable&lt;T&gt;? Take&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? takeCount) . Takes elements from the beginning of the sequence. IEnumerable&lt;T&gt;? SkipAndTake&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? skipCount, int? takeCount) . Skip and takes elements from the beginning of the sequence. T[]? EnumerableToArray&lt;T&gt;(IEnumerable&lt;T&gt;? values) . Turn array arguments of T into a single array. T[]? MergeArrays&lt;T&gt;(T[][]? values) . Turn array arguments of T into a single array. IEnumerable&lt;T&gt;? LongestCommonSequence&lt;T&gt;(IEnumerable&lt;T&gt;? source, IEnumerable&lt;T&gt;? pattern) . Computes longest common sequence of two given sequences . T? GetElementAtOrDefault&lt;T&gt;(IEnumerable&lt;T&gt;? enumerable, int? index) . Gets the element at the specified index in a sequence . int? Length&lt;T&gt;(IEnumerable&lt;T&gt;? enumerable) . Gets the length of the sequence . int? Length&lt;T&gt;(T[]? array) . Gets the length of the array . T? Choose&lt;T&gt;(int? index, T[] values) . Gets the value of an array at the specified index . T If&lt;T&gt;(bool expressionResult, T a, T b) . Chose a or b value based on the expression result . bool? Match(string? regex, string? content) . Determine whether content matches the specified pattern . byte? Coalesce(byte?[] array) . Gets the first non-null value in a list . sbyte? Coalesce(sbyte?[] array) . Gets the first non-null value in a list . short? Coalesce(short?[] array) . Gets the first non-null value in a list . ushort? Coalesce(ushort?[] array) . Gets the first non-null value in a list . int? Coalesce(int?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(uint?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(long?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(ulong?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(Decimal?[] array) . Gets the first non-null value in a list . T? Coalesce&lt;T&gt;(T[] array) . Gets the first non-null value in a list . IEnumerable&lt;T&gt;? Distinct&lt;T&gt;(IEnumerable&lt;T&gt;? values) . Returns distinct elements from a collection. string? Md5(string? content) . Gets the md5 hash of the given string. string? Md5(byte?[]? content) . Gets the md5 hash of the given bytes array. string? Sha1(string? content) . Gets the sha256 hash of the given string. string? Sha1(byte?[]? content) . Gets the sha256 hash of the given bytes array. string? Sha256(string? content) . Gets the sha256 hash of the given string. string? Sha256(byte?[]? content) . Gets the sha256 hash of the given bytes array. string? Sha512(string? content) . Gets the sha256 hash of the given string. string? Sha512(byte?[]? content) . Gets the sha256 hash of the bytes array. string? ToJson&lt;T&gt;(T? obj) . Converts object to json. string[] ExtractFromJsonToArray(string? json, string? path) . Extracts values from json by path. string? ExtractFromJson(string? json, string? path) . Extracts values from json by path and joins them with comma. Decimal? Abs(Decimal? value) . Gets the absolute value . long? Abs(long? value) . Gets the absolute value . int? Abs(int? value) . Gets the absolute value . Decimal? Ceil(Decimal? value) . Gets the ceiling value . Decimal? Floor(Decimal? value) . Gets the floor value . Decimal? Sign(Decimal? value) . Determine whether value is greater, equal or less that zero . long? Sign(long? value) . Determine whether value is greater, equal or less that zero . Decimal? Round(Decimal? value, int precision) . Rounds the value within given precision . Decimal? PercentOf(Decimal? value, Decimal? max) . Gets the percentage of the value . int Rand() . Gets the random integer value . int? Rand(int? min, int? max) . Gets the random integer value . double? Pow(Decimal? x, Decimal? y) . Computes the pow between two values . double? Pow(double? x, double? y) . Computes the pow between two values . double? Sqrt(Decimal? x) . Computes the sqrt of a given value . double? Sqrt(double? x) . Computes the sqrt of a given value . double? Sqrt(long? x) . Computes the sqrt of a given value . double? PercentRank&lt;T&gt;(IEnumerable&lt;T&gt;? window, T? value) . Computes the percent rank of a given window . double? Log(Decimal? base, Decimal? value) . Calculates the logarithm of a value with a specified base. Decimal? Sin(Decimal? value) . Calculates sine of a value. double? Sin(double? value) . Calculates sine of a value. float? Sin(float? value) . Calculates sine of a value. Decimal? Cos(Decimal? value) . Calculates cosine of a value. double? Cos(double? value) . Calculates cosine of a value. float? Cos(float? value) . Calculates cosine of a value. Decimal Max(string name) . Gets the max value of a given group. Decimal Max(string name, int parent) . Gets the max value of a given group. Decimal Min(string name) . Gets the min value of a given group. Decimal Min(string name, int parent) . Gets the min value of a given group. Decimal StDev(string name, int parent) . Gets the StDev value of a given group. string NewId() . Gets the new identifier . string? Trim(string? value) . Removes leading and trailing whitespace from a string. string? TrimStart(string? value) . Removes leading whitespace from a string. string? TrimEnd(string? value) . Removes trailing whitespace from a string. string? Substring(string? value, int? index, int? length) . Gets the substring from the string. string? Substring(string value, int? length) . Gets the substring from the string . string? Concat(string[]? strings) . Concatenates the specified values . string? Concat(char?[]? characters) . Concatenates the specified characters . string? Concat(string? firstString, char?[]? chars) . Concatenates specified string fir characters . string? Concat(char? firstChar, string[]? strings) . Concatenate specific character with strings . string? Concat(object[]? objects) . Concatenates the specified strings . string? Concat&lt;T&gt;(T[]? objects) . Concatenates the specified strings . bool? Contains(string? content, string? what) . Determine whether the string contains the specified value . int? IndexOf(string? value, string? text) . Position of the first occurrence of the specified value . string? Soundex(string? value) . Computes soundex for the specified value . bool HasFuzzyMatchedWord(string text, string word, string separator) . Matches the specified text by splitting it with separator and applying fuzzy comparison . bool HasWordThatHasSmallerLevenshteinDistanceThan(string text, string word, int distance, string separator) . Matches the specified text by splitting it with separator and applying fuzzy comparison with a given distance . bool HasWordThatSoundLike(string text, string word, string separator) . Matches whether the specified word is present after being fuzzified within the specified text . bool HasTextThatSoundLikeSentence(string text, string sentence, string separator) . Matches whether the specified text is present in sentence after being fuzified . string? ToUpper(string value) . Makes the string uppercase . string? ToUpper(string value, string culture) . Makes the string uppercase within specified culture . string? ToUpperInvariant(string value) . Makes the string uppercase . string? ToLower(string value) . Makes the string lowercase . string? ToLower(string value, string culture) . Makes the string lowercase within specified culture . string? ToLowerInvariant(string value) . Makes the string lowercase . string? PadLeft(string? value, string? character, int? totalWidth) . Returns a new string that right-aligns the characters in this instance by padding them on the left with a specified Unicode character, for a specified total lengt . string? PadRight(string? value, string? character, int? totalWidth) . Returns a new string that left-aligns the characters in this instance by padding them on the right with a specified Unicode character, for a specified total length . string? Head(string? value, int? length) . Gets the first N characters of the string . string? Tail(string? value, int? length) . Gets the last N characters of the string . int? LevenshteinDistance(string? firstValue, string? secondValue) . Computes the Levenshtein distance between two strings . char? GetCharacterOf(string value, int index) . Gets the character at specified index . string? Reverse(string? value) . Reverses the string . string[] Split(string value, string[] separators) . Splits the string into an array of substrings based on the specified separators . char[] ToCharArray(string value) . Splits the string into an array of characters . string? LongestCommonSubstring(string source, string pattern) . Computes the longest common subsequence between two source and pattern . string Replicate(string value, int integer) . Clones the value n times . string? Translate(string? value, string? characters, string? translations) . Returns the string from the first argument after the characters specified in the second argument are translated into the characters specified in the third argument. string? Replace(string? text, string lookFor, string? changeTo) . Replaces the first occurrence of a specified string in this instance with another specified string . string? ToTitleCase(string? value) . Capitalizes the first letter of the string . string? GetNthWord(string? text, int? wordIndex, string? separator) . Gets the nth word of the string . string? GetFirstWord(string text, string separator) . Gets the first word of the string . string? GetSecondWord(string text, string separator) . Gets the second word of the string . string? GetThirdWord(string text, string separator) . Gets the third word of the string . string? GetLastWord(string? text, string? separator) . Gets last word of the string . bool? IsNullOrEmpty(string? value) . Determines whether the string is null or empty . bool? IsNullOrWhiteSpace(string? value) . Determines whether the string is null or whitespace . string? UrlEncode(string? value) . Encodes the value . string? UrlDecode(string? value) . Decodes the value . string? UriEncode(string? value) . Encodes the value . string? UriDecode(string? value) . Decodes the value . bool? StartsWith(string? value, string? prefix) . Determines whether the string starts with the specified prefix . bool? StartsWith(string? value, string? prefix, string comparison) . Determines whether the string starts with the specified prefix . bool? EndsWith(string? value, string? suffix) . Determines whether the string ends with the specified suffix . bool? EndsWith(string? value, string? suffix, string comparison) . Determines whether the string ends with the specified suffix . string? RegexReplace(string? value, string? pattern, string? replacement) . Replace the specified value part that matches the pattern with the replacement . string[]? SplitByLinuxNewLines(string? input) . Split string by Linux-style newlines (\\n) . string[]? SplitByWindowsNewLines(string? input) . Split string by Windows-style newlines (\\r\\n) . string[]? SplitByNewLines(string? input) . Smart split that handles both Windows (\\r\\n) and Linux (\\n) newlines . Decimal Sum(string name) . Gets the sum value of a given group. Decimal Sum(string name, int parent) . Gets the sum value of a given group. Decimal SumIncome(string name) . Gets the sum value of a given group. Decimal SumIncome(string name, int parent) . Gets the sum value of a given group. Decimal SumOutcome(string name) . Gets the outcome value of a given group. Decimal SumOutcome(string name, int parent) . Gets the outcome value of a given group. TimeSpan? SumTimeSpan(string name) . Gets the sum value of a given group. TimeSpan? SumTimeSpan(string name, int parent) . Gets the sum value of a given group. TimeSpan? MinTimeSpan(string name) . Gets the min value of a given group. TimeSpan? MinTimeSpan(string name, int parent) . Gets the min value of a given group. TimeSpan? MaxTimeSpan(string name) . Gets the max value of a given group. TimeSpan? MaxTimeSpan(string name, int parent) . Gets the min value of a given group. char? ToChar(string? value) . Converts given value to character . char? ToChar(int? value) . Converts given value to character . char? ToChar(short? value) . Converts given value to character . char? ToChar(byte? value) . Converts given value to character . char? ToChar(object? value) . Converts given value to character . DateTime? ToDateTime(string value) . Converts given value to DateTime . DateTime? ToDateTime(string value, string culture) . Converts given value to DateTime . Decimal? ToDecimal(string? value) . Converts given value to decimal . Decimal? ToDecimal(string value, string culture) . Converts given value to decimal withing given culture . Decimal? ToDecimal(byte? value) . Converts given value to Decimal . Decimal? ToDecimal(sbyte? value) . Converts given value to Decimal . Decimal? ToDecimal(short? value) . Converts given value to Decimal . Decimal? ToDecimal(ushort? value) . Converts given value to Decimal . Decimal? ToDecimal(long? value) . Converts given value to Decimal . Decimal? ToDecimal(ulong? value) . Converts given value to Decimal . Decimal? ToDecimal(float? value) . Converts given value to Decimal . Decimal? ToDecimal(double? value) . Converts given value to Decimal . Decimal? ToDecimal(object? value) . Converts given value to Decimal . double? ToDouble(object? value) . Converts given value to double . double? ToDouble(string? value) . Converts given value to double . double? ToDouble(byte? value) . Converts given value to double . double? ToDouble(sbyte? value) . Converts given value to double . double? ToDouble(short? value) . Converts given value to double . double? ToDouble(ushort? value) . Converts given value to double . double? ToDouble(int? value) . Converts given value to double . double? ToDouble(uint? value) . Converts given value to double . double? ToDouble(long? value) . Converts given value to double . double? ToDouble(ulong? value) . Converts given value to double . double? ToDouble(float? value) . Converts given value to double . double? ToDouble(double? value) . Converts given value to double . double? ToDouble(Decimal? value) . Converts given value to double . float? ToFloat(string? value) . Converts given value to float . float? ToFloat(byte? value) . Converts given value to float . float? ToFloat(sbyte? value) . Converts given value to float . float? ToFloat(short? value) . Converts given value to float . float? ToFloat(ushort? value) . Converts given value to float . float? ToFloat(int? value) . Converts given value to float . float? ToFloat(uint? value) . Converts given value to float . float? ToFloat(long? value) . Converts given value to float . float? ToFloat(ulong? value) . Converts given value to float . float? ToFloat(float? value) . Converts given value to float . float? ToFloat(Decimal? value) . Converts given value to float . int? ToInt32(string value) . Converts given value to int . int? ToInt32(byte? value) . Converts given value to int . int? ToInt32(sbyte? value) . Converts given value to int . int? ToInt32(short? value) . Converts given value to int . int? ToInt32(ushort? value) . Converts given value to int . int? ToInt32(int? value) . Converts given value to int . int? ToInt32(uint? value) . Converts given value to int . int? ToInt32(long? value) . Converts given value to int . int? ToInt32(ulong? value) . Converts given value to int . int? ToInt32(float? value) . Converts given value to int . int? ToInt32(double? value) . Converts given value to int . int? ToInt32(Decimal? value) . Converts given value to int . int? ToInt32(object? value) . Converts given value to int . long? ToInt64(string value) . Converts given value to Int64 . long? ToInt64(byte? value) . Converts given value to long . long? ToInt64(sbyte? value) . Converts given value to long . long? ToInt64(short? value) . Converts given value to long . long? ToInt64(ushort? value) . Converts given value to long . long? ToInt64(int? value) . Converts given value to long . long? ToInt64(uint? value) . Converts given value to long . long? ToInt64(long? value) . Converts given value to long . long? ToInt64(ulong? value) . Converts given value to long . long? ToInt64(float? value) . Converts given value to long . long? ToInt64(double? value) . Converts given value to long . long? ToInt64(Decimal? value) . Converts given value to long . long? ToInt64(object? value) . Converts given value to long . string? ToString(char? value) . Converts given value to string . string? ToString(DateTimeOffset? value) . Converts given value to string . string? ToString(DateTimeOffset? value, string format) . Converts given value to string . string? ToString(byte? value) . Converts given value to string . string? ToString(byte? value, string format) . Converts given value to string . string? ToString(sbyte? value) . Converts given value to string . string? ToString(sbyte? value, string format) . Converts given value to string . string? ToString(int? value) . Converts given value to string . string? ToString(int? value, string format) . Converts given value to string . string? ToString(uint? value) . Converts given value to string . string? ToString(uint? value, string format) . Converts given value to string . string? ToString(long? value) . Converts given value to string . string? ToString(long? value, string format) . Converts given value to string . string? ToString(ulong? value) . Converts given value to string . string? ToString(ulong? value, string format) . Converts given value to string . string? ToString(float? value) . Converts given value to string . string? ToString(float? value, string format) . Converts given value to string . string? ToString(double? value) . Converts given value to string . string? ToString(double? value, string format) . Converts given value to string . string? ToString(Decimal? value) . Converts given value to string . string? ToString(Decimal? value, string format) . Converts given value to string . string? ToString(bool? value) . Converts given value to string . string? ToString(object? value) . Converts given value to string . string? ToString&lt;T&gt;(T? value) . Converts given value to string . string ToString(string[] value) . Converts given value to string . string ToString&lt;T&gt;(T[] value) . Converts given value to string . TimeSpan? ToTimeSpan(string value) . Converts given value to TimeSpan . TimeSpan? ToTimeSpan(string value, string culture) . Converts given value to TimeSpan . IEnumerable&lt;T&gt; Window&lt;T&gt;(string name) . Gets the window . ",
    "url": "/data-sources/Os/linux-arm64.html#base-methods",
    
    "relUrl": "/data-sources/Os/linux-arm64.html#base-methods"
  },"114": {
    "doc": "Linux Arm64",
    "title": "Linux Arm64",
    "content": " ",
    "url": "/data-sources/Os/linux-arm64.html",
    
    "relUrl": "/data-sources/Os/linux-arm64.html"
  },"115": {
    "doc": "Linux Arm64",
    "title": "Musoq.DataSources.Airtable",
    "content": "Provides interface to work with Airtable API. ",
    "url": "/data-sources/Airtable/linux-arm64.html#musoqdatasourcesairtable",
    
    "relUrl": "/data-sources/Airtable/linux-arm64.html#musoqdatasourcesairtable"
  },"116": {
    "doc": "Linux Arm64",
    "title": "Tables",
    "content": "Table is a collection of rows and columns that the plugin exposes. Below are the tables that are exposed by this data source. airtable.bases() . Enumerate bases from Airtable API . Environment variables . In order to use the plugin, the user must set any required environment variables as specified in the environments element. Failure to do so may result in the plugin not functioning correctly. | Name | Is required | Description | . | MUSOQ_AIRTABLE_API_KEY | true | Airtable API key | . Columns . | Name | Type | Description | . | Id | string | Base id | . | Name | string | Base name | . | PermissionLevel | string | Base description | . airtable.base() . Enumerate base tables for Airtable API . Environment variables . In order to use the plugin, the user must set any required environment variables as specified in the environments element. Failure to do so may result in the plugin not functioning correctly. | Name | Is required | Description | . | MUSOQ_AIRTABLE_API_KEY | true | Airtable API key | . | MUSOQ_AIRTABLE_BASE_ID | true | Airtable base id | . Columns . | Name | Type | Description | . | Id | string | Base id | . | Name | string | Base name | . | PrimaryFieldId | string | Base description | . airtable.records(string tableName) . Enumerate records for specific table . Environment variables . In order to use the plugin, the user must set any required environment variables as specified in the environments element. Failure to do so may result in the plugin not functioning correctly. | Name | Is required | Description | . | MUSOQ_AIRTABLE_API_KEY | true | Airtable API key | . | MUSOQ_AIRTABLE_BASE_ID | true | Airtable base id | . Columns . This table has a dynamic structure, which means that its columns and other details cannot be determined until runtime. As a result, it is not possible to include a complete description of this table in the documentation. Instead, the actual columns and other details of this table will be determined at runtime. ",
    "url": "/data-sources/Airtable/linux-arm64.html#tables",
    
    "relUrl": "/data-sources/Airtable/linux-arm64.html#tables"
  },"117": {
    "doc": "Linux Arm64",
    "title": "Base Methods",
    "content": "Base methods are methods that can be called on the data source specific column. Those methods are automatically inherited and enriches the data source specific methods. Below are those base methods that are exposed by this data source. int RowNumber() . Gets the row number of the current row. string? GetTypeName(object? obj) . Gets the typename of passed object. string AggregateValues(string name) . Aggregates values into a single value. string AggregateValues(string name, int parent) . Aggregates values into a single value. Decimal Avg(string name) . Gets the aggregated average value from the given group name . Decimal Avg(string name, int parent) . Gets the aggregated average value from the given group name . byte? ShiftLeft(byte? value, int shift) . Shifts the value to the left by the specified number of bits. short? ShiftLeft(short? value, int shift) . Shifts the value to the left by the specified number of bits. int? ShiftLeft(int? value, int shift) . Shifts the value to the left by the specified number of bits. long? ShiftLeft(long? value, int shift) . Shifts the value to the left by the specified number of bits. sbyte? ShiftLeft(sbyte? value, int shift) . Shifts the value to the left by the specified number of bits. ushort? ShiftLeft(ushort? value, int shift) . Shifts the value to the left by the specified number of bits. uint? ShiftLeft(uint? value, int shift) . Shifts the value to the left by the specified number of bits. ulong? ShiftLeft(ulong? value, int shift) . Shifts the value to the left by the specified number of bits. byte? ShiftRight(byte? value, int shift) . Shifts the value to the right by the specified number of bits. short? ShiftRight(short? value, int shift) . Shifts the value to the right by the specified number of bits. int? ShiftRight(int? value, int shift) . Shifts the value to the right by the specified number of bits. long? ShiftRight(long? value, int shift) . Shifts the value to the right by the specified number of bits. sbyte? ShiftRight(sbyte? value, int shift) . Shifts the value to the right by the specified number of bits. ushort? ShiftRight(ushort? value, int shift) . Shifts the value to the right by the specified number of bits. uint? ShiftRight(uint? value, int shift) . Shifts the value to the right by the specified number of bits. ulong? ShiftRight(ulong? value, int shift) . Shifts the value to the right by the specified number of bits. byte? Not(byte? value) . Performs bitwise NOT operation on a given value. short? Not(short? value) . Performs bitwise NOT operation on a given value. int? Not(int? value) . Performs bitwise NOT operation on a given value. long? Not(long? value) . Performs bitwise NOT operation on a given value. sbyte? Not(sbyte? value) . Performs bitwise NOT operation on a given value. ushort? Not(ushort? value) . Performs bitwise NOT operation on a given value. uint? Not(uint? value) . Performs bitwise NOT operation on a given value. ulong? Not(ulong? value) . Performs bitwise NOT operation on a given value. byte? And(byte? left, byte? right) . Performs bitwise AND operation on two given values. int? And(byte? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(byte? left, short? right) . Performs bitwise AND operation on two given values. int? And(byte? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(byte? left, int? right) . Performs bitwise AND operation on two given values. uint? And(byte? left, uint? right) . Performs bitwise AND operation on two given values. long? And(byte? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(byte? left, ulong? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, byte? right) . Performs bitwise AND operation on two given values. sbyte? And(sbyte? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, short? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, int? right) . Performs bitwise AND operation on two given values. uint? And(sbyte? left, uint? right) . Performs bitwise AND operation on two given values. long? And(sbyte? left, long? right) . Performs bitwise AND operation on two given values. int? And(short? left, byte? right) . Performs bitwise AND operation on two given values. int? And(short? left, sbyte? right) . Performs bitwise AND operation on two given values. short? And(short? left, short? right) . Performs bitwise AND operation on two given values. int? And(short? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(short? left, int? right) . Performs bitwise AND operation on two given values. uint? And(short? left, uint? right) . Performs bitwise AND operation on two given values. long? And(short? left, long? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, byte? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, short? right) . Performs bitwise AND operation on two given values. ushort? And(ushort? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, int? right) . Performs bitwise AND operation on two given values. uint? And(ushort? left, uint? right) . Performs bitwise AND operation on two given values. long? And(ushort? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(ushort? left, ulong? right) . Performs bitwise AND operation on two given values. int? And(int? left, byte? right) . Performs bitwise AND operation on two given values. int? And(int? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(int? left, short? right) . Performs bitwise AND operation on two given values. int? And(int? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(int? left, int? right) . Performs bitwise AND operation on two given values. uint? And(int? left, uint? right) . Performs bitwise AND operation on two given values. long? And(int? left, long? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, uint? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, byte? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, sbyte? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, short? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, ushort? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, int? right) . Performs bitwise AND operation on two given values. ulong? And(uint? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(uint? left, ulong? right) . Performs bitwise AND operation on two given values. long? And(long? left, long? right) . Performs bitwise AND operation on two given values. long? And(long? left, byte? right) . Performs bitwise AND operation on two given values. long? And(long? left, sbyte? right) . Performs bitwise AND operation on two given values. long? And(long? left, short? right) . Performs bitwise AND operation on two given values. long? And(long? left, ushort? right) . Performs bitwise AND operation on two given values. long? And(long? left, int? right) . Performs bitwise AND operation on two given values. long? And(long? left, uint? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, byte? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, ushort? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, uint? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, ulong? right) . Performs bitwise AND operation on two given values. byte? Or(byte? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, short? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(byte? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(byte? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(byte? left, ulong? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, byte? right) . Performs bitwise OR operation on two given values. sbyte? Or(sbyte? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, short? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(sbyte? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(sbyte? left, long? right) . Performs bitwise OR operation on two given values. int? Or(short? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(short? left, sbyte? right) . Performs bitwise OR operation on two given values. short? Or(short? left, short? right) . Performs bitwise OR operation on two given values. int? Or(short? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(short? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(short? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(short? left, long? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, short? right) . Performs bitwise OR operation on two given values. ushort? Or(ushort? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(ushort? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(ushort? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(ushort? left, ulong? right) . Performs bitwise OR operation on two given values. int? Or(int? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(int? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(int? left, short? right) . Performs bitwise OR operation on two given values. int? Or(int? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(int? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(int? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(int? left, long? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, uint? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, byte? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, sbyte? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, short? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, ushort? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, int? right) . Performs bitwise OR operation on two given values. ulong? Or(uint? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(uint? left, ulong? right) . Performs bitwise OR operation on two given values. long? Or(long? left, long? right) . Performs bitwise OR operation on two given values. long? Or(long? left, byte? right) . Performs bitwise OR operation on two given values. long? Or(long? left, sbyte? right) . Performs bitwise OR operation on two given values. long? Or(long? left, short? right) . Performs bitwise OR operation on two given values. long? Or(long? left, ushort? right) . Performs bitwise OR operation on two given values. long? Or(long? left, int? right) . Performs bitwise OR operation on two given values. long? Or(long? left, uint? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, byte? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, ushort? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, uint? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, ulong? right) . Performs bitwise OR operation on two given values. byte? Xor(byte? left, byte? right) . Performs bitwise OR operation on two given values. int? Xor(byte? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(byte? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(byte? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(byte? left, ulong? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, byte? right) . Performs bitwise Xor operation on two given values. sbyte? Xor(sbyte? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(sbyte? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(sbyte? left, long? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, sbyte? right) . Performs bitwise Xor operation on two given values. short? Xor(short? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, ushort? right) . Performs bitwise XOR operation on two given values. int? Xor(short? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(short? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(short? left, long? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, short? right) . Performs bitwise Xor operation on two given values. ushort? Xor(ushort? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(ushort? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(ushort? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ushort? left, ulong? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(int? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(int? left, long? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, uint? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, byte? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, sbyte? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, short? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, ushort? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, int? right) . Performs bitwise Xor operation on two given values. ulong? Xor(uint? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(uint? left, ulong? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, long? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, byte? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, sbyte? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, short? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, ushort? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, int? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, uint? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, ulong? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, byte? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, ushort? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, uint? right) . Performs bitwise Xor operation on two given values. byte[] GetBytes(string? content) . Gets the bytes from the given string. byte[] GetBytes(string? content, int length, int offset) . Gets the bytes from the given string within given offset and length. byte?[]? GetBytes(char? character) . Gets the bytes from the given character. byte?[]? GetBytes(bool? bit) . Gets the bytes from the given boolean. byte?[]? GetBytes(long? value) . Gets the bytes from the given long. byte?[]? GetBytes(int? value) . Gets the bytes from the given int. byte?[]? GetBytes(short? value) . Gets the bytes from the given short. byte?[]? GetBytes(ulong? value) . Gets the bytes from the given ulong. byte?[]? GetBytes(ushort? value) . Gets the bytes from the given ushort. byte?[]? GetBytes(uint? value) . Gets the bytes from the given uint. byte?[]? GetBytes(Decimal? value) . Gets the bytes from the given decimal. byte?[]? GetBytes(double? value) . Gets the bytes from the given double. byte?[]? GetBytes(float? value) . Gets the bytes from the given float. string? ToBin(byte?[]? bytes, string delimiter) . Converts given bytes to binary with defined delimiter . string ToBin&lt;T&gt;(T value) . Converts given value to binary . string ToOcta&lt;T&gt;(T value) . Converts given value to octal . string ToDec&lt;T&gt;(T value) . Converts given value to decimal . string ToBase64(byte[] value) . Converts given value to string . string ToBase64(byte[] value, int offset, int length) . Converts given array of bytes to string . byte[] FromBase64(string value) . Converts given string to bytes array . bool FromBytesToBool(byte[] value) . Converts bytes to boolean value. short FromBytesToInt16(byte[] value) . Converts bytes to a 16-bit signed integer. ushort FromBytesToUInt16(byte[] value) . Converts bytes to a 16-bit unsigned integer. int FromBytesToInt32(byte[] value) . Converts bytes to a 32-bit signed integer. uint FromBytesToUInt32(byte[] value) . Converts bytes to a 32-bit unsigned integer. long FromBytesToInt64(byte[] value) . Converts bytes to a 64-bit signed integer. ulong FromBytesToUInt64(byte[] value) . Converts bytes to a 64-bit unsigned integer. float FromBytesToFloat(byte[] value) . Converts bytes to a float value. double FromBytesToDouble(byte[] value) . Converts bytes to a float value. string FromBytesToString(byte[] value) . Converts bytes to a string. byte[] ToBytes(bool value) . Converts boolean value to bytes. byte[] ToBytes(short value) . Converts short value to bytes. byte[] ToBytes(ushort value) . Converts ushort value to bytes. byte[] ToBytes(int value) . Converts int value to bytes. byte[] ToBytes(uint value) . Converts uint value to bytes. byte[] ToBytes(long value) . Converts long value to bytes. byte[] ToBytes(ulong value) . Converts long value to bytes. string? ToHex(byte?[]? bytes, string delimiter) . Converts given bytes to hex with defined delimiter . string? ToHex&lt;T&gt;(T value) . Converts given value to binary . int Count(string name) . Gets the count value of a given group. int Count(string name, int parent) . Gets the count value of a given group. int ExtractFromDate(string? date, string partOfDate) . Extracts part of the date from the date . int ExtractFromDate(string date, string culture, string partOfDate) . Extracts part of the date from the date based on given culture . DateTimeOffset? GetDate() . Gets the current datetime . DateTimeOffset? UtcGetDate() . Gets the current datetime in UTC . int? Month(DateTimeOffset? value) . Gets the month from DateTimeOffset . int? Year(DateTimeOffset? value) . Gets the year from DateTimeOffset . int? Day(DateTimeOffset? value) . Gets the day from DateTimeOffset . int? Hour(DateTimeOffset? value) . Gets the hour from DateTimeOffset . int? Minute(DateTimeOffset? value) . Gets the minute from DateTimeOffset . int? Second(DateTimeOffset? value) . Gets the second from DateTimeOffset . int? Milliseconds(DateTimeOffset? value) . Gets the millisecond from DateTimeOffset . int? DayOfWeek(DateTimeOffset? value) . Gets the day of week from DateTimeOffset . TimeSpan? ExtractTimeSpan(DateTimeOffset? dateTimeOffset) . Extracts time from DateTimeOffset . DateTime? ToDateTimeOffset(string value) . Converts given value to DateTimeOffset . DateTimeOffset? ToDateTimeOffset(string value, string culture) . Converts given value to DateTimeOffset . IEnumerable&lt;T&gt;? Skip&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? skipCount) . Skips elements from the beginning of the sequence. IEnumerable&lt;T&gt;? Take&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? takeCount) . Takes elements from the beginning of the sequence. IEnumerable&lt;T&gt;? SkipAndTake&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? skipCount, int? takeCount) . Skip and takes elements from the beginning of the sequence. T[]? EnumerableToArray&lt;T&gt;(IEnumerable&lt;T&gt;? values) . Turn array arguments of T into a single array. T[]? MergeArrays&lt;T&gt;(T[][]? values) . Turn array arguments of T into a single array. IEnumerable&lt;T&gt;? LongestCommonSequence&lt;T&gt;(IEnumerable&lt;T&gt;? source, IEnumerable&lt;T&gt;? pattern) . Computes longest common sequence of two given sequences . T? GetElementAtOrDefault&lt;T&gt;(IEnumerable&lt;T&gt;? enumerable, int? index) . Gets the element at the specified index in a sequence . int? Length&lt;T&gt;(IEnumerable&lt;T&gt;? enumerable) . Gets the length of the sequence . int? Length&lt;T&gt;(T[]? array) . Gets the length of the array . T? Choose&lt;T&gt;(int? index, T[] values) . Gets the value of an array at the specified index . T If&lt;T&gt;(bool expressionResult, T a, T b) . Chose a or b value based on the expression result . bool? Match(string? regex, string? content) . Determine whether content matches the specified pattern . byte? Coalesce(byte?[] array) . Gets the first non-null value in a list . sbyte? Coalesce(sbyte?[] array) . Gets the first non-null value in a list . short? Coalesce(short?[] array) . Gets the first non-null value in a list . ushort? Coalesce(ushort?[] array) . Gets the first non-null value in a list . int? Coalesce(int?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(uint?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(long?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(ulong?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(Decimal?[] array) . Gets the first non-null value in a list . T? Coalesce&lt;T&gt;(T[] array) . Gets the first non-null value in a list . IEnumerable&lt;T&gt;? Distinct&lt;T&gt;(IEnumerable&lt;T&gt;? values) . Returns distinct elements from a collection. string? Md5(string? content) . Gets the md5 hash of the given string. string? Md5(byte?[]? content) . Gets the md5 hash of the given bytes array. string? Sha1(string? content) . Gets the sha256 hash of the given string. string? Sha1(byte?[]? content) . Gets the sha256 hash of the given bytes array. string? Sha256(string? content) . Gets the sha256 hash of the given string. string? Sha256(byte?[]? content) . Gets the sha256 hash of the given bytes array. string? Sha512(string? content) . Gets the sha256 hash of the given string. string? Sha512(byte?[]? content) . Gets the sha256 hash of the bytes array. string? ToJson&lt;T&gt;(T? obj) . Converts object to json. string[] ExtractFromJsonToArray(string? json, string? path) . Extracts values from json by path. string? ExtractFromJson(string? json, string? path) . Extracts values from json by path and joins them with comma. Decimal? Abs(Decimal? value) . Gets the absolute value . long? Abs(long? value) . Gets the absolute value . int? Abs(int? value) . Gets the absolute value . Decimal? Ceil(Decimal? value) . Gets the ceiling value . Decimal? Floor(Decimal? value) . Gets the floor value . Decimal? Sign(Decimal? value) . Determine whether value is greater, equal or less that zero . long? Sign(long? value) . Determine whether value is greater, equal or less that zero . Decimal? Round(Decimal? value, int precision) . Rounds the value within given precision . Decimal? PercentOf(Decimal? value, Decimal? max) . Gets the percentage of the value . int Rand() . Gets the random integer value . int? Rand(int? min, int? max) . Gets the random integer value . double? Pow(Decimal? x, Decimal? y) . Computes the pow between two values . double? Pow(double? x, double? y) . Computes the pow between two values . double? Sqrt(Decimal? x) . Computes the sqrt of a given value . double? Sqrt(double? x) . Computes the sqrt of a given value . double? Sqrt(long? x) . Computes the sqrt of a given value . double? PercentRank&lt;T&gt;(IEnumerable&lt;T&gt;? window, T? value) . Computes the percent rank of a given window . double? Log(Decimal? base, Decimal? value) . Calculates the logarithm of a value with a specified base. Decimal? Sin(Decimal? value) . Calculates sine of a value. double? Sin(double? value) . Calculates sine of a value. float? Sin(float? value) . Calculates sine of a value. Decimal? Cos(Decimal? value) . Calculates cosine of a value. double? Cos(double? value) . Calculates cosine of a value. float? Cos(float? value) . Calculates cosine of a value. Decimal Max(string name) . Gets the max value of a given group. Decimal Max(string name, int parent) . Gets the max value of a given group. Decimal Min(string name) . Gets the min value of a given group. Decimal Min(string name, int parent) . Gets the min value of a given group. Decimal StDev(string name, int parent) . Gets the StDev value of a given group. string NewId() . Gets the new identifier . string? Trim(string? value) . Removes leading and trailing whitespace from a string. string? TrimStart(string? value) . Removes leading whitespace from a string. string? TrimEnd(string? value) . Removes trailing whitespace from a string. string? Substring(string? value, int? index, int? length) . Gets the substring from the string. string? Substring(string value, int? length) . Gets the substring from the string . string? Concat(string[]? strings) . Concatenates the specified values . string? Concat(char?[]? characters) . Concatenates the specified characters . string? Concat(string? firstString, char?[]? chars) . Concatenates specified string fir characters . string? Concat(char? firstChar, string[]? strings) . Concatenate specific character with strings . string? Concat(object[]? objects) . Concatenates the specified strings . string? Concat&lt;T&gt;(T[]? objects) . Concatenates the specified strings . bool? Contains(string? content, string? what) . Determine whether the string contains the specified value . int? IndexOf(string? value, string? text) . Position of the first occurrence of the specified value . string? Soundex(string? value) . Computes soundex for the specified value . bool HasFuzzyMatchedWord(string text, string word, string separator) . Matches the specified text by splitting it with separator and applying fuzzy comparison . bool HasWordThatHasSmallerLevenshteinDistanceThan(string text, string word, int distance, string separator) . Matches the specified text by splitting it with separator and applying fuzzy comparison with a given distance . bool HasWordThatSoundLike(string text, string word, string separator) . Matches whether the specified word is present after being fuzzified within the specified text . bool HasTextThatSoundLikeSentence(string text, string sentence, string separator) . Matches whether the specified text is present in sentence after being fuzified . string? ToUpper(string value) . Makes the string uppercase . string? ToUpper(string value, string culture) . Makes the string uppercase within specified culture . string? ToUpperInvariant(string value) . Makes the string uppercase . string? ToLower(string value) . Makes the string lowercase . string? ToLower(string value, string culture) . Makes the string lowercase within specified culture . string? ToLowerInvariant(string value) . Makes the string lowercase . string? PadLeft(string? value, string? character, int? totalWidth) . Returns a new string that right-aligns the characters in this instance by padding them on the left with a specified Unicode character, for a specified total lengt . string? PadRight(string? value, string? character, int? totalWidth) . Returns a new string that left-aligns the characters in this instance by padding them on the right with a specified Unicode character, for a specified total length . string? Head(string? value, int? length) . Gets the first N characters of the string . string? Tail(string? value, int? length) . Gets the last N characters of the string . int? LevenshteinDistance(string? firstValue, string? secondValue) . Computes the Levenshtein distance between two strings . char? GetCharacterOf(string value, int index) . Gets the character at specified index . string? Reverse(string? value) . Reverses the string . string[] Split(string value, string[] separators) . Splits the string into an array of substrings based on the specified separators . char[] ToCharArray(string value) . Splits the string into an array of characters . string? LongestCommonSubstring(string source, string pattern) . Computes the longest common subsequence between two source and pattern . string Replicate(string value, int integer) . Clones the value n times . string? Translate(string? value, string? characters, string? translations) . Returns the string from the first argument after the characters specified in the second argument are translated into the characters specified in the third argument. string? Replace(string? text, string lookFor, string? changeTo) . Replaces the first occurrence of a specified string in this instance with another specified string . string? ToTitleCase(string? value) . Capitalizes the first letter of the string . string? GetNthWord(string? text, int? wordIndex, string? separator) . Gets the nth word of the string . string? GetFirstWord(string text, string separator) . Gets the first word of the string . string? GetSecondWord(string text, string separator) . Gets the second word of the string . string? GetThirdWord(string text, string separator) . Gets the third word of the string . string? GetLastWord(string? text, string? separator) . Gets last word of the string . bool? IsNullOrEmpty(string? value) . Determines whether the string is null or empty . bool? IsNullOrWhiteSpace(string? value) . Determines whether the string is null or whitespace . string? UrlEncode(string? value) . Encodes the value . string? UrlDecode(string? value) . Decodes the value . string? UriEncode(string? value) . Encodes the value . string? UriDecode(string? value) . Decodes the value . bool? StartsWith(string? value, string? prefix) . Determines whether the string starts with the specified prefix . bool? StartsWith(string? value, string? prefix, string comparison) . Determines whether the string starts with the specified prefix . bool? EndsWith(string? value, string? suffix) . Determines whether the string ends with the specified suffix . bool? EndsWith(string? value, string? suffix, string comparison) . Determines whether the string ends with the specified suffix . string? RegexReplace(string? value, string? pattern, string? replacement) . Replace the specified value part that matches the pattern with the replacement . string[]? SplitByLinuxNewLines(string? input) . Split string by Linux-style newlines (\\n) . string[]? SplitByWindowsNewLines(string? input) . Split string by Windows-style newlines (\\r\\n) . string[]? SplitByNewLines(string? input) . Smart split that handles both Windows (\\r\\n) and Linux (\\n) newlines . Decimal Sum(string name) . Gets the sum value of a given group. Decimal Sum(string name, int parent) . Gets the sum value of a given group. Decimal SumIncome(string name) . Gets the sum value of a given group. Decimal SumIncome(string name, int parent) . Gets the sum value of a given group. Decimal SumOutcome(string name) . Gets the outcome value of a given group. Decimal SumOutcome(string name, int parent) . Gets the outcome value of a given group. TimeSpan? SumTimeSpan(string name) . Gets the sum value of a given group. TimeSpan? SumTimeSpan(string name, int parent) . Gets the sum value of a given group. TimeSpan? MinTimeSpan(string name) . Gets the min value of a given group. TimeSpan? MinTimeSpan(string name, int parent) . Gets the min value of a given group. TimeSpan? MaxTimeSpan(string name) . Gets the max value of a given group. TimeSpan? MaxTimeSpan(string name, int parent) . Gets the min value of a given group. char? ToChar(string? value) . Converts given value to character . char? ToChar(int? value) . Converts given value to character . char? ToChar(short? value) . Converts given value to character . char? ToChar(byte? value) . Converts given value to character . char? ToChar(object? value) . Converts given value to character . DateTime? ToDateTime(string value) . Converts given value to DateTime . DateTime? ToDateTime(string value, string culture) . Converts given value to DateTime . Decimal? ToDecimal(string? value) . Converts given value to decimal . Decimal? ToDecimal(string value, string culture) . Converts given value to decimal withing given culture . Decimal? ToDecimal(byte? value) . Converts given value to Decimal . Decimal? ToDecimal(sbyte? value) . Converts given value to Decimal . Decimal? ToDecimal(short? value) . Converts given value to Decimal . Decimal? ToDecimal(ushort? value) . Converts given value to Decimal . Decimal? ToDecimal(long? value) . Converts given value to Decimal . Decimal? ToDecimal(ulong? value) . Converts given value to Decimal . Decimal? ToDecimal(float? value) . Converts given value to Decimal . Decimal? ToDecimal(double? value) . Converts given value to Decimal . Decimal? ToDecimal(object? value) . Converts given value to Decimal . double? ToDouble(object? value) . Converts given value to double . double? ToDouble(string? value) . Converts given value to double . double? ToDouble(byte? value) . Converts given value to double . double? ToDouble(sbyte? value) . Converts given value to double . double? ToDouble(short? value) . Converts given value to double . double? ToDouble(ushort? value) . Converts given value to double . double? ToDouble(int? value) . Converts given value to double . double? ToDouble(uint? value) . Converts given value to double . double? ToDouble(long? value) . Converts given value to double . double? ToDouble(ulong? value) . Converts given value to double . double? ToDouble(float? value) . Converts given value to double . double? ToDouble(double? value) . Converts given value to double . double? ToDouble(Decimal? value) . Converts given value to double . float? ToFloat(string? value) . Converts given value to float . float? ToFloat(byte? value) . Converts given value to float . float? ToFloat(sbyte? value) . Converts given value to float . float? ToFloat(short? value) . Converts given value to float . float? ToFloat(ushort? value) . Converts given value to float . float? ToFloat(int? value) . Converts given value to float . float? ToFloat(uint? value) . Converts given value to float . float? ToFloat(long? value) . Converts given value to float . float? ToFloat(ulong? value) . Converts given value to float . float? ToFloat(float? value) . Converts given value to float . float? ToFloat(Decimal? value) . Converts given value to float . int? ToInt32(string value) . Converts given value to int . int? ToInt32(byte? value) . Converts given value to int . int? ToInt32(sbyte? value) . Converts given value to int . int? ToInt32(short? value) . Converts given value to int . int? ToInt32(ushort? value) . Converts given value to int . int? ToInt32(int? value) . Converts given value to int . int? ToInt32(uint? value) . Converts given value to int . int? ToInt32(long? value) . Converts given value to int . int? ToInt32(ulong? value) . Converts given value to int . int? ToInt32(float? value) . Converts given value to int . int? ToInt32(double? value) . Converts given value to int . int? ToInt32(Decimal? value) . Converts given value to int . int? ToInt32(object? value) . Converts given value to int . long? ToInt64(string value) . Converts given value to Int64 . long? ToInt64(byte? value) . Converts given value to long . long? ToInt64(sbyte? value) . Converts given value to long . long? ToInt64(short? value) . Converts given value to long . long? ToInt64(ushort? value) . Converts given value to long . long? ToInt64(int? value) . Converts given value to long . long? ToInt64(uint? value) . Converts given value to long . long? ToInt64(long? value) . Converts given value to long . long? ToInt64(ulong? value) . Converts given value to long . long? ToInt64(float? value) . Converts given value to long . long? ToInt64(double? value) . Converts given value to long . long? ToInt64(Decimal? value) . Converts given value to long . long? ToInt64(object? value) . Converts given value to long . string? ToString(char? value) . Converts given value to string . string? ToString(DateTimeOffset? value) . Converts given value to string . string? ToString(DateTimeOffset? value, string format) . Converts given value to string . string? ToString(byte? value) . Converts given value to string . string? ToString(byte? value, string format) . Converts given value to string . string? ToString(sbyte? value) . Converts given value to string . string? ToString(sbyte? value, string format) . Converts given value to string . string? ToString(int? value) . Converts given value to string . string? ToString(int? value, string format) . Converts given value to string . string? ToString(uint? value) . Converts given value to string . string? ToString(uint? value, string format) . Converts given value to string . string? ToString(long? value) . Converts given value to string . string? ToString(long? value, string format) . Converts given value to string . string? ToString(ulong? value) . Converts given value to string . string? ToString(ulong? value, string format) . Converts given value to string . string? ToString(float? value) . Converts given value to string . string? ToString(float? value, string format) . Converts given value to string . string? ToString(double? value) . Converts given value to string . string? ToString(double? value, string format) . Converts given value to string . string? ToString(Decimal? value) . Converts given value to string . string? ToString(Decimal? value, string format) . Converts given value to string . string? ToString(bool? value) . Converts given value to string . string? ToString(object? value) . Converts given value to string . string? ToString&lt;T&gt;(T? value) . Converts given value to string . string ToString(string[] value) . Converts given value to string . string ToString&lt;T&gt;(T[] value) . Converts given value to string . TimeSpan? ToTimeSpan(string value) . Converts given value to TimeSpan . TimeSpan? ToTimeSpan(string value, string culture) . Converts given value to TimeSpan . IEnumerable&lt;T&gt; Window&lt;T&gt;(string name) . Gets the window . ",
    "url": "/data-sources/Airtable/linux-arm64.html#base-methods",
    
    "relUrl": "/data-sources/Airtable/linux-arm64.html#base-methods"
  },"118": {
    "doc": "Linux Arm64",
    "title": "Linux Arm64",
    "content": " ",
    "url": "/data-sources/Airtable/linux-arm64.html",
    
    "relUrl": "/data-sources/Airtable/linux-arm64.html"
  },"119": {
    "doc": "Linux Arm64",
    "title": "Musoq.DataSources.Time",
    "content": " ",
    "url": "/data-sources/Time/linux-arm64.html#musoqdatasourcestime",
    
    "relUrl": "/data-sources/Time/linux-arm64.html#musoqdatasourcestime"
  },"120": {
    "doc": "Linux Arm64",
    "title": "Tables",
    "content": "Table is a collection of rows and columns that the plugin exposes. Below are the tables that are exposed by this data source. time.interval(string startDateTime, string stopDateTime, string interval) . Compute dates between two ranges . | Name | Type | Description | . | DateTime | DateTime | Gets the DateTime object | . | Second | int | Gets second of current computed DateTime | . | Minute | int | Gets minute of current computed DateTime | . | Hour | int | Gets the hour of current computed DateTime | . | Day | int | Gets the day of current computed DateTime | . | Month | int | Gets the month of current computed DateTime | . | Year | int | Gets the year of current computed DateTime | . | DayOfWeek | int | Gets the day of week of current computed DateTime | . | DayOfYear | int | Gets the day of year of current computed DateTime | . | TimeOfDay | TimeSpan | Gets the time of day of current computed DateTime | . ",
    "url": "/data-sources/Time/linux-arm64.html#tables",
    
    "relUrl": "/data-sources/Time/linux-arm64.html#tables"
  },"121": {
    "doc": "Linux Arm64",
    "title": "Base Methods",
    "content": "Base methods are methods that can be called on the data source specific column. Those methods are automatically inherited and enriches the data source specific methods. Below are those base methods that are exposed by this data source. int RowNumber() . Gets the row number of the current row. string? GetTypeName(object? obj) . Gets the typename of passed object. string AggregateValues(string name) . Aggregates values into a single value. string AggregateValues(string name, int parent) . Aggregates values into a single value. Decimal Avg(string name) . Gets the aggregated average value from the given group name . Decimal Avg(string name, int parent) . Gets the aggregated average value from the given group name . byte? ShiftLeft(byte? value, int shift) . Shifts the value to the left by the specified number of bits. short? ShiftLeft(short? value, int shift) . Shifts the value to the left by the specified number of bits. int? ShiftLeft(int? value, int shift) . Shifts the value to the left by the specified number of bits. long? ShiftLeft(long? value, int shift) . Shifts the value to the left by the specified number of bits. sbyte? ShiftLeft(sbyte? value, int shift) . Shifts the value to the left by the specified number of bits. ushort? ShiftLeft(ushort? value, int shift) . Shifts the value to the left by the specified number of bits. uint? ShiftLeft(uint? value, int shift) . Shifts the value to the left by the specified number of bits. ulong? ShiftLeft(ulong? value, int shift) . Shifts the value to the left by the specified number of bits. byte? ShiftRight(byte? value, int shift) . Shifts the value to the right by the specified number of bits. short? ShiftRight(short? value, int shift) . Shifts the value to the right by the specified number of bits. int? ShiftRight(int? value, int shift) . Shifts the value to the right by the specified number of bits. long? ShiftRight(long? value, int shift) . Shifts the value to the right by the specified number of bits. sbyte? ShiftRight(sbyte? value, int shift) . Shifts the value to the right by the specified number of bits. ushort? ShiftRight(ushort? value, int shift) . Shifts the value to the right by the specified number of bits. uint? ShiftRight(uint? value, int shift) . Shifts the value to the right by the specified number of bits. ulong? ShiftRight(ulong? value, int shift) . Shifts the value to the right by the specified number of bits. byte? Not(byte? value) . Performs bitwise NOT operation on a given value. short? Not(short? value) . Performs bitwise NOT operation on a given value. int? Not(int? value) . Performs bitwise NOT operation on a given value. long? Not(long? value) . Performs bitwise NOT operation on a given value. sbyte? Not(sbyte? value) . Performs bitwise NOT operation on a given value. ushort? Not(ushort? value) . Performs bitwise NOT operation on a given value. uint? Not(uint? value) . Performs bitwise NOT operation on a given value. ulong? Not(ulong? value) . Performs bitwise NOT operation on a given value. byte? And(byte? left, byte? right) . Performs bitwise AND operation on two given values. int? And(byte? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(byte? left, short? right) . Performs bitwise AND operation on two given values. int? And(byte? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(byte? left, int? right) . Performs bitwise AND operation on two given values. uint? And(byte? left, uint? right) . Performs bitwise AND operation on two given values. long? And(byte? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(byte? left, ulong? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, byte? right) . Performs bitwise AND operation on two given values. sbyte? And(sbyte? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, short? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, int? right) . Performs bitwise AND operation on two given values. uint? And(sbyte? left, uint? right) . Performs bitwise AND operation on two given values. long? And(sbyte? left, long? right) . Performs bitwise AND operation on two given values. int? And(short? left, byte? right) . Performs bitwise AND operation on two given values. int? And(short? left, sbyte? right) . Performs bitwise AND operation on two given values. short? And(short? left, short? right) . Performs bitwise AND operation on two given values. int? And(short? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(short? left, int? right) . Performs bitwise AND operation on two given values. uint? And(short? left, uint? right) . Performs bitwise AND operation on two given values. long? And(short? left, long? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, byte? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, short? right) . Performs bitwise AND operation on two given values. ushort? And(ushort? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, int? right) . Performs bitwise AND operation on two given values. uint? And(ushort? left, uint? right) . Performs bitwise AND operation on two given values. long? And(ushort? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(ushort? left, ulong? right) . Performs bitwise AND operation on two given values. int? And(int? left, byte? right) . Performs bitwise AND operation on two given values. int? And(int? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(int? left, short? right) . Performs bitwise AND operation on two given values. int? And(int? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(int? left, int? right) . Performs bitwise AND operation on two given values. uint? And(int? left, uint? right) . Performs bitwise AND operation on two given values. long? And(int? left, long? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, uint? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, byte? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, sbyte? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, short? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, ushort? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, int? right) . Performs bitwise AND operation on two given values. ulong? And(uint? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(uint? left, ulong? right) . Performs bitwise AND operation on two given values. long? And(long? left, long? right) . Performs bitwise AND operation on two given values. long? And(long? left, byte? right) . Performs bitwise AND operation on two given values. long? And(long? left, sbyte? right) . Performs bitwise AND operation on two given values. long? And(long? left, short? right) . Performs bitwise AND operation on two given values. long? And(long? left, ushort? right) . Performs bitwise AND operation on two given values. long? And(long? left, int? right) . Performs bitwise AND operation on two given values. long? And(long? left, uint? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, byte? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, ushort? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, uint? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, ulong? right) . Performs bitwise AND operation on two given values. byte? Or(byte? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, short? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(byte? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(byte? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(byte? left, ulong? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, byte? right) . Performs bitwise OR operation on two given values. sbyte? Or(sbyte? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, short? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(sbyte? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(sbyte? left, long? right) . Performs bitwise OR operation on two given values. int? Or(short? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(short? left, sbyte? right) . Performs bitwise OR operation on two given values. short? Or(short? left, short? right) . Performs bitwise OR operation on two given values. int? Or(short? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(short? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(short? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(short? left, long? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, short? right) . Performs bitwise OR operation on two given values. ushort? Or(ushort? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(ushort? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(ushort? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(ushort? left, ulong? right) . Performs bitwise OR operation on two given values. int? Or(int? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(int? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(int? left, short? right) . Performs bitwise OR operation on two given values. int? Or(int? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(int? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(int? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(int? left, long? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, uint? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, byte? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, sbyte? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, short? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, ushort? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, int? right) . Performs bitwise OR operation on two given values. ulong? Or(uint? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(uint? left, ulong? right) . Performs bitwise OR operation on two given values. long? Or(long? left, long? right) . Performs bitwise OR operation on two given values. long? Or(long? left, byte? right) . Performs bitwise OR operation on two given values. long? Or(long? left, sbyte? right) . Performs bitwise OR operation on two given values. long? Or(long? left, short? right) . Performs bitwise OR operation on two given values. long? Or(long? left, ushort? right) . Performs bitwise OR operation on two given values. long? Or(long? left, int? right) . Performs bitwise OR operation on two given values. long? Or(long? left, uint? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, byte? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, ushort? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, uint? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, ulong? right) . Performs bitwise OR operation on two given values. byte? Xor(byte? left, byte? right) . Performs bitwise OR operation on two given values. int? Xor(byte? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(byte? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(byte? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(byte? left, ulong? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, byte? right) . Performs bitwise Xor operation on two given values. sbyte? Xor(sbyte? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(sbyte? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(sbyte? left, long? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, sbyte? right) . Performs bitwise Xor operation on two given values. short? Xor(short? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, ushort? right) . Performs bitwise XOR operation on two given values. int? Xor(short? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(short? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(short? left, long? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, short? right) . Performs bitwise Xor operation on two given values. ushort? Xor(ushort? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(ushort? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(ushort? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ushort? left, ulong? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(int? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(int? left, long? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, uint? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, byte? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, sbyte? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, short? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, ushort? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, int? right) . Performs bitwise Xor operation on two given values. ulong? Xor(uint? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(uint? left, ulong? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, long? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, byte? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, sbyte? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, short? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, ushort? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, int? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, uint? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, ulong? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, byte? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, ushort? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, uint? right) . Performs bitwise Xor operation on two given values. byte[] GetBytes(string? content) . Gets the bytes from the given string. byte[] GetBytes(string? content, int length, int offset) . Gets the bytes from the given string within given offset and length. byte?[]? GetBytes(char? character) . Gets the bytes from the given character. byte?[]? GetBytes(bool? bit) . Gets the bytes from the given boolean. byte?[]? GetBytes(long? value) . Gets the bytes from the given long. byte?[]? GetBytes(int? value) . Gets the bytes from the given int. byte?[]? GetBytes(short? value) . Gets the bytes from the given short. byte?[]? GetBytes(ulong? value) . Gets the bytes from the given ulong. byte?[]? GetBytes(ushort? value) . Gets the bytes from the given ushort. byte?[]? GetBytes(uint? value) . Gets the bytes from the given uint. byte?[]? GetBytes(Decimal? value) . Gets the bytes from the given decimal. byte?[]? GetBytes(double? value) . Gets the bytes from the given double. byte?[]? GetBytes(float? value) . Gets the bytes from the given float. string? ToBin(byte?[]? bytes, string delimiter) . Converts given bytes to binary with defined delimiter . string ToBin&lt;T&gt;(T value) . Converts given value to binary . string ToOcta&lt;T&gt;(T value) . Converts given value to octal . string ToDec&lt;T&gt;(T value) . Converts given value to decimal . string ToBase64(byte[] value) . Converts given value to string . string ToBase64(byte[] value, int offset, int length) . Converts given array of bytes to string . byte[] FromBase64(string value) . Converts given string to bytes array . bool FromBytesToBool(byte[] value) . Converts bytes to boolean value. short FromBytesToInt16(byte[] value) . Converts bytes to a 16-bit signed integer. ushort FromBytesToUInt16(byte[] value) . Converts bytes to a 16-bit unsigned integer. int FromBytesToInt32(byte[] value) . Converts bytes to a 32-bit signed integer. uint FromBytesToUInt32(byte[] value) . Converts bytes to a 32-bit unsigned integer. long FromBytesToInt64(byte[] value) . Converts bytes to a 64-bit signed integer. ulong FromBytesToUInt64(byte[] value) . Converts bytes to a 64-bit unsigned integer. float FromBytesToFloat(byte[] value) . Converts bytes to a float value. double FromBytesToDouble(byte[] value) . Converts bytes to a float value. string FromBytesToString(byte[] value) . Converts bytes to a string. byte[] ToBytes(bool value) . Converts boolean value to bytes. byte[] ToBytes(short value) . Converts short value to bytes. byte[] ToBytes(ushort value) . Converts ushort value to bytes. byte[] ToBytes(int value) . Converts int value to bytes. byte[] ToBytes(uint value) . Converts uint value to bytes. byte[] ToBytes(long value) . Converts long value to bytes. byte[] ToBytes(ulong value) . Converts long value to bytes. string? ToHex(byte?[]? bytes, string delimiter) . Converts given bytes to hex with defined delimiter . string? ToHex&lt;T&gt;(T value) . Converts given value to binary . int Count(string name) . Gets the count value of a given group. int Count(string name, int parent) . Gets the count value of a given group. int ExtractFromDate(string? date, string partOfDate) . Extracts part of the date from the date . int ExtractFromDate(string date, string culture, string partOfDate) . Extracts part of the date from the date based on given culture . DateTimeOffset? GetDate() . Gets the current datetime . DateTimeOffset? UtcGetDate() . Gets the current datetime in UTC . int? Month(DateTimeOffset? value) . Gets the month from DateTimeOffset . int? Year(DateTimeOffset? value) . Gets the year from DateTimeOffset . int? Day(DateTimeOffset? value) . Gets the day from DateTimeOffset . int? Hour(DateTimeOffset? value) . Gets the hour from DateTimeOffset . int? Minute(DateTimeOffset? value) . Gets the minute from DateTimeOffset . int? Second(DateTimeOffset? value) . Gets the second from DateTimeOffset . int? Milliseconds(DateTimeOffset? value) . Gets the millisecond from DateTimeOffset . int? DayOfWeek(DateTimeOffset? value) . Gets the day of week from DateTimeOffset . TimeSpan? ExtractTimeSpan(DateTimeOffset? dateTimeOffset) . Extracts time from DateTimeOffset . DateTime? ToDateTimeOffset(string value) . Converts given value to DateTimeOffset . DateTimeOffset? ToDateTimeOffset(string value, string culture) . Converts given value to DateTimeOffset . IEnumerable&lt;T&gt;? Skip&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? skipCount) . Skips elements from the beginning of the sequence. IEnumerable&lt;T&gt;? Take&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? takeCount) . Takes elements from the beginning of the sequence. IEnumerable&lt;T&gt;? SkipAndTake&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? skipCount, int? takeCount) . Skip and takes elements from the beginning of the sequence. T[]? EnumerableToArray&lt;T&gt;(IEnumerable&lt;T&gt;? values) . Turn array arguments of T into a single array. T[]? MergeArrays&lt;T&gt;(T[][]? values) . Turn array arguments of T into a single array. IEnumerable&lt;T&gt;? LongestCommonSequence&lt;T&gt;(IEnumerable&lt;T&gt;? source, IEnumerable&lt;T&gt;? pattern) . Computes longest common sequence of two given sequences . T? GetElementAtOrDefault&lt;T&gt;(IEnumerable&lt;T&gt;? enumerable, int? index) . Gets the element at the specified index in a sequence . int? Length&lt;T&gt;(IEnumerable&lt;T&gt;? enumerable) . Gets the length of the sequence . int? Length&lt;T&gt;(T[]? array) . Gets the length of the array . T? Choose&lt;T&gt;(int? index, T[] values) . Gets the value of an array at the specified index . T If&lt;T&gt;(bool expressionResult, T a, T b) . Chose a or b value based on the expression result . bool? Match(string? regex, string? content) . Determine whether content matches the specified pattern . byte? Coalesce(byte?[] array) . Gets the first non-null value in a list . sbyte? Coalesce(sbyte?[] array) . Gets the first non-null value in a list . short? Coalesce(short?[] array) . Gets the first non-null value in a list . ushort? Coalesce(ushort?[] array) . Gets the first non-null value in a list . int? Coalesce(int?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(uint?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(long?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(ulong?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(Decimal?[] array) . Gets the first non-null value in a list . T? Coalesce&lt;T&gt;(T[] array) . Gets the first non-null value in a list . IEnumerable&lt;T&gt;? Distinct&lt;T&gt;(IEnumerable&lt;T&gt;? values) . Returns distinct elements from a collection. string? Md5(string? content) . Gets the md5 hash of the given string. string? Md5(byte?[]? content) . Gets the md5 hash of the given bytes array. string? Sha1(string? content) . Gets the sha256 hash of the given string. string? Sha1(byte?[]? content) . Gets the sha256 hash of the given bytes array. string? Sha256(string? content) . Gets the sha256 hash of the given string. string? Sha256(byte?[]? content) . Gets the sha256 hash of the given bytes array. string? Sha512(string? content) . Gets the sha256 hash of the given string. string? Sha512(byte?[]? content) . Gets the sha256 hash of the bytes array. string? ToJson&lt;T&gt;(T? obj) . Converts object to json. string[] ExtractFromJsonToArray(string? json, string? path) . Extracts values from json by path. string? ExtractFromJson(string? json, string? path) . Extracts values from json by path and joins them with comma. Decimal? Abs(Decimal? value) . Gets the absolute value . long? Abs(long? value) . Gets the absolute value . int? Abs(int? value) . Gets the absolute value . Decimal? Ceil(Decimal? value) . Gets the ceiling value . Decimal? Floor(Decimal? value) . Gets the floor value . Decimal? Sign(Decimal? value) . Determine whether value is greater, equal or less that zero . long? Sign(long? value) . Determine whether value is greater, equal or less that zero . Decimal? Round(Decimal? value, int precision) . Rounds the value within given precision . Decimal? PercentOf(Decimal? value, Decimal? max) . Gets the percentage of the value . int Rand() . Gets the random integer value . int? Rand(int? min, int? max) . Gets the random integer value . double? Pow(Decimal? x, Decimal? y) . Computes the pow between two values . double? Pow(double? x, double? y) . Computes the pow between two values . double? Sqrt(Decimal? x) . Computes the sqrt of a given value . double? Sqrt(double? x) . Computes the sqrt of a given value . double? Sqrt(long? x) . Computes the sqrt of a given value . double? PercentRank&lt;T&gt;(IEnumerable&lt;T&gt;? window, T? value) . Computes the percent rank of a given window . double? Log(Decimal? base, Decimal? value) . Calculates the logarithm of a value with a specified base. Decimal? Sin(Decimal? value) . Calculates sine of a value. double? Sin(double? value) . Calculates sine of a value. float? Sin(float? value) . Calculates sine of a value. Decimal? Cos(Decimal? value) . Calculates cosine of a value. double? Cos(double? value) . Calculates cosine of a value. float? Cos(float? value) . Calculates cosine of a value. Decimal Max(string name) . Gets the max value of a given group. Decimal Max(string name, int parent) . Gets the max value of a given group. Decimal Min(string name) . Gets the min value of a given group. Decimal Min(string name, int parent) . Gets the min value of a given group. Decimal StDev(string name, int parent) . Gets the StDev value of a given group. string NewId() . Gets the new identifier . string? Trim(string? value) . Removes leading and trailing whitespace from a string. string? TrimStart(string? value) . Removes leading whitespace from a string. string? TrimEnd(string? value) . Removes trailing whitespace from a string. string? Substring(string? value, int? index, int? length) . Gets the substring from the string. string? Substring(string value, int? length) . Gets the substring from the string . string? Concat(string[]? strings) . Concatenates the specified values . string? Concat(char?[]? characters) . Concatenates the specified characters . string? Concat(string? firstString, char?[]? chars) . Concatenates specified string fir characters . string? Concat(char? firstChar, string[]? strings) . Concatenate specific character with strings . string? Concat(object[]? objects) . Concatenates the specified strings . string? Concat&lt;T&gt;(T[]? objects) . Concatenates the specified strings . bool? Contains(string? content, string? what) . Determine whether the string contains the specified value . int? IndexOf(string? value, string? text) . Position of the first occurrence of the specified value . string? Soundex(string? value) . Computes soundex for the specified value . bool HasFuzzyMatchedWord(string text, string word, string separator) . Matches the specified text by splitting it with separator and applying fuzzy comparison . bool HasWordThatHasSmallerLevenshteinDistanceThan(string text, string word, int distance, string separator) . Matches the specified text by splitting it with separator and applying fuzzy comparison with a given distance . bool HasWordThatSoundLike(string text, string word, string separator) . Matches whether the specified word is present after being fuzzified within the specified text . bool HasTextThatSoundLikeSentence(string text, string sentence, string separator) . Matches whether the specified text is present in sentence after being fuzified . string? ToUpper(string value) . Makes the string uppercase . string? ToUpper(string value, string culture) . Makes the string uppercase within specified culture . string? ToUpperInvariant(string value) . Makes the string uppercase . string? ToLower(string value) . Makes the string lowercase . string? ToLower(string value, string culture) . Makes the string lowercase within specified culture . string? ToLowerInvariant(string value) . Makes the string lowercase . string? PadLeft(string? value, string? character, int? totalWidth) . Returns a new string that right-aligns the characters in this instance by padding them on the left with a specified Unicode character, for a specified total lengt . string? PadRight(string? value, string? character, int? totalWidth) . Returns a new string that left-aligns the characters in this instance by padding them on the right with a specified Unicode character, for a specified total length . string? Head(string? value, int? length) . Gets the first N characters of the string . string? Tail(string? value, int? length) . Gets the last N characters of the string . int? LevenshteinDistance(string? firstValue, string? secondValue) . Computes the Levenshtein distance between two strings . char? GetCharacterOf(string value, int index) . Gets the character at specified index . string? Reverse(string? value) . Reverses the string . string[] Split(string value, string[] separators) . Splits the string into an array of substrings based on the specified separators . char[] ToCharArray(string value) . Splits the string into an array of characters . string? LongestCommonSubstring(string source, string pattern) . Computes the longest common subsequence between two source and pattern . string Replicate(string value, int integer) . Clones the value n times . string? Translate(string? value, string? characters, string? translations) . Returns the string from the first argument after the characters specified in the second argument are translated into the characters specified in the third argument. string? Replace(string? text, string lookFor, string? changeTo) . Replaces the first occurrence of a specified string in this instance with another specified string . string? ToTitleCase(string? value) . Capitalizes the first letter of the string . string? GetNthWord(string? text, int? wordIndex, string? separator) . Gets the nth word of the string . string? GetFirstWord(string text, string separator) . Gets the first word of the string . string? GetSecondWord(string text, string separator) . Gets the second word of the string . string? GetThirdWord(string text, string separator) . Gets the third word of the string . string? GetLastWord(string? text, string? separator) . Gets last word of the string . bool? IsNullOrEmpty(string? value) . Determines whether the string is null or empty . bool? IsNullOrWhiteSpace(string? value) . Determines whether the string is null or whitespace . string? UrlEncode(string? value) . Encodes the value . string? UrlDecode(string? value) . Decodes the value . string? UriEncode(string? value) . Encodes the value . string? UriDecode(string? value) . Decodes the value . bool? StartsWith(string? value, string? prefix) . Determines whether the string starts with the specified prefix . bool? StartsWith(string? value, string? prefix, string comparison) . Determines whether the string starts with the specified prefix . bool? EndsWith(string? value, string? suffix) . Determines whether the string ends with the specified suffix . bool? EndsWith(string? value, string? suffix, string comparison) . Determines whether the string ends with the specified suffix . string? RegexReplace(string? value, string? pattern, string? replacement) . Replace the specified value part that matches the pattern with the replacement . string[]? SplitByLinuxNewLines(string? input) . Split string by Linux-style newlines (\\n) . string[]? SplitByWindowsNewLines(string? input) . Split string by Windows-style newlines (\\r\\n) . string[]? SplitByNewLines(string? input) . Smart split that handles both Windows (\\r\\n) and Linux (\\n) newlines . Decimal Sum(string name) . Gets the sum value of a given group. Decimal Sum(string name, int parent) . Gets the sum value of a given group. Decimal SumIncome(string name) . Gets the sum value of a given group. Decimal SumIncome(string name, int parent) . Gets the sum value of a given group. Decimal SumOutcome(string name) . Gets the outcome value of a given group. Decimal SumOutcome(string name, int parent) . Gets the outcome value of a given group. TimeSpan? SumTimeSpan(string name) . Gets the sum value of a given group. TimeSpan? SumTimeSpan(string name, int parent) . Gets the sum value of a given group. TimeSpan? MinTimeSpan(string name) . Gets the min value of a given group. TimeSpan? MinTimeSpan(string name, int parent) . Gets the min value of a given group. TimeSpan? MaxTimeSpan(string name) . Gets the max value of a given group. TimeSpan? MaxTimeSpan(string name, int parent) . Gets the min value of a given group. char? ToChar(string? value) . Converts given value to character . char? ToChar(int? value) . Converts given value to character . char? ToChar(short? value) . Converts given value to character . char? ToChar(byte? value) . Converts given value to character . char? ToChar(object? value) . Converts given value to character . DateTime? ToDateTime(string value) . Converts given value to DateTime . DateTime? ToDateTime(string value, string culture) . Converts given value to DateTime . Decimal? ToDecimal(string? value) . Converts given value to decimal . Decimal? ToDecimal(string value, string culture) . Converts given value to decimal withing given culture . Decimal? ToDecimal(byte? value) . Converts given value to Decimal . Decimal? ToDecimal(sbyte? value) . Converts given value to Decimal . Decimal? ToDecimal(short? value) . Converts given value to Decimal . Decimal? ToDecimal(ushort? value) . Converts given value to Decimal . Decimal? ToDecimal(long? value) . Converts given value to Decimal . Decimal? ToDecimal(ulong? value) . Converts given value to Decimal . Decimal? ToDecimal(float? value) . Converts given value to Decimal . Decimal? ToDecimal(double? value) . Converts given value to Decimal . Decimal? ToDecimal(object? value) . Converts given value to Decimal . double? ToDouble(object? value) . Converts given value to double . double? ToDouble(string? value) . Converts given value to double . double? ToDouble(byte? value) . Converts given value to double . double? ToDouble(sbyte? value) . Converts given value to double . double? ToDouble(short? value) . Converts given value to double . double? ToDouble(ushort? value) . Converts given value to double . double? ToDouble(int? value) . Converts given value to double . double? ToDouble(uint? value) . Converts given value to double . double? ToDouble(long? value) . Converts given value to double . double? ToDouble(ulong? value) . Converts given value to double . double? ToDouble(float? value) . Converts given value to double . double? ToDouble(double? value) . Converts given value to double . double? ToDouble(Decimal? value) . Converts given value to double . float? ToFloat(string? value) . Converts given value to float . float? ToFloat(byte? value) . Converts given value to float . float? ToFloat(sbyte? value) . Converts given value to float . float? ToFloat(short? value) . Converts given value to float . float? ToFloat(ushort? value) . Converts given value to float . float? ToFloat(int? value) . Converts given value to float . float? ToFloat(uint? value) . Converts given value to float . float? ToFloat(long? value) . Converts given value to float . float? ToFloat(ulong? value) . Converts given value to float . float? ToFloat(float? value) . Converts given value to float . float? ToFloat(Decimal? value) . Converts given value to float . int? ToInt32(string value) . Converts given value to int . int? ToInt32(byte? value) . Converts given value to int . int? ToInt32(sbyte? value) . Converts given value to int . int? ToInt32(short? value) . Converts given value to int . int? ToInt32(ushort? value) . Converts given value to int . int? ToInt32(int? value) . Converts given value to int . int? ToInt32(uint? value) . Converts given value to int . int? ToInt32(long? value) . Converts given value to int . int? ToInt32(ulong? value) . Converts given value to int . int? ToInt32(float? value) . Converts given value to int . int? ToInt32(double? value) . Converts given value to int . int? ToInt32(Decimal? value) . Converts given value to int . int? ToInt32(object? value) . Converts given value to int . long? ToInt64(string value) . Converts given value to Int64 . long? ToInt64(byte? value) . Converts given value to long . long? ToInt64(sbyte? value) . Converts given value to long . long? ToInt64(short? value) . Converts given value to long . long? ToInt64(ushort? value) . Converts given value to long . long? ToInt64(int? value) . Converts given value to long . long? ToInt64(uint? value) . Converts given value to long . long? ToInt64(long? value) . Converts given value to long . long? ToInt64(ulong? value) . Converts given value to long . long? ToInt64(float? value) . Converts given value to long . long? ToInt64(double? value) . Converts given value to long . long? ToInt64(Decimal? value) . Converts given value to long . long? ToInt64(object? value) . Converts given value to long . string? ToString(char? value) . Converts given value to string . string? ToString(DateTimeOffset? value) . Converts given value to string . string? ToString(DateTimeOffset? value, string format) . Converts given value to string . string? ToString(byte? value) . Converts given value to string . string? ToString(byte? value, string format) . Converts given value to string . string? ToString(sbyte? value) . Converts given value to string . string? ToString(sbyte? value, string format) . Converts given value to string . string? ToString(int? value) . Converts given value to string . string? ToString(int? value, string format) . Converts given value to string . string? ToString(uint? value) . Converts given value to string . string? ToString(uint? value, string format) . Converts given value to string . string? ToString(long? value) . Converts given value to string . string? ToString(long? value, string format) . Converts given value to string . string? ToString(ulong? value) . Converts given value to string . string? ToString(ulong? value, string format) . Converts given value to string . string? ToString(float? value) . Converts given value to string . string? ToString(float? value, string format) . Converts given value to string . string? ToString(double? value) . Converts given value to string . string? ToString(double? value, string format) . Converts given value to string . string? ToString(Decimal? value) . Converts given value to string . string? ToString(Decimal? value, string format) . Converts given value to string . string? ToString(bool? value) . Converts given value to string . string? ToString(object? value) . Converts given value to string . string? ToString&lt;T&gt;(T? value) . Converts given value to string . string ToString(string[] value) . Converts given value to string . string ToString&lt;T&gt;(T[] value) . Converts given value to string . TimeSpan? ToTimeSpan(string value) . Converts given value to TimeSpan . TimeSpan? ToTimeSpan(string value, string culture) . Converts given value to TimeSpan . IEnumerable&lt;T&gt; Window&lt;T&gt;(string name) . Gets the window . ",
    "url": "/data-sources/Time/linux-arm64.html#base-methods",
    
    "relUrl": "/data-sources/Time/linux-arm64.html#base-methods"
  },"122": {
    "doc": "Linux Arm64",
    "title": "Linux Arm64",
    "content": " ",
    "url": "/data-sources/Time/linux-arm64.html",
    
    "relUrl": "/data-sources/Time/linux-arm64.html"
  },"123": {
    "doc": "Linux Arm64",
    "title": "Musoq.DataSources.System",
    "content": "System schema helper methods . ",
    "url": "/data-sources/System/linux-arm64.html#musoqdatasourcessystem",
    
    "relUrl": "/data-sources/System/linux-arm64.html#musoqdatasourcessystem"
  },"124": {
    "doc": "Linux Arm64",
    "title": "Tables",
    "content": "Table is a collection of rows and columns that the plugin exposes. Below are the tables that are exposed by this data source. system.dual() . The dummy table . | Name | Type | Description | . | Dummy | string | Just empty string | . system.range(long min, long max) . Gives the ability to generate ranged values . | Name | Type | Description | . | Value | long | Enumerated value | . system.range(int min, int max) . Gives the ability to generate ranged values . | Name | Type | Description | . | Value | long | Enumerated value | . system.range(long max) . Gives the ability to generate ranged values . | Name | Type | Description | . | Value | long | Enumerated value | . ",
    "url": "/data-sources/System/linux-arm64.html#tables",
    
    "relUrl": "/data-sources/System/linux-arm64.html#tables"
  },"125": {
    "doc": "Linux Arm64",
    "title": "Base Methods",
    "content": "Base methods are methods that can be called on the data source specific column. Those methods are automatically inherited and enriches the data source specific methods. Below are those base methods that are exposed by this data source. int RowNumber() . Gets the row number of the current row. string? GetTypeName(object? obj) . Gets the typename of passed object. string AggregateValues(string name) . Aggregates values into a single value. string AggregateValues(string name, int parent) . Aggregates values into a single value. Decimal Avg(string name) . Gets the aggregated average value from the given group name . Decimal Avg(string name, int parent) . Gets the aggregated average value from the given group name . byte? ShiftLeft(byte? value, int shift) . Shifts the value to the left by the specified number of bits. short? ShiftLeft(short? value, int shift) . Shifts the value to the left by the specified number of bits. int? ShiftLeft(int? value, int shift) . Shifts the value to the left by the specified number of bits. long? ShiftLeft(long? value, int shift) . Shifts the value to the left by the specified number of bits. sbyte? ShiftLeft(sbyte? value, int shift) . Shifts the value to the left by the specified number of bits. ushort? ShiftLeft(ushort? value, int shift) . Shifts the value to the left by the specified number of bits. uint? ShiftLeft(uint? value, int shift) . Shifts the value to the left by the specified number of bits. ulong? ShiftLeft(ulong? value, int shift) . Shifts the value to the left by the specified number of bits. byte? ShiftRight(byte? value, int shift) . Shifts the value to the right by the specified number of bits. short? ShiftRight(short? value, int shift) . Shifts the value to the right by the specified number of bits. int? ShiftRight(int? value, int shift) . Shifts the value to the right by the specified number of bits. long? ShiftRight(long? value, int shift) . Shifts the value to the right by the specified number of bits. sbyte? ShiftRight(sbyte? value, int shift) . Shifts the value to the right by the specified number of bits. ushort? ShiftRight(ushort? value, int shift) . Shifts the value to the right by the specified number of bits. uint? ShiftRight(uint? value, int shift) . Shifts the value to the right by the specified number of bits. ulong? ShiftRight(ulong? value, int shift) . Shifts the value to the right by the specified number of bits. byte? Not(byte? value) . Performs bitwise NOT operation on a given value. short? Not(short? value) . Performs bitwise NOT operation on a given value. int? Not(int? value) . Performs bitwise NOT operation on a given value. long? Not(long? value) . Performs bitwise NOT operation on a given value. sbyte? Not(sbyte? value) . Performs bitwise NOT operation on a given value. ushort? Not(ushort? value) . Performs bitwise NOT operation on a given value. uint? Not(uint? value) . Performs bitwise NOT operation on a given value. ulong? Not(ulong? value) . Performs bitwise NOT operation on a given value. byte? And(byte? left, byte? right) . Performs bitwise AND operation on two given values. int? And(byte? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(byte? left, short? right) . Performs bitwise AND operation on two given values. int? And(byte? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(byte? left, int? right) . Performs bitwise AND operation on two given values. uint? And(byte? left, uint? right) . Performs bitwise AND operation on two given values. long? And(byte? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(byte? left, ulong? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, byte? right) . Performs bitwise AND operation on two given values. sbyte? And(sbyte? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, short? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, int? right) . Performs bitwise AND operation on two given values. uint? And(sbyte? left, uint? right) . Performs bitwise AND operation on two given values. long? And(sbyte? left, long? right) . Performs bitwise AND operation on two given values. int? And(short? left, byte? right) . Performs bitwise AND operation on two given values. int? And(short? left, sbyte? right) . Performs bitwise AND operation on two given values. short? And(short? left, short? right) . Performs bitwise AND operation on two given values. int? And(short? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(short? left, int? right) . Performs bitwise AND operation on two given values. uint? And(short? left, uint? right) . Performs bitwise AND operation on two given values. long? And(short? left, long? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, byte? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, short? right) . Performs bitwise AND operation on two given values. ushort? And(ushort? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, int? right) . Performs bitwise AND operation on two given values. uint? And(ushort? left, uint? right) . Performs bitwise AND operation on two given values. long? And(ushort? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(ushort? left, ulong? right) . Performs bitwise AND operation on two given values. int? And(int? left, byte? right) . Performs bitwise AND operation on two given values. int? And(int? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(int? left, short? right) . Performs bitwise AND operation on two given values. int? And(int? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(int? left, int? right) . Performs bitwise AND operation on two given values. uint? And(int? left, uint? right) . Performs bitwise AND operation on two given values. long? And(int? left, long? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, uint? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, byte? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, sbyte? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, short? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, ushort? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, int? right) . Performs bitwise AND operation on two given values. ulong? And(uint? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(uint? left, ulong? right) . Performs bitwise AND operation on two given values. long? And(long? left, long? right) . Performs bitwise AND operation on two given values. long? And(long? left, byte? right) . Performs bitwise AND operation on two given values. long? And(long? left, sbyte? right) . Performs bitwise AND operation on two given values. long? And(long? left, short? right) . Performs bitwise AND operation on two given values. long? And(long? left, ushort? right) . Performs bitwise AND operation on two given values. long? And(long? left, int? right) . Performs bitwise AND operation on two given values. long? And(long? left, uint? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, byte? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, ushort? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, uint? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, ulong? right) . Performs bitwise AND operation on two given values. byte? Or(byte? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, short? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(byte? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(byte? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(byte? left, ulong? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, byte? right) . Performs bitwise OR operation on two given values. sbyte? Or(sbyte? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, short? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(sbyte? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(sbyte? left, long? right) . Performs bitwise OR operation on two given values. int? Or(short? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(short? left, sbyte? right) . Performs bitwise OR operation on two given values. short? Or(short? left, short? right) . Performs bitwise OR operation on two given values. int? Or(short? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(short? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(short? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(short? left, long? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, short? right) . Performs bitwise OR operation on two given values. ushort? Or(ushort? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(ushort? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(ushort? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(ushort? left, ulong? right) . Performs bitwise OR operation on two given values. int? Or(int? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(int? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(int? left, short? right) . Performs bitwise OR operation on two given values. int? Or(int? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(int? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(int? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(int? left, long? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, uint? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, byte? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, sbyte? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, short? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, ushort? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, int? right) . Performs bitwise OR operation on two given values. ulong? Or(uint? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(uint? left, ulong? right) . Performs bitwise OR operation on two given values. long? Or(long? left, long? right) . Performs bitwise OR operation on two given values. long? Or(long? left, byte? right) . Performs bitwise OR operation on two given values. long? Or(long? left, sbyte? right) . Performs bitwise OR operation on two given values. long? Or(long? left, short? right) . Performs bitwise OR operation on two given values. long? Or(long? left, ushort? right) . Performs bitwise OR operation on two given values. long? Or(long? left, int? right) . Performs bitwise OR operation on two given values. long? Or(long? left, uint? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, byte? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, ushort? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, uint? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, ulong? right) . Performs bitwise OR operation on two given values. byte? Xor(byte? left, byte? right) . Performs bitwise OR operation on two given values. int? Xor(byte? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(byte? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(byte? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(byte? left, ulong? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, byte? right) . Performs bitwise Xor operation on two given values. sbyte? Xor(sbyte? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(sbyte? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(sbyte? left, long? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, sbyte? right) . Performs bitwise Xor operation on two given values. short? Xor(short? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, ushort? right) . Performs bitwise XOR operation on two given values. int? Xor(short? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(short? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(short? left, long? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, short? right) . Performs bitwise Xor operation on two given values. ushort? Xor(ushort? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(ushort? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(ushort? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ushort? left, ulong? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(int? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(int? left, long? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, uint? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, byte? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, sbyte? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, short? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, ushort? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, int? right) . Performs bitwise Xor operation on two given values. ulong? Xor(uint? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(uint? left, ulong? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, long? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, byte? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, sbyte? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, short? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, ushort? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, int? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, uint? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, ulong? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, byte? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, ushort? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, uint? right) . Performs bitwise Xor operation on two given values. byte[] GetBytes(string? content) . Gets the bytes from the given string. byte[] GetBytes(string? content, int length, int offset) . Gets the bytes from the given string within given offset and length. byte?[]? GetBytes(char? character) . Gets the bytes from the given character. byte?[]? GetBytes(bool? bit) . Gets the bytes from the given boolean. byte?[]? GetBytes(long? value) . Gets the bytes from the given long. byte?[]? GetBytes(int? value) . Gets the bytes from the given int. byte?[]? GetBytes(short? value) . Gets the bytes from the given short. byte?[]? GetBytes(ulong? value) . Gets the bytes from the given ulong. byte?[]? GetBytes(ushort? value) . Gets the bytes from the given ushort. byte?[]? GetBytes(uint? value) . Gets the bytes from the given uint. byte?[]? GetBytes(Decimal? value) . Gets the bytes from the given decimal. byte?[]? GetBytes(double? value) . Gets the bytes from the given double. byte?[]? GetBytes(float? value) . Gets the bytes from the given float. string? ToBin(byte?[]? bytes, string delimiter) . Converts given bytes to binary with defined delimiter . string ToBin&lt;T&gt;(T value) . Converts given value to binary . string ToOcta&lt;T&gt;(T value) . Converts given value to octal . string ToDec&lt;T&gt;(T value) . Converts given value to decimal . string ToBase64(byte[] value) . Converts given value to string . string ToBase64(byte[] value, int offset, int length) . Converts given array of bytes to string . byte[] FromBase64(string value) . Converts given string to bytes array . bool FromBytesToBool(byte[] value) . Converts bytes to boolean value. short FromBytesToInt16(byte[] value) . Converts bytes to a 16-bit signed integer. ushort FromBytesToUInt16(byte[] value) . Converts bytes to a 16-bit unsigned integer. int FromBytesToInt32(byte[] value) . Converts bytes to a 32-bit signed integer. uint FromBytesToUInt32(byte[] value) . Converts bytes to a 32-bit unsigned integer. long FromBytesToInt64(byte[] value) . Converts bytes to a 64-bit signed integer. ulong FromBytesToUInt64(byte[] value) . Converts bytes to a 64-bit unsigned integer. float FromBytesToFloat(byte[] value) . Converts bytes to a float value. double FromBytesToDouble(byte[] value) . Converts bytes to a float value. string FromBytesToString(byte[] value) . Converts bytes to a string. byte[] ToBytes(bool value) . Converts boolean value to bytes. byte[] ToBytes(short value) . Converts short value to bytes. byte[] ToBytes(ushort value) . Converts ushort value to bytes. byte[] ToBytes(int value) . Converts int value to bytes. byte[] ToBytes(uint value) . Converts uint value to bytes. byte[] ToBytes(long value) . Converts long value to bytes. byte[] ToBytes(ulong value) . Converts long value to bytes. string? ToHex(byte?[]? bytes, string delimiter) . Converts given bytes to hex with defined delimiter . string? ToHex&lt;T&gt;(T value) . Converts given value to binary . int Count(string name) . Gets the count value of a given group. int Count(string name, int parent) . Gets the count value of a given group. int ExtractFromDate(string? date, string partOfDate) . Extracts part of the date from the date . int ExtractFromDate(string date, string culture, string partOfDate) . Extracts part of the date from the date based on given culture . DateTimeOffset? GetDate() . Gets the current datetime . DateTimeOffset? UtcGetDate() . Gets the current datetime in UTC . int? Month(DateTimeOffset? value) . Gets the month from DateTimeOffset . int? Year(DateTimeOffset? value) . Gets the year from DateTimeOffset . int? Day(DateTimeOffset? value) . Gets the day from DateTimeOffset . int? Hour(DateTimeOffset? value) . Gets the hour from DateTimeOffset . int? Minute(DateTimeOffset? value) . Gets the minute from DateTimeOffset . int? Second(DateTimeOffset? value) . Gets the second from DateTimeOffset . int? Milliseconds(DateTimeOffset? value) . Gets the millisecond from DateTimeOffset . int? DayOfWeek(DateTimeOffset? value) . Gets the day of week from DateTimeOffset . TimeSpan? ExtractTimeSpan(DateTimeOffset? dateTimeOffset) . Extracts time from DateTimeOffset . DateTime? ToDateTimeOffset(string value) . Converts given value to DateTimeOffset . DateTimeOffset? ToDateTimeOffset(string value, string culture) . Converts given value to DateTimeOffset . IEnumerable&lt;T&gt;? Skip&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? skipCount) . Skips elements from the beginning of the sequence. IEnumerable&lt;T&gt;? Take&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? takeCount) . Takes elements from the beginning of the sequence. IEnumerable&lt;T&gt;? SkipAndTake&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? skipCount, int? takeCount) . Skip and takes elements from the beginning of the sequence. T[]? EnumerableToArray&lt;T&gt;(IEnumerable&lt;T&gt;? values) . Turn array arguments of T into a single array. T[]? MergeArrays&lt;T&gt;(T[][]? values) . Turn array arguments of T into a single array. IEnumerable&lt;T&gt;? LongestCommonSequence&lt;T&gt;(IEnumerable&lt;T&gt;? source, IEnumerable&lt;T&gt;? pattern) . Computes longest common sequence of two given sequences . T? GetElementAtOrDefault&lt;T&gt;(IEnumerable&lt;T&gt;? enumerable, int? index) . Gets the element at the specified index in a sequence . int? Length&lt;T&gt;(IEnumerable&lt;T&gt;? enumerable) . Gets the length of the sequence . int? Length&lt;T&gt;(T[]? array) . Gets the length of the array . T? Choose&lt;T&gt;(int? index, T[] values) . Gets the value of an array at the specified index . T If&lt;T&gt;(bool expressionResult, T a, T b) . Chose a or b value based on the expression result . bool? Match(string? regex, string? content) . Determine whether content matches the specified pattern . byte? Coalesce(byte?[] array) . Gets the first non-null value in a list . sbyte? Coalesce(sbyte?[] array) . Gets the first non-null value in a list . short? Coalesce(short?[] array) . Gets the first non-null value in a list . ushort? Coalesce(ushort?[] array) . Gets the first non-null value in a list . int? Coalesce(int?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(uint?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(long?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(ulong?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(Decimal?[] array) . Gets the first non-null value in a list . T? Coalesce&lt;T&gt;(T[] array) . Gets the first non-null value in a list . IEnumerable&lt;T&gt;? Distinct&lt;T&gt;(IEnumerable&lt;T&gt;? values) . Returns distinct elements from a collection. string? Md5(string? content) . Gets the md5 hash of the given string. string? Md5(byte?[]? content) . Gets the md5 hash of the given bytes array. string? Sha1(string? content) . Gets the sha256 hash of the given string. string? Sha1(byte?[]? content) . Gets the sha256 hash of the given bytes array. string? Sha256(string? content) . Gets the sha256 hash of the given string. string? Sha256(byte?[]? content) . Gets the sha256 hash of the given bytes array. string? Sha512(string? content) . Gets the sha256 hash of the given string. string? Sha512(byte?[]? content) . Gets the sha256 hash of the bytes array. string? ToJson&lt;T&gt;(T? obj) . Converts object to json. string[] ExtractFromJsonToArray(string? json, string? path) . Extracts values from json by path. string? ExtractFromJson(string? json, string? path) . Extracts values from json by path and joins them with comma. Decimal? Abs(Decimal? value) . Gets the absolute value . long? Abs(long? value) . Gets the absolute value . int? Abs(int? value) . Gets the absolute value . Decimal? Ceil(Decimal? value) . Gets the ceiling value . Decimal? Floor(Decimal? value) . Gets the floor value . Decimal? Sign(Decimal? value) . Determine whether value is greater, equal or less that zero . long? Sign(long? value) . Determine whether value is greater, equal or less that zero . Decimal? Round(Decimal? value, int precision) . Rounds the value within given precision . Decimal? PercentOf(Decimal? value, Decimal? max) . Gets the percentage of the value . int Rand() . Gets the random integer value . int? Rand(int? min, int? max) . Gets the random integer value . double? Pow(Decimal? x, Decimal? y) . Computes the pow between two values . double? Pow(double? x, double? y) . Computes the pow between two values . double? Sqrt(Decimal? x) . Computes the sqrt of a given value . double? Sqrt(double? x) . Computes the sqrt of a given value . double? Sqrt(long? x) . Computes the sqrt of a given value . double? PercentRank&lt;T&gt;(IEnumerable&lt;T&gt;? window, T? value) . Computes the percent rank of a given window . double? Log(Decimal? base, Decimal? value) . Calculates the logarithm of a value with a specified base. Decimal? Sin(Decimal? value) . Calculates sine of a value. double? Sin(double? value) . Calculates sine of a value. float? Sin(float? value) . Calculates sine of a value. Decimal? Cos(Decimal? value) . Calculates cosine of a value. double? Cos(double? value) . Calculates cosine of a value. float? Cos(float? value) . Calculates cosine of a value. Decimal Max(string name) . Gets the max value of a given group. Decimal Max(string name, int parent) . Gets the max value of a given group. Decimal Min(string name) . Gets the min value of a given group. Decimal Min(string name, int parent) . Gets the min value of a given group. Decimal StDev(string name, int parent) . Gets the StDev value of a given group. string NewId() . Gets the new identifier . string? Trim(string? value) . Removes leading and trailing whitespace from a string. string? TrimStart(string? value) . Removes leading whitespace from a string. string? TrimEnd(string? value) . Removes trailing whitespace from a string. string? Substring(string? value, int? index, int? length) . Gets the substring from the string. string? Substring(string value, int? length) . Gets the substring from the string . string? Concat(string[]? strings) . Concatenates the specified values . string? Concat(char?[]? characters) . Concatenates the specified characters . string? Concat(string? firstString, char?[]? chars) . Concatenates specified string fir characters . string? Concat(char? firstChar, string[]? strings) . Concatenate specific character with strings . string? Concat(object[]? objects) . Concatenates the specified strings . string? Concat&lt;T&gt;(T[]? objects) . Concatenates the specified strings . bool? Contains(string? content, string? what) . Determine whether the string contains the specified value . int? IndexOf(string? value, string? text) . Position of the first occurrence of the specified value . string? Soundex(string? value) . Computes soundex for the specified value . bool HasFuzzyMatchedWord(string text, string word, string separator) . Matches the specified text by splitting it with separator and applying fuzzy comparison . bool HasWordThatHasSmallerLevenshteinDistanceThan(string text, string word, int distance, string separator) . Matches the specified text by splitting it with separator and applying fuzzy comparison with a given distance . bool HasWordThatSoundLike(string text, string word, string separator) . Matches whether the specified word is present after being fuzzified within the specified text . bool HasTextThatSoundLikeSentence(string text, string sentence, string separator) . Matches whether the specified text is present in sentence after being fuzified . string? ToUpper(string value) . Makes the string uppercase . string? ToUpper(string value, string culture) . Makes the string uppercase within specified culture . string? ToUpperInvariant(string value) . Makes the string uppercase . string? ToLower(string value) . Makes the string lowercase . string? ToLower(string value, string culture) . Makes the string lowercase within specified culture . string? ToLowerInvariant(string value) . Makes the string lowercase . string? PadLeft(string? value, string? character, int? totalWidth) . Returns a new string that right-aligns the characters in this instance by padding them on the left with a specified Unicode character, for a specified total lengt . string? PadRight(string? value, string? character, int? totalWidth) . Returns a new string that left-aligns the characters in this instance by padding them on the right with a specified Unicode character, for a specified total length . string? Head(string? value, int? length) . Gets the first N characters of the string . string? Tail(string? value, int? length) . Gets the last N characters of the string . int? LevenshteinDistance(string? firstValue, string? secondValue) . Computes the Levenshtein distance between two strings . char? GetCharacterOf(string value, int index) . Gets the character at specified index . string? Reverse(string? value) . Reverses the string . string[] Split(string value, string[] separators) . Splits the string into an array of substrings based on the specified separators . char[] ToCharArray(string value) . Splits the string into an array of characters . string? LongestCommonSubstring(string source, string pattern) . Computes the longest common subsequence between two source and pattern . string Replicate(string value, int integer) . Clones the value n times . string? Translate(string? value, string? characters, string? translations) . Returns the string from the first argument after the characters specified in the second argument are translated into the characters specified in the third argument. string? Replace(string? text, string lookFor, string? changeTo) . Replaces the first occurrence of a specified string in this instance with another specified string . string? ToTitleCase(string? value) . Capitalizes the first letter of the string . string? GetNthWord(string? text, int? wordIndex, string? separator) . Gets the nth word of the string . string? GetFirstWord(string text, string separator) . Gets the first word of the string . string? GetSecondWord(string text, string separator) . Gets the second word of the string . string? GetThirdWord(string text, string separator) . Gets the third word of the string . string? GetLastWord(string? text, string? separator) . Gets last word of the string . bool? IsNullOrEmpty(string? value) . Determines whether the string is null or empty . bool? IsNullOrWhiteSpace(string? value) . Determines whether the string is null or whitespace . string? UrlEncode(string? value) . Encodes the value . string? UrlDecode(string? value) . Decodes the value . string? UriEncode(string? value) . Encodes the value . string? UriDecode(string? value) . Decodes the value . bool? StartsWith(string? value, string? prefix) . Determines whether the string starts with the specified prefix . bool? StartsWith(string? value, string? prefix, string comparison) . Determines whether the string starts with the specified prefix . bool? EndsWith(string? value, string? suffix) . Determines whether the string ends with the specified suffix . bool? EndsWith(string? value, string? suffix, string comparison) . Determines whether the string ends with the specified suffix . string? RegexReplace(string? value, string? pattern, string? replacement) . Replace the specified value part that matches the pattern with the replacement . string[]? SplitByLinuxNewLines(string? input) . Split string by Linux-style newlines (\\n) . string[]? SplitByWindowsNewLines(string? input) . Split string by Windows-style newlines (\\r\\n) . string[]? SplitByNewLines(string? input) . Smart split that handles both Windows (\\r\\n) and Linux (\\n) newlines . Decimal Sum(string name) . Gets the sum value of a given group. Decimal Sum(string name, int parent) . Gets the sum value of a given group. Decimal SumIncome(string name) . Gets the sum value of a given group. Decimal SumIncome(string name, int parent) . Gets the sum value of a given group. Decimal SumOutcome(string name) . Gets the outcome value of a given group. Decimal SumOutcome(string name, int parent) . Gets the outcome value of a given group. TimeSpan? SumTimeSpan(string name) . Gets the sum value of a given group. TimeSpan? SumTimeSpan(string name, int parent) . Gets the sum value of a given group. TimeSpan? MinTimeSpan(string name) . Gets the min value of a given group. TimeSpan? MinTimeSpan(string name, int parent) . Gets the min value of a given group. TimeSpan? MaxTimeSpan(string name) . Gets the max value of a given group. TimeSpan? MaxTimeSpan(string name, int parent) . Gets the min value of a given group. char? ToChar(string? value) . Converts given value to character . char? ToChar(int? value) . Converts given value to character . char? ToChar(short? value) . Converts given value to character . char? ToChar(byte? value) . Converts given value to character . char? ToChar(object? value) . Converts given value to character . DateTime? ToDateTime(string value) . Converts given value to DateTime . DateTime? ToDateTime(string value, string culture) . Converts given value to DateTime . Decimal? ToDecimal(string? value) . Converts given value to decimal . Decimal? ToDecimal(string value, string culture) . Converts given value to decimal withing given culture . Decimal? ToDecimal(byte? value) . Converts given value to Decimal . Decimal? ToDecimal(sbyte? value) . Converts given value to Decimal . Decimal? ToDecimal(short? value) . Converts given value to Decimal . Decimal? ToDecimal(ushort? value) . Converts given value to Decimal . Decimal? ToDecimal(long? value) . Converts given value to Decimal . Decimal? ToDecimal(ulong? value) . Converts given value to Decimal . Decimal? ToDecimal(float? value) . Converts given value to Decimal . Decimal? ToDecimal(double? value) . Converts given value to Decimal . Decimal? ToDecimal(object? value) . Converts given value to Decimal . double? ToDouble(object? value) . Converts given value to double . double? ToDouble(string? value) . Converts given value to double . double? ToDouble(byte? value) . Converts given value to double . double? ToDouble(sbyte? value) . Converts given value to double . double? ToDouble(short? value) . Converts given value to double . double? ToDouble(ushort? value) . Converts given value to double . double? ToDouble(int? value) . Converts given value to double . double? ToDouble(uint? value) . Converts given value to double . double? ToDouble(long? value) . Converts given value to double . double? ToDouble(ulong? value) . Converts given value to double . double? ToDouble(float? value) . Converts given value to double . double? ToDouble(double? value) . Converts given value to double . double? ToDouble(Decimal? value) . Converts given value to double . float? ToFloat(string? value) . Converts given value to float . float? ToFloat(byte? value) . Converts given value to float . float? ToFloat(sbyte? value) . Converts given value to float . float? ToFloat(short? value) . Converts given value to float . float? ToFloat(ushort? value) . Converts given value to float . float? ToFloat(int? value) . Converts given value to float . float? ToFloat(uint? value) . Converts given value to float . float? ToFloat(long? value) . Converts given value to float . float? ToFloat(ulong? value) . Converts given value to float . float? ToFloat(float? value) . Converts given value to float . float? ToFloat(Decimal? value) . Converts given value to float . int? ToInt32(string value) . Converts given value to int . int? ToInt32(byte? value) . Converts given value to int . int? ToInt32(sbyte? value) . Converts given value to int . int? ToInt32(short? value) . Converts given value to int . int? ToInt32(ushort? value) . Converts given value to int . int? ToInt32(int? value) . Converts given value to int . int? ToInt32(uint? value) . Converts given value to int . int? ToInt32(long? value) . Converts given value to int . int? ToInt32(ulong? value) . Converts given value to int . int? ToInt32(float? value) . Converts given value to int . int? ToInt32(double? value) . Converts given value to int . int? ToInt32(Decimal? value) . Converts given value to int . int? ToInt32(object? value) . Converts given value to int . long? ToInt64(string value) . Converts given value to Int64 . long? ToInt64(byte? value) . Converts given value to long . long? ToInt64(sbyte? value) . Converts given value to long . long? ToInt64(short? value) . Converts given value to long . long? ToInt64(ushort? value) . Converts given value to long . long? ToInt64(int? value) . Converts given value to long . long? ToInt64(uint? value) . Converts given value to long . long? ToInt64(long? value) . Converts given value to long . long? ToInt64(ulong? value) . Converts given value to long . long? ToInt64(float? value) . Converts given value to long . long? ToInt64(double? value) . Converts given value to long . long? ToInt64(Decimal? value) . Converts given value to long . long? ToInt64(object? value) . Converts given value to long . string? ToString(char? value) . Converts given value to string . string? ToString(DateTimeOffset? value) . Converts given value to string . string? ToString(DateTimeOffset? value, string format) . Converts given value to string . string? ToString(byte? value) . Converts given value to string . string? ToString(byte? value, string format) . Converts given value to string . string? ToString(sbyte? value) . Converts given value to string . string? ToString(sbyte? value, string format) . Converts given value to string . string? ToString(int? value) . Converts given value to string . string? ToString(int? value, string format) . Converts given value to string . string? ToString(uint? value) . Converts given value to string . string? ToString(uint? value, string format) . Converts given value to string . string? ToString(long? value) . Converts given value to string . string? ToString(long? value, string format) . Converts given value to string . string? ToString(ulong? value) . Converts given value to string . string? ToString(ulong? value, string format) . Converts given value to string . string? ToString(float? value) . Converts given value to string . string? ToString(float? value, string format) . Converts given value to string . string? ToString(double? value) . Converts given value to string . string? ToString(double? value, string format) . Converts given value to string . string? ToString(Decimal? value) . Converts given value to string . string? ToString(Decimal? value, string format) . Converts given value to string . string? ToString(bool? value) . Converts given value to string . string? ToString(object? value) . Converts given value to string . string? ToString&lt;T&gt;(T? value) . Converts given value to string . string ToString(string[] value) . Converts given value to string . string ToString&lt;T&gt;(T[] value) . Converts given value to string . TimeSpan? ToTimeSpan(string value) . Converts given value to TimeSpan . TimeSpan? ToTimeSpan(string value, string culture) . Converts given value to TimeSpan . IEnumerable&lt;T&gt; Window&lt;T&gt;(string name) . Gets the window . ",
    "url": "/data-sources/System/linux-arm64.html#base-methods",
    
    "relUrl": "/data-sources/System/linux-arm64.html#base-methods"
  },"126": {
    "doc": "Linux Arm64",
    "title": "Linux Arm64",
    "content": " ",
    "url": "/data-sources/System/linux-arm64.html",
    
    "relUrl": "/data-sources/System/linux-arm64.html"
  },"127": {
    "doc": "Linux Arm64",
    "title": "Musoq.DataSources.OpenAI",
    "content": "Provides interface to work with OpenAI API. ",
    "url": "/data-sources/OpenAI/linux-arm64.html#musoqdatasourcesopenai",
    
    "relUrl": "/data-sources/OpenAI/linux-arm64.html#musoqdatasourcesopenai"
  },"128": {
    "doc": "Linux Arm64",
    "title": "Tables",
    "content": "Table is a collection of rows and columns that the plugin exposes. Below are the tables that are exposed by this data source. openai.gpt() . Gives the access to OpenAI api . Environment variables . In order to use the plugin, the user must set any required environment variables as specified in the environments element. Failure to do so may result in the plugin not functioning correctly. | Name | Is required | Description | . | OPENAI_API_KEY | true | Open AI api key | . Columns . This table has a dynamic structure, which means that its columns and other details cannot be determined until runtime. As a result, it is not possible to include a complete description of this table in the documentation. Instead, the actual columns and other details of this table will be determined at runtime. openai.gpt(string model) . Gives the access to OpenAI api . Environment variables . In order to use the plugin, the user must set any required environment variables as specified in the environments element. Failure to do so may result in the plugin not functioning correctly. | Name | Is required | Description | . | OPENAI_API_KEY | true | Open AI api key | . Columns . This table has a dynamic structure, which means that its columns and other details cannot be determined until runtime. As a result, it is not possible to include a complete description of this table in the documentation. Instead, the actual columns and other details of this table will be determined at runtime. openai.gpt(string model, int maxTokens) . Gives the access to OpenAI api . Environment variables . In order to use the plugin, the user must set any required environment variables as specified in the environments element. Failure to do so may result in the plugin not functioning correctly. | Name | Is required | Description | . | OPENAI_API_KEY | true | Open AI api key | . Columns . This table has a dynamic structure, which means that its columns and other details cannot be determined until runtime. As a result, it is not possible to include a complete description of this table in the documentation. Instead, the actual columns and other details of this table will be determined at runtime. openai.gpt(string model, int maxTokens, double temperature) . Gives the access to OpenAI api . Environment variables . In order to use the plugin, the user must set any required environment variables as specified in the environments element. Failure to do so may result in the plugin not functioning correctly. | Name | Is required | Description | . | OPENAI_API_KEY | true | Open AI api key | . Columns . This table has a dynamic structure, which means that its columns and other details cannot be determined until runtime. As a result, it is not possible to include a complete description of this table in the documentation. Instead, the actual columns and other details of this table will be determined at runtime. openai.gpt(string model, int maxTokens, double temperature, double frequencyPenalty) . Gives the access to OpenAI api . Environment variables . In order to use the plugin, the user must set any required environment variables as specified in the environments element. Failure to do so may result in the plugin not functioning correctly. | Name | Is required | Description | . | OPENAI_API_KEY | true | Open AI api key | . Columns . This table has a dynamic structure, which means that its columns and other details cannot be determined until runtime. As a result, it is not possible to include a complete description of this table in the documentation. Instead, the actual columns and other details of this table will be determined at runtime. openai.gpt(string model, int maxTokens, double temperature, double frequencyPenalty, double presencePenalty) . Gives the access to OpenAI api . Environment variables . In order to use the plugin, the user must set any required environment variables as specified in the environments element. Failure to do so may result in the plugin not functioning correctly. | Name | Is required | Description | . | OPENAI_API_KEY | true | Open AI api key | . Columns . This table has a dynamic structure, which means that its columns and other details cannot be determined until runtime. As a result, it is not possible to include a complete description of this table in the documentation. Instead, the actual columns and other details of this table will be determined at runtime. ",
    "url": "/data-sources/OpenAI/linux-arm64.html#tables",
    
    "relUrl": "/data-sources/OpenAI/linux-arm64.html#tables"
  },"129": {
    "doc": "Linux Arm64",
    "title": "Methods",
    "content": "Methods are functions that can be called on the data source specific column. Below are the methods that are exposed by this data source. bool IsContentAbout(string content, string question) . Determines whether the provided content is related to the given question. Returns true if the content is related, otherwise returns false. string Sentiment(string content, bool throwOnUnknown) . Performs sentiment analysis on the provided content and returns the sentiment as one of the following strings: “POSITIVE”, “NEGATIVE”, “NEUTRAL”, or “UNKNOWN”. string SummarizeContent(string content) . Summarizes the provided content using the OpenAI API and returns the summarized text. string TranslateContent(string content, string from, string to) . Translates the provided content from the source language to the destination language using the OpenAI API. string[] Entities(string content, bool throwOnException) . Extracts entities from the provided content using the OpenAI API and returns an array of entity strings. string LlmPerform&lt;TColumnType&gt;(string whatToDo, TColumnType column) . Performs the specified action on the provided entity using the OpenAI API and returns the result. string DescribeImage(string imageBase64) . Describes the provided image using the OpenAI API and returns a description of the image. string AskImage(string question, string imageBase64) . Asks a question about the provided image using the OpenAI API and returns the answer to the question. bool IsQuestionApplicableToImage(string question, string imageBase64) . Asks a question about the provided image using the OpenAI API and returns a boolean result. int CountTokens(string content) . Counts the number of tokens in the provided content using the specified model. int CountTokens(string content) . Counts the number of tokens in the provided content using the specified model. int CountTokens(string encodingName, string content) . Counts the number of tokens in the provided content using the specified model. ",
    "url": "/data-sources/OpenAI/linux-arm64.html#methods",
    
    "relUrl": "/data-sources/OpenAI/linux-arm64.html#methods"
  },"130": {
    "doc": "Linux Arm64",
    "title": "Base Methods",
    "content": "Base methods are methods that can be called on the data source specific column. Those methods are automatically inherited and enriches the data source specific methods. Below are those base methods that are exposed by this data source. int RowNumber() . Gets the row number of the current row. string? GetTypeName(object? obj) . Gets the typename of passed object. string AggregateValues(string name) . Aggregates values into a single value. string AggregateValues(string name, int parent) . Aggregates values into a single value. Decimal Avg(string name) . Gets the aggregated average value from the given group name . Decimal Avg(string name, int parent) . Gets the aggregated average value from the given group name . byte? ShiftLeft(byte? value, int shift) . Shifts the value to the left by the specified number of bits. short? ShiftLeft(short? value, int shift) . Shifts the value to the left by the specified number of bits. int? ShiftLeft(int? value, int shift) . Shifts the value to the left by the specified number of bits. long? ShiftLeft(long? value, int shift) . Shifts the value to the left by the specified number of bits. sbyte? ShiftLeft(sbyte? value, int shift) . Shifts the value to the left by the specified number of bits. ushort? ShiftLeft(ushort? value, int shift) . Shifts the value to the left by the specified number of bits. uint? ShiftLeft(uint? value, int shift) . Shifts the value to the left by the specified number of bits. ulong? ShiftLeft(ulong? value, int shift) . Shifts the value to the left by the specified number of bits. byte? ShiftRight(byte? value, int shift) . Shifts the value to the right by the specified number of bits. short? ShiftRight(short? value, int shift) . Shifts the value to the right by the specified number of bits. int? ShiftRight(int? value, int shift) . Shifts the value to the right by the specified number of bits. long? ShiftRight(long? value, int shift) . Shifts the value to the right by the specified number of bits. sbyte? ShiftRight(sbyte? value, int shift) . Shifts the value to the right by the specified number of bits. ushort? ShiftRight(ushort? value, int shift) . Shifts the value to the right by the specified number of bits. uint? ShiftRight(uint? value, int shift) . Shifts the value to the right by the specified number of bits. ulong? ShiftRight(ulong? value, int shift) . Shifts the value to the right by the specified number of bits. byte? Not(byte? value) . Performs bitwise NOT operation on a given value. short? Not(short? value) . Performs bitwise NOT operation on a given value. int? Not(int? value) . Performs bitwise NOT operation on a given value. long? Not(long? value) . Performs bitwise NOT operation on a given value. sbyte? Not(sbyte? value) . Performs bitwise NOT operation on a given value. ushort? Not(ushort? value) . Performs bitwise NOT operation on a given value. uint? Not(uint? value) . Performs bitwise NOT operation on a given value. ulong? Not(ulong? value) . Performs bitwise NOT operation on a given value. byte? And(byte? left, byte? right) . Performs bitwise AND operation on two given values. int? And(byte? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(byte? left, short? right) . Performs bitwise AND operation on two given values. int? And(byte? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(byte? left, int? right) . Performs bitwise AND operation on two given values. uint? And(byte? left, uint? right) . Performs bitwise AND operation on two given values. long? And(byte? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(byte? left, ulong? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, byte? right) . Performs bitwise AND operation on two given values. sbyte? And(sbyte? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, short? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, int? right) . Performs bitwise AND operation on two given values. uint? And(sbyte? left, uint? right) . Performs bitwise AND operation on two given values. long? And(sbyte? left, long? right) . Performs bitwise AND operation on two given values. int? And(short? left, byte? right) . Performs bitwise AND operation on two given values. int? And(short? left, sbyte? right) . Performs bitwise AND operation on two given values. short? And(short? left, short? right) . Performs bitwise AND operation on two given values. int? And(short? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(short? left, int? right) . Performs bitwise AND operation on two given values. uint? And(short? left, uint? right) . Performs bitwise AND operation on two given values. long? And(short? left, long? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, byte? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, short? right) . Performs bitwise AND operation on two given values. ushort? And(ushort? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, int? right) . Performs bitwise AND operation on two given values. uint? And(ushort? left, uint? right) . Performs bitwise AND operation on two given values. long? And(ushort? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(ushort? left, ulong? right) . Performs bitwise AND operation on two given values. int? And(int? left, byte? right) . Performs bitwise AND operation on two given values. int? And(int? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(int? left, short? right) . Performs bitwise AND operation on two given values. int? And(int? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(int? left, int? right) . Performs bitwise AND operation on two given values. uint? And(int? left, uint? right) . Performs bitwise AND operation on two given values. long? And(int? left, long? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, uint? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, byte? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, sbyte? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, short? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, ushort? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, int? right) . Performs bitwise AND operation on two given values. ulong? And(uint? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(uint? left, ulong? right) . Performs bitwise AND operation on two given values. long? And(long? left, long? right) . Performs bitwise AND operation on two given values. long? And(long? left, byte? right) . Performs bitwise AND operation on two given values. long? And(long? left, sbyte? right) . Performs bitwise AND operation on two given values. long? And(long? left, short? right) . Performs bitwise AND operation on two given values. long? And(long? left, ushort? right) . Performs bitwise AND operation on two given values. long? And(long? left, int? right) . Performs bitwise AND operation on two given values. long? And(long? left, uint? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, byte? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, ushort? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, uint? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, ulong? right) . Performs bitwise AND operation on two given values. byte? Or(byte? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, short? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(byte? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(byte? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(byte? left, ulong? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, byte? right) . Performs bitwise OR operation on two given values. sbyte? Or(sbyte? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, short? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(sbyte? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(sbyte? left, long? right) . Performs bitwise OR operation on two given values. int? Or(short? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(short? left, sbyte? right) . Performs bitwise OR operation on two given values. short? Or(short? left, short? right) . Performs bitwise OR operation on two given values. int? Or(short? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(short? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(short? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(short? left, long? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, short? right) . Performs bitwise OR operation on two given values. ushort? Or(ushort? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(ushort? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(ushort? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(ushort? left, ulong? right) . Performs bitwise OR operation on two given values. int? Or(int? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(int? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(int? left, short? right) . Performs bitwise OR operation on two given values. int? Or(int? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(int? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(int? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(int? left, long? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, uint? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, byte? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, sbyte? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, short? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, ushort? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, int? right) . Performs bitwise OR operation on two given values. ulong? Or(uint? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(uint? left, ulong? right) . Performs bitwise OR operation on two given values. long? Or(long? left, long? right) . Performs bitwise OR operation on two given values. long? Or(long? left, byte? right) . Performs bitwise OR operation on two given values. long? Or(long? left, sbyte? right) . Performs bitwise OR operation on two given values. long? Or(long? left, short? right) . Performs bitwise OR operation on two given values. long? Or(long? left, ushort? right) . Performs bitwise OR operation on two given values. long? Or(long? left, int? right) . Performs bitwise OR operation on two given values. long? Or(long? left, uint? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, byte? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, ushort? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, uint? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, ulong? right) . Performs bitwise OR operation on two given values. byte? Xor(byte? left, byte? right) . Performs bitwise OR operation on two given values. int? Xor(byte? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(byte? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(byte? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(byte? left, ulong? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, byte? right) . Performs bitwise Xor operation on two given values. sbyte? Xor(sbyte? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(sbyte? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(sbyte? left, long? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, sbyte? right) . Performs bitwise Xor operation on two given values. short? Xor(short? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, ushort? right) . Performs bitwise XOR operation on two given values. int? Xor(short? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(short? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(short? left, long? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, short? right) . Performs bitwise Xor operation on two given values. ushort? Xor(ushort? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(ushort? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(ushort? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ushort? left, ulong? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(int? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(int? left, long? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, uint? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, byte? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, sbyte? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, short? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, ushort? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, int? right) . Performs bitwise Xor operation on two given values. ulong? Xor(uint? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(uint? left, ulong? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, long? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, byte? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, sbyte? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, short? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, ushort? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, int? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, uint? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, ulong? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, byte? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, ushort? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, uint? right) . Performs bitwise Xor operation on two given values. byte[] GetBytes(string? content) . Gets the bytes from the given string. byte[] GetBytes(string? content, int length, int offset) . Gets the bytes from the given string within given offset and length. byte?[]? GetBytes(char? character) . Gets the bytes from the given character. byte?[]? GetBytes(bool? bit) . Gets the bytes from the given boolean. byte?[]? GetBytes(long? value) . Gets the bytes from the given long. byte?[]? GetBytes(int? value) . Gets the bytes from the given int. byte?[]? GetBytes(short? value) . Gets the bytes from the given short. byte?[]? GetBytes(ulong? value) . Gets the bytes from the given ulong. byte?[]? GetBytes(ushort? value) . Gets the bytes from the given ushort. byte?[]? GetBytes(uint? value) . Gets the bytes from the given uint. byte?[]? GetBytes(Decimal? value) . Gets the bytes from the given decimal. byte?[]? GetBytes(double? value) . Gets the bytes from the given double. byte?[]? GetBytes(float? value) . Gets the bytes from the given float. string? ToBin(byte?[]? bytes, string delimiter) . Converts given bytes to binary with defined delimiter . string ToBin&lt;T&gt;(T value) . Converts given value to binary . string ToOcta&lt;T&gt;(T value) . Converts given value to octal . string ToDec&lt;T&gt;(T value) . Converts given value to decimal . string ToBase64(byte[] value) . Converts given value to string . string ToBase64(byte[] value, int offset, int length) . Converts given array of bytes to string . byte[] FromBase64(string value) . Converts given string to bytes array . bool FromBytesToBool(byte[] value) . Converts bytes to boolean value. short FromBytesToInt16(byte[] value) . Converts bytes to a 16-bit signed integer. ushort FromBytesToUInt16(byte[] value) . Converts bytes to a 16-bit unsigned integer. int FromBytesToInt32(byte[] value) . Converts bytes to a 32-bit signed integer. uint FromBytesToUInt32(byte[] value) . Converts bytes to a 32-bit unsigned integer. long FromBytesToInt64(byte[] value) . Converts bytes to a 64-bit signed integer. ulong FromBytesToUInt64(byte[] value) . Converts bytes to a 64-bit unsigned integer. float FromBytesToFloat(byte[] value) . Converts bytes to a float value. double FromBytesToDouble(byte[] value) . Converts bytes to a float value. string FromBytesToString(byte[] value) . Converts bytes to a string. byte[] ToBytes(bool value) . Converts boolean value to bytes. byte[] ToBytes(short value) . Converts short value to bytes. byte[] ToBytes(ushort value) . Converts ushort value to bytes. byte[] ToBytes(int value) . Converts int value to bytes. byte[] ToBytes(uint value) . Converts uint value to bytes. byte[] ToBytes(long value) . Converts long value to bytes. byte[] ToBytes(ulong value) . Converts long value to bytes. string? ToHex(byte?[]? bytes, string delimiter) . Converts given bytes to hex with defined delimiter . string? ToHex&lt;T&gt;(T value) . Converts given value to binary . int Count(string name) . Gets the count value of a given group. int Count(string name, int parent) . Gets the count value of a given group. int ExtractFromDate(string? date, string partOfDate) . Extracts part of the date from the date . int ExtractFromDate(string date, string culture, string partOfDate) . Extracts part of the date from the date based on given culture . DateTimeOffset? GetDate() . Gets the current datetime . DateTimeOffset? UtcGetDate() . Gets the current datetime in UTC . int? Month(DateTimeOffset? value) . Gets the month from DateTimeOffset . int? Year(DateTimeOffset? value) . Gets the year from DateTimeOffset . int? Day(DateTimeOffset? value) . Gets the day from DateTimeOffset . int? Hour(DateTimeOffset? value) . Gets the hour from DateTimeOffset . int? Minute(DateTimeOffset? value) . Gets the minute from DateTimeOffset . int? Second(DateTimeOffset? value) . Gets the second from DateTimeOffset . int? Milliseconds(DateTimeOffset? value) . Gets the millisecond from DateTimeOffset . int? DayOfWeek(DateTimeOffset? value) . Gets the day of week from DateTimeOffset . TimeSpan? ExtractTimeSpan(DateTimeOffset? dateTimeOffset) . Extracts time from DateTimeOffset . DateTime? ToDateTimeOffset(string value) . Converts given value to DateTimeOffset . DateTimeOffset? ToDateTimeOffset(string value, string culture) . Converts given value to DateTimeOffset . IEnumerable&lt;T&gt;? Skip&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? skipCount) . Skips elements from the beginning of the sequence. IEnumerable&lt;T&gt;? Take&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? takeCount) . Takes elements from the beginning of the sequence. IEnumerable&lt;T&gt;? SkipAndTake&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? skipCount, int? takeCount) . Skip and takes elements from the beginning of the sequence. T[]? EnumerableToArray&lt;T&gt;(IEnumerable&lt;T&gt;? values) . Turn array arguments of T into a single array. T[]? MergeArrays&lt;T&gt;(T[][]? values) . Turn array arguments of T into a single array. IEnumerable&lt;T&gt;? LongestCommonSequence&lt;T&gt;(IEnumerable&lt;T&gt;? source, IEnumerable&lt;T&gt;? pattern) . Computes longest common sequence of two given sequences . T? GetElementAtOrDefault&lt;T&gt;(IEnumerable&lt;T&gt;? enumerable, int? index) . Gets the element at the specified index in a sequence . int? Length&lt;T&gt;(IEnumerable&lt;T&gt;? enumerable) . Gets the length of the sequence . int? Length&lt;T&gt;(T[]? array) . Gets the length of the array . T? Choose&lt;T&gt;(int? index, T[] values) . Gets the value of an array at the specified index . T If&lt;T&gt;(bool expressionResult, T a, T b) . Chose a or b value based on the expression result . bool? Match(string? regex, string? content) . Determine whether content matches the specified pattern . byte? Coalesce(byte?[] array) . Gets the first non-null value in a list . sbyte? Coalesce(sbyte?[] array) . Gets the first non-null value in a list . short? Coalesce(short?[] array) . Gets the first non-null value in a list . ushort? Coalesce(ushort?[] array) . Gets the first non-null value in a list . int? Coalesce(int?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(uint?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(long?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(ulong?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(Decimal?[] array) . Gets the first non-null value in a list . T? Coalesce&lt;T&gt;(T[] array) . Gets the first non-null value in a list . IEnumerable&lt;T&gt;? Distinct&lt;T&gt;(IEnumerable&lt;T&gt;? values) . Returns distinct elements from a collection. string? Md5(string? content) . Gets the md5 hash of the given string. string? Md5(byte?[]? content) . Gets the md5 hash of the given bytes array. string? Sha1(string? content) . Gets the sha256 hash of the given string. string? Sha1(byte?[]? content) . Gets the sha256 hash of the given bytes array. string? Sha256(string? content) . Gets the sha256 hash of the given string. string? Sha256(byte?[]? content) . Gets the sha256 hash of the given bytes array. string? Sha512(string? content) . Gets the sha256 hash of the given string. string? Sha512(byte?[]? content) . Gets the sha256 hash of the bytes array. string? ToJson&lt;T&gt;(T? obj) . Converts object to json. string[] ExtractFromJsonToArray(string? json, string? path) . Extracts values from json by path. string? ExtractFromJson(string? json, string? path) . Extracts values from json by path and joins them with comma. Decimal? Abs(Decimal? value) . Gets the absolute value . long? Abs(long? value) . Gets the absolute value . int? Abs(int? value) . Gets the absolute value . Decimal? Ceil(Decimal? value) . Gets the ceiling value . Decimal? Floor(Decimal? value) . Gets the floor value . Decimal? Sign(Decimal? value) . Determine whether value is greater, equal or less that zero . long? Sign(long? value) . Determine whether value is greater, equal or less that zero . Decimal? Round(Decimal? value, int precision) . Rounds the value within given precision . Decimal? PercentOf(Decimal? value, Decimal? max) . Gets the percentage of the value . int Rand() . Gets the random integer value . int? Rand(int? min, int? max) . Gets the random integer value . double? Pow(Decimal? x, Decimal? y) . Computes the pow between two values . double? Pow(double? x, double? y) . Computes the pow between two values . double? Sqrt(Decimal? x) . Computes the sqrt of a given value . double? Sqrt(double? x) . Computes the sqrt of a given value . double? Sqrt(long? x) . Computes the sqrt of a given value . double? PercentRank&lt;T&gt;(IEnumerable&lt;T&gt;? window, T? value) . Computes the percent rank of a given window . double? Log(Decimal? base, Decimal? value) . Calculates the logarithm of a value with a specified base. Decimal? Sin(Decimal? value) . Calculates sine of a value. double? Sin(double? value) . Calculates sine of a value. float? Sin(float? value) . Calculates sine of a value. Decimal? Cos(Decimal? value) . Calculates cosine of a value. double? Cos(double? value) . Calculates cosine of a value. float? Cos(float? value) . Calculates cosine of a value. Decimal Max(string name) . Gets the max value of a given group. Decimal Max(string name, int parent) . Gets the max value of a given group. Decimal Min(string name) . Gets the min value of a given group. Decimal Min(string name, int parent) . Gets the min value of a given group. Decimal StDev(string name, int parent) . Gets the StDev value of a given group. string NewId() . Gets the new identifier . string? Trim(string? value) . Removes leading and trailing whitespace from a string. string? TrimStart(string? value) . Removes leading whitespace from a string. string? TrimEnd(string? value) . Removes trailing whitespace from a string. string? Substring(string? value, int? index, int? length) . Gets the substring from the string. string? Substring(string value, int? length) . Gets the substring from the string . string? Concat(string[]? strings) . Concatenates the specified values . string? Concat(char?[]? characters) . Concatenates the specified characters . string? Concat(string? firstString, char?[]? chars) . Concatenates specified string fir characters . string? Concat(char? firstChar, string[]? strings) . Concatenate specific character with strings . string? Concat(object[]? objects) . Concatenates the specified strings . string? Concat&lt;T&gt;(T[]? objects) . Concatenates the specified strings . bool? Contains(string? content, string? what) . Determine whether the string contains the specified value . int? IndexOf(string? value, string? text) . Position of the first occurrence of the specified value . string? Soundex(string? value) . Computes soundex for the specified value . bool HasFuzzyMatchedWord(string text, string word, string separator) . Matches the specified text by splitting it with separator and applying fuzzy comparison . bool HasWordThatHasSmallerLevenshteinDistanceThan(string text, string word, int distance, string separator) . Matches the specified text by splitting it with separator and applying fuzzy comparison with a given distance . bool HasWordThatSoundLike(string text, string word, string separator) . Matches whether the specified word is present after being fuzzified within the specified text . bool HasTextThatSoundLikeSentence(string text, string sentence, string separator) . Matches whether the specified text is present in sentence after being fuzified . string? ToUpper(string value) . Makes the string uppercase . string? ToUpper(string value, string culture) . Makes the string uppercase within specified culture . string? ToUpperInvariant(string value) . Makes the string uppercase . string? ToLower(string value) . Makes the string lowercase . string? ToLower(string value, string culture) . Makes the string lowercase within specified culture . string? ToLowerInvariant(string value) . Makes the string lowercase . string? PadLeft(string? value, string? character, int? totalWidth) . Returns a new string that right-aligns the characters in this instance by padding them on the left with a specified Unicode character, for a specified total lengt . string? PadRight(string? value, string? character, int? totalWidth) . Returns a new string that left-aligns the characters in this instance by padding them on the right with a specified Unicode character, for a specified total length . string? Head(string? value, int? length) . Gets the first N characters of the string . string? Tail(string? value, int? length) . Gets the last N characters of the string . int? LevenshteinDistance(string? firstValue, string? secondValue) . Computes the Levenshtein distance between two strings . char? GetCharacterOf(string value, int index) . Gets the character at specified index . string? Reverse(string? value) . Reverses the string . string[] Split(string value, string[] separators) . Splits the string into an array of substrings based on the specified separators . char[] ToCharArray(string value) . Splits the string into an array of characters . string? LongestCommonSubstring(string source, string pattern) . Computes the longest common subsequence between two source and pattern . string Replicate(string value, int integer) . Clones the value n times . string? Translate(string? value, string? characters, string? translations) . Returns the string from the first argument after the characters specified in the second argument are translated into the characters specified in the third argument. string? Replace(string? text, string lookFor, string? changeTo) . Replaces the first occurrence of a specified string in this instance with another specified string . string? ToTitleCase(string? value) . Capitalizes the first letter of the string . string? GetNthWord(string? text, int? wordIndex, string? separator) . Gets the nth word of the string . string? GetFirstWord(string text, string separator) . Gets the first word of the string . string? GetSecondWord(string text, string separator) . Gets the second word of the string . string? GetThirdWord(string text, string separator) . Gets the third word of the string . string? GetLastWord(string? text, string? separator) . Gets last word of the string . bool? IsNullOrEmpty(string? value) . Determines whether the string is null or empty . bool? IsNullOrWhiteSpace(string? value) . Determines whether the string is null or whitespace . string? UrlEncode(string? value) . Encodes the value . string? UrlDecode(string? value) . Decodes the value . string? UriEncode(string? value) . Encodes the value . string? UriDecode(string? value) . Decodes the value . bool? StartsWith(string? value, string? prefix) . Determines whether the string starts with the specified prefix . bool? StartsWith(string? value, string? prefix, string comparison) . Determines whether the string starts with the specified prefix . bool? EndsWith(string? value, string? suffix) . Determines whether the string ends with the specified suffix . bool? EndsWith(string? value, string? suffix, string comparison) . Determines whether the string ends with the specified suffix . string? RegexReplace(string? value, string? pattern, string? replacement) . Replace the specified value part that matches the pattern with the replacement . string[]? SplitByLinuxNewLines(string? input) . Split string by Linux-style newlines (\\n) . string[]? SplitByWindowsNewLines(string? input) . Split string by Windows-style newlines (\\r\\n) . string[]? SplitByNewLines(string? input) . Smart split that handles both Windows (\\r\\n) and Linux (\\n) newlines . Decimal Sum(string name) . Gets the sum value of a given group. Decimal Sum(string name, int parent) . Gets the sum value of a given group. Decimal SumIncome(string name) . Gets the sum value of a given group. Decimal SumIncome(string name, int parent) . Gets the sum value of a given group. Decimal SumOutcome(string name) . Gets the outcome value of a given group. Decimal SumOutcome(string name, int parent) . Gets the outcome value of a given group. TimeSpan? SumTimeSpan(string name) . Gets the sum value of a given group. TimeSpan? SumTimeSpan(string name, int parent) . Gets the sum value of a given group. TimeSpan? MinTimeSpan(string name) . Gets the min value of a given group. TimeSpan? MinTimeSpan(string name, int parent) . Gets the min value of a given group. TimeSpan? MaxTimeSpan(string name) . Gets the max value of a given group. TimeSpan? MaxTimeSpan(string name, int parent) . Gets the min value of a given group. char? ToChar(string? value) . Converts given value to character . char? ToChar(int? value) . Converts given value to character . char? ToChar(short? value) . Converts given value to character . char? ToChar(byte? value) . Converts given value to character . char? ToChar(object? value) . Converts given value to character . DateTime? ToDateTime(string value) . Converts given value to DateTime . DateTime? ToDateTime(string value, string culture) . Converts given value to DateTime . Decimal? ToDecimal(string? value) . Converts given value to decimal . Decimal? ToDecimal(string value, string culture) . Converts given value to decimal withing given culture . Decimal? ToDecimal(byte? value) . Converts given value to Decimal . Decimal? ToDecimal(sbyte? value) . Converts given value to Decimal . Decimal? ToDecimal(short? value) . Converts given value to Decimal . Decimal? ToDecimal(ushort? value) . Converts given value to Decimal . Decimal? ToDecimal(long? value) . Converts given value to Decimal . Decimal? ToDecimal(ulong? value) . Converts given value to Decimal . Decimal? ToDecimal(float? value) . Converts given value to Decimal . Decimal? ToDecimal(double? value) . Converts given value to Decimal . Decimal? ToDecimal(object? value) . Converts given value to Decimal . double? ToDouble(object? value) . Converts given value to double . double? ToDouble(string? value) . Converts given value to double . double? ToDouble(byte? value) . Converts given value to double . double? ToDouble(sbyte? value) . Converts given value to double . double? ToDouble(short? value) . Converts given value to double . double? ToDouble(ushort? value) . Converts given value to double . double? ToDouble(int? value) . Converts given value to double . double? ToDouble(uint? value) . Converts given value to double . double? ToDouble(long? value) . Converts given value to double . double? ToDouble(ulong? value) . Converts given value to double . double? ToDouble(float? value) . Converts given value to double . double? ToDouble(double? value) . Converts given value to double . double? ToDouble(Decimal? value) . Converts given value to double . float? ToFloat(string? value) . Converts given value to float . float? ToFloat(byte? value) . Converts given value to float . float? ToFloat(sbyte? value) . Converts given value to float . float? ToFloat(short? value) . Converts given value to float . float? ToFloat(ushort? value) . Converts given value to float . float? ToFloat(int? value) . Converts given value to float . float? ToFloat(uint? value) . Converts given value to float . float? ToFloat(long? value) . Converts given value to float . float? ToFloat(ulong? value) . Converts given value to float . float? ToFloat(float? value) . Converts given value to float . float? ToFloat(Decimal? value) . Converts given value to float . int? ToInt32(string value) . Converts given value to int . int? ToInt32(byte? value) . Converts given value to int . int? ToInt32(sbyte? value) . Converts given value to int . int? ToInt32(short? value) . Converts given value to int . int? ToInt32(ushort? value) . Converts given value to int . int? ToInt32(int? value) . Converts given value to int . int? ToInt32(uint? value) . Converts given value to int . int? ToInt32(long? value) . Converts given value to int . int? ToInt32(ulong? value) . Converts given value to int . int? ToInt32(float? value) . Converts given value to int . int? ToInt32(double? value) . Converts given value to int . int? ToInt32(Decimal? value) . Converts given value to int . int? ToInt32(object? value) . Converts given value to int . long? ToInt64(string value) . Converts given value to Int64 . long? ToInt64(byte? value) . Converts given value to long . long? ToInt64(sbyte? value) . Converts given value to long . long? ToInt64(short? value) . Converts given value to long . long? ToInt64(ushort? value) . Converts given value to long . long? ToInt64(int? value) . Converts given value to long . long? ToInt64(uint? value) . Converts given value to long . long? ToInt64(long? value) . Converts given value to long . long? ToInt64(ulong? value) . Converts given value to long . long? ToInt64(float? value) . Converts given value to long . long? ToInt64(double? value) . Converts given value to long . long? ToInt64(Decimal? value) . Converts given value to long . long? ToInt64(object? value) . Converts given value to long . string? ToString(char? value) . Converts given value to string . string? ToString(DateTimeOffset? value) . Converts given value to string . string? ToString(DateTimeOffset? value, string format) . Converts given value to string . string? ToString(byte? value) . Converts given value to string . string? ToString(byte? value, string format) . Converts given value to string . string? ToString(sbyte? value) . Converts given value to string . string? ToString(sbyte? value, string format) . Converts given value to string . string? ToString(int? value) . Converts given value to string . string? ToString(int? value, string format) . Converts given value to string . string? ToString(uint? value) . Converts given value to string . string? ToString(uint? value, string format) . Converts given value to string . string? ToString(long? value) . Converts given value to string . string? ToString(long? value, string format) . Converts given value to string . string? ToString(ulong? value) . Converts given value to string . string? ToString(ulong? value, string format) . Converts given value to string . string? ToString(float? value) . Converts given value to string . string? ToString(float? value, string format) . Converts given value to string . string? ToString(double? value) . Converts given value to string . string? ToString(double? value, string format) . Converts given value to string . string? ToString(Decimal? value) . Converts given value to string . string? ToString(Decimal? value, string format) . Converts given value to string . string? ToString(bool? value) . Converts given value to string . string? ToString(object? value) . Converts given value to string . string? ToString&lt;T&gt;(T? value) . Converts given value to string . string ToString(string[] value) . Converts given value to string . string ToString&lt;T&gt;(T[] value) . Converts given value to string . TimeSpan? ToTimeSpan(string value) . Converts given value to TimeSpan . TimeSpan? ToTimeSpan(string value, string culture) . Converts given value to TimeSpan . IEnumerable&lt;T&gt; Window&lt;T&gt;(string name) . Gets the window . ",
    "url": "/data-sources/OpenAI/linux-arm64.html#base-methods",
    
    "relUrl": "/data-sources/OpenAI/linux-arm64.html#base-methods"
  },"131": {
    "doc": "Linux Arm64",
    "title": "Linux Arm64",
    "content": " ",
    "url": "/data-sources/OpenAI/linux-arm64.html",
    
    "relUrl": "/data-sources/OpenAI/linux-arm64.html"
  },"132": {
    "doc": "Linux Arm64",
    "title": "Musoq.DataSources.Docker",
    "content": "Provides schema to work with docker containers, images, networks and volumes. ",
    "url": "/data-sources/Docker/linux-arm64.html#musoqdatasourcesdocker",
    
    "relUrl": "/data-sources/Docker/linux-arm64.html#musoqdatasourcesdocker"
  },"133": {
    "doc": "Linux Arm64",
    "title": "Tables",
    "content": "Table is a collection of rows and columns that the plugin exposes. Below are the tables that are exposed by this data source. docker.containers() . Gets containers of local docker . | Name | Type | Description | . | ID | string | Container ID | . | Names | IList&lt;string&gt; | Container names | . | Image | string | Image name | . | ImageID | string | Image ID | . | Command | string | Command the container run on with | . | Created | string | Container created datetime | . | Ports | IList&lt;string&gt; | Mapped ports | . | SizeRw | long | Size of the created or changed files | . | SizeRootFs | long | Total size of all files in the container | . | Labels | IDictionary&lt;string, string&gt; | Assigned labels to specific container | . | Status | string | Status of the container | . | NetworkSettings | SummaryNetworkSettings | Network settings | . | Mounts | IList&lt;MountPoint&gt; | Mounted points | . | FlattenPorts | string | Mapped ports as a string with comma delimiter | . docker.images() . Gets images of local docker . | Name | Type | Description | . | Containers | long | Number of containers | . | Created | DateTime | Creation time | . | ID | string | Unique identifier | . | Labels | IDictionary&lt;string, string&gt; | Set of labels | . | ParentID | string | Parent’s unique identifier | . | RepoDigests | IList&lt;string&gt; | List of repository digests | . | RepoTags | IList&lt;string&gt; | List of repository tags | . | SharedSize | long | Shared size in bytes | . | Size | long | Size in bytes | . | VirtualSize | long | Virtual size in bytes | . docker.volumes() . Gets volumes of local docker . | Name | Type | Description | . | CreatedAt | string | Creation time of the volume | . | Driver | string | Driver used for the volume | . | Labels | IDictionary&lt;string, string&gt; | Set of labels for the volume | . | Mountpoint | string | Mount point for the volume | . | Name | string | Name of the volume | . | Options | IDictionary&lt;string, string&gt; | Set of options for the volume | . | Scope | string | Scope of the volume | . | Status | IDictionary&lt;string, string&gt; | Status information for the volume | . | UsageData | VolumeUsageData | Usage data for the volume | . docker.networks() . Gets networks of local docker . | Name | Type | Description | . | Name | string | Name of the network | . | ID | string | Unique identifier of the network | . | Created | DateTime | Creation time of the network | . | Scope | string | Scope of the network | . | Driver | string | Driver used for the network | . | EnableIPv6 | bool | Flag indicating if IPv6 is enabled | . | IPAM | IPAM | IP Address Management specification | . | Internal | bool | Flag indicating if the network is internal | . | Attachable | bool | Flag indicating if the network is attachable | . | Ingress | bool | Flag indicating if the network is ingress | . | ConfigFrom | ConfigReference | Network configuration source | . | ConfigOnly | bool | Flag indicating if the network is configuration only | . | Containers | IDictionary&lt;string, EndpointResource&gt; | Dictionary of connected containers | . | Options | IDictionary&lt;string, string&gt; | Set of options for the network | . | Labels | IDictionary&lt;string, string&gt; | Set of labels for the network | . | Peers | IList&lt;PeerInfo&gt; | List of network peers | . | Services | IDictionary&lt;string, ServiceInfo&gt; | Dictionary of network services | . ",
    "url": "/data-sources/Docker/linux-arm64.html#tables",
    
    "relUrl": "/data-sources/Docker/linux-arm64.html#tables"
  },"134": {
    "doc": "Linux Arm64",
    "title": "Base Methods",
    "content": "Base methods are methods that can be called on the data source specific column. Those methods are automatically inherited and enriches the data source specific methods. Below are those base methods that are exposed by this data source. int RowNumber() . Gets the row number of the current row. string? GetTypeName(object? obj) . Gets the typename of passed object. string AggregateValues(string name) . Aggregates values into a single value. string AggregateValues(string name, int parent) . Aggregates values into a single value. Decimal Avg(string name) . Gets the aggregated average value from the given group name . Decimal Avg(string name, int parent) . Gets the aggregated average value from the given group name . byte? ShiftLeft(byte? value, int shift) . Shifts the value to the left by the specified number of bits. short? ShiftLeft(short? value, int shift) . Shifts the value to the left by the specified number of bits. int? ShiftLeft(int? value, int shift) . Shifts the value to the left by the specified number of bits. long? ShiftLeft(long? value, int shift) . Shifts the value to the left by the specified number of bits. sbyte? ShiftLeft(sbyte? value, int shift) . Shifts the value to the left by the specified number of bits. ushort? ShiftLeft(ushort? value, int shift) . Shifts the value to the left by the specified number of bits. uint? ShiftLeft(uint? value, int shift) . Shifts the value to the left by the specified number of bits. ulong? ShiftLeft(ulong? value, int shift) . Shifts the value to the left by the specified number of bits. byte? ShiftRight(byte? value, int shift) . Shifts the value to the right by the specified number of bits. short? ShiftRight(short? value, int shift) . Shifts the value to the right by the specified number of bits. int? ShiftRight(int? value, int shift) . Shifts the value to the right by the specified number of bits. long? ShiftRight(long? value, int shift) . Shifts the value to the right by the specified number of bits. sbyte? ShiftRight(sbyte? value, int shift) . Shifts the value to the right by the specified number of bits. ushort? ShiftRight(ushort? value, int shift) . Shifts the value to the right by the specified number of bits. uint? ShiftRight(uint? value, int shift) . Shifts the value to the right by the specified number of bits. ulong? ShiftRight(ulong? value, int shift) . Shifts the value to the right by the specified number of bits. byte? Not(byte? value) . Performs bitwise NOT operation on a given value. short? Not(short? value) . Performs bitwise NOT operation on a given value. int? Not(int? value) . Performs bitwise NOT operation on a given value. long? Not(long? value) . Performs bitwise NOT operation on a given value. sbyte? Not(sbyte? value) . Performs bitwise NOT operation on a given value. ushort? Not(ushort? value) . Performs bitwise NOT operation on a given value. uint? Not(uint? value) . Performs bitwise NOT operation on a given value. ulong? Not(ulong? value) . Performs bitwise NOT operation on a given value. byte? And(byte? left, byte? right) . Performs bitwise AND operation on two given values. int? And(byte? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(byte? left, short? right) . Performs bitwise AND operation on two given values. int? And(byte? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(byte? left, int? right) . Performs bitwise AND operation on two given values. uint? And(byte? left, uint? right) . Performs bitwise AND operation on two given values. long? And(byte? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(byte? left, ulong? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, byte? right) . Performs bitwise AND operation on two given values. sbyte? And(sbyte? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, short? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, int? right) . Performs bitwise AND operation on two given values. uint? And(sbyte? left, uint? right) . Performs bitwise AND operation on two given values. long? And(sbyte? left, long? right) . Performs bitwise AND operation on two given values. int? And(short? left, byte? right) . Performs bitwise AND operation on two given values. int? And(short? left, sbyte? right) . Performs bitwise AND operation on two given values. short? And(short? left, short? right) . Performs bitwise AND operation on two given values. int? And(short? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(short? left, int? right) . Performs bitwise AND operation on two given values. uint? And(short? left, uint? right) . Performs bitwise AND operation on two given values. long? And(short? left, long? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, byte? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, short? right) . Performs bitwise AND operation on two given values. ushort? And(ushort? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, int? right) . Performs bitwise AND operation on two given values. uint? And(ushort? left, uint? right) . Performs bitwise AND operation on two given values. long? And(ushort? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(ushort? left, ulong? right) . Performs bitwise AND operation on two given values. int? And(int? left, byte? right) . Performs bitwise AND operation on two given values. int? And(int? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(int? left, short? right) . Performs bitwise AND operation on two given values. int? And(int? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(int? left, int? right) . Performs bitwise AND operation on two given values. uint? And(int? left, uint? right) . Performs bitwise AND operation on two given values. long? And(int? left, long? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, uint? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, byte? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, sbyte? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, short? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, ushort? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, int? right) . Performs bitwise AND operation on two given values. ulong? And(uint? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(uint? left, ulong? right) . Performs bitwise AND operation on two given values. long? And(long? left, long? right) . Performs bitwise AND operation on two given values. long? And(long? left, byte? right) . Performs bitwise AND operation on two given values. long? And(long? left, sbyte? right) . Performs bitwise AND operation on two given values. long? And(long? left, short? right) . Performs bitwise AND operation on two given values. long? And(long? left, ushort? right) . Performs bitwise AND operation on two given values. long? And(long? left, int? right) . Performs bitwise AND operation on two given values. long? And(long? left, uint? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, byte? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, ushort? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, uint? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, ulong? right) . Performs bitwise AND operation on two given values. byte? Or(byte? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, short? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(byte? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(byte? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(byte? left, ulong? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, byte? right) . Performs bitwise OR operation on two given values. sbyte? Or(sbyte? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, short? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(sbyte? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(sbyte? left, long? right) . Performs bitwise OR operation on two given values. int? Or(short? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(short? left, sbyte? right) . Performs bitwise OR operation on two given values. short? Or(short? left, short? right) . Performs bitwise OR operation on two given values. int? Or(short? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(short? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(short? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(short? left, long? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, short? right) . Performs bitwise OR operation on two given values. ushort? Or(ushort? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(ushort? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(ushort? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(ushort? left, ulong? right) . Performs bitwise OR operation on two given values. int? Or(int? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(int? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(int? left, short? right) . Performs bitwise OR operation on two given values. int? Or(int? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(int? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(int? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(int? left, long? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, uint? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, byte? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, sbyte? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, short? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, ushort? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, int? right) . Performs bitwise OR operation on two given values. ulong? Or(uint? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(uint? left, ulong? right) . Performs bitwise OR operation on two given values. long? Or(long? left, long? right) . Performs bitwise OR operation on two given values. long? Or(long? left, byte? right) . Performs bitwise OR operation on two given values. long? Or(long? left, sbyte? right) . Performs bitwise OR operation on two given values. long? Or(long? left, short? right) . Performs bitwise OR operation on two given values. long? Or(long? left, ushort? right) . Performs bitwise OR operation on two given values. long? Or(long? left, int? right) . Performs bitwise OR operation on two given values. long? Or(long? left, uint? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, byte? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, ushort? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, uint? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, ulong? right) . Performs bitwise OR operation on two given values. byte? Xor(byte? left, byte? right) . Performs bitwise OR operation on two given values. int? Xor(byte? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(byte? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(byte? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(byte? left, ulong? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, byte? right) . Performs bitwise Xor operation on two given values. sbyte? Xor(sbyte? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(sbyte? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(sbyte? left, long? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, sbyte? right) . Performs bitwise Xor operation on two given values. short? Xor(short? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, ushort? right) . Performs bitwise XOR operation on two given values. int? Xor(short? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(short? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(short? left, long? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, short? right) . Performs bitwise Xor operation on two given values. ushort? Xor(ushort? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(ushort? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(ushort? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ushort? left, ulong? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(int? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(int? left, long? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, uint? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, byte? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, sbyte? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, short? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, ushort? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, int? right) . Performs bitwise Xor operation on two given values. ulong? Xor(uint? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(uint? left, ulong? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, long? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, byte? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, sbyte? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, short? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, ushort? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, int? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, uint? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, ulong? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, byte? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, ushort? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, uint? right) . Performs bitwise Xor operation on two given values. byte[] GetBytes(string? content) . Gets the bytes from the given string. byte[] GetBytes(string? content, int length, int offset) . Gets the bytes from the given string within given offset and length. byte?[]? GetBytes(char? character) . Gets the bytes from the given character. byte?[]? GetBytes(bool? bit) . Gets the bytes from the given boolean. byte?[]? GetBytes(long? value) . Gets the bytes from the given long. byte?[]? GetBytes(int? value) . Gets the bytes from the given int. byte?[]? GetBytes(short? value) . Gets the bytes from the given short. byte?[]? GetBytes(ulong? value) . Gets the bytes from the given ulong. byte?[]? GetBytes(ushort? value) . Gets the bytes from the given ushort. byte?[]? GetBytes(uint? value) . Gets the bytes from the given uint. byte?[]? GetBytes(Decimal? value) . Gets the bytes from the given decimal. byte?[]? GetBytes(double? value) . Gets the bytes from the given double. byte?[]? GetBytes(float? value) . Gets the bytes from the given float. string? ToBin(byte?[]? bytes, string delimiter) . Converts given bytes to binary with defined delimiter . string ToBin&lt;T&gt;(T value) . Converts given value to binary . string ToOcta&lt;T&gt;(T value) . Converts given value to octal . string ToDec&lt;T&gt;(T value) . Converts given value to decimal . string ToBase64(byte[] value) . Converts given value to string . string ToBase64(byte[] value, int offset, int length) . Converts given array of bytes to string . byte[] FromBase64(string value) . Converts given string to bytes array . bool FromBytesToBool(byte[] value) . Converts bytes to boolean value. short FromBytesToInt16(byte[] value) . Converts bytes to a 16-bit signed integer. ushort FromBytesToUInt16(byte[] value) . Converts bytes to a 16-bit unsigned integer. int FromBytesToInt32(byte[] value) . Converts bytes to a 32-bit signed integer. uint FromBytesToUInt32(byte[] value) . Converts bytes to a 32-bit unsigned integer. long FromBytesToInt64(byte[] value) . Converts bytes to a 64-bit signed integer. ulong FromBytesToUInt64(byte[] value) . Converts bytes to a 64-bit unsigned integer. float FromBytesToFloat(byte[] value) . Converts bytes to a float value. double FromBytesToDouble(byte[] value) . Converts bytes to a float value. string FromBytesToString(byte[] value) . Converts bytes to a string. byte[] ToBytes(bool value) . Converts boolean value to bytes. byte[] ToBytes(short value) . Converts short value to bytes. byte[] ToBytes(ushort value) . Converts ushort value to bytes. byte[] ToBytes(int value) . Converts int value to bytes. byte[] ToBytes(uint value) . Converts uint value to bytes. byte[] ToBytes(long value) . Converts long value to bytes. byte[] ToBytes(ulong value) . Converts long value to bytes. string? ToHex(byte?[]? bytes, string delimiter) . Converts given bytes to hex with defined delimiter . string? ToHex&lt;T&gt;(T value) . Converts given value to binary . int Count(string name) . Gets the count value of a given group. int Count(string name, int parent) . Gets the count value of a given group. int ExtractFromDate(string? date, string partOfDate) . Extracts part of the date from the date . int ExtractFromDate(string date, string culture, string partOfDate) . Extracts part of the date from the date based on given culture . DateTimeOffset? GetDate() . Gets the current datetime . DateTimeOffset? UtcGetDate() . Gets the current datetime in UTC . int? Month(DateTimeOffset? value) . Gets the month from DateTimeOffset . int? Year(DateTimeOffset? value) . Gets the year from DateTimeOffset . int? Day(DateTimeOffset? value) . Gets the day from DateTimeOffset . int? Hour(DateTimeOffset? value) . Gets the hour from DateTimeOffset . int? Minute(DateTimeOffset? value) . Gets the minute from DateTimeOffset . int? Second(DateTimeOffset? value) . Gets the second from DateTimeOffset . int? Milliseconds(DateTimeOffset? value) . Gets the millisecond from DateTimeOffset . int? DayOfWeek(DateTimeOffset? value) . Gets the day of week from DateTimeOffset . TimeSpan? ExtractTimeSpan(DateTimeOffset? dateTimeOffset) . Extracts time from DateTimeOffset . DateTime? ToDateTimeOffset(string value) . Converts given value to DateTimeOffset . DateTimeOffset? ToDateTimeOffset(string value, string culture) . Converts given value to DateTimeOffset . IEnumerable&lt;T&gt;? Skip&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? skipCount) . Skips elements from the beginning of the sequence. IEnumerable&lt;T&gt;? Take&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? takeCount) . Takes elements from the beginning of the sequence. IEnumerable&lt;T&gt;? SkipAndTake&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? skipCount, int? takeCount) . Skip and takes elements from the beginning of the sequence. T[]? EnumerableToArray&lt;T&gt;(IEnumerable&lt;T&gt;? values) . Turn array arguments of T into a single array. T[]? MergeArrays&lt;T&gt;(T[][]? values) . Turn array arguments of T into a single array. IEnumerable&lt;T&gt;? LongestCommonSequence&lt;T&gt;(IEnumerable&lt;T&gt;? source, IEnumerable&lt;T&gt;? pattern) . Computes longest common sequence of two given sequences . T? GetElementAtOrDefault&lt;T&gt;(IEnumerable&lt;T&gt;? enumerable, int? index) . Gets the element at the specified index in a sequence . int? Length&lt;T&gt;(IEnumerable&lt;T&gt;? enumerable) . Gets the length of the sequence . int? Length&lt;T&gt;(T[]? array) . Gets the length of the array . T? Choose&lt;T&gt;(int? index, T[] values) . Gets the value of an array at the specified index . T If&lt;T&gt;(bool expressionResult, T a, T b) . Chose a or b value based on the expression result . bool? Match(string? regex, string? content) . Determine whether content matches the specified pattern . byte? Coalesce(byte?[] array) . Gets the first non-null value in a list . sbyte? Coalesce(sbyte?[] array) . Gets the first non-null value in a list . short? Coalesce(short?[] array) . Gets the first non-null value in a list . ushort? Coalesce(ushort?[] array) . Gets the first non-null value in a list . int? Coalesce(int?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(uint?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(long?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(ulong?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(Decimal?[] array) . Gets the first non-null value in a list . T? Coalesce&lt;T&gt;(T[] array) . Gets the first non-null value in a list . IEnumerable&lt;T&gt;? Distinct&lt;T&gt;(IEnumerable&lt;T&gt;? values) . Returns distinct elements from a collection. string? Md5(string? content) . Gets the md5 hash of the given string. string? Md5(byte?[]? content) . Gets the md5 hash of the given bytes array. string? Sha1(string? content) . Gets the sha256 hash of the given string. string? Sha1(byte?[]? content) . Gets the sha256 hash of the given bytes array. string? Sha256(string? content) . Gets the sha256 hash of the given string. string? Sha256(byte?[]? content) . Gets the sha256 hash of the given bytes array. string? Sha512(string? content) . Gets the sha256 hash of the given string. string? Sha512(byte?[]? content) . Gets the sha256 hash of the bytes array. string? ToJson&lt;T&gt;(T? obj) . Converts object to json. string[] ExtractFromJsonToArray(string? json, string? path) . Extracts values from json by path. string? ExtractFromJson(string? json, string? path) . Extracts values from json by path and joins them with comma. Decimal? Abs(Decimal? value) . Gets the absolute value . long? Abs(long? value) . Gets the absolute value . int? Abs(int? value) . Gets the absolute value . Decimal? Ceil(Decimal? value) . Gets the ceiling value . Decimal? Floor(Decimal? value) . Gets the floor value . Decimal? Sign(Decimal? value) . Determine whether value is greater, equal or less that zero . long? Sign(long? value) . Determine whether value is greater, equal or less that zero . Decimal? Round(Decimal? value, int precision) . Rounds the value within given precision . Decimal? PercentOf(Decimal? value, Decimal? max) . Gets the percentage of the value . int Rand() . Gets the random integer value . int? Rand(int? min, int? max) . Gets the random integer value . double? Pow(Decimal? x, Decimal? y) . Computes the pow between two values . double? Pow(double? x, double? y) . Computes the pow between two values . double? Sqrt(Decimal? x) . Computes the sqrt of a given value . double? Sqrt(double? x) . Computes the sqrt of a given value . double? Sqrt(long? x) . Computes the sqrt of a given value . double? PercentRank&lt;T&gt;(IEnumerable&lt;T&gt;? window, T? value) . Computes the percent rank of a given window . double? Log(Decimal? base, Decimal? value) . Calculates the logarithm of a value with a specified base. Decimal? Sin(Decimal? value) . Calculates sine of a value. double? Sin(double? value) . Calculates sine of a value. float? Sin(float? value) . Calculates sine of a value. Decimal? Cos(Decimal? value) . Calculates cosine of a value. double? Cos(double? value) . Calculates cosine of a value. float? Cos(float? value) . Calculates cosine of a value. Decimal Max(string name) . Gets the max value of a given group. Decimal Max(string name, int parent) . Gets the max value of a given group. Decimal Min(string name) . Gets the min value of a given group. Decimal Min(string name, int parent) . Gets the min value of a given group. Decimal StDev(string name, int parent) . Gets the StDev value of a given group. string NewId() . Gets the new identifier . string? Trim(string? value) . Removes leading and trailing whitespace from a string. string? TrimStart(string? value) . Removes leading whitespace from a string. string? TrimEnd(string? value) . Removes trailing whitespace from a string. string? Substring(string? value, int? index, int? length) . Gets the substring from the string. string? Substring(string value, int? length) . Gets the substring from the string . string? Concat(string[]? strings) . Concatenates the specified values . string? Concat(char?[]? characters) . Concatenates the specified characters . string? Concat(string? firstString, char?[]? chars) . Concatenates specified string fir characters . string? Concat(char? firstChar, string[]? strings) . Concatenate specific character with strings . string? Concat(object[]? objects) . Concatenates the specified strings . string? Concat&lt;T&gt;(T[]? objects) . Concatenates the specified strings . bool? Contains(string? content, string? what) . Determine whether the string contains the specified value . int? IndexOf(string? value, string? text) . Position of the first occurrence of the specified value . string? Soundex(string? value) . Computes soundex for the specified value . bool HasFuzzyMatchedWord(string text, string word, string separator) . Matches the specified text by splitting it with separator and applying fuzzy comparison . bool HasWordThatHasSmallerLevenshteinDistanceThan(string text, string word, int distance, string separator) . Matches the specified text by splitting it with separator and applying fuzzy comparison with a given distance . bool HasWordThatSoundLike(string text, string word, string separator) . Matches whether the specified word is present after being fuzzified within the specified text . bool HasTextThatSoundLikeSentence(string text, string sentence, string separator) . Matches whether the specified text is present in sentence after being fuzified . string? ToUpper(string value) . Makes the string uppercase . string? ToUpper(string value, string culture) . Makes the string uppercase within specified culture . string? ToUpperInvariant(string value) . Makes the string uppercase . string? ToLower(string value) . Makes the string lowercase . string? ToLower(string value, string culture) . Makes the string lowercase within specified culture . string? ToLowerInvariant(string value) . Makes the string lowercase . string? PadLeft(string? value, string? character, int? totalWidth) . Returns a new string that right-aligns the characters in this instance by padding them on the left with a specified Unicode character, for a specified total lengt . string? PadRight(string? value, string? character, int? totalWidth) . Returns a new string that left-aligns the characters in this instance by padding them on the right with a specified Unicode character, for a specified total length . string? Head(string? value, int? length) . Gets the first N characters of the string . string? Tail(string? value, int? length) . Gets the last N characters of the string . int? LevenshteinDistance(string? firstValue, string? secondValue) . Computes the Levenshtein distance between two strings . char? GetCharacterOf(string value, int index) . Gets the character at specified index . string? Reverse(string? value) . Reverses the string . string[] Split(string value, string[] separators) . Splits the string into an array of substrings based on the specified separators . char[] ToCharArray(string value) . Splits the string into an array of characters . string? LongestCommonSubstring(string source, string pattern) . Computes the longest common subsequence between two source and pattern . string Replicate(string value, int integer) . Clones the value n times . string? Translate(string? value, string? characters, string? translations) . Returns the string from the first argument after the characters specified in the second argument are translated into the characters specified in the third argument. string? Replace(string? text, string lookFor, string? changeTo) . Replaces the first occurrence of a specified string in this instance with another specified string . string? ToTitleCase(string? value) . Capitalizes the first letter of the string . string? GetNthWord(string? text, int? wordIndex, string? separator) . Gets the nth word of the string . string? GetFirstWord(string text, string separator) . Gets the first word of the string . string? GetSecondWord(string text, string separator) . Gets the second word of the string . string? GetThirdWord(string text, string separator) . Gets the third word of the string . string? GetLastWord(string? text, string? separator) . Gets last word of the string . bool? IsNullOrEmpty(string? value) . Determines whether the string is null or empty . bool? IsNullOrWhiteSpace(string? value) . Determines whether the string is null or whitespace . string? UrlEncode(string? value) . Encodes the value . string? UrlDecode(string? value) . Decodes the value . string? UriEncode(string? value) . Encodes the value . string? UriDecode(string? value) . Decodes the value . bool? StartsWith(string? value, string? prefix) . Determines whether the string starts with the specified prefix . bool? StartsWith(string? value, string? prefix, string comparison) . Determines whether the string starts with the specified prefix . bool? EndsWith(string? value, string? suffix) . Determines whether the string ends with the specified suffix . bool? EndsWith(string? value, string? suffix, string comparison) . Determines whether the string ends with the specified suffix . string? RegexReplace(string? value, string? pattern, string? replacement) . Replace the specified value part that matches the pattern with the replacement . string[]? SplitByLinuxNewLines(string? input) . Split string by Linux-style newlines (\\n) . string[]? SplitByWindowsNewLines(string? input) . Split string by Windows-style newlines (\\r\\n) . string[]? SplitByNewLines(string? input) . Smart split that handles both Windows (\\r\\n) and Linux (\\n) newlines . Decimal Sum(string name) . Gets the sum value of a given group. Decimal Sum(string name, int parent) . Gets the sum value of a given group. Decimal SumIncome(string name) . Gets the sum value of a given group. Decimal SumIncome(string name, int parent) . Gets the sum value of a given group. Decimal SumOutcome(string name) . Gets the outcome value of a given group. Decimal SumOutcome(string name, int parent) . Gets the outcome value of a given group. TimeSpan? SumTimeSpan(string name) . Gets the sum value of a given group. TimeSpan? SumTimeSpan(string name, int parent) . Gets the sum value of a given group. TimeSpan? MinTimeSpan(string name) . Gets the min value of a given group. TimeSpan? MinTimeSpan(string name, int parent) . Gets the min value of a given group. TimeSpan? MaxTimeSpan(string name) . Gets the max value of a given group. TimeSpan? MaxTimeSpan(string name, int parent) . Gets the min value of a given group. char? ToChar(string? value) . Converts given value to character . char? ToChar(int? value) . Converts given value to character . char? ToChar(short? value) . Converts given value to character . char? ToChar(byte? value) . Converts given value to character . char? ToChar(object? value) . Converts given value to character . DateTime? ToDateTime(string value) . Converts given value to DateTime . DateTime? ToDateTime(string value, string culture) . Converts given value to DateTime . Decimal? ToDecimal(string? value) . Converts given value to decimal . Decimal? ToDecimal(string value, string culture) . Converts given value to decimal withing given culture . Decimal? ToDecimal(byte? value) . Converts given value to Decimal . Decimal? ToDecimal(sbyte? value) . Converts given value to Decimal . Decimal? ToDecimal(short? value) . Converts given value to Decimal . Decimal? ToDecimal(ushort? value) . Converts given value to Decimal . Decimal? ToDecimal(long? value) . Converts given value to Decimal . Decimal? ToDecimal(ulong? value) . Converts given value to Decimal . Decimal? ToDecimal(float? value) . Converts given value to Decimal . Decimal? ToDecimal(double? value) . Converts given value to Decimal . Decimal? ToDecimal(object? value) . Converts given value to Decimal . double? ToDouble(object? value) . Converts given value to double . double? ToDouble(string? value) . Converts given value to double . double? ToDouble(byte? value) . Converts given value to double . double? ToDouble(sbyte? value) . Converts given value to double . double? ToDouble(short? value) . Converts given value to double . double? ToDouble(ushort? value) . Converts given value to double . double? ToDouble(int? value) . Converts given value to double . double? ToDouble(uint? value) . Converts given value to double . double? ToDouble(long? value) . Converts given value to double . double? ToDouble(ulong? value) . Converts given value to double . double? ToDouble(float? value) . Converts given value to double . double? ToDouble(double? value) . Converts given value to double . double? ToDouble(Decimal? value) . Converts given value to double . float? ToFloat(string? value) . Converts given value to float . float? ToFloat(byte? value) . Converts given value to float . float? ToFloat(sbyte? value) . Converts given value to float . float? ToFloat(short? value) . Converts given value to float . float? ToFloat(ushort? value) . Converts given value to float . float? ToFloat(int? value) . Converts given value to float . float? ToFloat(uint? value) . Converts given value to float . float? ToFloat(long? value) . Converts given value to float . float? ToFloat(ulong? value) . Converts given value to float . float? ToFloat(float? value) . Converts given value to float . float? ToFloat(Decimal? value) . Converts given value to float . int? ToInt32(string value) . Converts given value to int . int? ToInt32(byte? value) . Converts given value to int . int? ToInt32(sbyte? value) . Converts given value to int . int? ToInt32(short? value) . Converts given value to int . int? ToInt32(ushort? value) . Converts given value to int . int? ToInt32(int? value) . Converts given value to int . int? ToInt32(uint? value) . Converts given value to int . int? ToInt32(long? value) . Converts given value to int . int? ToInt32(ulong? value) . Converts given value to int . int? ToInt32(float? value) . Converts given value to int . int? ToInt32(double? value) . Converts given value to int . int? ToInt32(Decimal? value) . Converts given value to int . int? ToInt32(object? value) . Converts given value to int . long? ToInt64(string value) . Converts given value to Int64 . long? ToInt64(byte? value) . Converts given value to long . long? ToInt64(sbyte? value) . Converts given value to long . long? ToInt64(short? value) . Converts given value to long . long? ToInt64(ushort? value) . Converts given value to long . long? ToInt64(int? value) . Converts given value to long . long? ToInt64(uint? value) . Converts given value to long . long? ToInt64(long? value) . Converts given value to long . long? ToInt64(ulong? value) . Converts given value to long . long? ToInt64(float? value) . Converts given value to long . long? ToInt64(double? value) . Converts given value to long . long? ToInt64(Decimal? value) . Converts given value to long . long? ToInt64(object? value) . Converts given value to long . string? ToString(char? value) . Converts given value to string . string? ToString(DateTimeOffset? value) . Converts given value to string . string? ToString(DateTimeOffset? value, string format) . Converts given value to string . string? ToString(byte? value) . Converts given value to string . string? ToString(byte? value, string format) . Converts given value to string . string? ToString(sbyte? value) . Converts given value to string . string? ToString(sbyte? value, string format) . Converts given value to string . string? ToString(int? value) . Converts given value to string . string? ToString(int? value, string format) . Converts given value to string . string? ToString(uint? value) . Converts given value to string . string? ToString(uint? value, string format) . Converts given value to string . string? ToString(long? value) . Converts given value to string . string? ToString(long? value, string format) . Converts given value to string . string? ToString(ulong? value) . Converts given value to string . string? ToString(ulong? value, string format) . Converts given value to string . string? ToString(float? value) . Converts given value to string . string? ToString(float? value, string format) . Converts given value to string . string? ToString(double? value) . Converts given value to string . string? ToString(double? value, string format) . Converts given value to string . string? ToString(Decimal? value) . Converts given value to string . string? ToString(Decimal? value, string format) . Converts given value to string . string? ToString(bool? value) . Converts given value to string . string? ToString(object? value) . Converts given value to string . string? ToString&lt;T&gt;(T? value) . Converts given value to string . string ToString(string[] value) . Converts given value to string . string ToString&lt;T&gt;(T[] value) . Converts given value to string . TimeSpan? ToTimeSpan(string value) . Converts given value to TimeSpan . TimeSpan? ToTimeSpan(string value, string culture) . Converts given value to TimeSpan . IEnumerable&lt;T&gt; Window&lt;T&gt;(string name) . Gets the window . ",
    "url": "/data-sources/Docker/linux-arm64.html#base-methods",
    
    "relUrl": "/data-sources/Docker/linux-arm64.html#base-methods"
  },"135": {
    "doc": "Linux Arm64",
    "title": "Linux Arm64",
    "content": " ",
    "url": "/data-sources/Docker/linux-arm64.html",
    
    "relUrl": "/data-sources/Docker/linux-arm64.html"
  },"136": {
    "doc": "Linux X64",
    "title": "Musoq.DataSources.System",
    "content": "System schema helper methods . ",
    "url": "/data-sources/System/linux-x64.html#musoqdatasourcessystem",
    
    "relUrl": "/data-sources/System/linux-x64.html#musoqdatasourcessystem"
  },"137": {
    "doc": "Linux X64",
    "title": "Tables",
    "content": "Table is a collection of rows and columns that the plugin exposes. Below are the tables that are exposed by this data source. system.dual() . The dummy table . | Name | Type | Description | . | Dummy | string | Just empty string | . system.range(long min, long max) . Gives the ability to generate ranged values . | Name | Type | Description | . | Value | long | Enumerated value | . system.range(int min, int max) . Gives the ability to generate ranged values . | Name | Type | Description | . | Value | long | Enumerated value | . system.range(long max) . Gives the ability to generate ranged values . | Name | Type | Description | . | Value | long | Enumerated value | . ",
    "url": "/data-sources/System/linux-x64.html#tables",
    
    "relUrl": "/data-sources/System/linux-x64.html#tables"
  },"138": {
    "doc": "Linux X64",
    "title": "Base Methods",
    "content": "Base methods are methods that can be called on the data source specific column. Those methods are automatically inherited and enriches the data source specific methods. Below are those base methods that are exposed by this data source. int RowNumber() . Gets the row number of the current row. string? GetTypeName(object? obj) . Gets the typename of passed object. string AggregateValues(string name) . Aggregates values into a single value. string AggregateValues(string name, int parent) . Aggregates values into a single value. Decimal Avg(string name) . Gets the aggregated average value from the given group name . Decimal Avg(string name, int parent) . Gets the aggregated average value from the given group name . byte? ShiftLeft(byte? value, int shift) . Shifts the value to the left by the specified number of bits. short? ShiftLeft(short? value, int shift) . Shifts the value to the left by the specified number of bits. int? ShiftLeft(int? value, int shift) . Shifts the value to the left by the specified number of bits. long? ShiftLeft(long? value, int shift) . Shifts the value to the left by the specified number of bits. sbyte? ShiftLeft(sbyte? value, int shift) . Shifts the value to the left by the specified number of bits. ushort? ShiftLeft(ushort? value, int shift) . Shifts the value to the left by the specified number of bits. uint? ShiftLeft(uint? value, int shift) . Shifts the value to the left by the specified number of bits. ulong? ShiftLeft(ulong? value, int shift) . Shifts the value to the left by the specified number of bits. byte? ShiftRight(byte? value, int shift) . Shifts the value to the right by the specified number of bits. short? ShiftRight(short? value, int shift) . Shifts the value to the right by the specified number of bits. int? ShiftRight(int? value, int shift) . Shifts the value to the right by the specified number of bits. long? ShiftRight(long? value, int shift) . Shifts the value to the right by the specified number of bits. sbyte? ShiftRight(sbyte? value, int shift) . Shifts the value to the right by the specified number of bits. ushort? ShiftRight(ushort? value, int shift) . Shifts the value to the right by the specified number of bits. uint? ShiftRight(uint? value, int shift) . Shifts the value to the right by the specified number of bits. ulong? ShiftRight(ulong? value, int shift) . Shifts the value to the right by the specified number of bits. byte? Not(byte? value) . Performs bitwise NOT operation on a given value. short? Not(short? value) . Performs bitwise NOT operation on a given value. int? Not(int? value) . Performs bitwise NOT operation on a given value. long? Not(long? value) . Performs bitwise NOT operation on a given value. sbyte? Not(sbyte? value) . Performs bitwise NOT operation on a given value. ushort? Not(ushort? value) . Performs bitwise NOT operation on a given value. uint? Not(uint? value) . Performs bitwise NOT operation on a given value. ulong? Not(ulong? value) . Performs bitwise NOT operation on a given value. byte? And(byte? left, byte? right) . Performs bitwise AND operation on two given values. int? And(byte? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(byte? left, short? right) . Performs bitwise AND operation on two given values. int? And(byte? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(byte? left, int? right) . Performs bitwise AND operation on two given values. uint? And(byte? left, uint? right) . Performs bitwise AND operation on two given values. long? And(byte? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(byte? left, ulong? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, byte? right) . Performs bitwise AND operation on two given values. sbyte? And(sbyte? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, short? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, int? right) . Performs bitwise AND operation on two given values. uint? And(sbyte? left, uint? right) . Performs bitwise AND operation on two given values. long? And(sbyte? left, long? right) . Performs bitwise AND operation on two given values. int? And(short? left, byte? right) . Performs bitwise AND operation on two given values. int? And(short? left, sbyte? right) . Performs bitwise AND operation on two given values. short? And(short? left, short? right) . Performs bitwise AND operation on two given values. int? And(short? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(short? left, int? right) . Performs bitwise AND operation on two given values. uint? And(short? left, uint? right) . Performs bitwise AND operation on two given values. long? And(short? left, long? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, byte? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, short? right) . Performs bitwise AND operation on two given values. ushort? And(ushort? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, int? right) . Performs bitwise AND operation on two given values. uint? And(ushort? left, uint? right) . Performs bitwise AND operation on two given values. long? And(ushort? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(ushort? left, ulong? right) . Performs bitwise AND operation on two given values. int? And(int? left, byte? right) . Performs bitwise AND operation on two given values. int? And(int? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(int? left, short? right) . Performs bitwise AND operation on two given values. int? And(int? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(int? left, int? right) . Performs bitwise AND operation on two given values. uint? And(int? left, uint? right) . Performs bitwise AND operation on two given values. long? And(int? left, long? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, uint? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, byte? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, sbyte? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, short? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, ushort? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, int? right) . Performs bitwise AND operation on two given values. ulong? And(uint? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(uint? left, ulong? right) . Performs bitwise AND operation on two given values. long? And(long? left, long? right) . Performs bitwise AND operation on two given values. long? And(long? left, byte? right) . Performs bitwise AND operation on two given values. long? And(long? left, sbyte? right) . Performs bitwise AND operation on two given values. long? And(long? left, short? right) . Performs bitwise AND operation on two given values. long? And(long? left, ushort? right) . Performs bitwise AND operation on two given values. long? And(long? left, int? right) . Performs bitwise AND operation on two given values. long? And(long? left, uint? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, byte? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, ushort? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, uint? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, ulong? right) . Performs bitwise AND operation on two given values. byte? Or(byte? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, short? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(byte? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(byte? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(byte? left, ulong? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, byte? right) . Performs bitwise OR operation on two given values. sbyte? Or(sbyte? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, short? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(sbyte? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(sbyte? left, long? right) . Performs bitwise OR operation on two given values. int? Or(short? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(short? left, sbyte? right) . Performs bitwise OR operation on two given values. short? Or(short? left, short? right) . Performs bitwise OR operation on two given values. int? Or(short? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(short? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(short? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(short? left, long? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, short? right) . Performs bitwise OR operation on two given values. ushort? Or(ushort? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(ushort? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(ushort? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(ushort? left, ulong? right) . Performs bitwise OR operation on two given values. int? Or(int? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(int? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(int? left, short? right) . Performs bitwise OR operation on two given values. int? Or(int? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(int? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(int? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(int? left, long? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, uint? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, byte? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, sbyte? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, short? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, ushort? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, int? right) . Performs bitwise OR operation on two given values. ulong? Or(uint? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(uint? left, ulong? right) . Performs bitwise OR operation on two given values. long? Or(long? left, long? right) . Performs bitwise OR operation on two given values. long? Or(long? left, byte? right) . Performs bitwise OR operation on two given values. long? Or(long? left, sbyte? right) . Performs bitwise OR operation on two given values. long? Or(long? left, short? right) . Performs bitwise OR operation on two given values. long? Or(long? left, ushort? right) . Performs bitwise OR operation on two given values. long? Or(long? left, int? right) . Performs bitwise OR operation on two given values. long? Or(long? left, uint? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, byte? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, ushort? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, uint? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, ulong? right) . Performs bitwise OR operation on two given values. byte? Xor(byte? left, byte? right) . Performs bitwise OR operation on two given values. int? Xor(byte? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(byte? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(byte? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(byte? left, ulong? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, byte? right) . Performs bitwise Xor operation on two given values. sbyte? Xor(sbyte? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(sbyte? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(sbyte? left, long? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, sbyte? right) . Performs bitwise Xor operation on two given values. short? Xor(short? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, ushort? right) . Performs bitwise XOR operation on two given values. int? Xor(short? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(short? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(short? left, long? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, short? right) . Performs bitwise Xor operation on two given values. ushort? Xor(ushort? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(ushort? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(ushort? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ushort? left, ulong? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(int? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(int? left, long? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, uint? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, byte? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, sbyte? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, short? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, ushort? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, int? right) . Performs bitwise Xor operation on two given values. ulong? Xor(uint? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(uint? left, ulong? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, long? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, byte? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, sbyte? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, short? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, ushort? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, int? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, uint? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, ulong? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, byte? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, ushort? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, uint? right) . Performs bitwise Xor operation on two given values. byte[] GetBytes(string? content) . Gets the bytes from the given string. byte[] GetBytes(string? content, int length, int offset) . Gets the bytes from the given string within given offset and length. byte?[]? GetBytes(char? character) . Gets the bytes from the given character. byte?[]? GetBytes(bool? bit) . Gets the bytes from the given boolean. byte?[]? GetBytes(long? value) . Gets the bytes from the given long. byte?[]? GetBytes(int? value) . Gets the bytes from the given int. byte?[]? GetBytes(short? value) . Gets the bytes from the given short. byte?[]? GetBytes(ulong? value) . Gets the bytes from the given ulong. byte?[]? GetBytes(ushort? value) . Gets the bytes from the given ushort. byte?[]? GetBytes(uint? value) . Gets the bytes from the given uint. byte?[]? GetBytes(Decimal? value) . Gets the bytes from the given decimal. byte?[]? GetBytes(double? value) . Gets the bytes from the given double. byte?[]? GetBytes(float? value) . Gets the bytes from the given float. string? ToBin(byte?[]? bytes, string delimiter) . Converts given bytes to binary with defined delimiter . string ToBin&lt;T&gt;(T value) . Converts given value to binary . string ToOcta&lt;T&gt;(T value) . Converts given value to octal . string ToDec&lt;T&gt;(T value) . Converts given value to decimal . string ToBase64(byte[] value) . Converts given value to string . string ToBase64(byte[] value, int offset, int length) . Converts given array of bytes to string . byte[] FromBase64(string value) . Converts given string to bytes array . bool FromBytesToBool(byte[] value) . Converts bytes to boolean value. short FromBytesToInt16(byte[] value) . Converts bytes to a 16-bit signed integer. ushort FromBytesToUInt16(byte[] value) . Converts bytes to a 16-bit unsigned integer. int FromBytesToInt32(byte[] value) . Converts bytes to a 32-bit signed integer. uint FromBytesToUInt32(byte[] value) . Converts bytes to a 32-bit unsigned integer. long FromBytesToInt64(byte[] value) . Converts bytes to a 64-bit signed integer. ulong FromBytesToUInt64(byte[] value) . Converts bytes to a 64-bit unsigned integer. float FromBytesToFloat(byte[] value) . Converts bytes to a float value. double FromBytesToDouble(byte[] value) . Converts bytes to a float value. string FromBytesToString(byte[] value) . Converts bytes to a string. byte[] ToBytes(bool value) . Converts boolean value to bytes. byte[] ToBytes(short value) . Converts short value to bytes. byte[] ToBytes(ushort value) . Converts ushort value to bytes. byte[] ToBytes(int value) . Converts int value to bytes. byte[] ToBytes(uint value) . Converts uint value to bytes. byte[] ToBytes(long value) . Converts long value to bytes. byte[] ToBytes(ulong value) . Converts long value to bytes. string? ToHex(byte?[]? bytes, string delimiter) . Converts given bytes to hex with defined delimiter . string? ToHex&lt;T&gt;(T value) . Converts given value to binary . int Count(string name) . Gets the count value of a given group. int Count(string name, int parent) . Gets the count value of a given group. int ExtractFromDate(string? date, string partOfDate) . Extracts part of the date from the date . int ExtractFromDate(string date, string culture, string partOfDate) . Extracts part of the date from the date based on given culture . DateTimeOffset? GetDate() . Gets the current datetime . DateTimeOffset? UtcGetDate() . Gets the current datetime in UTC . int? Month(DateTimeOffset? value) . Gets the month from DateTimeOffset . int? Year(DateTimeOffset? value) . Gets the year from DateTimeOffset . int? Day(DateTimeOffset? value) . Gets the day from DateTimeOffset . int? Hour(DateTimeOffset? value) . Gets the hour from DateTimeOffset . int? Minute(DateTimeOffset? value) . Gets the minute from DateTimeOffset . int? Second(DateTimeOffset? value) . Gets the second from DateTimeOffset . int? Milliseconds(DateTimeOffset? value) . Gets the millisecond from DateTimeOffset . int? DayOfWeek(DateTimeOffset? value) . Gets the day of week from DateTimeOffset . TimeSpan? ExtractTimeSpan(DateTimeOffset? dateTimeOffset) . Extracts time from DateTimeOffset . DateTime? ToDateTimeOffset(string value) . Converts given value to DateTimeOffset . DateTimeOffset? ToDateTimeOffset(string value, string culture) . Converts given value to DateTimeOffset . IEnumerable&lt;T&gt;? Skip&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? skipCount) . Skips elements from the beginning of the sequence. IEnumerable&lt;T&gt;? Take&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? takeCount) . Takes elements from the beginning of the sequence. IEnumerable&lt;T&gt;? SkipAndTake&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? skipCount, int? takeCount) . Skip and takes elements from the beginning of the sequence. T[]? EnumerableToArray&lt;T&gt;(IEnumerable&lt;T&gt;? values) . Turn array arguments of T into a single array. T[]? MergeArrays&lt;T&gt;(T[][]? values) . Turn array arguments of T into a single array. IEnumerable&lt;T&gt;? LongestCommonSequence&lt;T&gt;(IEnumerable&lt;T&gt;? source, IEnumerable&lt;T&gt;? pattern) . Computes longest common sequence of two given sequences . T? GetElementAtOrDefault&lt;T&gt;(IEnumerable&lt;T&gt;? enumerable, int? index) . Gets the element at the specified index in a sequence . int? Length&lt;T&gt;(IEnumerable&lt;T&gt;? enumerable) . Gets the length of the sequence . int? Length&lt;T&gt;(T[]? array) . Gets the length of the array . T? Choose&lt;T&gt;(int? index, T[] values) . Gets the value of an array at the specified index . T If&lt;T&gt;(bool expressionResult, T a, T b) . Chose a or b value based on the expression result . bool? Match(string? regex, string? content) . Determine whether content matches the specified pattern . byte? Coalesce(byte?[] array) . Gets the first non-null value in a list . sbyte? Coalesce(sbyte?[] array) . Gets the first non-null value in a list . short? Coalesce(short?[] array) . Gets the first non-null value in a list . ushort? Coalesce(ushort?[] array) . Gets the first non-null value in a list . int? Coalesce(int?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(uint?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(long?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(ulong?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(Decimal?[] array) . Gets the first non-null value in a list . T? Coalesce&lt;T&gt;(T[] array) . Gets the first non-null value in a list . IEnumerable&lt;T&gt;? Distinct&lt;T&gt;(IEnumerable&lt;T&gt;? values) . Returns distinct elements from a collection. string? Md5(string? content) . Gets the md5 hash of the given string. string? Md5(byte?[]? content) . Gets the md5 hash of the given bytes array. string? Sha1(string? content) . Gets the sha256 hash of the given string. string? Sha1(byte?[]? content) . Gets the sha256 hash of the given bytes array. string? Sha256(string? content) . Gets the sha256 hash of the given string. string? Sha256(byte?[]? content) . Gets the sha256 hash of the given bytes array. string? Sha512(string? content) . Gets the sha256 hash of the given string. string? Sha512(byte?[]? content) . Gets the sha256 hash of the bytes array. string? ToJson&lt;T&gt;(T? obj) . Converts object to json. string[] ExtractFromJsonToArray(string? json, string? path) . Extracts values from json by path. string? ExtractFromJson(string? json, string? path) . Extracts values from json by path and joins them with comma. Decimal? Abs(Decimal? value) . Gets the absolute value . long? Abs(long? value) . Gets the absolute value . int? Abs(int? value) . Gets the absolute value . Decimal? Ceil(Decimal? value) . Gets the ceiling value . Decimal? Floor(Decimal? value) . Gets the floor value . Decimal? Sign(Decimal? value) . Determine whether value is greater, equal or less that zero . long? Sign(long? value) . Determine whether value is greater, equal or less that zero . Decimal? Round(Decimal? value, int precision) . Rounds the value within given precision . Decimal? PercentOf(Decimal? value, Decimal? max) . Gets the percentage of the value . int Rand() . Gets the random integer value . int? Rand(int? min, int? max) . Gets the random integer value . double? Pow(Decimal? x, Decimal? y) . Computes the pow between two values . double? Pow(double? x, double? y) . Computes the pow between two values . double? Sqrt(Decimal? x) . Computes the sqrt of a given value . double? Sqrt(double? x) . Computes the sqrt of a given value . double? Sqrt(long? x) . Computes the sqrt of a given value . double? PercentRank&lt;T&gt;(IEnumerable&lt;T&gt;? window, T? value) . Computes the percent rank of a given window . double? Log(Decimal? base, Decimal? value) . Calculates the logarithm of a value with a specified base. Decimal? Sin(Decimal? value) . Calculates sine of a value. double? Sin(double? value) . Calculates sine of a value. float? Sin(float? value) . Calculates sine of a value. Decimal? Cos(Decimal? value) . Calculates cosine of a value. double? Cos(double? value) . Calculates cosine of a value. float? Cos(float? value) . Calculates cosine of a value. Decimal Max(string name) . Gets the max value of a given group. Decimal Max(string name, int parent) . Gets the max value of a given group. Decimal Min(string name) . Gets the min value of a given group. Decimal Min(string name, int parent) . Gets the min value of a given group. Decimal StDev(string name, int parent) . Gets the StDev value of a given group. string NewId() . Gets the new identifier . string? Trim(string? value) . Removes leading and trailing whitespace from a string. string? TrimStart(string? value) . Removes leading whitespace from a string. string? TrimEnd(string? value) . Removes trailing whitespace from a string. string? Substring(string? value, int? index, int? length) . Gets the substring from the string. string? Substring(string value, int? length) . Gets the substring from the string . string? Concat(string[]? strings) . Concatenates the specified values . string? Concat(char?[]? characters) . Concatenates the specified characters . string? Concat(string? firstString, char?[]? chars) . Concatenates specified string fir characters . string? Concat(char? firstChar, string[]? strings) . Concatenate specific character with strings . string? Concat(object[]? objects) . Concatenates the specified strings . string? Concat&lt;T&gt;(T[]? objects) . Concatenates the specified strings . bool? Contains(string? content, string? what) . Determine whether the string contains the specified value . int? IndexOf(string? value, string? text) . Position of the first occurrence of the specified value . string? Soundex(string? value) . Computes soundex for the specified value . bool HasFuzzyMatchedWord(string text, string word, string separator) . Matches the specified text by splitting it with separator and applying fuzzy comparison . bool HasWordThatHasSmallerLevenshteinDistanceThan(string text, string word, int distance, string separator) . Matches the specified text by splitting it with separator and applying fuzzy comparison with a given distance . bool HasWordThatSoundLike(string text, string word, string separator) . Matches whether the specified word is present after being fuzzified within the specified text . bool HasTextThatSoundLikeSentence(string text, string sentence, string separator) . Matches whether the specified text is present in sentence after being fuzified . string? ToUpper(string value) . Makes the string uppercase . string? ToUpper(string value, string culture) . Makes the string uppercase within specified culture . string? ToUpperInvariant(string value) . Makes the string uppercase . string? ToLower(string value) . Makes the string lowercase . string? ToLower(string value, string culture) . Makes the string lowercase within specified culture . string? ToLowerInvariant(string value) . Makes the string lowercase . string? PadLeft(string? value, string? character, int? totalWidth) . Returns a new string that right-aligns the characters in this instance by padding them on the left with a specified Unicode character, for a specified total lengt . string? PadRight(string? value, string? character, int? totalWidth) . Returns a new string that left-aligns the characters in this instance by padding them on the right with a specified Unicode character, for a specified total length . string? Head(string? value, int? length) . Gets the first N characters of the string . string? Tail(string? value, int? length) . Gets the last N characters of the string . int? LevenshteinDistance(string? firstValue, string? secondValue) . Computes the Levenshtein distance between two strings . char? GetCharacterOf(string value, int index) . Gets the character at specified index . string? Reverse(string? value) . Reverses the string . string[] Split(string value, string[] separators) . Splits the string into an array of substrings based on the specified separators . char[] ToCharArray(string value) . Splits the string into an array of characters . string? LongestCommonSubstring(string source, string pattern) . Computes the longest common subsequence between two source and pattern . string Replicate(string value, int integer) . Clones the value n times . string? Translate(string? value, string? characters, string? translations) . Returns the string from the first argument after the characters specified in the second argument are translated into the characters specified in the third argument. string? Replace(string? text, string lookFor, string? changeTo) . Replaces the first occurrence of a specified string in this instance with another specified string . string? ToTitleCase(string? value) . Capitalizes the first letter of the string . string? GetNthWord(string? text, int? wordIndex, string? separator) . Gets the nth word of the string . string? GetFirstWord(string text, string separator) . Gets the first word of the string . string? GetSecondWord(string text, string separator) . Gets the second word of the string . string? GetThirdWord(string text, string separator) . Gets the third word of the string . string? GetLastWord(string? text, string? separator) . Gets last word of the string . bool? IsNullOrEmpty(string? value) . Determines whether the string is null or empty . bool? IsNullOrWhiteSpace(string? value) . Determines whether the string is null or whitespace . string? UrlEncode(string? value) . Encodes the value . string? UrlDecode(string? value) . Decodes the value . string? UriEncode(string? value) . Encodes the value . string? UriDecode(string? value) . Decodes the value . bool? StartsWith(string? value, string? prefix) . Determines whether the string starts with the specified prefix . bool? StartsWith(string? value, string? prefix, string comparison) . Determines whether the string starts with the specified prefix . bool? EndsWith(string? value, string? suffix) . Determines whether the string ends with the specified suffix . bool? EndsWith(string? value, string? suffix, string comparison) . Determines whether the string ends with the specified suffix . string? RegexReplace(string? value, string? pattern, string? replacement) . Replace the specified value part that matches the pattern with the replacement . string[]? SplitByLinuxNewLines(string? input) . Split string by Linux-style newlines (\\n) . string[]? SplitByWindowsNewLines(string? input) . Split string by Windows-style newlines (\\r\\n) . string[]? SplitByNewLines(string? input) . Smart split that handles both Windows (\\r\\n) and Linux (\\n) newlines . Decimal Sum(string name) . Gets the sum value of a given group. Decimal Sum(string name, int parent) . Gets the sum value of a given group. Decimal SumIncome(string name) . Gets the sum value of a given group. Decimal SumIncome(string name, int parent) . Gets the sum value of a given group. Decimal SumOutcome(string name) . Gets the outcome value of a given group. Decimal SumOutcome(string name, int parent) . Gets the outcome value of a given group. TimeSpan? SumTimeSpan(string name) . Gets the sum value of a given group. TimeSpan? SumTimeSpan(string name, int parent) . Gets the sum value of a given group. TimeSpan? MinTimeSpan(string name) . Gets the min value of a given group. TimeSpan? MinTimeSpan(string name, int parent) . Gets the min value of a given group. TimeSpan? MaxTimeSpan(string name) . Gets the max value of a given group. TimeSpan? MaxTimeSpan(string name, int parent) . Gets the min value of a given group. char? ToChar(string? value) . Converts given value to character . char? ToChar(int? value) . Converts given value to character . char? ToChar(short? value) . Converts given value to character . char? ToChar(byte? value) . Converts given value to character . char? ToChar(object? value) . Converts given value to character . DateTime? ToDateTime(string value) . Converts given value to DateTime . DateTime? ToDateTime(string value, string culture) . Converts given value to DateTime . Decimal? ToDecimal(string? value) . Converts given value to decimal . Decimal? ToDecimal(string value, string culture) . Converts given value to decimal withing given culture . Decimal? ToDecimal(byte? value) . Converts given value to Decimal . Decimal? ToDecimal(sbyte? value) . Converts given value to Decimal . Decimal? ToDecimal(short? value) . Converts given value to Decimal . Decimal? ToDecimal(ushort? value) . Converts given value to Decimal . Decimal? ToDecimal(long? value) . Converts given value to Decimal . Decimal? ToDecimal(ulong? value) . Converts given value to Decimal . Decimal? ToDecimal(float? value) . Converts given value to Decimal . Decimal? ToDecimal(double? value) . Converts given value to Decimal . Decimal? ToDecimal(object? value) . Converts given value to Decimal . double? ToDouble(object? value) . Converts given value to double . double? ToDouble(string? value) . Converts given value to double . double? ToDouble(byte? value) . Converts given value to double . double? ToDouble(sbyte? value) . Converts given value to double . double? ToDouble(short? value) . Converts given value to double . double? ToDouble(ushort? value) . Converts given value to double . double? ToDouble(int? value) . Converts given value to double . double? ToDouble(uint? value) . Converts given value to double . double? ToDouble(long? value) . Converts given value to double . double? ToDouble(ulong? value) . Converts given value to double . double? ToDouble(float? value) . Converts given value to double . double? ToDouble(double? value) . Converts given value to double . double? ToDouble(Decimal? value) . Converts given value to double . float? ToFloat(string? value) . Converts given value to float . float? ToFloat(byte? value) . Converts given value to float . float? ToFloat(sbyte? value) . Converts given value to float . float? ToFloat(short? value) . Converts given value to float . float? ToFloat(ushort? value) . Converts given value to float . float? ToFloat(int? value) . Converts given value to float . float? ToFloat(uint? value) . Converts given value to float . float? ToFloat(long? value) . Converts given value to float . float? ToFloat(ulong? value) . Converts given value to float . float? ToFloat(float? value) . Converts given value to float . float? ToFloat(Decimal? value) . Converts given value to float . int? ToInt32(string value) . Converts given value to int . int? ToInt32(byte? value) . Converts given value to int . int? ToInt32(sbyte? value) . Converts given value to int . int? ToInt32(short? value) . Converts given value to int . int? ToInt32(ushort? value) . Converts given value to int . int? ToInt32(int? value) . Converts given value to int . int? ToInt32(uint? value) . Converts given value to int . int? ToInt32(long? value) . Converts given value to int . int? ToInt32(ulong? value) . Converts given value to int . int? ToInt32(float? value) . Converts given value to int . int? ToInt32(double? value) . Converts given value to int . int? ToInt32(Decimal? value) . Converts given value to int . int? ToInt32(object? value) . Converts given value to int . long? ToInt64(string value) . Converts given value to Int64 . long? ToInt64(byte? value) . Converts given value to long . long? ToInt64(sbyte? value) . Converts given value to long . long? ToInt64(short? value) . Converts given value to long . long? ToInt64(ushort? value) . Converts given value to long . long? ToInt64(int? value) . Converts given value to long . long? ToInt64(uint? value) . Converts given value to long . long? ToInt64(long? value) . Converts given value to long . long? ToInt64(ulong? value) . Converts given value to long . long? ToInt64(float? value) . Converts given value to long . long? ToInt64(double? value) . Converts given value to long . long? ToInt64(Decimal? value) . Converts given value to long . long? ToInt64(object? value) . Converts given value to long . string? ToString(char? value) . Converts given value to string . string? ToString(DateTimeOffset? value) . Converts given value to string . string? ToString(DateTimeOffset? value, string format) . Converts given value to string . string? ToString(byte? value) . Converts given value to string . string? ToString(byte? value, string format) . Converts given value to string . string? ToString(sbyte? value) . Converts given value to string . string? ToString(sbyte? value, string format) . Converts given value to string . string? ToString(int? value) . Converts given value to string . string? ToString(int? value, string format) . Converts given value to string . string? ToString(uint? value) . Converts given value to string . string? ToString(uint? value, string format) . Converts given value to string . string? ToString(long? value) . Converts given value to string . string? ToString(long? value, string format) . Converts given value to string . string? ToString(ulong? value) . Converts given value to string . string? ToString(ulong? value, string format) . Converts given value to string . string? ToString(float? value) . Converts given value to string . string? ToString(float? value, string format) . Converts given value to string . string? ToString(double? value) . Converts given value to string . string? ToString(double? value, string format) . Converts given value to string . string? ToString(Decimal? value) . Converts given value to string . string? ToString(Decimal? value, string format) . Converts given value to string . string? ToString(bool? value) . Converts given value to string . string? ToString(object? value) . Converts given value to string . string? ToString&lt;T&gt;(T? value) . Converts given value to string . string ToString(string[] value) . Converts given value to string . string ToString&lt;T&gt;(T[] value) . Converts given value to string . TimeSpan? ToTimeSpan(string value) . Converts given value to TimeSpan . TimeSpan? ToTimeSpan(string value, string culture) . Converts given value to TimeSpan . IEnumerable&lt;T&gt; Window&lt;T&gt;(string name) . Gets the window . ",
    "url": "/data-sources/System/linux-x64.html#base-methods",
    
    "relUrl": "/data-sources/System/linux-x64.html#base-methods"
  },"139": {
    "doc": "Linux X64",
    "title": "Linux X64",
    "content": " ",
    "url": "/data-sources/System/linux-x64.html",
    
    "relUrl": "/data-sources/System/linux-x64.html"
  },"140": {
    "doc": "Linux X64",
    "title": "Musoq.DataSources.OpenAI",
    "content": "Provides interface to work with OpenAI API. ",
    "url": "/data-sources/OpenAI/linux-x64.html#musoqdatasourcesopenai",
    
    "relUrl": "/data-sources/OpenAI/linux-x64.html#musoqdatasourcesopenai"
  },"141": {
    "doc": "Linux X64",
    "title": "Tables",
    "content": "Table is a collection of rows and columns that the plugin exposes. Below are the tables that are exposed by this data source. openai.gpt() . Gives the access to OpenAI api . Environment variables . In order to use the plugin, the user must set any required environment variables as specified in the environments element. Failure to do so may result in the plugin not functioning correctly. | Name | Is required | Description | . | OPENAI_API_KEY | true | Open AI api key | . Columns . This table has a dynamic structure, which means that its columns and other details cannot be determined until runtime. As a result, it is not possible to include a complete description of this table in the documentation. Instead, the actual columns and other details of this table will be determined at runtime. openai.gpt(string model) . Gives the access to OpenAI api . Environment variables . In order to use the plugin, the user must set any required environment variables as specified in the environments element. Failure to do so may result in the plugin not functioning correctly. | Name | Is required | Description | . | OPENAI_API_KEY | true | Open AI api key | . Columns . This table has a dynamic structure, which means that its columns and other details cannot be determined until runtime. As a result, it is not possible to include a complete description of this table in the documentation. Instead, the actual columns and other details of this table will be determined at runtime. openai.gpt(string model, int maxTokens) . Gives the access to OpenAI api . Environment variables . In order to use the plugin, the user must set any required environment variables as specified in the environments element. Failure to do so may result in the plugin not functioning correctly. | Name | Is required | Description | . | OPENAI_API_KEY | true | Open AI api key | . Columns . This table has a dynamic structure, which means that its columns and other details cannot be determined until runtime. As a result, it is not possible to include a complete description of this table in the documentation. Instead, the actual columns and other details of this table will be determined at runtime. openai.gpt(string model, int maxTokens, double temperature) . Gives the access to OpenAI api . Environment variables . In order to use the plugin, the user must set any required environment variables as specified in the environments element. Failure to do so may result in the plugin not functioning correctly. | Name | Is required | Description | . | OPENAI_API_KEY | true | Open AI api key | . Columns . This table has a dynamic structure, which means that its columns and other details cannot be determined until runtime. As a result, it is not possible to include a complete description of this table in the documentation. Instead, the actual columns and other details of this table will be determined at runtime. openai.gpt(string model, int maxTokens, double temperature, double frequencyPenalty) . Gives the access to OpenAI api . Environment variables . In order to use the plugin, the user must set any required environment variables as specified in the environments element. Failure to do so may result in the plugin not functioning correctly. | Name | Is required | Description | . | OPENAI_API_KEY | true | Open AI api key | . Columns . This table has a dynamic structure, which means that its columns and other details cannot be determined until runtime. As a result, it is not possible to include a complete description of this table in the documentation. Instead, the actual columns and other details of this table will be determined at runtime. openai.gpt(string model, int maxTokens, double temperature, double frequencyPenalty, double presencePenalty) . Gives the access to OpenAI api . Environment variables . In order to use the plugin, the user must set any required environment variables as specified in the environments element. Failure to do so may result in the plugin not functioning correctly. | Name | Is required | Description | . | OPENAI_API_KEY | true | Open AI api key | . Columns . This table has a dynamic structure, which means that its columns and other details cannot be determined until runtime. As a result, it is not possible to include a complete description of this table in the documentation. Instead, the actual columns and other details of this table will be determined at runtime. ",
    "url": "/data-sources/OpenAI/linux-x64.html#tables",
    
    "relUrl": "/data-sources/OpenAI/linux-x64.html#tables"
  },"142": {
    "doc": "Linux X64",
    "title": "Methods",
    "content": "Methods are functions that can be called on the data source specific column. Below are the methods that are exposed by this data source. bool IsContentAbout(string content, string question) . Determines whether the provided content is related to the given question. Returns true if the content is related, otherwise returns false. string Sentiment(string content, bool throwOnUnknown) . Performs sentiment analysis on the provided content and returns the sentiment as one of the following strings: “POSITIVE”, “NEGATIVE”, “NEUTRAL”, or “UNKNOWN”. string SummarizeContent(string content) . Summarizes the provided content using the OpenAI API and returns the summarized text. string TranslateContent(string content, string from, string to) . Translates the provided content from the source language to the destination language using the OpenAI API. string[] Entities(string content, bool throwOnException) . Extracts entities from the provided content using the OpenAI API and returns an array of entity strings. string LlmPerform&lt;TColumnType&gt;(string whatToDo, TColumnType column) . Performs the specified action on the provided entity using the OpenAI API and returns the result. string DescribeImage(string imageBase64) . Describes the provided image using the OpenAI API and returns a description of the image. string AskImage(string question, string imageBase64) . Asks a question about the provided image using the OpenAI API and returns the answer to the question. bool IsQuestionApplicableToImage(string question, string imageBase64) . Asks a question about the provided image using the OpenAI API and returns a boolean result. int CountTokens(string content) . Counts the number of tokens in the provided content using the specified model. int CountTokens(string content) . Counts the number of tokens in the provided content using the specified model. int CountTokens(string encodingName, string content) . Counts the number of tokens in the provided content using the specified model. ",
    "url": "/data-sources/OpenAI/linux-x64.html#methods",
    
    "relUrl": "/data-sources/OpenAI/linux-x64.html#methods"
  },"143": {
    "doc": "Linux X64",
    "title": "Base Methods",
    "content": "Base methods are methods that can be called on the data source specific column. Those methods are automatically inherited and enriches the data source specific methods. Below are those base methods that are exposed by this data source. int RowNumber() . Gets the row number of the current row. string? GetTypeName(object? obj) . Gets the typename of passed object. string AggregateValues(string name) . Aggregates values into a single value. string AggregateValues(string name, int parent) . Aggregates values into a single value. Decimal Avg(string name) . Gets the aggregated average value from the given group name . Decimal Avg(string name, int parent) . Gets the aggregated average value from the given group name . byte? ShiftLeft(byte? value, int shift) . Shifts the value to the left by the specified number of bits. short? ShiftLeft(short? value, int shift) . Shifts the value to the left by the specified number of bits. int? ShiftLeft(int? value, int shift) . Shifts the value to the left by the specified number of bits. long? ShiftLeft(long? value, int shift) . Shifts the value to the left by the specified number of bits. sbyte? ShiftLeft(sbyte? value, int shift) . Shifts the value to the left by the specified number of bits. ushort? ShiftLeft(ushort? value, int shift) . Shifts the value to the left by the specified number of bits. uint? ShiftLeft(uint? value, int shift) . Shifts the value to the left by the specified number of bits. ulong? ShiftLeft(ulong? value, int shift) . Shifts the value to the left by the specified number of bits. byte? ShiftRight(byte? value, int shift) . Shifts the value to the right by the specified number of bits. short? ShiftRight(short? value, int shift) . Shifts the value to the right by the specified number of bits. int? ShiftRight(int? value, int shift) . Shifts the value to the right by the specified number of bits. long? ShiftRight(long? value, int shift) . Shifts the value to the right by the specified number of bits. sbyte? ShiftRight(sbyte? value, int shift) . Shifts the value to the right by the specified number of bits. ushort? ShiftRight(ushort? value, int shift) . Shifts the value to the right by the specified number of bits. uint? ShiftRight(uint? value, int shift) . Shifts the value to the right by the specified number of bits. ulong? ShiftRight(ulong? value, int shift) . Shifts the value to the right by the specified number of bits. byte? Not(byte? value) . Performs bitwise NOT operation on a given value. short? Not(short? value) . Performs bitwise NOT operation on a given value. int? Not(int? value) . Performs bitwise NOT operation on a given value. long? Not(long? value) . Performs bitwise NOT operation on a given value. sbyte? Not(sbyte? value) . Performs bitwise NOT operation on a given value. ushort? Not(ushort? value) . Performs bitwise NOT operation on a given value. uint? Not(uint? value) . Performs bitwise NOT operation on a given value. ulong? Not(ulong? value) . Performs bitwise NOT operation on a given value. byte? And(byte? left, byte? right) . Performs bitwise AND operation on two given values. int? And(byte? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(byte? left, short? right) . Performs bitwise AND operation on two given values. int? And(byte? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(byte? left, int? right) . Performs bitwise AND operation on two given values. uint? And(byte? left, uint? right) . Performs bitwise AND operation on two given values. long? And(byte? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(byte? left, ulong? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, byte? right) . Performs bitwise AND operation on two given values. sbyte? And(sbyte? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, short? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, int? right) . Performs bitwise AND operation on two given values. uint? And(sbyte? left, uint? right) . Performs bitwise AND operation on two given values. long? And(sbyte? left, long? right) . Performs bitwise AND operation on two given values. int? And(short? left, byte? right) . Performs bitwise AND operation on two given values. int? And(short? left, sbyte? right) . Performs bitwise AND operation on two given values. short? And(short? left, short? right) . Performs bitwise AND operation on two given values. int? And(short? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(short? left, int? right) . Performs bitwise AND operation on two given values. uint? And(short? left, uint? right) . Performs bitwise AND operation on two given values. long? And(short? left, long? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, byte? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, short? right) . Performs bitwise AND operation on two given values. ushort? And(ushort? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, int? right) . Performs bitwise AND operation on two given values. uint? And(ushort? left, uint? right) . Performs bitwise AND operation on two given values. long? And(ushort? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(ushort? left, ulong? right) . Performs bitwise AND operation on two given values. int? And(int? left, byte? right) . Performs bitwise AND operation on two given values. int? And(int? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(int? left, short? right) . Performs bitwise AND operation on two given values. int? And(int? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(int? left, int? right) . Performs bitwise AND operation on two given values. uint? And(int? left, uint? right) . Performs bitwise AND operation on two given values. long? And(int? left, long? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, uint? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, byte? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, sbyte? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, short? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, ushort? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, int? right) . Performs bitwise AND operation on two given values. ulong? And(uint? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(uint? left, ulong? right) . Performs bitwise AND operation on two given values. long? And(long? left, long? right) . Performs bitwise AND operation on two given values. long? And(long? left, byte? right) . Performs bitwise AND operation on two given values. long? And(long? left, sbyte? right) . Performs bitwise AND operation on two given values. long? And(long? left, short? right) . Performs bitwise AND operation on two given values. long? And(long? left, ushort? right) . Performs bitwise AND operation on two given values. long? And(long? left, int? right) . Performs bitwise AND operation on two given values. long? And(long? left, uint? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, byte? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, ushort? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, uint? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, ulong? right) . Performs bitwise AND operation on two given values. byte? Or(byte? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, short? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(byte? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(byte? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(byte? left, ulong? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, byte? right) . Performs bitwise OR operation on two given values. sbyte? Or(sbyte? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, short? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(sbyte? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(sbyte? left, long? right) . Performs bitwise OR operation on two given values. int? Or(short? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(short? left, sbyte? right) . Performs bitwise OR operation on two given values. short? Or(short? left, short? right) . Performs bitwise OR operation on two given values. int? Or(short? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(short? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(short? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(short? left, long? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, short? right) . Performs bitwise OR operation on two given values. ushort? Or(ushort? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(ushort? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(ushort? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(ushort? left, ulong? right) . Performs bitwise OR operation on two given values. int? Or(int? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(int? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(int? left, short? right) . Performs bitwise OR operation on two given values. int? Or(int? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(int? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(int? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(int? left, long? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, uint? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, byte? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, sbyte? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, short? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, ushort? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, int? right) . Performs bitwise OR operation on two given values. ulong? Or(uint? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(uint? left, ulong? right) . Performs bitwise OR operation on two given values. long? Or(long? left, long? right) . Performs bitwise OR operation on two given values. long? Or(long? left, byte? right) . Performs bitwise OR operation on two given values. long? Or(long? left, sbyte? right) . Performs bitwise OR operation on two given values. long? Or(long? left, short? right) . Performs bitwise OR operation on two given values. long? Or(long? left, ushort? right) . Performs bitwise OR operation on two given values. long? Or(long? left, int? right) . Performs bitwise OR operation on two given values. long? Or(long? left, uint? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, byte? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, ushort? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, uint? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, ulong? right) . Performs bitwise OR operation on two given values. byte? Xor(byte? left, byte? right) . Performs bitwise OR operation on two given values. int? Xor(byte? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(byte? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(byte? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(byte? left, ulong? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, byte? right) . Performs bitwise Xor operation on two given values. sbyte? Xor(sbyte? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(sbyte? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(sbyte? left, long? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, sbyte? right) . Performs bitwise Xor operation on two given values. short? Xor(short? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, ushort? right) . Performs bitwise XOR operation on two given values. int? Xor(short? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(short? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(short? left, long? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, short? right) . Performs bitwise Xor operation on two given values. ushort? Xor(ushort? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(ushort? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(ushort? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ushort? left, ulong? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(int? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(int? left, long? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, uint? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, byte? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, sbyte? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, short? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, ushort? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, int? right) . Performs bitwise Xor operation on two given values. ulong? Xor(uint? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(uint? left, ulong? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, long? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, byte? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, sbyte? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, short? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, ushort? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, int? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, uint? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, ulong? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, byte? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, ushort? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, uint? right) . Performs bitwise Xor operation on two given values. byte[] GetBytes(string? content) . Gets the bytes from the given string. byte[] GetBytes(string? content, int length, int offset) . Gets the bytes from the given string within given offset and length. byte?[]? GetBytes(char? character) . Gets the bytes from the given character. byte?[]? GetBytes(bool? bit) . Gets the bytes from the given boolean. byte?[]? GetBytes(long? value) . Gets the bytes from the given long. byte?[]? GetBytes(int? value) . Gets the bytes from the given int. byte?[]? GetBytes(short? value) . Gets the bytes from the given short. byte?[]? GetBytes(ulong? value) . Gets the bytes from the given ulong. byte?[]? GetBytes(ushort? value) . Gets the bytes from the given ushort. byte?[]? GetBytes(uint? value) . Gets the bytes from the given uint. byte?[]? GetBytes(Decimal? value) . Gets the bytes from the given decimal. byte?[]? GetBytes(double? value) . Gets the bytes from the given double. byte?[]? GetBytes(float? value) . Gets the bytes from the given float. string? ToBin(byte?[]? bytes, string delimiter) . Converts given bytes to binary with defined delimiter . string ToBin&lt;T&gt;(T value) . Converts given value to binary . string ToOcta&lt;T&gt;(T value) . Converts given value to octal . string ToDec&lt;T&gt;(T value) . Converts given value to decimal . string ToBase64(byte[] value) . Converts given value to string . string ToBase64(byte[] value, int offset, int length) . Converts given array of bytes to string . byte[] FromBase64(string value) . Converts given string to bytes array . bool FromBytesToBool(byte[] value) . Converts bytes to boolean value. short FromBytesToInt16(byte[] value) . Converts bytes to a 16-bit signed integer. ushort FromBytesToUInt16(byte[] value) . Converts bytes to a 16-bit unsigned integer. int FromBytesToInt32(byte[] value) . Converts bytes to a 32-bit signed integer. uint FromBytesToUInt32(byte[] value) . Converts bytes to a 32-bit unsigned integer. long FromBytesToInt64(byte[] value) . Converts bytes to a 64-bit signed integer. ulong FromBytesToUInt64(byte[] value) . Converts bytes to a 64-bit unsigned integer. float FromBytesToFloat(byte[] value) . Converts bytes to a float value. double FromBytesToDouble(byte[] value) . Converts bytes to a float value. string FromBytesToString(byte[] value) . Converts bytes to a string. byte[] ToBytes(bool value) . Converts boolean value to bytes. byte[] ToBytes(short value) . Converts short value to bytes. byte[] ToBytes(ushort value) . Converts ushort value to bytes. byte[] ToBytes(int value) . Converts int value to bytes. byte[] ToBytes(uint value) . Converts uint value to bytes. byte[] ToBytes(long value) . Converts long value to bytes. byte[] ToBytes(ulong value) . Converts long value to bytes. string? ToHex(byte?[]? bytes, string delimiter) . Converts given bytes to hex with defined delimiter . string? ToHex&lt;T&gt;(T value) . Converts given value to binary . int Count(string name) . Gets the count value of a given group. int Count(string name, int parent) . Gets the count value of a given group. int ExtractFromDate(string? date, string partOfDate) . Extracts part of the date from the date . int ExtractFromDate(string date, string culture, string partOfDate) . Extracts part of the date from the date based on given culture . DateTimeOffset? GetDate() . Gets the current datetime . DateTimeOffset? UtcGetDate() . Gets the current datetime in UTC . int? Month(DateTimeOffset? value) . Gets the month from DateTimeOffset . int? Year(DateTimeOffset? value) . Gets the year from DateTimeOffset . int? Day(DateTimeOffset? value) . Gets the day from DateTimeOffset . int? Hour(DateTimeOffset? value) . Gets the hour from DateTimeOffset . int? Minute(DateTimeOffset? value) . Gets the minute from DateTimeOffset . int? Second(DateTimeOffset? value) . Gets the second from DateTimeOffset . int? Milliseconds(DateTimeOffset? value) . Gets the millisecond from DateTimeOffset . int? DayOfWeek(DateTimeOffset? value) . Gets the day of week from DateTimeOffset . TimeSpan? ExtractTimeSpan(DateTimeOffset? dateTimeOffset) . Extracts time from DateTimeOffset . DateTime? ToDateTimeOffset(string value) . Converts given value to DateTimeOffset . DateTimeOffset? ToDateTimeOffset(string value, string culture) . Converts given value to DateTimeOffset . IEnumerable&lt;T&gt;? Skip&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? skipCount) . Skips elements from the beginning of the sequence. IEnumerable&lt;T&gt;? Take&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? takeCount) . Takes elements from the beginning of the sequence. IEnumerable&lt;T&gt;? SkipAndTake&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? skipCount, int? takeCount) . Skip and takes elements from the beginning of the sequence. T[]? EnumerableToArray&lt;T&gt;(IEnumerable&lt;T&gt;? values) . Turn array arguments of T into a single array. T[]? MergeArrays&lt;T&gt;(T[][]? values) . Turn array arguments of T into a single array. IEnumerable&lt;T&gt;? LongestCommonSequence&lt;T&gt;(IEnumerable&lt;T&gt;? source, IEnumerable&lt;T&gt;? pattern) . Computes longest common sequence of two given sequences . T? GetElementAtOrDefault&lt;T&gt;(IEnumerable&lt;T&gt;? enumerable, int? index) . Gets the element at the specified index in a sequence . int? Length&lt;T&gt;(IEnumerable&lt;T&gt;? enumerable) . Gets the length of the sequence . int? Length&lt;T&gt;(T[]? array) . Gets the length of the array . T? Choose&lt;T&gt;(int? index, T[] values) . Gets the value of an array at the specified index . T If&lt;T&gt;(bool expressionResult, T a, T b) . Chose a or b value based on the expression result . bool? Match(string? regex, string? content) . Determine whether content matches the specified pattern . byte? Coalesce(byte?[] array) . Gets the first non-null value in a list . sbyte? Coalesce(sbyte?[] array) . Gets the first non-null value in a list . short? Coalesce(short?[] array) . Gets the first non-null value in a list . ushort? Coalesce(ushort?[] array) . Gets the first non-null value in a list . int? Coalesce(int?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(uint?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(long?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(ulong?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(Decimal?[] array) . Gets the first non-null value in a list . T? Coalesce&lt;T&gt;(T[] array) . Gets the first non-null value in a list . IEnumerable&lt;T&gt;? Distinct&lt;T&gt;(IEnumerable&lt;T&gt;? values) . Returns distinct elements from a collection. string? Md5(string? content) . Gets the md5 hash of the given string. string? Md5(byte?[]? content) . Gets the md5 hash of the given bytes array. string? Sha1(string? content) . Gets the sha256 hash of the given string. string? Sha1(byte?[]? content) . Gets the sha256 hash of the given bytes array. string? Sha256(string? content) . Gets the sha256 hash of the given string. string? Sha256(byte?[]? content) . Gets the sha256 hash of the given bytes array. string? Sha512(string? content) . Gets the sha256 hash of the given string. string? Sha512(byte?[]? content) . Gets the sha256 hash of the bytes array. string? ToJson&lt;T&gt;(T? obj) . Converts object to json. string[] ExtractFromJsonToArray(string? json, string? path) . Extracts values from json by path. string? ExtractFromJson(string? json, string? path) . Extracts values from json by path and joins them with comma. Decimal? Abs(Decimal? value) . Gets the absolute value . long? Abs(long? value) . Gets the absolute value . int? Abs(int? value) . Gets the absolute value . Decimal? Ceil(Decimal? value) . Gets the ceiling value . Decimal? Floor(Decimal? value) . Gets the floor value . Decimal? Sign(Decimal? value) . Determine whether value is greater, equal or less that zero . long? Sign(long? value) . Determine whether value is greater, equal or less that zero . Decimal? Round(Decimal? value, int precision) . Rounds the value within given precision . Decimal? PercentOf(Decimal? value, Decimal? max) . Gets the percentage of the value . int Rand() . Gets the random integer value . int? Rand(int? min, int? max) . Gets the random integer value . double? Pow(Decimal? x, Decimal? y) . Computes the pow between two values . double? Pow(double? x, double? y) . Computes the pow between two values . double? Sqrt(Decimal? x) . Computes the sqrt of a given value . double? Sqrt(double? x) . Computes the sqrt of a given value . double? Sqrt(long? x) . Computes the sqrt of a given value . double? PercentRank&lt;T&gt;(IEnumerable&lt;T&gt;? window, T? value) . Computes the percent rank of a given window . double? Log(Decimal? base, Decimal? value) . Calculates the logarithm of a value with a specified base. Decimal? Sin(Decimal? value) . Calculates sine of a value. double? Sin(double? value) . Calculates sine of a value. float? Sin(float? value) . Calculates sine of a value. Decimal? Cos(Decimal? value) . Calculates cosine of a value. double? Cos(double? value) . Calculates cosine of a value. float? Cos(float? value) . Calculates cosine of a value. Decimal Max(string name) . Gets the max value of a given group. Decimal Max(string name, int parent) . Gets the max value of a given group. Decimal Min(string name) . Gets the min value of a given group. Decimal Min(string name, int parent) . Gets the min value of a given group. Decimal StDev(string name, int parent) . Gets the StDev value of a given group. string NewId() . Gets the new identifier . string? Trim(string? value) . Removes leading and trailing whitespace from a string. string? TrimStart(string? value) . Removes leading whitespace from a string. string? TrimEnd(string? value) . Removes trailing whitespace from a string. string? Substring(string? value, int? index, int? length) . Gets the substring from the string. string? Substring(string value, int? length) . Gets the substring from the string . string? Concat(string[]? strings) . Concatenates the specified values . string? Concat(char?[]? characters) . Concatenates the specified characters . string? Concat(string? firstString, char?[]? chars) . Concatenates specified string fir characters . string? Concat(char? firstChar, string[]? strings) . Concatenate specific character with strings . string? Concat(object[]? objects) . Concatenates the specified strings . string? Concat&lt;T&gt;(T[]? objects) . Concatenates the specified strings . bool? Contains(string? content, string? what) . Determine whether the string contains the specified value . int? IndexOf(string? value, string? text) . Position of the first occurrence of the specified value . string? Soundex(string? value) . Computes soundex for the specified value . bool HasFuzzyMatchedWord(string text, string word, string separator) . Matches the specified text by splitting it with separator and applying fuzzy comparison . bool HasWordThatHasSmallerLevenshteinDistanceThan(string text, string word, int distance, string separator) . Matches the specified text by splitting it with separator and applying fuzzy comparison with a given distance . bool HasWordThatSoundLike(string text, string word, string separator) . Matches whether the specified word is present after being fuzzified within the specified text . bool HasTextThatSoundLikeSentence(string text, string sentence, string separator) . Matches whether the specified text is present in sentence after being fuzified . string? ToUpper(string value) . Makes the string uppercase . string? ToUpper(string value, string culture) . Makes the string uppercase within specified culture . string? ToUpperInvariant(string value) . Makes the string uppercase . string? ToLower(string value) . Makes the string lowercase . string? ToLower(string value, string culture) . Makes the string lowercase within specified culture . string? ToLowerInvariant(string value) . Makes the string lowercase . string? PadLeft(string? value, string? character, int? totalWidth) . Returns a new string that right-aligns the characters in this instance by padding them on the left with a specified Unicode character, for a specified total lengt . string? PadRight(string? value, string? character, int? totalWidth) . Returns a new string that left-aligns the characters in this instance by padding them on the right with a specified Unicode character, for a specified total length . string? Head(string? value, int? length) . Gets the first N characters of the string . string? Tail(string? value, int? length) . Gets the last N characters of the string . int? LevenshteinDistance(string? firstValue, string? secondValue) . Computes the Levenshtein distance between two strings . char? GetCharacterOf(string value, int index) . Gets the character at specified index . string? Reverse(string? value) . Reverses the string . string[] Split(string value, string[] separators) . Splits the string into an array of substrings based on the specified separators . char[] ToCharArray(string value) . Splits the string into an array of characters . string? LongestCommonSubstring(string source, string pattern) . Computes the longest common subsequence between two source and pattern . string Replicate(string value, int integer) . Clones the value n times . string? Translate(string? value, string? characters, string? translations) . Returns the string from the first argument after the characters specified in the second argument are translated into the characters specified in the third argument. string? Replace(string? text, string lookFor, string? changeTo) . Replaces the first occurrence of a specified string in this instance with another specified string . string? ToTitleCase(string? value) . Capitalizes the first letter of the string . string? GetNthWord(string? text, int? wordIndex, string? separator) . Gets the nth word of the string . string? GetFirstWord(string text, string separator) . Gets the first word of the string . string? GetSecondWord(string text, string separator) . Gets the second word of the string . string? GetThirdWord(string text, string separator) . Gets the third word of the string . string? GetLastWord(string? text, string? separator) . Gets last word of the string . bool? IsNullOrEmpty(string? value) . Determines whether the string is null or empty . bool? IsNullOrWhiteSpace(string? value) . Determines whether the string is null or whitespace . string? UrlEncode(string? value) . Encodes the value . string? UrlDecode(string? value) . Decodes the value . string? UriEncode(string? value) . Encodes the value . string? UriDecode(string? value) . Decodes the value . bool? StartsWith(string? value, string? prefix) . Determines whether the string starts with the specified prefix . bool? StartsWith(string? value, string? prefix, string comparison) . Determines whether the string starts with the specified prefix . bool? EndsWith(string? value, string? suffix) . Determines whether the string ends with the specified suffix . bool? EndsWith(string? value, string? suffix, string comparison) . Determines whether the string ends with the specified suffix . string? RegexReplace(string? value, string? pattern, string? replacement) . Replace the specified value part that matches the pattern with the replacement . string[]? SplitByLinuxNewLines(string? input) . Split string by Linux-style newlines (\\n) . string[]? SplitByWindowsNewLines(string? input) . Split string by Windows-style newlines (\\r\\n) . string[]? SplitByNewLines(string? input) . Smart split that handles both Windows (\\r\\n) and Linux (\\n) newlines . Decimal Sum(string name) . Gets the sum value of a given group. Decimal Sum(string name, int parent) . Gets the sum value of a given group. Decimal SumIncome(string name) . Gets the sum value of a given group. Decimal SumIncome(string name, int parent) . Gets the sum value of a given group. Decimal SumOutcome(string name) . Gets the outcome value of a given group. Decimal SumOutcome(string name, int parent) . Gets the outcome value of a given group. TimeSpan? SumTimeSpan(string name) . Gets the sum value of a given group. TimeSpan? SumTimeSpan(string name, int parent) . Gets the sum value of a given group. TimeSpan? MinTimeSpan(string name) . Gets the min value of a given group. TimeSpan? MinTimeSpan(string name, int parent) . Gets the min value of a given group. TimeSpan? MaxTimeSpan(string name) . Gets the max value of a given group. TimeSpan? MaxTimeSpan(string name, int parent) . Gets the min value of a given group. char? ToChar(string? value) . Converts given value to character . char? ToChar(int? value) . Converts given value to character . char? ToChar(short? value) . Converts given value to character . char? ToChar(byte? value) . Converts given value to character . char? ToChar(object? value) . Converts given value to character . DateTime? ToDateTime(string value) . Converts given value to DateTime . DateTime? ToDateTime(string value, string culture) . Converts given value to DateTime . Decimal? ToDecimal(string? value) . Converts given value to decimal . Decimal? ToDecimal(string value, string culture) . Converts given value to decimal withing given culture . Decimal? ToDecimal(byte? value) . Converts given value to Decimal . Decimal? ToDecimal(sbyte? value) . Converts given value to Decimal . Decimal? ToDecimal(short? value) . Converts given value to Decimal . Decimal? ToDecimal(ushort? value) . Converts given value to Decimal . Decimal? ToDecimal(long? value) . Converts given value to Decimal . Decimal? ToDecimal(ulong? value) . Converts given value to Decimal . Decimal? ToDecimal(float? value) . Converts given value to Decimal . Decimal? ToDecimal(double? value) . Converts given value to Decimal . Decimal? ToDecimal(object? value) . Converts given value to Decimal . double? ToDouble(object? value) . Converts given value to double . double? ToDouble(string? value) . Converts given value to double . double? ToDouble(byte? value) . Converts given value to double . double? ToDouble(sbyte? value) . Converts given value to double . double? ToDouble(short? value) . Converts given value to double . double? ToDouble(ushort? value) . Converts given value to double . double? ToDouble(int? value) . Converts given value to double . double? ToDouble(uint? value) . Converts given value to double . double? ToDouble(long? value) . Converts given value to double . double? ToDouble(ulong? value) . Converts given value to double . double? ToDouble(float? value) . Converts given value to double . double? ToDouble(double? value) . Converts given value to double . double? ToDouble(Decimal? value) . Converts given value to double . float? ToFloat(string? value) . Converts given value to float . float? ToFloat(byte? value) . Converts given value to float . float? ToFloat(sbyte? value) . Converts given value to float . float? ToFloat(short? value) . Converts given value to float . float? ToFloat(ushort? value) . Converts given value to float . float? ToFloat(int? value) . Converts given value to float . float? ToFloat(uint? value) . Converts given value to float . float? ToFloat(long? value) . Converts given value to float . float? ToFloat(ulong? value) . Converts given value to float . float? ToFloat(float? value) . Converts given value to float . float? ToFloat(Decimal? value) . Converts given value to float . int? ToInt32(string value) . Converts given value to int . int? ToInt32(byte? value) . Converts given value to int . int? ToInt32(sbyte? value) . Converts given value to int . int? ToInt32(short? value) . Converts given value to int . int? ToInt32(ushort? value) . Converts given value to int . int? ToInt32(int? value) . Converts given value to int . int? ToInt32(uint? value) . Converts given value to int . int? ToInt32(long? value) . Converts given value to int . int? ToInt32(ulong? value) . Converts given value to int . int? ToInt32(float? value) . Converts given value to int . int? ToInt32(double? value) . Converts given value to int . int? ToInt32(Decimal? value) . Converts given value to int . int? ToInt32(object? value) . Converts given value to int . long? ToInt64(string value) . Converts given value to Int64 . long? ToInt64(byte? value) . Converts given value to long . long? ToInt64(sbyte? value) . Converts given value to long . long? ToInt64(short? value) . Converts given value to long . long? ToInt64(ushort? value) . Converts given value to long . long? ToInt64(int? value) . Converts given value to long . long? ToInt64(uint? value) . Converts given value to long . long? ToInt64(long? value) . Converts given value to long . long? ToInt64(ulong? value) . Converts given value to long . long? ToInt64(float? value) . Converts given value to long . long? ToInt64(double? value) . Converts given value to long . long? ToInt64(Decimal? value) . Converts given value to long . long? ToInt64(object? value) . Converts given value to long . string? ToString(char? value) . Converts given value to string . string? ToString(DateTimeOffset? value) . Converts given value to string . string? ToString(DateTimeOffset? value, string format) . Converts given value to string . string? ToString(byte? value) . Converts given value to string . string? ToString(byte? value, string format) . Converts given value to string . string? ToString(sbyte? value) . Converts given value to string . string? ToString(sbyte? value, string format) . Converts given value to string . string? ToString(int? value) . Converts given value to string . string? ToString(int? value, string format) . Converts given value to string . string? ToString(uint? value) . Converts given value to string . string? ToString(uint? value, string format) . Converts given value to string . string? ToString(long? value) . Converts given value to string . string? ToString(long? value, string format) . Converts given value to string . string? ToString(ulong? value) . Converts given value to string . string? ToString(ulong? value, string format) . Converts given value to string . string? ToString(float? value) . Converts given value to string . string? ToString(float? value, string format) . Converts given value to string . string? ToString(double? value) . Converts given value to string . string? ToString(double? value, string format) . Converts given value to string . string? ToString(Decimal? value) . Converts given value to string . string? ToString(Decimal? value, string format) . Converts given value to string . string? ToString(bool? value) . Converts given value to string . string? ToString(object? value) . Converts given value to string . string? ToString&lt;T&gt;(T? value) . Converts given value to string . string ToString(string[] value) . Converts given value to string . string ToString&lt;T&gt;(T[] value) . Converts given value to string . TimeSpan? ToTimeSpan(string value) . Converts given value to TimeSpan . TimeSpan? ToTimeSpan(string value, string culture) . Converts given value to TimeSpan . IEnumerable&lt;T&gt; Window&lt;T&gt;(string name) . Gets the window . ",
    "url": "/data-sources/OpenAI/linux-x64.html#base-methods",
    
    "relUrl": "/data-sources/OpenAI/linux-x64.html#base-methods"
  },"144": {
    "doc": "Linux X64",
    "title": "Linux X64",
    "content": " ",
    "url": "/data-sources/OpenAI/linux-x64.html",
    
    "relUrl": "/data-sources/OpenAI/linux-x64.html"
  },"145": {
    "doc": "Linux X64",
    "title": "Musoq.DataSources.Airtable",
    "content": "Provides interface to work with Airtable API. ",
    "url": "/data-sources/Airtable/linux-x64.html#musoqdatasourcesairtable",
    
    "relUrl": "/data-sources/Airtable/linux-x64.html#musoqdatasourcesairtable"
  },"146": {
    "doc": "Linux X64",
    "title": "Tables",
    "content": "Table is a collection of rows and columns that the plugin exposes. Below are the tables that are exposed by this data source. airtable.bases() . Enumerate bases from Airtable API . Environment variables . In order to use the plugin, the user must set any required environment variables as specified in the environments element. Failure to do so may result in the plugin not functioning correctly. | Name | Is required | Description | . | MUSOQ_AIRTABLE_API_KEY | true | Airtable API key | . Columns . | Name | Type | Description | . | Id | string | Base id | . | Name | string | Base name | . | PermissionLevel | string | Base description | . airtable.base() . Enumerate base tables for Airtable API . Environment variables . In order to use the plugin, the user must set any required environment variables as specified in the environments element. Failure to do so may result in the plugin not functioning correctly. | Name | Is required | Description | . | MUSOQ_AIRTABLE_API_KEY | true | Airtable API key | . | MUSOQ_AIRTABLE_BASE_ID | true | Airtable base id | . Columns . | Name | Type | Description | . | Id | string | Base id | . | Name | string | Base name | . | PrimaryFieldId | string | Base description | . airtable.records(string tableName) . Enumerate records for specific table . Environment variables . In order to use the plugin, the user must set any required environment variables as specified in the environments element. Failure to do so may result in the plugin not functioning correctly. | Name | Is required | Description | . | MUSOQ_AIRTABLE_API_KEY | true | Airtable API key | . | MUSOQ_AIRTABLE_BASE_ID | true | Airtable base id | . Columns . This table has a dynamic structure, which means that its columns and other details cannot be determined until runtime. As a result, it is not possible to include a complete description of this table in the documentation. Instead, the actual columns and other details of this table will be determined at runtime. ",
    "url": "/data-sources/Airtable/linux-x64.html#tables",
    
    "relUrl": "/data-sources/Airtable/linux-x64.html#tables"
  },"147": {
    "doc": "Linux X64",
    "title": "Base Methods",
    "content": "Base methods are methods that can be called on the data source specific column. Those methods are automatically inherited and enriches the data source specific methods. Below are those base methods that are exposed by this data source. int RowNumber() . Gets the row number of the current row. string? GetTypeName(object? obj) . Gets the typename of passed object. string AggregateValues(string name) . Aggregates values into a single value. string AggregateValues(string name, int parent) . Aggregates values into a single value. Decimal Avg(string name) . Gets the aggregated average value from the given group name . Decimal Avg(string name, int parent) . Gets the aggregated average value from the given group name . byte? ShiftLeft(byte? value, int shift) . Shifts the value to the left by the specified number of bits. short? ShiftLeft(short? value, int shift) . Shifts the value to the left by the specified number of bits. int? ShiftLeft(int? value, int shift) . Shifts the value to the left by the specified number of bits. long? ShiftLeft(long? value, int shift) . Shifts the value to the left by the specified number of bits. sbyte? ShiftLeft(sbyte? value, int shift) . Shifts the value to the left by the specified number of bits. ushort? ShiftLeft(ushort? value, int shift) . Shifts the value to the left by the specified number of bits. uint? ShiftLeft(uint? value, int shift) . Shifts the value to the left by the specified number of bits. ulong? ShiftLeft(ulong? value, int shift) . Shifts the value to the left by the specified number of bits. byte? ShiftRight(byte? value, int shift) . Shifts the value to the right by the specified number of bits. short? ShiftRight(short? value, int shift) . Shifts the value to the right by the specified number of bits. int? ShiftRight(int? value, int shift) . Shifts the value to the right by the specified number of bits. long? ShiftRight(long? value, int shift) . Shifts the value to the right by the specified number of bits. sbyte? ShiftRight(sbyte? value, int shift) . Shifts the value to the right by the specified number of bits. ushort? ShiftRight(ushort? value, int shift) . Shifts the value to the right by the specified number of bits. uint? ShiftRight(uint? value, int shift) . Shifts the value to the right by the specified number of bits. ulong? ShiftRight(ulong? value, int shift) . Shifts the value to the right by the specified number of bits. byte? Not(byte? value) . Performs bitwise NOT operation on a given value. short? Not(short? value) . Performs bitwise NOT operation on a given value. int? Not(int? value) . Performs bitwise NOT operation on a given value. long? Not(long? value) . Performs bitwise NOT operation on a given value. sbyte? Not(sbyte? value) . Performs bitwise NOT operation on a given value. ushort? Not(ushort? value) . Performs bitwise NOT operation on a given value. uint? Not(uint? value) . Performs bitwise NOT operation on a given value. ulong? Not(ulong? value) . Performs bitwise NOT operation on a given value. byte? And(byte? left, byte? right) . Performs bitwise AND operation on two given values. int? And(byte? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(byte? left, short? right) . Performs bitwise AND operation on two given values. int? And(byte? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(byte? left, int? right) . Performs bitwise AND operation on two given values. uint? And(byte? left, uint? right) . Performs bitwise AND operation on two given values. long? And(byte? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(byte? left, ulong? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, byte? right) . Performs bitwise AND operation on two given values. sbyte? And(sbyte? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, short? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, int? right) . Performs bitwise AND operation on two given values. uint? And(sbyte? left, uint? right) . Performs bitwise AND operation on two given values. long? And(sbyte? left, long? right) . Performs bitwise AND operation on two given values. int? And(short? left, byte? right) . Performs bitwise AND operation on two given values. int? And(short? left, sbyte? right) . Performs bitwise AND operation on two given values. short? And(short? left, short? right) . Performs bitwise AND operation on two given values. int? And(short? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(short? left, int? right) . Performs bitwise AND operation on two given values. uint? And(short? left, uint? right) . Performs bitwise AND operation on two given values. long? And(short? left, long? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, byte? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, short? right) . Performs bitwise AND operation on two given values. ushort? And(ushort? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, int? right) . Performs bitwise AND operation on two given values. uint? And(ushort? left, uint? right) . Performs bitwise AND operation on two given values. long? And(ushort? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(ushort? left, ulong? right) . Performs bitwise AND operation on two given values. int? And(int? left, byte? right) . Performs bitwise AND operation on two given values. int? And(int? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(int? left, short? right) . Performs bitwise AND operation on two given values. int? And(int? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(int? left, int? right) . Performs bitwise AND operation on two given values. uint? And(int? left, uint? right) . Performs bitwise AND operation on two given values. long? And(int? left, long? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, uint? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, byte? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, sbyte? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, short? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, ushort? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, int? right) . Performs bitwise AND operation on two given values. ulong? And(uint? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(uint? left, ulong? right) . Performs bitwise AND operation on two given values. long? And(long? left, long? right) . Performs bitwise AND operation on two given values. long? And(long? left, byte? right) . Performs bitwise AND operation on two given values. long? And(long? left, sbyte? right) . Performs bitwise AND operation on two given values. long? And(long? left, short? right) . Performs bitwise AND operation on two given values. long? And(long? left, ushort? right) . Performs bitwise AND operation on two given values. long? And(long? left, int? right) . Performs bitwise AND operation on two given values. long? And(long? left, uint? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, byte? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, ushort? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, uint? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, ulong? right) . Performs bitwise AND operation on two given values. byte? Or(byte? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, short? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(byte? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(byte? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(byte? left, ulong? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, byte? right) . Performs bitwise OR operation on two given values. sbyte? Or(sbyte? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, short? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(sbyte? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(sbyte? left, long? right) . Performs bitwise OR operation on two given values. int? Or(short? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(short? left, sbyte? right) . Performs bitwise OR operation on two given values. short? Or(short? left, short? right) . Performs bitwise OR operation on two given values. int? Or(short? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(short? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(short? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(short? left, long? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, short? right) . Performs bitwise OR operation on two given values. ushort? Or(ushort? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(ushort? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(ushort? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(ushort? left, ulong? right) . Performs bitwise OR operation on two given values. int? Or(int? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(int? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(int? left, short? right) . Performs bitwise OR operation on two given values. int? Or(int? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(int? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(int? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(int? left, long? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, uint? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, byte? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, sbyte? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, short? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, ushort? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, int? right) . Performs bitwise OR operation on two given values. ulong? Or(uint? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(uint? left, ulong? right) . Performs bitwise OR operation on two given values. long? Or(long? left, long? right) . Performs bitwise OR operation on two given values. long? Or(long? left, byte? right) . Performs bitwise OR operation on two given values. long? Or(long? left, sbyte? right) . Performs bitwise OR operation on two given values. long? Or(long? left, short? right) . Performs bitwise OR operation on two given values. long? Or(long? left, ushort? right) . Performs bitwise OR operation on two given values. long? Or(long? left, int? right) . Performs bitwise OR operation on two given values. long? Or(long? left, uint? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, byte? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, ushort? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, uint? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, ulong? right) . Performs bitwise OR operation on two given values. byte? Xor(byte? left, byte? right) . Performs bitwise OR operation on two given values. int? Xor(byte? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(byte? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(byte? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(byte? left, ulong? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, byte? right) . Performs bitwise Xor operation on two given values. sbyte? Xor(sbyte? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(sbyte? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(sbyte? left, long? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, sbyte? right) . Performs bitwise Xor operation on two given values. short? Xor(short? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, ushort? right) . Performs bitwise XOR operation on two given values. int? Xor(short? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(short? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(short? left, long? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, short? right) . Performs bitwise Xor operation on two given values. ushort? Xor(ushort? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(ushort? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(ushort? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ushort? left, ulong? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(int? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(int? left, long? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, uint? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, byte? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, sbyte? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, short? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, ushort? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, int? right) . Performs bitwise Xor operation on two given values. ulong? Xor(uint? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(uint? left, ulong? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, long? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, byte? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, sbyte? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, short? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, ushort? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, int? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, uint? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, ulong? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, byte? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, ushort? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, uint? right) . Performs bitwise Xor operation on two given values. byte[] GetBytes(string? content) . Gets the bytes from the given string. byte[] GetBytes(string? content, int length, int offset) . Gets the bytes from the given string within given offset and length. byte?[]? GetBytes(char? character) . Gets the bytes from the given character. byte?[]? GetBytes(bool? bit) . Gets the bytes from the given boolean. byte?[]? GetBytes(long? value) . Gets the bytes from the given long. byte?[]? GetBytes(int? value) . Gets the bytes from the given int. byte?[]? GetBytes(short? value) . Gets the bytes from the given short. byte?[]? GetBytes(ulong? value) . Gets the bytes from the given ulong. byte?[]? GetBytes(ushort? value) . Gets the bytes from the given ushort. byte?[]? GetBytes(uint? value) . Gets the bytes from the given uint. byte?[]? GetBytes(Decimal? value) . Gets the bytes from the given decimal. byte?[]? GetBytes(double? value) . Gets the bytes from the given double. byte?[]? GetBytes(float? value) . Gets the bytes from the given float. string? ToBin(byte?[]? bytes, string delimiter) . Converts given bytes to binary with defined delimiter . string ToBin&lt;T&gt;(T value) . Converts given value to binary . string ToOcta&lt;T&gt;(T value) . Converts given value to octal . string ToDec&lt;T&gt;(T value) . Converts given value to decimal . string ToBase64(byte[] value) . Converts given value to string . string ToBase64(byte[] value, int offset, int length) . Converts given array of bytes to string . byte[] FromBase64(string value) . Converts given string to bytes array . bool FromBytesToBool(byte[] value) . Converts bytes to boolean value. short FromBytesToInt16(byte[] value) . Converts bytes to a 16-bit signed integer. ushort FromBytesToUInt16(byte[] value) . Converts bytes to a 16-bit unsigned integer. int FromBytesToInt32(byte[] value) . Converts bytes to a 32-bit signed integer. uint FromBytesToUInt32(byte[] value) . Converts bytes to a 32-bit unsigned integer. long FromBytesToInt64(byte[] value) . Converts bytes to a 64-bit signed integer. ulong FromBytesToUInt64(byte[] value) . Converts bytes to a 64-bit unsigned integer. float FromBytesToFloat(byte[] value) . Converts bytes to a float value. double FromBytesToDouble(byte[] value) . Converts bytes to a float value. string FromBytesToString(byte[] value) . Converts bytes to a string. byte[] ToBytes(bool value) . Converts boolean value to bytes. byte[] ToBytes(short value) . Converts short value to bytes. byte[] ToBytes(ushort value) . Converts ushort value to bytes. byte[] ToBytes(int value) . Converts int value to bytes. byte[] ToBytes(uint value) . Converts uint value to bytes. byte[] ToBytes(long value) . Converts long value to bytes. byte[] ToBytes(ulong value) . Converts long value to bytes. string? ToHex(byte?[]? bytes, string delimiter) . Converts given bytes to hex with defined delimiter . string? ToHex&lt;T&gt;(T value) . Converts given value to binary . int Count(string name) . Gets the count value of a given group. int Count(string name, int parent) . Gets the count value of a given group. int ExtractFromDate(string? date, string partOfDate) . Extracts part of the date from the date . int ExtractFromDate(string date, string culture, string partOfDate) . Extracts part of the date from the date based on given culture . DateTimeOffset? GetDate() . Gets the current datetime . DateTimeOffset? UtcGetDate() . Gets the current datetime in UTC . int? Month(DateTimeOffset? value) . Gets the month from DateTimeOffset . int? Year(DateTimeOffset? value) . Gets the year from DateTimeOffset . int? Day(DateTimeOffset? value) . Gets the day from DateTimeOffset . int? Hour(DateTimeOffset? value) . Gets the hour from DateTimeOffset . int? Minute(DateTimeOffset? value) . Gets the minute from DateTimeOffset . int? Second(DateTimeOffset? value) . Gets the second from DateTimeOffset . int? Milliseconds(DateTimeOffset? value) . Gets the millisecond from DateTimeOffset . int? DayOfWeek(DateTimeOffset? value) . Gets the day of week from DateTimeOffset . TimeSpan? ExtractTimeSpan(DateTimeOffset? dateTimeOffset) . Extracts time from DateTimeOffset . DateTime? ToDateTimeOffset(string value) . Converts given value to DateTimeOffset . DateTimeOffset? ToDateTimeOffset(string value, string culture) . Converts given value to DateTimeOffset . IEnumerable&lt;T&gt;? Skip&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? skipCount) . Skips elements from the beginning of the sequence. IEnumerable&lt;T&gt;? Take&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? takeCount) . Takes elements from the beginning of the sequence. IEnumerable&lt;T&gt;? SkipAndTake&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? skipCount, int? takeCount) . Skip and takes elements from the beginning of the sequence. T[]? EnumerableToArray&lt;T&gt;(IEnumerable&lt;T&gt;? values) . Turn array arguments of T into a single array. T[]? MergeArrays&lt;T&gt;(T[][]? values) . Turn array arguments of T into a single array. IEnumerable&lt;T&gt;? LongestCommonSequence&lt;T&gt;(IEnumerable&lt;T&gt;? source, IEnumerable&lt;T&gt;? pattern) . Computes longest common sequence of two given sequences . T? GetElementAtOrDefault&lt;T&gt;(IEnumerable&lt;T&gt;? enumerable, int? index) . Gets the element at the specified index in a sequence . int? Length&lt;T&gt;(IEnumerable&lt;T&gt;? enumerable) . Gets the length of the sequence . int? Length&lt;T&gt;(T[]? array) . Gets the length of the array . T? Choose&lt;T&gt;(int? index, T[] values) . Gets the value of an array at the specified index . T If&lt;T&gt;(bool expressionResult, T a, T b) . Chose a or b value based on the expression result . bool? Match(string? regex, string? content) . Determine whether content matches the specified pattern . byte? Coalesce(byte?[] array) . Gets the first non-null value in a list . sbyte? Coalesce(sbyte?[] array) . Gets the first non-null value in a list . short? Coalesce(short?[] array) . Gets the first non-null value in a list . ushort? Coalesce(ushort?[] array) . Gets the first non-null value in a list . int? Coalesce(int?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(uint?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(long?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(ulong?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(Decimal?[] array) . Gets the first non-null value in a list . T? Coalesce&lt;T&gt;(T[] array) . Gets the first non-null value in a list . IEnumerable&lt;T&gt;? Distinct&lt;T&gt;(IEnumerable&lt;T&gt;? values) . Returns distinct elements from a collection. string? Md5(string? content) . Gets the md5 hash of the given string. string? Md5(byte?[]? content) . Gets the md5 hash of the given bytes array. string? Sha1(string? content) . Gets the sha256 hash of the given string. string? Sha1(byte?[]? content) . Gets the sha256 hash of the given bytes array. string? Sha256(string? content) . Gets the sha256 hash of the given string. string? Sha256(byte?[]? content) . Gets the sha256 hash of the given bytes array. string? Sha512(string? content) . Gets the sha256 hash of the given string. string? Sha512(byte?[]? content) . Gets the sha256 hash of the bytes array. string? ToJson&lt;T&gt;(T? obj) . Converts object to json. string[] ExtractFromJsonToArray(string? json, string? path) . Extracts values from json by path. string? ExtractFromJson(string? json, string? path) . Extracts values from json by path and joins them with comma. Decimal? Abs(Decimal? value) . Gets the absolute value . long? Abs(long? value) . Gets the absolute value . int? Abs(int? value) . Gets the absolute value . Decimal? Ceil(Decimal? value) . Gets the ceiling value . Decimal? Floor(Decimal? value) . Gets the floor value . Decimal? Sign(Decimal? value) . Determine whether value is greater, equal or less that zero . long? Sign(long? value) . Determine whether value is greater, equal or less that zero . Decimal? Round(Decimal? value, int precision) . Rounds the value within given precision . Decimal? PercentOf(Decimal? value, Decimal? max) . Gets the percentage of the value . int Rand() . Gets the random integer value . int? Rand(int? min, int? max) . Gets the random integer value . double? Pow(Decimal? x, Decimal? y) . Computes the pow between two values . double? Pow(double? x, double? y) . Computes the pow between two values . double? Sqrt(Decimal? x) . Computes the sqrt of a given value . double? Sqrt(double? x) . Computes the sqrt of a given value . double? Sqrt(long? x) . Computes the sqrt of a given value . double? PercentRank&lt;T&gt;(IEnumerable&lt;T&gt;? window, T? value) . Computes the percent rank of a given window . double? Log(Decimal? base, Decimal? value) . Calculates the logarithm of a value with a specified base. Decimal? Sin(Decimal? value) . Calculates sine of a value. double? Sin(double? value) . Calculates sine of a value. float? Sin(float? value) . Calculates sine of a value. Decimal? Cos(Decimal? value) . Calculates cosine of a value. double? Cos(double? value) . Calculates cosine of a value. float? Cos(float? value) . Calculates cosine of a value. Decimal Max(string name) . Gets the max value of a given group. Decimal Max(string name, int parent) . Gets the max value of a given group. Decimal Min(string name) . Gets the min value of a given group. Decimal Min(string name, int parent) . Gets the min value of a given group. Decimal StDev(string name, int parent) . Gets the StDev value of a given group. string NewId() . Gets the new identifier . string? Trim(string? value) . Removes leading and trailing whitespace from a string. string? TrimStart(string? value) . Removes leading whitespace from a string. string? TrimEnd(string? value) . Removes trailing whitespace from a string. string? Substring(string? value, int? index, int? length) . Gets the substring from the string. string? Substring(string value, int? length) . Gets the substring from the string . string? Concat(string[]? strings) . Concatenates the specified values . string? Concat(char?[]? characters) . Concatenates the specified characters . string? Concat(string? firstString, char?[]? chars) . Concatenates specified string fir characters . string? Concat(char? firstChar, string[]? strings) . Concatenate specific character with strings . string? Concat(object[]? objects) . Concatenates the specified strings . string? Concat&lt;T&gt;(T[]? objects) . Concatenates the specified strings . bool? Contains(string? content, string? what) . Determine whether the string contains the specified value . int? IndexOf(string? value, string? text) . Position of the first occurrence of the specified value . string? Soundex(string? value) . Computes soundex for the specified value . bool HasFuzzyMatchedWord(string text, string word, string separator) . Matches the specified text by splitting it with separator and applying fuzzy comparison . bool HasWordThatHasSmallerLevenshteinDistanceThan(string text, string word, int distance, string separator) . Matches the specified text by splitting it with separator and applying fuzzy comparison with a given distance . bool HasWordThatSoundLike(string text, string word, string separator) . Matches whether the specified word is present after being fuzzified within the specified text . bool HasTextThatSoundLikeSentence(string text, string sentence, string separator) . Matches whether the specified text is present in sentence after being fuzified . string? ToUpper(string value) . Makes the string uppercase . string? ToUpper(string value, string culture) . Makes the string uppercase within specified culture . string? ToUpperInvariant(string value) . Makes the string uppercase . string? ToLower(string value) . Makes the string lowercase . string? ToLower(string value, string culture) . Makes the string lowercase within specified culture . string? ToLowerInvariant(string value) . Makes the string lowercase . string? PadLeft(string? value, string? character, int? totalWidth) . Returns a new string that right-aligns the characters in this instance by padding them on the left with a specified Unicode character, for a specified total lengt . string? PadRight(string? value, string? character, int? totalWidth) . Returns a new string that left-aligns the characters in this instance by padding them on the right with a specified Unicode character, for a specified total length . string? Head(string? value, int? length) . Gets the first N characters of the string . string? Tail(string? value, int? length) . Gets the last N characters of the string . int? LevenshteinDistance(string? firstValue, string? secondValue) . Computes the Levenshtein distance between two strings . char? GetCharacterOf(string value, int index) . Gets the character at specified index . string? Reverse(string? value) . Reverses the string . string[] Split(string value, string[] separators) . Splits the string into an array of substrings based on the specified separators . char[] ToCharArray(string value) . Splits the string into an array of characters . string? LongestCommonSubstring(string source, string pattern) . Computes the longest common subsequence between two source and pattern . string Replicate(string value, int integer) . Clones the value n times . string? Translate(string? value, string? characters, string? translations) . Returns the string from the first argument after the characters specified in the second argument are translated into the characters specified in the third argument. string? Replace(string? text, string lookFor, string? changeTo) . Replaces the first occurrence of a specified string in this instance with another specified string . string? ToTitleCase(string? value) . Capitalizes the first letter of the string . string? GetNthWord(string? text, int? wordIndex, string? separator) . Gets the nth word of the string . string? GetFirstWord(string text, string separator) . Gets the first word of the string . string? GetSecondWord(string text, string separator) . Gets the second word of the string . string? GetThirdWord(string text, string separator) . Gets the third word of the string . string? GetLastWord(string? text, string? separator) . Gets last word of the string . bool? IsNullOrEmpty(string? value) . Determines whether the string is null or empty . bool? IsNullOrWhiteSpace(string? value) . Determines whether the string is null or whitespace . string? UrlEncode(string? value) . Encodes the value . string? UrlDecode(string? value) . Decodes the value . string? UriEncode(string? value) . Encodes the value . string? UriDecode(string? value) . Decodes the value . bool? StartsWith(string? value, string? prefix) . Determines whether the string starts with the specified prefix . bool? StartsWith(string? value, string? prefix, string comparison) . Determines whether the string starts with the specified prefix . bool? EndsWith(string? value, string? suffix) . Determines whether the string ends with the specified suffix . bool? EndsWith(string? value, string? suffix, string comparison) . Determines whether the string ends with the specified suffix . string? RegexReplace(string? value, string? pattern, string? replacement) . Replace the specified value part that matches the pattern with the replacement . string[]? SplitByLinuxNewLines(string? input) . Split string by Linux-style newlines (\\n) . string[]? SplitByWindowsNewLines(string? input) . Split string by Windows-style newlines (\\r\\n) . string[]? SplitByNewLines(string? input) . Smart split that handles both Windows (\\r\\n) and Linux (\\n) newlines . Decimal Sum(string name) . Gets the sum value of a given group. Decimal Sum(string name, int parent) . Gets the sum value of a given group. Decimal SumIncome(string name) . Gets the sum value of a given group. Decimal SumIncome(string name, int parent) . Gets the sum value of a given group. Decimal SumOutcome(string name) . Gets the outcome value of a given group. Decimal SumOutcome(string name, int parent) . Gets the outcome value of a given group. TimeSpan? SumTimeSpan(string name) . Gets the sum value of a given group. TimeSpan? SumTimeSpan(string name, int parent) . Gets the sum value of a given group. TimeSpan? MinTimeSpan(string name) . Gets the min value of a given group. TimeSpan? MinTimeSpan(string name, int parent) . Gets the min value of a given group. TimeSpan? MaxTimeSpan(string name) . Gets the max value of a given group. TimeSpan? MaxTimeSpan(string name, int parent) . Gets the min value of a given group. char? ToChar(string? value) . Converts given value to character . char? ToChar(int? value) . Converts given value to character . char? ToChar(short? value) . Converts given value to character . char? ToChar(byte? value) . Converts given value to character . char? ToChar(object? value) . Converts given value to character . DateTime? ToDateTime(string value) . Converts given value to DateTime . DateTime? ToDateTime(string value, string culture) . Converts given value to DateTime . Decimal? ToDecimal(string? value) . Converts given value to decimal . Decimal? ToDecimal(string value, string culture) . Converts given value to decimal withing given culture . Decimal? ToDecimal(byte? value) . Converts given value to Decimal . Decimal? ToDecimal(sbyte? value) . Converts given value to Decimal . Decimal? ToDecimal(short? value) . Converts given value to Decimal . Decimal? ToDecimal(ushort? value) . Converts given value to Decimal . Decimal? ToDecimal(long? value) . Converts given value to Decimal . Decimal? ToDecimal(ulong? value) . Converts given value to Decimal . Decimal? ToDecimal(float? value) . Converts given value to Decimal . Decimal? ToDecimal(double? value) . Converts given value to Decimal . Decimal? ToDecimal(object? value) . Converts given value to Decimal . double? ToDouble(object? value) . Converts given value to double . double? ToDouble(string? value) . Converts given value to double . double? ToDouble(byte? value) . Converts given value to double . double? ToDouble(sbyte? value) . Converts given value to double . double? ToDouble(short? value) . Converts given value to double . double? ToDouble(ushort? value) . Converts given value to double . double? ToDouble(int? value) . Converts given value to double . double? ToDouble(uint? value) . Converts given value to double . double? ToDouble(long? value) . Converts given value to double . double? ToDouble(ulong? value) . Converts given value to double . double? ToDouble(float? value) . Converts given value to double . double? ToDouble(double? value) . Converts given value to double . double? ToDouble(Decimal? value) . Converts given value to double . float? ToFloat(string? value) . Converts given value to float . float? ToFloat(byte? value) . Converts given value to float . float? ToFloat(sbyte? value) . Converts given value to float . float? ToFloat(short? value) . Converts given value to float . float? ToFloat(ushort? value) . Converts given value to float . float? ToFloat(int? value) . Converts given value to float . float? ToFloat(uint? value) . Converts given value to float . float? ToFloat(long? value) . Converts given value to float . float? ToFloat(ulong? value) . Converts given value to float . float? ToFloat(float? value) . Converts given value to float . float? ToFloat(Decimal? value) . Converts given value to float . int? ToInt32(string value) . Converts given value to int . int? ToInt32(byte? value) . Converts given value to int . int? ToInt32(sbyte? value) . Converts given value to int . int? ToInt32(short? value) . Converts given value to int . int? ToInt32(ushort? value) . Converts given value to int . int? ToInt32(int? value) . Converts given value to int . int? ToInt32(uint? value) . Converts given value to int . int? ToInt32(long? value) . Converts given value to int . int? ToInt32(ulong? value) . Converts given value to int . int? ToInt32(float? value) . Converts given value to int . int? ToInt32(double? value) . Converts given value to int . int? ToInt32(Decimal? value) . Converts given value to int . int? ToInt32(object? value) . Converts given value to int . long? ToInt64(string value) . Converts given value to Int64 . long? ToInt64(byte? value) . Converts given value to long . long? ToInt64(sbyte? value) . Converts given value to long . long? ToInt64(short? value) . Converts given value to long . long? ToInt64(ushort? value) . Converts given value to long . long? ToInt64(int? value) . Converts given value to long . long? ToInt64(uint? value) . Converts given value to long . long? ToInt64(long? value) . Converts given value to long . long? ToInt64(ulong? value) . Converts given value to long . long? ToInt64(float? value) . Converts given value to long . long? ToInt64(double? value) . Converts given value to long . long? ToInt64(Decimal? value) . Converts given value to long . long? ToInt64(object? value) . Converts given value to long . string? ToString(char? value) . Converts given value to string . string? ToString(DateTimeOffset? value) . Converts given value to string . string? ToString(DateTimeOffset? value, string format) . Converts given value to string . string? ToString(byte? value) . Converts given value to string . string? ToString(byte? value, string format) . Converts given value to string . string? ToString(sbyte? value) . Converts given value to string . string? ToString(sbyte? value, string format) . Converts given value to string . string? ToString(int? value) . Converts given value to string . string? ToString(int? value, string format) . Converts given value to string . string? ToString(uint? value) . Converts given value to string . string? ToString(uint? value, string format) . Converts given value to string . string? ToString(long? value) . Converts given value to string . string? ToString(long? value, string format) . Converts given value to string . string? ToString(ulong? value) . Converts given value to string . string? ToString(ulong? value, string format) . Converts given value to string . string? ToString(float? value) . Converts given value to string . string? ToString(float? value, string format) . Converts given value to string . string? ToString(double? value) . Converts given value to string . string? ToString(double? value, string format) . Converts given value to string . string? ToString(Decimal? value) . Converts given value to string . string? ToString(Decimal? value, string format) . Converts given value to string . string? ToString(bool? value) . Converts given value to string . string? ToString(object? value) . Converts given value to string . string? ToString&lt;T&gt;(T? value) . Converts given value to string . string ToString(string[] value) . Converts given value to string . string ToString&lt;T&gt;(T[] value) . Converts given value to string . TimeSpan? ToTimeSpan(string value) . Converts given value to TimeSpan . TimeSpan? ToTimeSpan(string value, string culture) . Converts given value to TimeSpan . IEnumerable&lt;T&gt; Window&lt;T&gt;(string name) . Gets the window . ",
    "url": "/data-sources/Airtable/linux-x64.html#base-methods",
    
    "relUrl": "/data-sources/Airtable/linux-x64.html#base-methods"
  },"148": {
    "doc": "Linux X64",
    "title": "Linux X64",
    "content": " ",
    "url": "/data-sources/Airtable/linux-x64.html",
    
    "relUrl": "/data-sources/Airtable/linux-x64.html"
  },"149": {
    "doc": "Linux X64",
    "title": "Musoq.DataSources.Ollama",
    "content": "Provides interface to work with Ollama API. ",
    "url": "/data-sources/Ollama/linux-x64.html#musoqdatasourcesollama",
    
    "relUrl": "/data-sources/Ollama/linux-x64.html#musoqdatasourcesollama"
  },"150": {
    "doc": "Linux X64",
    "title": "Tables",
    "content": "Table is a collection of rows and columns that the plugin exposes. Below are the tables that are exposed by this data source. ollama.llm(string model) . Gives the access to Ollama api . Environment variables . In order to use the plugin, the user must set any required environment variables as specified in the environments element. Failure to do so may result in the plugin not functioning correctly. | Name | Is required | Description | . | OLLAMA_BASE_URL | false | Ollama base url, default http://localhost:11434 | . Columns . This table has a dynamic structure, which means that its columns and other details cannot be determined until runtime. As a result, it is not possible to include a complete description of this table in the documentation. Instead, the actual columns and other details of this table will be determined at runtime. ollama.llm(string model, float temperature) . Gives the access to Ollama api . Environment variables . In order to use the plugin, the user must set any required environment variables as specified in the environments element. Failure to do so may result in the plugin not functioning correctly. | Name | Is required | Description | . | OLLAMA_BASE_URL | false | Ollama base url, default http://localhost:11434 | . Columns . This table has a dynamic structure, which means that its columns and other details cannot be determined until runtime. As a result, it is not possible to include a complete description of this table in the documentation. Instead, the actual columns and other details of this table will be determined at runtime. ",
    "url": "/data-sources/Ollama/linux-x64.html#tables",
    
    "relUrl": "/data-sources/Ollama/linux-x64.html#tables"
  },"151": {
    "doc": "Linux X64",
    "title": "Methods",
    "content": "Methods are functions that can be called on the data source specific column. Below are the methods that are exposed by this data source. bool IsContentAbout(string content, string question) . Determines whether the provided content is related to the given question. Returns true if the content is related, otherwise returns false. string Sentiment(string content, bool throwOnUnknown) . Performs sentiment analysis on the provided content and returns the sentiment as one of the following strings: “POSITIVE”, “NEGATIVE”, “NEUTRAL”, or “UNKNOWN”. string SummarizeContent(string content) . Summarizes the provided content using the OpenAI API and returns the summarized text. string TranslateContent(string content, string from, string to) . Translates the provided content from the source language to the destination language using the OpenAI API. string[] Entities(string content, bool throwOnException) . Extracts entities from the provided content using the OpenAI API and returns an array of entity strings. string DescribeImage(string imageBase64) . Describes the provided image using the Ollama API and returns the description. string AskImage(string question, string imageBase64) . Ask the provided image using the Ollama API and returns the response. bool IsQuestionApplicableToImage(string question, string imageBase64) . Ask the provided image using the Ollama API and returns the response. string LlmPerform&lt;TColumnType&gt;(string whatToDo, TColumnType column) . Ask the provided image using the Ollama API and returns the response. int CountTokens(string content) . Counts the number of tokens in the provided content using the specified model. int CountTokens(string content) . Counts the number of tokens in the provided content using the specified model. ",
    "url": "/data-sources/Ollama/linux-x64.html#methods",
    
    "relUrl": "/data-sources/Ollama/linux-x64.html#methods"
  },"152": {
    "doc": "Linux X64",
    "title": "Base Methods",
    "content": "Base methods are methods that can be called on the data source specific column. Those methods are automatically inherited and enriches the data source specific methods. Below are those base methods that are exposed by this data source. int RowNumber() . Gets the row number of the current row. string? GetTypeName(object? obj) . Gets the typename of passed object. string AggregateValues(string name) . Aggregates values into a single value. string AggregateValues(string name, int parent) . Aggregates values into a single value. Decimal Avg(string name) . Gets the aggregated average value from the given group name . Decimal Avg(string name, int parent) . Gets the aggregated average value from the given group name . byte? ShiftLeft(byte? value, int shift) . Shifts the value to the left by the specified number of bits. short? ShiftLeft(short? value, int shift) . Shifts the value to the left by the specified number of bits. int? ShiftLeft(int? value, int shift) . Shifts the value to the left by the specified number of bits. long? ShiftLeft(long? value, int shift) . Shifts the value to the left by the specified number of bits. sbyte? ShiftLeft(sbyte? value, int shift) . Shifts the value to the left by the specified number of bits. ushort? ShiftLeft(ushort? value, int shift) . Shifts the value to the left by the specified number of bits. uint? ShiftLeft(uint? value, int shift) . Shifts the value to the left by the specified number of bits. ulong? ShiftLeft(ulong? value, int shift) . Shifts the value to the left by the specified number of bits. byte? ShiftRight(byte? value, int shift) . Shifts the value to the right by the specified number of bits. short? ShiftRight(short? value, int shift) . Shifts the value to the right by the specified number of bits. int? ShiftRight(int? value, int shift) . Shifts the value to the right by the specified number of bits. long? ShiftRight(long? value, int shift) . Shifts the value to the right by the specified number of bits. sbyte? ShiftRight(sbyte? value, int shift) . Shifts the value to the right by the specified number of bits. ushort? ShiftRight(ushort? value, int shift) . Shifts the value to the right by the specified number of bits. uint? ShiftRight(uint? value, int shift) . Shifts the value to the right by the specified number of bits. ulong? ShiftRight(ulong? value, int shift) . Shifts the value to the right by the specified number of bits. byte? Not(byte? value) . Performs bitwise NOT operation on a given value. short? Not(short? value) . Performs bitwise NOT operation on a given value. int? Not(int? value) . Performs bitwise NOT operation on a given value. long? Not(long? value) . Performs bitwise NOT operation on a given value. sbyte? Not(sbyte? value) . Performs bitwise NOT operation on a given value. ushort? Not(ushort? value) . Performs bitwise NOT operation on a given value. uint? Not(uint? value) . Performs bitwise NOT operation on a given value. ulong? Not(ulong? value) . Performs bitwise NOT operation on a given value. byte? And(byte? left, byte? right) . Performs bitwise AND operation on two given values. int? And(byte? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(byte? left, short? right) . Performs bitwise AND operation on two given values. int? And(byte? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(byte? left, int? right) . Performs bitwise AND operation on two given values. uint? And(byte? left, uint? right) . Performs bitwise AND operation on two given values. long? And(byte? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(byte? left, ulong? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, byte? right) . Performs bitwise AND operation on two given values. sbyte? And(sbyte? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, short? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, int? right) . Performs bitwise AND operation on two given values. uint? And(sbyte? left, uint? right) . Performs bitwise AND operation on two given values. long? And(sbyte? left, long? right) . Performs bitwise AND operation on two given values. int? And(short? left, byte? right) . Performs bitwise AND operation on two given values. int? And(short? left, sbyte? right) . Performs bitwise AND operation on two given values. short? And(short? left, short? right) . Performs bitwise AND operation on two given values. int? And(short? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(short? left, int? right) . Performs bitwise AND operation on two given values. uint? And(short? left, uint? right) . Performs bitwise AND operation on two given values. long? And(short? left, long? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, byte? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, short? right) . Performs bitwise AND operation on two given values. ushort? And(ushort? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, int? right) . Performs bitwise AND operation on two given values. uint? And(ushort? left, uint? right) . Performs bitwise AND operation on two given values. long? And(ushort? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(ushort? left, ulong? right) . Performs bitwise AND operation on two given values. int? And(int? left, byte? right) . Performs bitwise AND operation on two given values. int? And(int? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(int? left, short? right) . Performs bitwise AND operation on two given values. int? And(int? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(int? left, int? right) . Performs bitwise AND operation on two given values. uint? And(int? left, uint? right) . Performs bitwise AND operation on two given values. long? And(int? left, long? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, uint? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, byte? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, sbyte? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, short? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, ushort? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, int? right) . Performs bitwise AND operation on two given values. ulong? And(uint? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(uint? left, ulong? right) . Performs bitwise AND operation on two given values. long? And(long? left, long? right) . Performs bitwise AND operation on two given values. long? And(long? left, byte? right) . Performs bitwise AND operation on two given values. long? And(long? left, sbyte? right) . Performs bitwise AND operation on two given values. long? And(long? left, short? right) . Performs bitwise AND operation on two given values. long? And(long? left, ushort? right) . Performs bitwise AND operation on two given values. long? And(long? left, int? right) . Performs bitwise AND operation on two given values. long? And(long? left, uint? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, byte? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, ushort? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, uint? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, ulong? right) . Performs bitwise AND operation on two given values. byte? Or(byte? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, short? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(byte? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(byte? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(byte? left, ulong? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, byte? right) . Performs bitwise OR operation on two given values. sbyte? Or(sbyte? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, short? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(sbyte? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(sbyte? left, long? right) . Performs bitwise OR operation on two given values. int? Or(short? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(short? left, sbyte? right) . Performs bitwise OR operation on two given values. short? Or(short? left, short? right) . Performs bitwise OR operation on two given values. int? Or(short? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(short? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(short? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(short? left, long? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, short? right) . Performs bitwise OR operation on two given values. ushort? Or(ushort? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(ushort? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(ushort? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(ushort? left, ulong? right) . Performs bitwise OR operation on two given values. int? Or(int? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(int? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(int? left, short? right) . Performs bitwise OR operation on two given values. int? Or(int? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(int? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(int? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(int? left, long? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, uint? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, byte? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, sbyte? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, short? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, ushort? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, int? right) . Performs bitwise OR operation on two given values. ulong? Or(uint? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(uint? left, ulong? right) . Performs bitwise OR operation on two given values. long? Or(long? left, long? right) . Performs bitwise OR operation on two given values. long? Or(long? left, byte? right) . Performs bitwise OR operation on two given values. long? Or(long? left, sbyte? right) . Performs bitwise OR operation on two given values. long? Or(long? left, short? right) . Performs bitwise OR operation on two given values. long? Or(long? left, ushort? right) . Performs bitwise OR operation on two given values. long? Or(long? left, int? right) . Performs bitwise OR operation on two given values. long? Or(long? left, uint? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, byte? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, ushort? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, uint? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, ulong? right) . Performs bitwise OR operation on two given values. byte? Xor(byte? left, byte? right) . Performs bitwise OR operation on two given values. int? Xor(byte? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(byte? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(byte? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(byte? left, ulong? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, byte? right) . Performs bitwise Xor operation on two given values. sbyte? Xor(sbyte? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(sbyte? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(sbyte? left, long? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, sbyte? right) . Performs bitwise Xor operation on two given values. short? Xor(short? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, ushort? right) . Performs bitwise XOR operation on two given values. int? Xor(short? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(short? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(short? left, long? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, short? right) . Performs bitwise Xor operation on two given values. ushort? Xor(ushort? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(ushort? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(ushort? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ushort? left, ulong? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(int? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(int? left, long? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, uint? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, byte? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, sbyte? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, short? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, ushort? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, int? right) . Performs bitwise Xor operation on two given values. ulong? Xor(uint? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(uint? left, ulong? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, long? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, byte? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, sbyte? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, short? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, ushort? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, int? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, uint? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, ulong? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, byte? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, ushort? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, uint? right) . Performs bitwise Xor operation on two given values. byte[] GetBytes(string? content) . Gets the bytes from the given string. byte[] GetBytes(string? content, int length, int offset) . Gets the bytes from the given string within given offset and length. byte?[]? GetBytes(char? character) . Gets the bytes from the given character. byte?[]? GetBytes(bool? bit) . Gets the bytes from the given boolean. byte?[]? GetBytes(long? value) . Gets the bytes from the given long. byte?[]? GetBytes(int? value) . Gets the bytes from the given int. byte?[]? GetBytes(short? value) . Gets the bytes from the given short. byte?[]? GetBytes(ulong? value) . Gets the bytes from the given ulong. byte?[]? GetBytes(ushort? value) . Gets the bytes from the given ushort. byte?[]? GetBytes(uint? value) . Gets the bytes from the given uint. byte?[]? GetBytes(Decimal? value) . Gets the bytes from the given decimal. byte?[]? GetBytes(double? value) . Gets the bytes from the given double. byte?[]? GetBytes(float? value) . Gets the bytes from the given float. string? ToBin(byte?[]? bytes, string delimiter) . Converts given bytes to binary with defined delimiter . string ToBin&lt;T&gt;(T value) . Converts given value to binary . string ToOcta&lt;T&gt;(T value) . Converts given value to octal . string ToDec&lt;T&gt;(T value) . Converts given value to decimal . string ToBase64(byte[] value) . Converts given value to string . string ToBase64(byte[] value, int offset, int length) . Converts given array of bytes to string . byte[] FromBase64(string value) . Converts given string to bytes array . bool FromBytesToBool(byte[] value) . Converts bytes to boolean value. short FromBytesToInt16(byte[] value) . Converts bytes to a 16-bit signed integer. ushort FromBytesToUInt16(byte[] value) . Converts bytes to a 16-bit unsigned integer. int FromBytesToInt32(byte[] value) . Converts bytes to a 32-bit signed integer. uint FromBytesToUInt32(byte[] value) . Converts bytes to a 32-bit unsigned integer. long FromBytesToInt64(byte[] value) . Converts bytes to a 64-bit signed integer. ulong FromBytesToUInt64(byte[] value) . Converts bytes to a 64-bit unsigned integer. float FromBytesToFloat(byte[] value) . Converts bytes to a float value. double FromBytesToDouble(byte[] value) . Converts bytes to a float value. string FromBytesToString(byte[] value) . Converts bytes to a string. byte[] ToBytes(bool value) . Converts boolean value to bytes. byte[] ToBytes(short value) . Converts short value to bytes. byte[] ToBytes(ushort value) . Converts ushort value to bytes. byte[] ToBytes(int value) . Converts int value to bytes. byte[] ToBytes(uint value) . Converts uint value to bytes. byte[] ToBytes(long value) . Converts long value to bytes. byte[] ToBytes(ulong value) . Converts long value to bytes. string? ToHex(byte?[]? bytes, string delimiter) . Converts given bytes to hex with defined delimiter . string? ToHex&lt;T&gt;(T value) . Converts given value to binary . int Count(string name) . Gets the count value of a given group. int Count(string name, int parent) . Gets the count value of a given group. int ExtractFromDate(string? date, string partOfDate) . Extracts part of the date from the date . int ExtractFromDate(string date, string culture, string partOfDate) . Extracts part of the date from the date based on given culture . DateTimeOffset? GetDate() . Gets the current datetime . DateTimeOffset? UtcGetDate() . Gets the current datetime in UTC . int? Month(DateTimeOffset? value) . Gets the month from DateTimeOffset . int? Year(DateTimeOffset? value) . Gets the year from DateTimeOffset . int? Day(DateTimeOffset? value) . Gets the day from DateTimeOffset . int? Hour(DateTimeOffset? value) . Gets the hour from DateTimeOffset . int? Minute(DateTimeOffset? value) . Gets the minute from DateTimeOffset . int? Second(DateTimeOffset? value) . Gets the second from DateTimeOffset . int? Milliseconds(DateTimeOffset? value) . Gets the millisecond from DateTimeOffset . int? DayOfWeek(DateTimeOffset? value) . Gets the day of week from DateTimeOffset . TimeSpan? ExtractTimeSpan(DateTimeOffset? dateTimeOffset) . Extracts time from DateTimeOffset . DateTime? ToDateTimeOffset(string value) . Converts given value to DateTimeOffset . DateTimeOffset? ToDateTimeOffset(string value, string culture) . Converts given value to DateTimeOffset . IEnumerable&lt;T&gt;? Skip&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? skipCount) . Skips elements from the beginning of the sequence. IEnumerable&lt;T&gt;? Take&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? takeCount) . Takes elements from the beginning of the sequence. IEnumerable&lt;T&gt;? SkipAndTake&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? skipCount, int? takeCount) . Skip and takes elements from the beginning of the sequence. T[]? EnumerableToArray&lt;T&gt;(IEnumerable&lt;T&gt;? values) . Turn array arguments of T into a single array. T[]? MergeArrays&lt;T&gt;(T[][]? values) . Turn array arguments of T into a single array. IEnumerable&lt;T&gt;? LongestCommonSequence&lt;T&gt;(IEnumerable&lt;T&gt;? source, IEnumerable&lt;T&gt;? pattern) . Computes longest common sequence of two given sequences . T? GetElementAtOrDefault&lt;T&gt;(IEnumerable&lt;T&gt;? enumerable, int? index) . Gets the element at the specified index in a sequence . int? Length&lt;T&gt;(IEnumerable&lt;T&gt;? enumerable) . Gets the length of the sequence . int? Length&lt;T&gt;(T[]? array) . Gets the length of the array . T? Choose&lt;T&gt;(int? index, T[] values) . Gets the value of an array at the specified index . T If&lt;T&gt;(bool expressionResult, T a, T b) . Chose a or b value based on the expression result . bool? Match(string? regex, string? content) . Determine whether content matches the specified pattern . byte? Coalesce(byte?[] array) . Gets the first non-null value in a list . sbyte? Coalesce(sbyte?[] array) . Gets the first non-null value in a list . short? Coalesce(short?[] array) . Gets the first non-null value in a list . ushort? Coalesce(ushort?[] array) . Gets the first non-null value in a list . int? Coalesce(int?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(uint?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(long?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(ulong?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(Decimal?[] array) . Gets the first non-null value in a list . T? Coalesce&lt;T&gt;(T[] array) . Gets the first non-null value in a list . IEnumerable&lt;T&gt;? Distinct&lt;T&gt;(IEnumerable&lt;T&gt;? values) . Returns distinct elements from a collection. string? Md5(string? content) . Gets the md5 hash of the given string. string? Md5(byte?[]? content) . Gets the md5 hash of the given bytes array. string? Sha1(string? content) . Gets the sha256 hash of the given string. string? Sha1(byte?[]? content) . Gets the sha256 hash of the given bytes array. string? Sha256(string? content) . Gets the sha256 hash of the given string. string? Sha256(byte?[]? content) . Gets the sha256 hash of the given bytes array. string? Sha512(string? content) . Gets the sha256 hash of the given string. string? Sha512(byte?[]? content) . Gets the sha256 hash of the bytes array. string? ToJson&lt;T&gt;(T? obj) . Converts object to json. string[] ExtractFromJsonToArray(string? json, string? path) . Extracts values from json by path. string? ExtractFromJson(string? json, string? path) . Extracts values from json by path and joins them with comma. Decimal? Abs(Decimal? value) . Gets the absolute value . long? Abs(long? value) . Gets the absolute value . int? Abs(int? value) . Gets the absolute value . Decimal? Ceil(Decimal? value) . Gets the ceiling value . Decimal? Floor(Decimal? value) . Gets the floor value . Decimal? Sign(Decimal? value) . Determine whether value is greater, equal or less that zero . long? Sign(long? value) . Determine whether value is greater, equal or less that zero . Decimal? Round(Decimal? value, int precision) . Rounds the value within given precision . Decimal? PercentOf(Decimal? value, Decimal? max) . Gets the percentage of the value . int Rand() . Gets the random integer value . int? Rand(int? min, int? max) . Gets the random integer value . double? Pow(Decimal? x, Decimal? y) . Computes the pow between two values . double? Pow(double? x, double? y) . Computes the pow between two values . double? Sqrt(Decimal? x) . Computes the sqrt of a given value . double? Sqrt(double? x) . Computes the sqrt of a given value . double? Sqrt(long? x) . Computes the sqrt of a given value . double? PercentRank&lt;T&gt;(IEnumerable&lt;T&gt;? window, T? value) . Computes the percent rank of a given window . double? Log(Decimal? base, Decimal? value) . Calculates the logarithm of a value with a specified base. Decimal? Sin(Decimal? value) . Calculates sine of a value. double? Sin(double? value) . Calculates sine of a value. float? Sin(float? value) . Calculates sine of a value. Decimal? Cos(Decimal? value) . Calculates cosine of a value. double? Cos(double? value) . Calculates cosine of a value. float? Cos(float? value) . Calculates cosine of a value. Decimal Max(string name) . Gets the max value of a given group. Decimal Max(string name, int parent) . Gets the max value of a given group. Decimal Min(string name) . Gets the min value of a given group. Decimal Min(string name, int parent) . Gets the min value of a given group. Decimal StDev(string name, int parent) . Gets the StDev value of a given group. string NewId() . Gets the new identifier . string? Trim(string? value) . Removes leading and trailing whitespace from a string. string? TrimStart(string? value) . Removes leading whitespace from a string. string? TrimEnd(string? value) . Removes trailing whitespace from a string. string? Substring(string? value, int? index, int? length) . Gets the substring from the string. string? Substring(string value, int? length) . Gets the substring from the string . string? Concat(string[]? strings) . Concatenates the specified values . string? Concat(char?[]? characters) . Concatenates the specified characters . string? Concat(string? firstString, char?[]? chars) . Concatenates specified string fir characters . string? Concat(char? firstChar, string[]? strings) . Concatenate specific character with strings . string? Concat(object[]? objects) . Concatenates the specified strings . string? Concat&lt;T&gt;(T[]? objects) . Concatenates the specified strings . bool? Contains(string? content, string? what) . Determine whether the string contains the specified value . int? IndexOf(string? value, string? text) . Position of the first occurrence of the specified value . string? Soundex(string? value) . Computes soundex for the specified value . bool HasFuzzyMatchedWord(string text, string word, string separator) . Matches the specified text by splitting it with separator and applying fuzzy comparison . bool HasWordThatHasSmallerLevenshteinDistanceThan(string text, string word, int distance, string separator) . Matches the specified text by splitting it with separator and applying fuzzy comparison with a given distance . bool HasWordThatSoundLike(string text, string word, string separator) . Matches whether the specified word is present after being fuzzified within the specified text . bool HasTextThatSoundLikeSentence(string text, string sentence, string separator) . Matches whether the specified text is present in sentence after being fuzified . string? ToUpper(string value) . Makes the string uppercase . string? ToUpper(string value, string culture) . Makes the string uppercase within specified culture . string? ToUpperInvariant(string value) . Makes the string uppercase . string? ToLower(string value) . Makes the string lowercase . string? ToLower(string value, string culture) . Makes the string lowercase within specified culture . string? ToLowerInvariant(string value) . Makes the string lowercase . string? PadLeft(string? value, string? character, int? totalWidth) . Returns a new string that right-aligns the characters in this instance by padding them on the left with a specified Unicode character, for a specified total lengt . string? PadRight(string? value, string? character, int? totalWidth) . Returns a new string that left-aligns the characters in this instance by padding them on the right with a specified Unicode character, for a specified total length . string? Head(string? value, int? length) . Gets the first N characters of the string . string? Tail(string? value, int? length) . Gets the last N characters of the string . int? LevenshteinDistance(string? firstValue, string? secondValue) . Computes the Levenshtein distance between two strings . char? GetCharacterOf(string value, int index) . Gets the character at specified index . string? Reverse(string? value) . Reverses the string . string[] Split(string value, string[] separators) . Splits the string into an array of substrings based on the specified separators . char[] ToCharArray(string value) . Splits the string into an array of characters . string? LongestCommonSubstring(string source, string pattern) . Computes the longest common subsequence between two source and pattern . string Replicate(string value, int integer) . Clones the value n times . string? Translate(string? value, string? characters, string? translations) . Returns the string from the first argument after the characters specified in the second argument are translated into the characters specified in the third argument. string? Replace(string? text, string lookFor, string? changeTo) . Replaces the first occurrence of a specified string in this instance with another specified string . string? ToTitleCase(string? value) . Capitalizes the first letter of the string . string? GetNthWord(string? text, int? wordIndex, string? separator) . Gets the nth word of the string . string? GetFirstWord(string text, string separator) . Gets the first word of the string . string? GetSecondWord(string text, string separator) . Gets the second word of the string . string? GetThirdWord(string text, string separator) . Gets the third word of the string . string? GetLastWord(string? text, string? separator) . Gets last word of the string . bool? IsNullOrEmpty(string? value) . Determines whether the string is null or empty . bool? IsNullOrWhiteSpace(string? value) . Determines whether the string is null or whitespace . string? UrlEncode(string? value) . Encodes the value . string? UrlDecode(string? value) . Decodes the value . string? UriEncode(string? value) . Encodes the value . string? UriDecode(string? value) . Decodes the value . bool? StartsWith(string? value, string? prefix) . Determines whether the string starts with the specified prefix . bool? StartsWith(string? value, string? prefix, string comparison) . Determines whether the string starts with the specified prefix . bool? EndsWith(string? value, string? suffix) . Determines whether the string ends with the specified suffix . bool? EndsWith(string? value, string? suffix, string comparison) . Determines whether the string ends with the specified suffix . string? RegexReplace(string? value, string? pattern, string? replacement) . Replace the specified value part that matches the pattern with the replacement . string[]? SplitByLinuxNewLines(string? input) . Split string by Linux-style newlines (\\n) . string[]? SplitByWindowsNewLines(string? input) . Split string by Windows-style newlines (\\r\\n) . string[]? SplitByNewLines(string? input) . Smart split that handles both Windows (\\r\\n) and Linux (\\n) newlines . Decimal Sum(string name) . Gets the sum value of a given group. Decimal Sum(string name, int parent) . Gets the sum value of a given group. Decimal SumIncome(string name) . Gets the sum value of a given group. Decimal SumIncome(string name, int parent) . Gets the sum value of a given group. Decimal SumOutcome(string name) . Gets the outcome value of a given group. Decimal SumOutcome(string name, int parent) . Gets the outcome value of a given group. TimeSpan? SumTimeSpan(string name) . Gets the sum value of a given group. TimeSpan? SumTimeSpan(string name, int parent) . Gets the sum value of a given group. TimeSpan? MinTimeSpan(string name) . Gets the min value of a given group. TimeSpan? MinTimeSpan(string name, int parent) . Gets the min value of a given group. TimeSpan? MaxTimeSpan(string name) . Gets the max value of a given group. TimeSpan? MaxTimeSpan(string name, int parent) . Gets the min value of a given group. char? ToChar(string? value) . Converts given value to character . char? ToChar(int? value) . Converts given value to character . char? ToChar(short? value) . Converts given value to character . char? ToChar(byte? value) . Converts given value to character . char? ToChar(object? value) . Converts given value to character . DateTime? ToDateTime(string value) . Converts given value to DateTime . DateTime? ToDateTime(string value, string culture) . Converts given value to DateTime . Decimal? ToDecimal(string? value) . Converts given value to decimal . Decimal? ToDecimal(string value, string culture) . Converts given value to decimal withing given culture . Decimal? ToDecimal(byte? value) . Converts given value to Decimal . Decimal? ToDecimal(sbyte? value) . Converts given value to Decimal . Decimal? ToDecimal(short? value) . Converts given value to Decimal . Decimal? ToDecimal(ushort? value) . Converts given value to Decimal . Decimal? ToDecimal(long? value) . Converts given value to Decimal . Decimal? ToDecimal(ulong? value) . Converts given value to Decimal . Decimal? ToDecimal(float? value) . Converts given value to Decimal . Decimal? ToDecimal(double? value) . Converts given value to Decimal . Decimal? ToDecimal(object? value) . Converts given value to Decimal . double? ToDouble(object? value) . Converts given value to double . double? ToDouble(string? value) . Converts given value to double . double? ToDouble(byte? value) . Converts given value to double . double? ToDouble(sbyte? value) . Converts given value to double . double? ToDouble(short? value) . Converts given value to double . double? ToDouble(ushort? value) . Converts given value to double . double? ToDouble(int? value) . Converts given value to double . double? ToDouble(uint? value) . Converts given value to double . double? ToDouble(long? value) . Converts given value to double . double? ToDouble(ulong? value) . Converts given value to double . double? ToDouble(float? value) . Converts given value to double . double? ToDouble(double? value) . Converts given value to double . double? ToDouble(Decimal? value) . Converts given value to double . float? ToFloat(string? value) . Converts given value to float . float? ToFloat(byte? value) . Converts given value to float . float? ToFloat(sbyte? value) . Converts given value to float . float? ToFloat(short? value) . Converts given value to float . float? ToFloat(ushort? value) . Converts given value to float . float? ToFloat(int? value) . Converts given value to float . float? ToFloat(uint? value) . Converts given value to float . float? ToFloat(long? value) . Converts given value to float . float? ToFloat(ulong? value) . Converts given value to float . float? ToFloat(float? value) . Converts given value to float . float? ToFloat(Decimal? value) . Converts given value to float . int? ToInt32(string value) . Converts given value to int . int? ToInt32(byte? value) . Converts given value to int . int? ToInt32(sbyte? value) . Converts given value to int . int? ToInt32(short? value) . Converts given value to int . int? ToInt32(ushort? value) . Converts given value to int . int? ToInt32(int? value) . Converts given value to int . int? ToInt32(uint? value) . Converts given value to int . int? ToInt32(long? value) . Converts given value to int . int? ToInt32(ulong? value) . Converts given value to int . int? ToInt32(float? value) . Converts given value to int . int? ToInt32(double? value) . Converts given value to int . int? ToInt32(Decimal? value) . Converts given value to int . int? ToInt32(object? value) . Converts given value to int . long? ToInt64(string value) . Converts given value to Int64 . long? ToInt64(byte? value) . Converts given value to long . long? ToInt64(sbyte? value) . Converts given value to long . long? ToInt64(short? value) . Converts given value to long . long? ToInt64(ushort? value) . Converts given value to long . long? ToInt64(int? value) . Converts given value to long . long? ToInt64(uint? value) . Converts given value to long . long? ToInt64(long? value) . Converts given value to long . long? ToInt64(ulong? value) . Converts given value to long . long? ToInt64(float? value) . Converts given value to long . long? ToInt64(double? value) . Converts given value to long . long? ToInt64(Decimal? value) . Converts given value to long . long? ToInt64(object? value) . Converts given value to long . string? ToString(char? value) . Converts given value to string . string? ToString(DateTimeOffset? value) . Converts given value to string . string? ToString(DateTimeOffset? value, string format) . Converts given value to string . string? ToString(byte? value) . Converts given value to string . string? ToString(byte? value, string format) . Converts given value to string . string? ToString(sbyte? value) . Converts given value to string . string? ToString(sbyte? value, string format) . Converts given value to string . string? ToString(int? value) . Converts given value to string . string? ToString(int? value, string format) . Converts given value to string . string? ToString(uint? value) . Converts given value to string . string? ToString(uint? value, string format) . Converts given value to string . string? ToString(long? value) . Converts given value to string . string? ToString(long? value, string format) . Converts given value to string . string? ToString(ulong? value) . Converts given value to string . string? ToString(ulong? value, string format) . Converts given value to string . string? ToString(float? value) . Converts given value to string . string? ToString(float? value, string format) . Converts given value to string . string? ToString(double? value) . Converts given value to string . string? ToString(double? value, string format) . Converts given value to string . string? ToString(Decimal? value) . Converts given value to string . string? ToString(Decimal? value, string format) . Converts given value to string . string? ToString(bool? value) . Converts given value to string . string? ToString(object? value) . Converts given value to string . string? ToString&lt;T&gt;(T? value) . Converts given value to string . string ToString(string[] value) . Converts given value to string . string ToString&lt;T&gt;(T[] value) . Converts given value to string . TimeSpan? ToTimeSpan(string value) . Converts given value to TimeSpan . TimeSpan? ToTimeSpan(string value, string culture) . Converts given value to TimeSpan . IEnumerable&lt;T&gt; Window&lt;T&gt;(string name) . Gets the window . ",
    "url": "/data-sources/Ollama/linux-x64.html#base-methods",
    
    "relUrl": "/data-sources/Ollama/linux-x64.html#base-methods"
  },"153": {
    "doc": "Linux X64",
    "title": "Linux X64",
    "content": " ",
    "url": "/data-sources/Ollama/linux-x64.html",
    
    "relUrl": "/data-sources/Ollama/linux-x64.html"
  },"154": {
    "doc": "Linux X64",
    "title": "Musoq.DataSources.Os",
    "content": "Provides schema to work with operating system abstractions . ",
    "url": "/data-sources/Os/linux-x64.html#musoqdatasourcesos",
    
    "relUrl": "/data-sources/Os/linux-x64.html#musoqdatasourcesos"
  },"155": {
    "doc": "Linux X64",
    "title": "Tables",
    "content": "Table is a collection of rows and columns that the plugin exposes. Below are the tables that are exposed by this data source. os.dirscompare(string, string) . Compares two directories . | Name | Type | Description | . | SourceFile | ExtendedFileInfo | Source file | . | DestinationFile | ExtendedFileInfo | Destination file | . | State | string | The Same / Modified / Added / Removed | . | SourceRoot | DirectoryInfo | Source directory | . | DestinationRoot | DirectoryInfo | Destination directory | . | SourceFileRelative | string | Relative path to source file | . | DestinationFileRelative | string | Relative path to destination file | . os.directories(string, boolean) . Gets the directories . | Name | Type | Description | . | FullName | string | Full name of the directory | . | Attributes | FileAttributes | Directory attributes | . | CreationTime | DateTime | Creation time | . | CreationTimeUtc | DateTime | Creation time in UTC | . | LastAccessTime | DateTime | Last access time | . | LastAccessTimeUtc | DateTime | Last access time in UTC | . | LastWriteTime | DateTime | Last write time | . | LastWriteTimeUtc | DateTime | Last write time in UTC | . | Exists | bool | Determine does the directory exists | . | Extension | string | Gets the extension part of the file name | . | LastAccessTime | DateTime | Gets the time the current file or directory was last accessed | . | LastAccessTimeUtc | DateTime | Gets the time, in coordinated universal time (UTC), that the current file or directory was last accessed | . | Name | string | Gets the directory name | . | LastWriteTime | DateTime | Gets the date when the file or directory was written to | . | Parent | DirectoryInfo | Gets the parent directory | . | Root | DirectoryInfo | Gets the root directory | . | DirectoryInfo | DirectoryInfo | Gets raw DirectoryInfo | . os.dlls(string path) . Gets the dlls . | Name | Type | Description | . | FileInfo | FileInfo | Gets the metadata about the DLL file | . | Assembly | Assembly | Gets the Assembly object | . | Version | FileVersionInfo | Gets the assembly version | . os.dlls(string path) . Gets the dlls . | Name | Type | Description | . | FileInfo | FileInfo | Gets the metadata about the DLL file | . | Assembly | Assembly | Gets the Assembly object | . | Version | FileVersionInfo | Gets the assembly version | . os.files(string, boolean) . Gets the files . | Name | Type | Description | . | Name | string | Full name of the directory | . | CreationTime | DateTime | Creation time | . | CreationTimeUtc | DateTime | Creation time in UTC | . | LastAccessTime | DateTime | Last access time | . | LastAccessTimeUtc | DateTime | Last access time in UTC | . | LastWriteTime | DateTime | Last write time | . | LastWriteTimeUtc | DateTime | Last write time in UTC | . | DirectoryName | string | Gets the directory name | . | Extension | string | Gets the extension part of the file name | . | FullName | string | Gets the full path of file | . | Exists | bool | Determine whether file exists or not | . | IsReadOnly | bool | Determine whether the file is readonly | . | Length | long | Gets the length of file | . os.processes() . Gets the processes . | Name | Type | Description | . | BasePriority | int | Gets the base priority of associated process | . | EnableRaisingEvents | bool | Gets whether the exited event should be raised when the process terminates | . | ExitCode | int | Gets the value describing process termination | . | ExitTime | DateTime | Exit time in UTC | . | Handle | IntPtr | Gets the native handle of the associated process | . | HandleCount | int | Gets the number of handles opened by the process | . | HasExited | bool | Gets a value indicating whether the associated process has been terminated | . | Id | int | Gets the unique identifier for the associated process | . | MachineName | string | Gets the name of the computer the associated process is running on | . | MainWindowTitle | string | Gets the caption of the main window of the process | . | PagedMemorySize64 | long | Gets a value indicating whether the user interface of the process is responding | . | ProcessName | string | The name that the system uses to identify the process to the user | . | ProcessorAffinity | IntPtr | Gets the processors on which the threads in this process can be scheduled to run | . | Responding | bool | Gets a value indicating whether the user interface of the process is responding | . | StartTime | DateTime | Gets the time that the associated process was started | . | TotalProcessorTime | TimeSpan | Gets the total processor time for this process | . | UserProcessorTime | TimeSpan | Gets the user processor time for this process | . | Directory | string | Gets the directory of the process | . | FileName | string | Gets the filename of the process | . os.zip(string path) . Gets the zip files . | Name | Type | Description | . | Name | string | Gets the file name of the entry in the zip archive | . | FullName | string | Gets the relative path of the entry in the zip archive | . | CompressedLength | long | Gets the compressed size of the entry in the zip archive | . | LastWriteTime | DateTimeOffset | Gets the last time the entry in the zip archive was changed | . | Length | long | Gets the uncompressed size of the entry in the zip archive | . | IsDirectory | bool | Determine whether the entry is a directory | . | Level | int | Gets the nesting level | . os.metadata(string directoryOrFile) . Gets the metadata for file or for files within the directory . | Name | Type | Description | . | FullName | string | Gets the full path of the file | . | DirectoryName | string | Gets the directory the metadata resides in | . | TagName | string | Gets the tag name | . | Description | string | Gets the description | . os.metadata(string directory, bool useSubdirectories) . Gets the metadata for files within directories . | Name | Type | Description | . | FullName | string | Gets the full path of the file | . | DirectoryName | string | Gets the directory the metadata resides in | . | TagName | string | Gets the tag name | . | Description | string | Gets the description | . ",
    "url": "/data-sources/Os/linux-x64.html#tables",
    
    "relUrl": "/data-sources/Os/linux-x64.html#tables"
  },"156": {
    "doc": "Linux X64",
    "title": "Methods",
    "content": "Methods are functions that can be called on the data source specific column. Below are the methods that are exposed by this data source. bool IsZipArchive(string extension) . Determines whether the extension is zip archive. bool IsZipArchive() . Determines whether the extension is zip archive. bool IsArchive(string extension) . Determine whether the extension is archive. bool IsArchive() . Determines whether the file is archive. bool IsAudio(string extension) . Determine whether the extension is audio. bool IsAudio() . Determine whether the extension is audio. bool IsBook(string extension) . Determine whether the extension is book. bool IsBook() . Determine whether the extension is book. bool IsDoc(string extension) . Determine whether the extension is document. bool IsDoc() . Determine whether the extension is document. bool IsImage(string extension) . Determine whether the extension is image. bool IsImage() . Determine whether the extension is image. bool IsSource(string extension) . Determine whether the extension is source. bool IsSource() . Determine whether the extension is source. bool IsVideo(string extension) . Determine whether the extension is video. bool IsVideo() . Determine whether the extension is video. string? GetFileContent() . Gets the file content . string GetRelativePath() . Gets the relative path of a file . string GetRelativePath(string basePath) . Gets the relative path of a file . byte[] Head(int length) . Gets head bytes of a file . byte[] Tail(int length) . Gets tail bytes of a file . byte[] GetFileBytes(long bytesCount, long offset) . Gets file bytes of a file . string Sha1File() . Computes Sha1 hash of a file . string Sha256File() . Computes Sha256 hash of a file . string Sha256File(IO.FileInfo file) . Computes Sha256 hash of a file . string Md5File() . Computes Md5 hash of a file . string Base64File() . Turns file into base64 string . bool HasContent(string pattern) . Determine whether file has specific content . bool HasAttribute(long flags) . Determine whether file has attribute . string GetLinesContainingWord(string word) . Gets lines containing word . long GetFileLength(string unit) . Gets the file length . long GetLengthOfFile(string unit) . Gets the file length . string? SubPath(int nesting) . Gets the SubPath from the path . string? SubPath(int nesting) . Gets the SubPath from the path . string? RelativeSubPath(int nesting) . Gets the relative SubPath from the path . string? SubPath(string? directoryPath, int? nesting) . Gets the relative SubPath from the path . long Length(string unit) . Gets the length of the file . Musoq.DataSources.Os.Files.ExtendedFileInfo? GetFileInfo(string fullPath) . Gets the file info . Musoq.DataSources.Os.Files.ExtendedFileInfo GetExtendedFileInfo() . Gets extended file info . long CountOfLines() . Gets the count of lines of a file . long CountOfNotEmptyLines() . Gets the count of non empty lines of a file . string Combine(string path1, string path2) . Combines the paths . string Combine(string path1, string path2, string path3) . Combines the paths . string Combine(string path1, string path2, string path3, string path4) . Combines the paths . string Combine(string path1, string path2, string path3, string path4, string path5) . Combines the paths . string Combine(string[] paths) . Combines the paths . string? GetDirectoryName(string? path) . Gets the directory name . string? GetFileName(string? path) . Gets the file name . string? GetFileNameWithoutExtension(string? path) . Gets the file name without extension . string? GetExtension(string? path) . Gets the extension . string? GetMetadata(string directoryName, string tagName) . Gets the metadata of a file . string? GetMetadata(string tagName) . Gets the metadata of a file . bool HasMetadataDirectory(string directoryName) . Checks whether file has metadata directory . bool HasMetadataTag(string directoryName, string tagName) . Checks whether file has metadata tag . bool HasMetadataTag(string tagName) . Checks whether file has metadata tag . string AllMetadataJson() . Gets all metadata of a file and returns it as json . IReadOnlyList&lt;Musoq.DataSources.Os.Files.ExtendedFileInfo&gt;? AggregateFiles(string name) . Gets the aggregated average value from the given group name . IReadOnlyList&lt;IO.DirectoryInfo&gt;? AggregateDirectories(string name) . Gets the aggregated average value from the given group name . ",
    "url": "/data-sources/Os/linux-x64.html#methods",
    
    "relUrl": "/data-sources/Os/linux-x64.html#methods"
  },"157": {
    "doc": "Linux X64",
    "title": "Base Methods",
    "content": "Base methods are methods that can be called on the data source specific column. Those methods are automatically inherited and enriches the data source specific methods. Below are those base methods that are exposed by this data source. int RowNumber() . Gets the row number of the current row. string? GetTypeName(object? obj) . Gets the typename of passed object. string AggregateValues(string name) . Aggregates values into a single value. string AggregateValues(string name, int parent) . Aggregates values into a single value. Decimal Avg(string name) . Gets the aggregated average value from the given group name . Decimal Avg(string name, int parent) . Gets the aggregated average value from the given group name . byte? ShiftLeft(byte? value, int shift) . Shifts the value to the left by the specified number of bits. short? ShiftLeft(short? value, int shift) . Shifts the value to the left by the specified number of bits. int? ShiftLeft(int? value, int shift) . Shifts the value to the left by the specified number of bits. long? ShiftLeft(long? value, int shift) . Shifts the value to the left by the specified number of bits. sbyte? ShiftLeft(sbyte? value, int shift) . Shifts the value to the left by the specified number of bits. ushort? ShiftLeft(ushort? value, int shift) . Shifts the value to the left by the specified number of bits. uint? ShiftLeft(uint? value, int shift) . Shifts the value to the left by the specified number of bits. ulong? ShiftLeft(ulong? value, int shift) . Shifts the value to the left by the specified number of bits. byte? ShiftRight(byte? value, int shift) . Shifts the value to the right by the specified number of bits. short? ShiftRight(short? value, int shift) . Shifts the value to the right by the specified number of bits. int? ShiftRight(int? value, int shift) . Shifts the value to the right by the specified number of bits. long? ShiftRight(long? value, int shift) . Shifts the value to the right by the specified number of bits. sbyte? ShiftRight(sbyte? value, int shift) . Shifts the value to the right by the specified number of bits. ushort? ShiftRight(ushort? value, int shift) . Shifts the value to the right by the specified number of bits. uint? ShiftRight(uint? value, int shift) . Shifts the value to the right by the specified number of bits. ulong? ShiftRight(ulong? value, int shift) . Shifts the value to the right by the specified number of bits. byte? Not(byte? value) . Performs bitwise NOT operation on a given value. short? Not(short? value) . Performs bitwise NOT operation on a given value. int? Not(int? value) . Performs bitwise NOT operation on a given value. long? Not(long? value) . Performs bitwise NOT operation on a given value. sbyte? Not(sbyte? value) . Performs bitwise NOT operation on a given value. ushort? Not(ushort? value) . Performs bitwise NOT operation on a given value. uint? Not(uint? value) . Performs bitwise NOT operation on a given value. ulong? Not(ulong? value) . Performs bitwise NOT operation on a given value. byte? And(byte? left, byte? right) . Performs bitwise AND operation on two given values. int? And(byte? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(byte? left, short? right) . Performs bitwise AND operation on two given values. int? And(byte? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(byte? left, int? right) . Performs bitwise AND operation on two given values. uint? And(byte? left, uint? right) . Performs bitwise AND operation on two given values. long? And(byte? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(byte? left, ulong? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, byte? right) . Performs bitwise AND operation on two given values. sbyte? And(sbyte? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, short? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, int? right) . Performs bitwise AND operation on two given values. uint? And(sbyte? left, uint? right) . Performs bitwise AND operation on two given values. long? And(sbyte? left, long? right) . Performs bitwise AND operation on two given values. int? And(short? left, byte? right) . Performs bitwise AND operation on two given values. int? And(short? left, sbyte? right) . Performs bitwise AND operation on two given values. short? And(short? left, short? right) . Performs bitwise AND operation on two given values. int? And(short? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(short? left, int? right) . Performs bitwise AND operation on two given values. uint? And(short? left, uint? right) . Performs bitwise AND operation on two given values. long? And(short? left, long? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, byte? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, short? right) . Performs bitwise AND operation on two given values. ushort? And(ushort? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, int? right) . Performs bitwise AND operation on two given values. uint? And(ushort? left, uint? right) . Performs bitwise AND operation on two given values. long? And(ushort? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(ushort? left, ulong? right) . Performs bitwise AND operation on two given values. int? And(int? left, byte? right) . Performs bitwise AND operation on two given values. int? And(int? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(int? left, short? right) . Performs bitwise AND operation on two given values. int? And(int? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(int? left, int? right) . Performs bitwise AND operation on two given values. uint? And(int? left, uint? right) . Performs bitwise AND operation on two given values. long? And(int? left, long? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, uint? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, byte? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, sbyte? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, short? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, ushort? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, int? right) . Performs bitwise AND operation on two given values. ulong? And(uint? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(uint? left, ulong? right) . Performs bitwise AND operation on two given values. long? And(long? left, long? right) . Performs bitwise AND operation on two given values. long? And(long? left, byte? right) . Performs bitwise AND operation on two given values. long? And(long? left, sbyte? right) . Performs bitwise AND operation on two given values. long? And(long? left, short? right) . Performs bitwise AND operation on two given values. long? And(long? left, ushort? right) . Performs bitwise AND operation on two given values. long? And(long? left, int? right) . Performs bitwise AND operation on two given values. long? And(long? left, uint? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, byte? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, ushort? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, uint? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, ulong? right) . Performs bitwise AND operation on two given values. byte? Or(byte? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, short? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(byte? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(byte? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(byte? left, ulong? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, byte? right) . Performs bitwise OR operation on two given values. sbyte? Or(sbyte? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, short? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(sbyte? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(sbyte? left, long? right) . Performs bitwise OR operation on two given values. int? Or(short? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(short? left, sbyte? right) . Performs bitwise OR operation on two given values. short? Or(short? left, short? right) . Performs bitwise OR operation on two given values. int? Or(short? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(short? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(short? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(short? left, long? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, short? right) . Performs bitwise OR operation on two given values. ushort? Or(ushort? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(ushort? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(ushort? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(ushort? left, ulong? right) . Performs bitwise OR operation on two given values. int? Or(int? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(int? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(int? left, short? right) . Performs bitwise OR operation on two given values. int? Or(int? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(int? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(int? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(int? left, long? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, uint? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, byte? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, sbyte? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, short? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, ushort? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, int? right) . Performs bitwise OR operation on two given values. ulong? Or(uint? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(uint? left, ulong? right) . Performs bitwise OR operation on two given values. long? Or(long? left, long? right) . Performs bitwise OR operation on two given values. long? Or(long? left, byte? right) . Performs bitwise OR operation on two given values. long? Or(long? left, sbyte? right) . Performs bitwise OR operation on two given values. long? Or(long? left, short? right) . Performs bitwise OR operation on two given values. long? Or(long? left, ushort? right) . Performs bitwise OR operation on two given values. long? Or(long? left, int? right) . Performs bitwise OR operation on two given values. long? Or(long? left, uint? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, byte? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, ushort? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, uint? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, ulong? right) . Performs bitwise OR operation on two given values. byte? Xor(byte? left, byte? right) . Performs bitwise OR operation on two given values. int? Xor(byte? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(byte? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(byte? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(byte? left, ulong? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, byte? right) . Performs bitwise Xor operation on two given values. sbyte? Xor(sbyte? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(sbyte? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(sbyte? left, long? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, sbyte? right) . Performs bitwise Xor operation on two given values. short? Xor(short? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, ushort? right) . Performs bitwise XOR operation on two given values. int? Xor(short? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(short? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(short? left, long? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, short? right) . Performs bitwise Xor operation on two given values. ushort? Xor(ushort? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(ushort? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(ushort? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ushort? left, ulong? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(int? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(int? left, long? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, uint? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, byte? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, sbyte? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, short? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, ushort? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, int? right) . Performs bitwise Xor operation on two given values. ulong? Xor(uint? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(uint? left, ulong? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, long? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, byte? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, sbyte? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, short? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, ushort? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, int? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, uint? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, ulong? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, byte? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, ushort? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, uint? right) . Performs bitwise Xor operation on two given values. byte[] GetBytes(string? content) . Gets the bytes from the given string. byte[] GetBytes(string? content, int length, int offset) . Gets the bytes from the given string within given offset and length. byte?[]? GetBytes(char? character) . Gets the bytes from the given character. byte?[]? GetBytes(bool? bit) . Gets the bytes from the given boolean. byte?[]? GetBytes(long? value) . Gets the bytes from the given long. byte?[]? GetBytes(int? value) . Gets the bytes from the given int. byte?[]? GetBytes(short? value) . Gets the bytes from the given short. byte?[]? GetBytes(ulong? value) . Gets the bytes from the given ulong. byte?[]? GetBytes(ushort? value) . Gets the bytes from the given ushort. byte?[]? GetBytes(uint? value) . Gets the bytes from the given uint. byte?[]? GetBytes(Decimal? value) . Gets the bytes from the given decimal. byte?[]? GetBytes(double? value) . Gets the bytes from the given double. byte?[]? GetBytes(float? value) . Gets the bytes from the given float. string? ToBin(byte?[]? bytes, string delimiter) . Converts given bytes to binary with defined delimiter . string ToBin&lt;T&gt;(T value) . Converts given value to binary . string ToOcta&lt;T&gt;(T value) . Converts given value to octal . string ToDec&lt;T&gt;(T value) . Converts given value to decimal . string ToBase64(byte[] value) . Converts given value to string . string ToBase64(byte[] value, int offset, int length) . Converts given array of bytes to string . byte[] FromBase64(string value) . Converts given string to bytes array . bool FromBytesToBool(byte[] value) . Converts bytes to boolean value. short FromBytesToInt16(byte[] value) . Converts bytes to a 16-bit signed integer. ushort FromBytesToUInt16(byte[] value) . Converts bytes to a 16-bit unsigned integer. int FromBytesToInt32(byte[] value) . Converts bytes to a 32-bit signed integer. uint FromBytesToUInt32(byte[] value) . Converts bytes to a 32-bit unsigned integer. long FromBytesToInt64(byte[] value) . Converts bytes to a 64-bit signed integer. ulong FromBytesToUInt64(byte[] value) . Converts bytes to a 64-bit unsigned integer. float FromBytesToFloat(byte[] value) . Converts bytes to a float value. double FromBytesToDouble(byte[] value) . Converts bytes to a float value. string FromBytesToString(byte[] value) . Converts bytes to a string. byte[] ToBytes(bool value) . Converts boolean value to bytes. byte[] ToBytes(short value) . Converts short value to bytes. byte[] ToBytes(ushort value) . Converts ushort value to bytes. byte[] ToBytes(int value) . Converts int value to bytes. byte[] ToBytes(uint value) . Converts uint value to bytes. byte[] ToBytes(long value) . Converts long value to bytes. byte[] ToBytes(ulong value) . Converts long value to bytes. string? ToHex(byte?[]? bytes, string delimiter) . Converts given bytes to hex with defined delimiter . string? ToHex&lt;T&gt;(T value) . Converts given value to binary . int Count(string name) . Gets the count value of a given group. int Count(string name, int parent) . Gets the count value of a given group. int ExtractFromDate(string? date, string partOfDate) . Extracts part of the date from the date . int ExtractFromDate(string date, string culture, string partOfDate) . Extracts part of the date from the date based on given culture . DateTimeOffset? GetDate() . Gets the current datetime . DateTimeOffset? UtcGetDate() . Gets the current datetime in UTC . int? Month(DateTimeOffset? value) . Gets the month from DateTimeOffset . int? Year(DateTimeOffset? value) . Gets the year from DateTimeOffset . int? Day(DateTimeOffset? value) . Gets the day from DateTimeOffset . int? Hour(DateTimeOffset? value) . Gets the hour from DateTimeOffset . int? Minute(DateTimeOffset? value) . Gets the minute from DateTimeOffset . int? Second(DateTimeOffset? value) . Gets the second from DateTimeOffset . int? Milliseconds(DateTimeOffset? value) . Gets the millisecond from DateTimeOffset . int? DayOfWeek(DateTimeOffset? value) . Gets the day of week from DateTimeOffset . TimeSpan? ExtractTimeSpan(DateTimeOffset? dateTimeOffset) . Extracts time from DateTimeOffset . DateTime? ToDateTimeOffset(string value) . Converts given value to DateTimeOffset . DateTimeOffset? ToDateTimeOffset(string value, string culture) . Converts given value to DateTimeOffset . IEnumerable&lt;T&gt;? Skip&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? skipCount) . Skips elements from the beginning of the sequence. IEnumerable&lt;T&gt;? Take&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? takeCount) . Takes elements from the beginning of the sequence. IEnumerable&lt;T&gt;? SkipAndTake&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? skipCount, int? takeCount) . Skip and takes elements from the beginning of the sequence. T[]? EnumerableToArray&lt;T&gt;(IEnumerable&lt;T&gt;? values) . Turn array arguments of T into a single array. T[]? MergeArrays&lt;T&gt;(T[][]? values) . Turn array arguments of T into a single array. IEnumerable&lt;T&gt;? LongestCommonSequence&lt;T&gt;(IEnumerable&lt;T&gt;? source, IEnumerable&lt;T&gt;? pattern) . Computes longest common sequence of two given sequences . T? GetElementAtOrDefault&lt;T&gt;(IEnumerable&lt;T&gt;? enumerable, int? index) . Gets the element at the specified index in a sequence . int? Length&lt;T&gt;(IEnumerable&lt;T&gt;? enumerable) . Gets the length of the sequence . int? Length&lt;T&gt;(T[]? array) . Gets the length of the array . T? Choose&lt;T&gt;(int? index, T[] values) . Gets the value of an array at the specified index . T If&lt;T&gt;(bool expressionResult, T a, T b) . Chose a or b value based on the expression result . bool? Match(string? regex, string? content) . Determine whether content matches the specified pattern . byte? Coalesce(byte?[] array) . Gets the first non-null value in a list . sbyte? Coalesce(sbyte?[] array) . Gets the first non-null value in a list . short? Coalesce(short?[] array) . Gets the first non-null value in a list . ushort? Coalesce(ushort?[] array) . Gets the first non-null value in a list . int? Coalesce(int?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(uint?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(long?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(ulong?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(Decimal?[] array) . Gets the first non-null value in a list . T? Coalesce&lt;T&gt;(T[] array) . Gets the first non-null value in a list . IEnumerable&lt;T&gt;? Distinct&lt;T&gt;(IEnumerable&lt;T&gt;? values) . Returns distinct elements from a collection. string? Md5(string? content) . Gets the md5 hash of the given string. string? Md5(byte?[]? content) . Gets the md5 hash of the given bytes array. string? Sha1(string? content) . Gets the sha256 hash of the given string. string? Sha1(byte?[]? content) . Gets the sha256 hash of the given bytes array. string? Sha256(string? content) . Gets the sha256 hash of the given string. string? Sha256(byte?[]? content) . Gets the sha256 hash of the given bytes array. string? Sha512(string? content) . Gets the sha256 hash of the given string. string? Sha512(byte?[]? content) . Gets the sha256 hash of the bytes array. string? ToJson&lt;T&gt;(T? obj) . Converts object to json. string[] ExtractFromJsonToArray(string? json, string? path) . Extracts values from json by path. string? ExtractFromJson(string? json, string? path) . Extracts values from json by path and joins them with comma. Decimal? Abs(Decimal? value) . Gets the absolute value . long? Abs(long? value) . Gets the absolute value . int? Abs(int? value) . Gets the absolute value . Decimal? Ceil(Decimal? value) . Gets the ceiling value . Decimal? Floor(Decimal? value) . Gets the floor value . Decimal? Sign(Decimal? value) . Determine whether value is greater, equal or less that zero . long? Sign(long? value) . Determine whether value is greater, equal or less that zero . Decimal? Round(Decimal? value, int precision) . Rounds the value within given precision . Decimal? PercentOf(Decimal? value, Decimal? max) . Gets the percentage of the value . int Rand() . Gets the random integer value . int? Rand(int? min, int? max) . Gets the random integer value . double? Pow(Decimal? x, Decimal? y) . Computes the pow between two values . double? Pow(double? x, double? y) . Computes the pow between two values . double? Sqrt(Decimal? x) . Computes the sqrt of a given value . double? Sqrt(double? x) . Computes the sqrt of a given value . double? Sqrt(long? x) . Computes the sqrt of a given value . double? PercentRank&lt;T&gt;(IEnumerable&lt;T&gt;? window, T? value) . Computes the percent rank of a given window . double? Log(Decimal? base, Decimal? value) . Calculates the logarithm of a value with a specified base. Decimal? Sin(Decimal? value) . Calculates sine of a value. double? Sin(double? value) . Calculates sine of a value. float? Sin(float? value) . Calculates sine of a value. Decimal? Cos(Decimal? value) . Calculates cosine of a value. double? Cos(double? value) . Calculates cosine of a value. float? Cos(float? value) . Calculates cosine of a value. Decimal Max(string name) . Gets the max value of a given group. Decimal Max(string name, int parent) . Gets the max value of a given group. Decimal Min(string name) . Gets the min value of a given group. Decimal Min(string name, int parent) . Gets the min value of a given group. Decimal StDev(string name, int parent) . Gets the StDev value of a given group. string NewId() . Gets the new identifier . string? Trim(string? value) . Removes leading and trailing whitespace from a string. string? TrimStart(string? value) . Removes leading whitespace from a string. string? TrimEnd(string? value) . Removes trailing whitespace from a string. string? Substring(string? value, int? index, int? length) . Gets the substring from the string. string? Substring(string value, int? length) . Gets the substring from the string . string? Concat(string[]? strings) . Concatenates the specified values . string? Concat(char?[]? characters) . Concatenates the specified characters . string? Concat(string? firstString, char?[]? chars) . Concatenates specified string fir characters . string? Concat(char? firstChar, string[]? strings) . Concatenate specific character with strings . string? Concat(object[]? objects) . Concatenates the specified strings . string? Concat&lt;T&gt;(T[]? objects) . Concatenates the specified strings . bool? Contains(string? content, string? what) . Determine whether the string contains the specified value . int? IndexOf(string? value, string? text) . Position of the first occurrence of the specified value . string? Soundex(string? value) . Computes soundex for the specified value . bool HasFuzzyMatchedWord(string text, string word, string separator) . Matches the specified text by splitting it with separator and applying fuzzy comparison . bool HasWordThatHasSmallerLevenshteinDistanceThan(string text, string word, int distance, string separator) . Matches the specified text by splitting it with separator and applying fuzzy comparison with a given distance . bool HasWordThatSoundLike(string text, string word, string separator) . Matches whether the specified word is present after being fuzzified within the specified text . bool HasTextThatSoundLikeSentence(string text, string sentence, string separator) . Matches whether the specified text is present in sentence after being fuzified . string? ToUpper(string value) . Makes the string uppercase . string? ToUpper(string value, string culture) . Makes the string uppercase within specified culture . string? ToUpperInvariant(string value) . Makes the string uppercase . string? ToLower(string value) . Makes the string lowercase . string? ToLower(string value, string culture) . Makes the string lowercase within specified culture . string? ToLowerInvariant(string value) . Makes the string lowercase . string? PadLeft(string? value, string? character, int? totalWidth) . Returns a new string that right-aligns the characters in this instance by padding them on the left with a specified Unicode character, for a specified total lengt . string? PadRight(string? value, string? character, int? totalWidth) . Returns a new string that left-aligns the characters in this instance by padding them on the right with a specified Unicode character, for a specified total length . string? Head(string? value, int? length) . Gets the first N characters of the string . string? Tail(string? value, int? length) . Gets the last N characters of the string . int? LevenshteinDistance(string? firstValue, string? secondValue) . Computes the Levenshtein distance between two strings . char? GetCharacterOf(string value, int index) . Gets the character at specified index . string? Reverse(string? value) . Reverses the string . string[] Split(string value, string[] separators) . Splits the string into an array of substrings based on the specified separators . char[] ToCharArray(string value) . Splits the string into an array of characters . string? LongestCommonSubstring(string source, string pattern) . Computes the longest common subsequence between two source and pattern . string Replicate(string value, int integer) . Clones the value n times . string? Translate(string? value, string? characters, string? translations) . Returns the string from the first argument after the characters specified in the second argument are translated into the characters specified in the third argument. string? Replace(string? text, string lookFor, string? changeTo) . Replaces the first occurrence of a specified string in this instance with another specified string . string? ToTitleCase(string? value) . Capitalizes the first letter of the string . string? GetNthWord(string? text, int? wordIndex, string? separator) . Gets the nth word of the string . string? GetFirstWord(string text, string separator) . Gets the first word of the string . string? GetSecondWord(string text, string separator) . Gets the second word of the string . string? GetThirdWord(string text, string separator) . Gets the third word of the string . string? GetLastWord(string? text, string? separator) . Gets last word of the string . bool? IsNullOrEmpty(string? value) . Determines whether the string is null or empty . bool? IsNullOrWhiteSpace(string? value) . Determines whether the string is null or whitespace . string? UrlEncode(string? value) . Encodes the value . string? UrlDecode(string? value) . Decodes the value . string? UriEncode(string? value) . Encodes the value . string? UriDecode(string? value) . Decodes the value . bool? StartsWith(string? value, string? prefix) . Determines whether the string starts with the specified prefix . bool? StartsWith(string? value, string? prefix, string comparison) . Determines whether the string starts with the specified prefix . bool? EndsWith(string? value, string? suffix) . Determines whether the string ends with the specified suffix . bool? EndsWith(string? value, string? suffix, string comparison) . Determines whether the string ends with the specified suffix . string? RegexReplace(string? value, string? pattern, string? replacement) . Replace the specified value part that matches the pattern with the replacement . string[]? SplitByLinuxNewLines(string? input) . Split string by Linux-style newlines (\\n) . string[]? SplitByWindowsNewLines(string? input) . Split string by Windows-style newlines (\\r\\n) . string[]? SplitByNewLines(string? input) . Smart split that handles both Windows (\\r\\n) and Linux (\\n) newlines . Decimal Sum(string name) . Gets the sum value of a given group. Decimal Sum(string name, int parent) . Gets the sum value of a given group. Decimal SumIncome(string name) . Gets the sum value of a given group. Decimal SumIncome(string name, int parent) . Gets the sum value of a given group. Decimal SumOutcome(string name) . Gets the outcome value of a given group. Decimal SumOutcome(string name, int parent) . Gets the outcome value of a given group. TimeSpan? SumTimeSpan(string name) . Gets the sum value of a given group. TimeSpan? SumTimeSpan(string name, int parent) . Gets the sum value of a given group. TimeSpan? MinTimeSpan(string name) . Gets the min value of a given group. TimeSpan? MinTimeSpan(string name, int parent) . Gets the min value of a given group. TimeSpan? MaxTimeSpan(string name) . Gets the max value of a given group. TimeSpan? MaxTimeSpan(string name, int parent) . Gets the min value of a given group. char? ToChar(string? value) . Converts given value to character . char? ToChar(int? value) . Converts given value to character . char? ToChar(short? value) . Converts given value to character . char? ToChar(byte? value) . Converts given value to character . char? ToChar(object? value) . Converts given value to character . DateTime? ToDateTime(string value) . Converts given value to DateTime . DateTime? ToDateTime(string value, string culture) . Converts given value to DateTime . Decimal? ToDecimal(string? value) . Converts given value to decimal . Decimal? ToDecimal(string value, string culture) . Converts given value to decimal withing given culture . Decimal? ToDecimal(byte? value) . Converts given value to Decimal . Decimal? ToDecimal(sbyte? value) . Converts given value to Decimal . Decimal? ToDecimal(short? value) . Converts given value to Decimal . Decimal? ToDecimal(ushort? value) . Converts given value to Decimal . Decimal? ToDecimal(long? value) . Converts given value to Decimal . Decimal? ToDecimal(ulong? value) . Converts given value to Decimal . Decimal? ToDecimal(float? value) . Converts given value to Decimal . Decimal? ToDecimal(double? value) . Converts given value to Decimal . Decimal? ToDecimal(object? value) . Converts given value to Decimal . double? ToDouble(object? value) . Converts given value to double . double? ToDouble(string? value) . Converts given value to double . double? ToDouble(byte? value) . Converts given value to double . double? ToDouble(sbyte? value) . Converts given value to double . double? ToDouble(short? value) . Converts given value to double . double? ToDouble(ushort? value) . Converts given value to double . double? ToDouble(int? value) . Converts given value to double . double? ToDouble(uint? value) . Converts given value to double . double? ToDouble(long? value) . Converts given value to double . double? ToDouble(ulong? value) . Converts given value to double . double? ToDouble(float? value) . Converts given value to double . double? ToDouble(double? value) . Converts given value to double . double? ToDouble(Decimal? value) . Converts given value to double . float? ToFloat(string? value) . Converts given value to float . float? ToFloat(byte? value) . Converts given value to float . float? ToFloat(sbyte? value) . Converts given value to float . float? ToFloat(short? value) . Converts given value to float . float? ToFloat(ushort? value) . Converts given value to float . float? ToFloat(int? value) . Converts given value to float . float? ToFloat(uint? value) . Converts given value to float . float? ToFloat(long? value) . Converts given value to float . float? ToFloat(ulong? value) . Converts given value to float . float? ToFloat(float? value) . Converts given value to float . float? ToFloat(Decimal? value) . Converts given value to float . int? ToInt32(string value) . Converts given value to int . int? ToInt32(byte? value) . Converts given value to int . int? ToInt32(sbyte? value) . Converts given value to int . int? ToInt32(short? value) . Converts given value to int . int? ToInt32(ushort? value) . Converts given value to int . int? ToInt32(int? value) . Converts given value to int . int? ToInt32(uint? value) . Converts given value to int . int? ToInt32(long? value) . Converts given value to int . int? ToInt32(ulong? value) . Converts given value to int . int? ToInt32(float? value) . Converts given value to int . int? ToInt32(double? value) . Converts given value to int . int? ToInt32(Decimal? value) . Converts given value to int . int? ToInt32(object? value) . Converts given value to int . long? ToInt64(string value) . Converts given value to Int64 . long? ToInt64(byte? value) . Converts given value to long . long? ToInt64(sbyte? value) . Converts given value to long . long? ToInt64(short? value) . Converts given value to long . long? ToInt64(ushort? value) . Converts given value to long . long? ToInt64(int? value) . Converts given value to long . long? ToInt64(uint? value) . Converts given value to long . long? ToInt64(long? value) . Converts given value to long . long? ToInt64(ulong? value) . Converts given value to long . long? ToInt64(float? value) . Converts given value to long . long? ToInt64(double? value) . Converts given value to long . long? ToInt64(Decimal? value) . Converts given value to long . long? ToInt64(object? value) . Converts given value to long . string? ToString(char? value) . Converts given value to string . string? ToString(DateTimeOffset? value) . Converts given value to string . string? ToString(DateTimeOffset? value, string format) . Converts given value to string . string? ToString(byte? value) . Converts given value to string . string? ToString(byte? value, string format) . Converts given value to string . string? ToString(sbyte? value) . Converts given value to string . string? ToString(sbyte? value, string format) . Converts given value to string . string? ToString(int? value) . Converts given value to string . string? ToString(int? value, string format) . Converts given value to string . string? ToString(uint? value) . Converts given value to string . string? ToString(uint? value, string format) . Converts given value to string . string? ToString(long? value) . Converts given value to string . string? ToString(long? value, string format) . Converts given value to string . string? ToString(ulong? value) . Converts given value to string . string? ToString(ulong? value, string format) . Converts given value to string . string? ToString(float? value) . Converts given value to string . string? ToString(float? value, string format) . Converts given value to string . string? ToString(double? value) . Converts given value to string . string? ToString(double? value, string format) . Converts given value to string . string? ToString(Decimal? value) . Converts given value to string . string? ToString(Decimal? value, string format) . Converts given value to string . string? ToString(bool? value) . Converts given value to string . string? ToString(object? value) . Converts given value to string . string? ToString&lt;T&gt;(T? value) . Converts given value to string . string ToString(string[] value) . Converts given value to string . string ToString&lt;T&gt;(T[] value) . Converts given value to string . TimeSpan? ToTimeSpan(string value) . Converts given value to TimeSpan . TimeSpan? ToTimeSpan(string value, string culture) . Converts given value to TimeSpan . IEnumerable&lt;T&gt; Window&lt;T&gt;(string name) . Gets the window . ",
    "url": "/data-sources/Os/linux-x64.html#base-methods",
    
    "relUrl": "/data-sources/Os/linux-x64.html#base-methods"
  },"158": {
    "doc": "Linux X64",
    "title": "Linux X64",
    "content": " ",
    "url": "/data-sources/Os/linux-x64.html",
    
    "relUrl": "/data-sources/Os/linux-x64.html"
  },"159": {
    "doc": "Linux X64",
    "title": "Musoq.DataSources.Sqlite",
    "content": "Provides ability to work with sqlite database . ",
    "url": "/data-sources/Sqlite/linux-x64.html#musoqdatasourcessqlite",
    
    "relUrl": "/data-sources/Sqlite/linux-x64.html#musoqdatasourcessqlite"
  },"160": {
    "doc": "Linux X64",
    "title": "Tables",
    "content": "Table is a collection of rows and columns that the plugin exposes. Below are the tables that are exposed by this data source. sqlite.tableName() . Gives ability to process sqlite table . Environment variables . In order to use the plugin, the user must set any required environment variables as specified in the environments element. Failure to do so may result in the plugin not functioning correctly. | Name | Is required | Description | . | SQLITE_CONNECTION_STRING | true | Sqlite connection string | . Columns . This table has a dynamic structure, which means that its columns and other details cannot be determined until runtime. As a result, it is not possible to include a complete description of this table in the documentation. Instead, the actual columns and other details of this table will be determined at runtime. ",
    "url": "/data-sources/Sqlite/linux-x64.html#tables",
    
    "relUrl": "/data-sources/Sqlite/linux-x64.html#tables"
  },"161": {
    "doc": "Linux X64",
    "title": "Base Methods",
    "content": "Base methods are methods that can be called on the data source specific column. Those methods are automatically inherited and enriches the data source specific methods. Below are those base methods that are exposed by this data source. int RowNumber() . Gets the row number of the current row. string? GetTypeName(object? obj) . Gets the typename of passed object. string AggregateValues(string name) . Aggregates values into a single value. string AggregateValues(string name, int parent) . Aggregates values into a single value. Decimal Avg(string name) . Gets the aggregated average value from the given group name . Decimal Avg(string name, int parent) . Gets the aggregated average value from the given group name . byte? ShiftLeft(byte? value, int shift) . Shifts the value to the left by the specified number of bits. short? ShiftLeft(short? value, int shift) . Shifts the value to the left by the specified number of bits. int? ShiftLeft(int? value, int shift) . Shifts the value to the left by the specified number of bits. long? ShiftLeft(long? value, int shift) . Shifts the value to the left by the specified number of bits. sbyte? ShiftLeft(sbyte? value, int shift) . Shifts the value to the left by the specified number of bits. ushort? ShiftLeft(ushort? value, int shift) . Shifts the value to the left by the specified number of bits. uint? ShiftLeft(uint? value, int shift) . Shifts the value to the left by the specified number of bits. ulong? ShiftLeft(ulong? value, int shift) . Shifts the value to the left by the specified number of bits. byte? ShiftRight(byte? value, int shift) . Shifts the value to the right by the specified number of bits. short? ShiftRight(short? value, int shift) . Shifts the value to the right by the specified number of bits. int? ShiftRight(int? value, int shift) . Shifts the value to the right by the specified number of bits. long? ShiftRight(long? value, int shift) . Shifts the value to the right by the specified number of bits. sbyte? ShiftRight(sbyte? value, int shift) . Shifts the value to the right by the specified number of bits. ushort? ShiftRight(ushort? value, int shift) . Shifts the value to the right by the specified number of bits. uint? ShiftRight(uint? value, int shift) . Shifts the value to the right by the specified number of bits. ulong? ShiftRight(ulong? value, int shift) . Shifts the value to the right by the specified number of bits. byte? Not(byte? value) . Performs bitwise NOT operation on a given value. short? Not(short? value) . Performs bitwise NOT operation on a given value. int? Not(int? value) . Performs bitwise NOT operation on a given value. long? Not(long? value) . Performs bitwise NOT operation on a given value. sbyte? Not(sbyte? value) . Performs bitwise NOT operation on a given value. ushort? Not(ushort? value) . Performs bitwise NOT operation on a given value. uint? Not(uint? value) . Performs bitwise NOT operation on a given value. ulong? Not(ulong? value) . Performs bitwise NOT operation on a given value. byte? And(byte? left, byte? right) . Performs bitwise AND operation on two given values. int? And(byte? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(byte? left, short? right) . Performs bitwise AND operation on two given values. int? And(byte? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(byte? left, int? right) . Performs bitwise AND operation on two given values. uint? And(byte? left, uint? right) . Performs bitwise AND operation on two given values. long? And(byte? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(byte? left, ulong? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, byte? right) . Performs bitwise AND operation on two given values. sbyte? And(sbyte? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, short? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, int? right) . Performs bitwise AND operation on two given values. uint? And(sbyte? left, uint? right) . Performs bitwise AND operation on two given values. long? And(sbyte? left, long? right) . Performs bitwise AND operation on two given values. int? And(short? left, byte? right) . Performs bitwise AND operation on two given values. int? And(short? left, sbyte? right) . Performs bitwise AND operation on two given values. short? And(short? left, short? right) . Performs bitwise AND operation on two given values. int? And(short? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(short? left, int? right) . Performs bitwise AND operation on two given values. uint? And(short? left, uint? right) . Performs bitwise AND operation on two given values. long? And(short? left, long? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, byte? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, short? right) . Performs bitwise AND operation on two given values. ushort? And(ushort? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, int? right) . Performs bitwise AND operation on two given values. uint? And(ushort? left, uint? right) . Performs bitwise AND operation on two given values. long? And(ushort? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(ushort? left, ulong? right) . Performs bitwise AND operation on two given values. int? And(int? left, byte? right) . Performs bitwise AND operation on two given values. int? And(int? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(int? left, short? right) . Performs bitwise AND operation on two given values. int? And(int? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(int? left, int? right) . Performs bitwise AND operation on two given values. uint? And(int? left, uint? right) . Performs bitwise AND operation on two given values. long? And(int? left, long? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, uint? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, byte? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, sbyte? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, short? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, ushort? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, int? right) . Performs bitwise AND operation on two given values. ulong? And(uint? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(uint? left, ulong? right) . Performs bitwise AND operation on two given values. long? And(long? left, long? right) . Performs bitwise AND operation on two given values. long? And(long? left, byte? right) . Performs bitwise AND operation on two given values. long? And(long? left, sbyte? right) . Performs bitwise AND operation on two given values. long? And(long? left, short? right) . Performs bitwise AND operation on two given values. long? And(long? left, ushort? right) . Performs bitwise AND operation on two given values. long? And(long? left, int? right) . Performs bitwise AND operation on two given values. long? And(long? left, uint? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, byte? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, ushort? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, uint? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, ulong? right) . Performs bitwise AND operation on two given values. byte? Or(byte? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, short? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(byte? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(byte? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(byte? left, ulong? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, byte? right) . Performs bitwise OR operation on two given values. sbyte? Or(sbyte? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, short? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(sbyte? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(sbyte? left, long? right) . Performs bitwise OR operation on two given values. int? Or(short? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(short? left, sbyte? right) . Performs bitwise OR operation on two given values. short? Or(short? left, short? right) . Performs bitwise OR operation on two given values. int? Or(short? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(short? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(short? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(short? left, long? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, short? right) . Performs bitwise OR operation on two given values. ushort? Or(ushort? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(ushort? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(ushort? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(ushort? left, ulong? right) . Performs bitwise OR operation on two given values. int? Or(int? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(int? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(int? left, short? right) . Performs bitwise OR operation on two given values. int? Or(int? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(int? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(int? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(int? left, long? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, uint? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, byte? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, sbyte? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, short? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, ushort? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, int? right) . Performs bitwise OR operation on two given values. ulong? Or(uint? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(uint? left, ulong? right) . Performs bitwise OR operation on two given values. long? Or(long? left, long? right) . Performs bitwise OR operation on two given values. long? Or(long? left, byte? right) . Performs bitwise OR operation on two given values. long? Or(long? left, sbyte? right) . Performs bitwise OR operation on two given values. long? Or(long? left, short? right) . Performs bitwise OR operation on two given values. long? Or(long? left, ushort? right) . Performs bitwise OR operation on two given values. long? Or(long? left, int? right) . Performs bitwise OR operation on two given values. long? Or(long? left, uint? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, byte? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, ushort? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, uint? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, ulong? right) . Performs bitwise OR operation on two given values. byte? Xor(byte? left, byte? right) . Performs bitwise OR operation on two given values. int? Xor(byte? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(byte? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(byte? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(byte? left, ulong? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, byte? right) . Performs bitwise Xor operation on two given values. sbyte? Xor(sbyte? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(sbyte? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(sbyte? left, long? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, sbyte? right) . Performs bitwise Xor operation on two given values. short? Xor(short? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, ushort? right) . Performs bitwise XOR operation on two given values. int? Xor(short? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(short? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(short? left, long? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, short? right) . Performs bitwise Xor operation on two given values. ushort? Xor(ushort? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(ushort? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(ushort? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ushort? left, ulong? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(int? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(int? left, long? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, uint? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, byte? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, sbyte? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, short? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, ushort? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, int? right) . Performs bitwise Xor operation on two given values. ulong? Xor(uint? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(uint? left, ulong? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, long? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, byte? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, sbyte? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, short? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, ushort? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, int? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, uint? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, ulong? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, byte? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, ushort? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, uint? right) . Performs bitwise Xor operation on two given values. byte[] GetBytes(string? content) . Gets the bytes from the given string. byte[] GetBytes(string? content, int length, int offset) . Gets the bytes from the given string within given offset and length. byte?[]? GetBytes(char? character) . Gets the bytes from the given character. byte?[]? GetBytes(bool? bit) . Gets the bytes from the given boolean. byte?[]? GetBytes(long? value) . Gets the bytes from the given long. byte?[]? GetBytes(int? value) . Gets the bytes from the given int. byte?[]? GetBytes(short? value) . Gets the bytes from the given short. byte?[]? GetBytes(ulong? value) . Gets the bytes from the given ulong. byte?[]? GetBytes(ushort? value) . Gets the bytes from the given ushort. byte?[]? GetBytes(uint? value) . Gets the bytes from the given uint. byte?[]? GetBytes(Decimal? value) . Gets the bytes from the given decimal. byte?[]? GetBytes(double? value) . Gets the bytes from the given double. byte?[]? GetBytes(float? value) . Gets the bytes from the given float. string? ToBin(byte?[]? bytes, string delimiter) . Converts given bytes to binary with defined delimiter . string ToBin&lt;T&gt;(T value) . Converts given value to binary . string ToOcta&lt;T&gt;(T value) . Converts given value to octal . string ToDec&lt;T&gt;(T value) . Converts given value to decimal . string ToBase64(byte[] value) . Converts given value to string . string ToBase64(byte[] value, int offset, int length) . Converts given array of bytes to string . byte[] FromBase64(string value) . Converts given string to bytes array . bool FromBytesToBool(byte[] value) . Converts bytes to boolean value. short FromBytesToInt16(byte[] value) . Converts bytes to a 16-bit signed integer. ushort FromBytesToUInt16(byte[] value) . Converts bytes to a 16-bit unsigned integer. int FromBytesToInt32(byte[] value) . Converts bytes to a 32-bit signed integer. uint FromBytesToUInt32(byte[] value) . Converts bytes to a 32-bit unsigned integer. long FromBytesToInt64(byte[] value) . Converts bytes to a 64-bit signed integer. ulong FromBytesToUInt64(byte[] value) . Converts bytes to a 64-bit unsigned integer. float FromBytesToFloat(byte[] value) . Converts bytes to a float value. double FromBytesToDouble(byte[] value) . Converts bytes to a float value. string FromBytesToString(byte[] value) . Converts bytes to a string. byte[] ToBytes(bool value) . Converts boolean value to bytes. byte[] ToBytes(short value) . Converts short value to bytes. byte[] ToBytes(ushort value) . Converts ushort value to bytes. byte[] ToBytes(int value) . Converts int value to bytes. byte[] ToBytes(uint value) . Converts uint value to bytes. byte[] ToBytes(long value) . Converts long value to bytes. byte[] ToBytes(ulong value) . Converts long value to bytes. string? ToHex(byte?[]? bytes, string delimiter) . Converts given bytes to hex with defined delimiter . string? ToHex&lt;T&gt;(T value) . Converts given value to binary . int Count(string name) . Gets the count value of a given group. int Count(string name, int parent) . Gets the count value of a given group. int ExtractFromDate(string? date, string partOfDate) . Extracts part of the date from the date . int ExtractFromDate(string date, string culture, string partOfDate) . Extracts part of the date from the date based on given culture . DateTimeOffset? GetDate() . Gets the current datetime . DateTimeOffset? UtcGetDate() . Gets the current datetime in UTC . int? Month(DateTimeOffset? value) . Gets the month from DateTimeOffset . int? Year(DateTimeOffset? value) . Gets the year from DateTimeOffset . int? Day(DateTimeOffset? value) . Gets the day from DateTimeOffset . int? Hour(DateTimeOffset? value) . Gets the hour from DateTimeOffset . int? Minute(DateTimeOffset? value) . Gets the minute from DateTimeOffset . int? Second(DateTimeOffset? value) . Gets the second from DateTimeOffset . int? Milliseconds(DateTimeOffset? value) . Gets the millisecond from DateTimeOffset . int? DayOfWeek(DateTimeOffset? value) . Gets the day of week from DateTimeOffset . TimeSpan? ExtractTimeSpan(DateTimeOffset? dateTimeOffset) . Extracts time from DateTimeOffset . DateTime? ToDateTimeOffset(string value) . Converts given value to DateTimeOffset . DateTimeOffset? ToDateTimeOffset(string value, string culture) . Converts given value to DateTimeOffset . IEnumerable&lt;T&gt;? Skip&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? skipCount) . Skips elements from the beginning of the sequence. IEnumerable&lt;T&gt;? Take&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? takeCount) . Takes elements from the beginning of the sequence. IEnumerable&lt;T&gt;? SkipAndTake&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? skipCount, int? takeCount) . Skip and takes elements from the beginning of the sequence. T[]? EnumerableToArray&lt;T&gt;(IEnumerable&lt;T&gt;? values) . Turn array arguments of T into a single array. T[]? MergeArrays&lt;T&gt;(T[][]? values) . Turn array arguments of T into a single array. IEnumerable&lt;T&gt;? LongestCommonSequence&lt;T&gt;(IEnumerable&lt;T&gt;? source, IEnumerable&lt;T&gt;? pattern) . Computes longest common sequence of two given sequences . T? GetElementAtOrDefault&lt;T&gt;(IEnumerable&lt;T&gt;? enumerable, int? index) . Gets the element at the specified index in a sequence . int? Length&lt;T&gt;(IEnumerable&lt;T&gt;? enumerable) . Gets the length of the sequence . int? Length&lt;T&gt;(T[]? array) . Gets the length of the array . T? Choose&lt;T&gt;(int? index, T[] values) . Gets the value of an array at the specified index . T If&lt;T&gt;(bool expressionResult, T a, T b) . Chose a or b value based on the expression result . bool? Match(string? regex, string? content) . Determine whether content matches the specified pattern . byte? Coalesce(byte?[] array) . Gets the first non-null value in a list . sbyte? Coalesce(sbyte?[] array) . Gets the first non-null value in a list . short? Coalesce(short?[] array) . Gets the first non-null value in a list . ushort? Coalesce(ushort?[] array) . Gets the first non-null value in a list . int? Coalesce(int?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(uint?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(long?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(ulong?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(Decimal?[] array) . Gets the first non-null value in a list . T? Coalesce&lt;T&gt;(T[] array) . Gets the first non-null value in a list . IEnumerable&lt;T&gt;? Distinct&lt;T&gt;(IEnumerable&lt;T&gt;? values) . Returns distinct elements from a collection. string? Md5(string? content) . Gets the md5 hash of the given string. string? Md5(byte?[]? content) . Gets the md5 hash of the given bytes array. string? Sha1(string? content) . Gets the sha256 hash of the given string. string? Sha1(byte?[]? content) . Gets the sha256 hash of the given bytes array. string? Sha256(string? content) . Gets the sha256 hash of the given string. string? Sha256(byte?[]? content) . Gets the sha256 hash of the given bytes array. string? Sha512(string? content) . Gets the sha256 hash of the given string. string? Sha512(byte?[]? content) . Gets the sha256 hash of the bytes array. string? ToJson&lt;T&gt;(T? obj) . Converts object to json. string[] ExtractFromJsonToArray(string? json, string? path) . Extracts values from json by path. string? ExtractFromJson(string? json, string? path) . Extracts values from json by path and joins them with comma. Decimal? Abs(Decimal? value) . Gets the absolute value . long? Abs(long? value) . Gets the absolute value . int? Abs(int? value) . Gets the absolute value . Decimal? Ceil(Decimal? value) . Gets the ceiling value . Decimal? Floor(Decimal? value) . Gets the floor value . Decimal? Sign(Decimal? value) . Determine whether value is greater, equal or less that zero . long? Sign(long? value) . Determine whether value is greater, equal or less that zero . Decimal? Round(Decimal? value, int precision) . Rounds the value within given precision . Decimal? PercentOf(Decimal? value, Decimal? max) . Gets the percentage of the value . int Rand() . Gets the random integer value . int? Rand(int? min, int? max) . Gets the random integer value . double? Pow(Decimal? x, Decimal? y) . Computes the pow between two values . double? Pow(double? x, double? y) . Computes the pow between two values . double? Sqrt(Decimal? x) . Computes the sqrt of a given value . double? Sqrt(double? x) . Computes the sqrt of a given value . double? Sqrt(long? x) . Computes the sqrt of a given value . double? PercentRank&lt;T&gt;(IEnumerable&lt;T&gt;? window, T? value) . Computes the percent rank of a given window . double? Log(Decimal? base, Decimal? value) . Calculates the logarithm of a value with a specified base. Decimal? Sin(Decimal? value) . Calculates sine of a value. double? Sin(double? value) . Calculates sine of a value. float? Sin(float? value) . Calculates sine of a value. Decimal? Cos(Decimal? value) . Calculates cosine of a value. double? Cos(double? value) . Calculates cosine of a value. float? Cos(float? value) . Calculates cosine of a value. Decimal Max(string name) . Gets the max value of a given group. Decimal Max(string name, int parent) . Gets the max value of a given group. Decimal Min(string name) . Gets the min value of a given group. Decimal Min(string name, int parent) . Gets the min value of a given group. Decimal StDev(string name, int parent) . Gets the StDev value of a given group. string NewId() . Gets the new identifier . string? Trim(string? value) . Removes leading and trailing whitespace from a string. string? TrimStart(string? value) . Removes leading whitespace from a string. string? TrimEnd(string? value) . Removes trailing whitespace from a string. string? Substring(string? value, int? index, int? length) . Gets the substring from the string. string? Substring(string value, int? length) . Gets the substring from the string . string? Concat(string[]? strings) . Concatenates the specified values . string? Concat(char?[]? characters) . Concatenates the specified characters . string? Concat(string? firstString, char?[]? chars) . Concatenates specified string fir characters . string? Concat(char? firstChar, string[]? strings) . Concatenate specific character with strings . string? Concat(object[]? objects) . Concatenates the specified strings . string? Concat&lt;T&gt;(T[]? objects) . Concatenates the specified strings . bool? Contains(string? content, string? what) . Determine whether the string contains the specified value . int? IndexOf(string? value, string? text) . Position of the first occurrence of the specified value . string? Soundex(string? value) . Computes soundex for the specified value . bool HasFuzzyMatchedWord(string text, string word, string separator) . Matches the specified text by splitting it with separator and applying fuzzy comparison . bool HasWordThatHasSmallerLevenshteinDistanceThan(string text, string word, int distance, string separator) . Matches the specified text by splitting it with separator and applying fuzzy comparison with a given distance . bool HasWordThatSoundLike(string text, string word, string separator) . Matches whether the specified word is present after being fuzzified within the specified text . bool HasTextThatSoundLikeSentence(string text, string sentence, string separator) . Matches whether the specified text is present in sentence after being fuzified . string? ToUpper(string value) . Makes the string uppercase . string? ToUpper(string value, string culture) . Makes the string uppercase within specified culture . string? ToUpperInvariant(string value) . Makes the string uppercase . string? ToLower(string value) . Makes the string lowercase . string? ToLower(string value, string culture) . Makes the string lowercase within specified culture . string? ToLowerInvariant(string value) . Makes the string lowercase . string? PadLeft(string? value, string? character, int? totalWidth) . Returns a new string that right-aligns the characters in this instance by padding them on the left with a specified Unicode character, for a specified total lengt . string? PadRight(string? value, string? character, int? totalWidth) . Returns a new string that left-aligns the characters in this instance by padding them on the right with a specified Unicode character, for a specified total length . string? Head(string? value, int? length) . Gets the first N characters of the string . string? Tail(string? value, int? length) . Gets the last N characters of the string . int? LevenshteinDistance(string? firstValue, string? secondValue) . Computes the Levenshtein distance between two strings . char? GetCharacterOf(string value, int index) . Gets the character at specified index . string? Reverse(string? value) . Reverses the string . string[] Split(string value, string[] separators) . Splits the string into an array of substrings based on the specified separators . char[] ToCharArray(string value) . Splits the string into an array of characters . string? LongestCommonSubstring(string source, string pattern) . Computes the longest common subsequence between two source and pattern . string Replicate(string value, int integer) . Clones the value n times . string? Translate(string? value, string? characters, string? translations) . Returns the string from the first argument after the characters specified in the second argument are translated into the characters specified in the third argument. string? Replace(string? text, string lookFor, string? changeTo) . Replaces the first occurrence of a specified string in this instance with another specified string . string? ToTitleCase(string? value) . Capitalizes the first letter of the string . string? GetNthWord(string? text, int? wordIndex, string? separator) . Gets the nth word of the string . string? GetFirstWord(string text, string separator) . Gets the first word of the string . string? GetSecondWord(string text, string separator) . Gets the second word of the string . string? GetThirdWord(string text, string separator) . Gets the third word of the string . string? GetLastWord(string? text, string? separator) . Gets last word of the string . bool? IsNullOrEmpty(string? value) . Determines whether the string is null or empty . bool? IsNullOrWhiteSpace(string? value) . Determines whether the string is null or whitespace . string? UrlEncode(string? value) . Encodes the value . string? UrlDecode(string? value) . Decodes the value . string? UriEncode(string? value) . Encodes the value . string? UriDecode(string? value) . Decodes the value . bool? StartsWith(string? value, string? prefix) . Determines whether the string starts with the specified prefix . bool? StartsWith(string? value, string? prefix, string comparison) . Determines whether the string starts with the specified prefix . bool? EndsWith(string? value, string? suffix) . Determines whether the string ends with the specified suffix . bool? EndsWith(string? value, string? suffix, string comparison) . Determines whether the string ends with the specified suffix . string? RegexReplace(string? value, string? pattern, string? replacement) . Replace the specified value part that matches the pattern with the replacement . string[]? SplitByLinuxNewLines(string? input) . Split string by Linux-style newlines (\\n) . string[]? SplitByWindowsNewLines(string? input) . Split string by Windows-style newlines (\\r\\n) . string[]? SplitByNewLines(string? input) . Smart split that handles both Windows (\\r\\n) and Linux (\\n) newlines . Decimal Sum(string name) . Gets the sum value of a given group. Decimal Sum(string name, int parent) . Gets the sum value of a given group. Decimal SumIncome(string name) . Gets the sum value of a given group. Decimal SumIncome(string name, int parent) . Gets the sum value of a given group. Decimal SumOutcome(string name) . Gets the outcome value of a given group. Decimal SumOutcome(string name, int parent) . Gets the outcome value of a given group. TimeSpan? SumTimeSpan(string name) . Gets the sum value of a given group. TimeSpan? SumTimeSpan(string name, int parent) . Gets the sum value of a given group. TimeSpan? MinTimeSpan(string name) . Gets the min value of a given group. TimeSpan? MinTimeSpan(string name, int parent) . Gets the min value of a given group. TimeSpan? MaxTimeSpan(string name) . Gets the max value of a given group. TimeSpan? MaxTimeSpan(string name, int parent) . Gets the min value of a given group. char? ToChar(string? value) . Converts given value to character . char? ToChar(int? value) . Converts given value to character . char? ToChar(short? value) . Converts given value to character . char? ToChar(byte? value) . Converts given value to character . char? ToChar(object? value) . Converts given value to character . DateTime? ToDateTime(string value) . Converts given value to DateTime . DateTime? ToDateTime(string value, string culture) . Converts given value to DateTime . Decimal? ToDecimal(string? value) . Converts given value to decimal . Decimal? ToDecimal(string value, string culture) . Converts given value to decimal withing given culture . Decimal? ToDecimal(byte? value) . Converts given value to Decimal . Decimal? ToDecimal(sbyte? value) . Converts given value to Decimal . Decimal? ToDecimal(short? value) . Converts given value to Decimal . Decimal? ToDecimal(ushort? value) . Converts given value to Decimal . Decimal? ToDecimal(long? value) . Converts given value to Decimal . Decimal? ToDecimal(ulong? value) . Converts given value to Decimal . Decimal? ToDecimal(float? value) . Converts given value to Decimal . Decimal? ToDecimal(double? value) . Converts given value to Decimal . Decimal? ToDecimal(object? value) . Converts given value to Decimal . double? ToDouble(object? value) . Converts given value to double . double? ToDouble(string? value) . Converts given value to double . double? ToDouble(byte? value) . Converts given value to double . double? ToDouble(sbyte? value) . Converts given value to double . double? ToDouble(short? value) . Converts given value to double . double? ToDouble(ushort? value) . Converts given value to double . double? ToDouble(int? value) . Converts given value to double . double? ToDouble(uint? value) . Converts given value to double . double? ToDouble(long? value) . Converts given value to double . double? ToDouble(ulong? value) . Converts given value to double . double? ToDouble(float? value) . Converts given value to double . double? ToDouble(double? value) . Converts given value to double . double? ToDouble(Decimal? value) . Converts given value to double . float? ToFloat(string? value) . Converts given value to float . float? ToFloat(byte? value) . Converts given value to float . float? ToFloat(sbyte? value) . Converts given value to float . float? ToFloat(short? value) . Converts given value to float . float? ToFloat(ushort? value) . Converts given value to float . float? ToFloat(int? value) . Converts given value to float . float? ToFloat(uint? value) . Converts given value to float . float? ToFloat(long? value) . Converts given value to float . float? ToFloat(ulong? value) . Converts given value to float . float? ToFloat(float? value) . Converts given value to float . float? ToFloat(Decimal? value) . Converts given value to float . int? ToInt32(string value) . Converts given value to int . int? ToInt32(byte? value) . Converts given value to int . int? ToInt32(sbyte? value) . Converts given value to int . int? ToInt32(short? value) . Converts given value to int . int? ToInt32(ushort? value) . Converts given value to int . int? ToInt32(int? value) . Converts given value to int . int? ToInt32(uint? value) . Converts given value to int . int? ToInt32(long? value) . Converts given value to int . int? ToInt32(ulong? value) . Converts given value to int . int? ToInt32(float? value) . Converts given value to int . int? ToInt32(double? value) . Converts given value to int . int? ToInt32(Decimal? value) . Converts given value to int . int? ToInt32(object? value) . Converts given value to int . long? ToInt64(string value) . Converts given value to Int64 . long? ToInt64(byte? value) . Converts given value to long . long? ToInt64(sbyte? value) . Converts given value to long . long? ToInt64(short? value) . Converts given value to long . long? ToInt64(ushort? value) . Converts given value to long . long? ToInt64(int? value) . Converts given value to long . long? ToInt64(uint? value) . Converts given value to long . long? ToInt64(long? value) . Converts given value to long . long? ToInt64(ulong? value) . Converts given value to long . long? ToInt64(float? value) . Converts given value to long . long? ToInt64(double? value) . Converts given value to long . long? ToInt64(Decimal? value) . Converts given value to long . long? ToInt64(object? value) . Converts given value to long . string? ToString(char? value) . Converts given value to string . string? ToString(DateTimeOffset? value) . Converts given value to string . string? ToString(DateTimeOffset? value, string format) . Converts given value to string . string? ToString(byte? value) . Converts given value to string . string? ToString(byte? value, string format) . Converts given value to string . string? ToString(sbyte? value) . Converts given value to string . string? ToString(sbyte? value, string format) . Converts given value to string . string? ToString(int? value) . Converts given value to string . string? ToString(int? value, string format) . Converts given value to string . string? ToString(uint? value) . Converts given value to string . string? ToString(uint? value, string format) . Converts given value to string . string? ToString(long? value) . Converts given value to string . string? ToString(long? value, string format) . Converts given value to string . string? ToString(ulong? value) . Converts given value to string . string? ToString(ulong? value, string format) . Converts given value to string . string? ToString(float? value) . Converts given value to string . string? ToString(float? value, string format) . Converts given value to string . string? ToString(double? value) . Converts given value to string . string? ToString(double? value, string format) . Converts given value to string . string? ToString(Decimal? value) . Converts given value to string . string? ToString(Decimal? value, string format) . Converts given value to string . string? ToString(bool? value) . Converts given value to string . string? ToString(object? value) . Converts given value to string . string? ToString&lt;T&gt;(T? value) . Converts given value to string . string ToString(string[] value) . Converts given value to string . string ToString&lt;T&gt;(T[] value) . Converts given value to string . TimeSpan? ToTimeSpan(string value) . Converts given value to TimeSpan . TimeSpan? ToTimeSpan(string value, string culture) . Converts given value to TimeSpan . IEnumerable&lt;T&gt; Window&lt;T&gt;(string name) . Gets the window . ",
    "url": "/data-sources/Sqlite/linux-x64.html#base-methods",
    
    "relUrl": "/data-sources/Sqlite/linux-x64.html#base-methods"
  },"162": {
    "doc": "Linux X64",
    "title": "Linux X64",
    "content": " ",
    "url": "/data-sources/Sqlite/linux-x64.html",
    
    "relUrl": "/data-sources/Sqlite/linux-x64.html"
  },"163": {
    "doc": "Linux X64",
    "title": "Musoq.DataSources.FlatFile",
    "content": "Provides schema to work with flat files . ",
    "url": "/data-sources/FlatFile/linux-x64.html#musoqdatasourcesflatfile",
    
    "relUrl": "/data-sources/FlatFile/linux-x64.html#musoqdatasourcesflatfile"
  },"164": {
    "doc": "Linux X64",
    "title": "Tables",
    "content": "Table is a collection of rows and columns that the plugin exposes. Below are the tables that are exposed by this data source. flat.file(string path) . Gives ability to process flat files . | Name | Type | Description | . | LineNumber | int | Line number of a given file | . | Line | string | Line of a given file | . ",
    "url": "/data-sources/FlatFile/linux-x64.html#tables",
    
    "relUrl": "/data-sources/FlatFile/linux-x64.html#tables"
  },"165": {
    "doc": "Linux X64",
    "title": "Base Methods",
    "content": "Base methods are methods that can be called on the data source specific column. Those methods are automatically inherited and enriches the data source specific methods. Below are those base methods that are exposed by this data source. int RowNumber() . Gets the row number of the current row. string? GetTypeName(object? obj) . Gets the typename of passed object. string AggregateValues(string name) . Aggregates values into a single value. string AggregateValues(string name, int parent) . Aggregates values into a single value. Decimal Avg(string name) . Gets the aggregated average value from the given group name . Decimal Avg(string name, int parent) . Gets the aggregated average value from the given group name . byte? ShiftLeft(byte? value, int shift) . Shifts the value to the left by the specified number of bits. short? ShiftLeft(short? value, int shift) . Shifts the value to the left by the specified number of bits. int? ShiftLeft(int? value, int shift) . Shifts the value to the left by the specified number of bits. long? ShiftLeft(long? value, int shift) . Shifts the value to the left by the specified number of bits. sbyte? ShiftLeft(sbyte? value, int shift) . Shifts the value to the left by the specified number of bits. ushort? ShiftLeft(ushort? value, int shift) . Shifts the value to the left by the specified number of bits. uint? ShiftLeft(uint? value, int shift) . Shifts the value to the left by the specified number of bits. ulong? ShiftLeft(ulong? value, int shift) . Shifts the value to the left by the specified number of bits. byte? ShiftRight(byte? value, int shift) . Shifts the value to the right by the specified number of bits. short? ShiftRight(short? value, int shift) . Shifts the value to the right by the specified number of bits. int? ShiftRight(int? value, int shift) . Shifts the value to the right by the specified number of bits. long? ShiftRight(long? value, int shift) . Shifts the value to the right by the specified number of bits. sbyte? ShiftRight(sbyte? value, int shift) . Shifts the value to the right by the specified number of bits. ushort? ShiftRight(ushort? value, int shift) . Shifts the value to the right by the specified number of bits. uint? ShiftRight(uint? value, int shift) . Shifts the value to the right by the specified number of bits. ulong? ShiftRight(ulong? value, int shift) . Shifts the value to the right by the specified number of bits. byte? Not(byte? value) . Performs bitwise NOT operation on a given value. short? Not(short? value) . Performs bitwise NOT operation on a given value. int? Not(int? value) . Performs bitwise NOT operation on a given value. long? Not(long? value) . Performs bitwise NOT operation on a given value. sbyte? Not(sbyte? value) . Performs bitwise NOT operation on a given value. ushort? Not(ushort? value) . Performs bitwise NOT operation on a given value. uint? Not(uint? value) . Performs bitwise NOT operation on a given value. ulong? Not(ulong? value) . Performs bitwise NOT operation on a given value. byte? And(byte? left, byte? right) . Performs bitwise AND operation on two given values. int? And(byte? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(byte? left, short? right) . Performs bitwise AND operation on two given values. int? And(byte? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(byte? left, int? right) . Performs bitwise AND operation on two given values. uint? And(byte? left, uint? right) . Performs bitwise AND operation on two given values. long? And(byte? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(byte? left, ulong? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, byte? right) . Performs bitwise AND operation on two given values. sbyte? And(sbyte? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, short? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, int? right) . Performs bitwise AND operation on two given values. uint? And(sbyte? left, uint? right) . Performs bitwise AND operation on two given values. long? And(sbyte? left, long? right) . Performs bitwise AND operation on two given values. int? And(short? left, byte? right) . Performs bitwise AND operation on two given values. int? And(short? left, sbyte? right) . Performs bitwise AND operation on two given values. short? And(short? left, short? right) . Performs bitwise AND operation on two given values. int? And(short? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(short? left, int? right) . Performs bitwise AND operation on two given values. uint? And(short? left, uint? right) . Performs bitwise AND operation on two given values. long? And(short? left, long? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, byte? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, short? right) . Performs bitwise AND operation on two given values. ushort? And(ushort? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, int? right) . Performs bitwise AND operation on two given values. uint? And(ushort? left, uint? right) . Performs bitwise AND operation on two given values. long? And(ushort? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(ushort? left, ulong? right) . Performs bitwise AND operation on two given values. int? And(int? left, byte? right) . Performs bitwise AND operation on two given values. int? And(int? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(int? left, short? right) . Performs bitwise AND operation on two given values. int? And(int? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(int? left, int? right) . Performs bitwise AND operation on two given values. uint? And(int? left, uint? right) . Performs bitwise AND operation on two given values. long? And(int? left, long? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, uint? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, byte? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, sbyte? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, short? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, ushort? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, int? right) . Performs bitwise AND operation on two given values. ulong? And(uint? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(uint? left, ulong? right) . Performs bitwise AND operation on two given values. long? And(long? left, long? right) . Performs bitwise AND operation on two given values. long? And(long? left, byte? right) . Performs bitwise AND operation on two given values. long? And(long? left, sbyte? right) . Performs bitwise AND operation on two given values. long? And(long? left, short? right) . Performs bitwise AND operation on two given values. long? And(long? left, ushort? right) . Performs bitwise AND operation on two given values. long? And(long? left, int? right) . Performs bitwise AND operation on two given values. long? And(long? left, uint? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, byte? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, ushort? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, uint? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, ulong? right) . Performs bitwise AND operation on two given values. byte? Or(byte? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, short? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(byte? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(byte? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(byte? left, ulong? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, byte? right) . Performs bitwise OR operation on two given values. sbyte? Or(sbyte? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, short? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(sbyte? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(sbyte? left, long? right) . Performs bitwise OR operation on two given values. int? Or(short? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(short? left, sbyte? right) . Performs bitwise OR operation on two given values. short? Or(short? left, short? right) . Performs bitwise OR operation on two given values. int? Or(short? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(short? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(short? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(short? left, long? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, short? right) . Performs bitwise OR operation on two given values. ushort? Or(ushort? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(ushort? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(ushort? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(ushort? left, ulong? right) . Performs bitwise OR operation on two given values. int? Or(int? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(int? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(int? left, short? right) . Performs bitwise OR operation on two given values. int? Or(int? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(int? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(int? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(int? left, long? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, uint? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, byte? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, sbyte? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, short? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, ushort? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, int? right) . Performs bitwise OR operation on two given values. ulong? Or(uint? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(uint? left, ulong? right) . Performs bitwise OR operation on two given values. long? Or(long? left, long? right) . Performs bitwise OR operation on two given values. long? Or(long? left, byte? right) . Performs bitwise OR operation on two given values. long? Or(long? left, sbyte? right) . Performs bitwise OR operation on two given values. long? Or(long? left, short? right) . Performs bitwise OR operation on two given values. long? Or(long? left, ushort? right) . Performs bitwise OR operation on two given values. long? Or(long? left, int? right) . Performs bitwise OR operation on two given values. long? Or(long? left, uint? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, byte? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, ushort? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, uint? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, ulong? right) . Performs bitwise OR operation on two given values. byte? Xor(byte? left, byte? right) . Performs bitwise OR operation on two given values. int? Xor(byte? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(byte? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(byte? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(byte? left, ulong? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, byte? right) . Performs bitwise Xor operation on two given values. sbyte? Xor(sbyte? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(sbyte? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(sbyte? left, long? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, sbyte? right) . Performs bitwise Xor operation on two given values. short? Xor(short? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, ushort? right) . Performs bitwise XOR operation on two given values. int? Xor(short? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(short? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(short? left, long? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, short? right) . Performs bitwise Xor operation on two given values. ushort? Xor(ushort? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(ushort? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(ushort? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ushort? left, ulong? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(int? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(int? left, long? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, uint? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, byte? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, sbyte? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, short? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, ushort? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, int? right) . Performs bitwise Xor operation on two given values. ulong? Xor(uint? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(uint? left, ulong? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, long? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, byte? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, sbyte? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, short? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, ushort? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, int? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, uint? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, ulong? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, byte? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, ushort? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, uint? right) . Performs bitwise Xor operation on two given values. byte[] GetBytes(string? content) . Gets the bytes from the given string. byte[] GetBytes(string? content, int length, int offset) . Gets the bytes from the given string within given offset and length. byte?[]? GetBytes(char? character) . Gets the bytes from the given character. byte?[]? GetBytes(bool? bit) . Gets the bytes from the given boolean. byte?[]? GetBytes(long? value) . Gets the bytes from the given long. byte?[]? GetBytes(int? value) . Gets the bytes from the given int. byte?[]? GetBytes(short? value) . Gets the bytes from the given short. byte?[]? GetBytes(ulong? value) . Gets the bytes from the given ulong. byte?[]? GetBytes(ushort? value) . Gets the bytes from the given ushort. byte?[]? GetBytes(uint? value) . Gets the bytes from the given uint. byte?[]? GetBytes(Decimal? value) . Gets the bytes from the given decimal. byte?[]? GetBytes(double? value) . Gets the bytes from the given double. byte?[]? GetBytes(float? value) . Gets the bytes from the given float. string? ToBin(byte?[]? bytes, string delimiter) . Converts given bytes to binary with defined delimiter . string ToBin&lt;T&gt;(T value) . Converts given value to binary . string ToOcta&lt;T&gt;(T value) . Converts given value to octal . string ToDec&lt;T&gt;(T value) . Converts given value to decimal . string ToBase64(byte[] value) . Converts given value to string . string ToBase64(byte[] value, int offset, int length) . Converts given array of bytes to string . byte[] FromBase64(string value) . Converts given string to bytes array . bool FromBytesToBool(byte[] value) . Converts bytes to boolean value. short FromBytesToInt16(byte[] value) . Converts bytes to a 16-bit signed integer. ushort FromBytesToUInt16(byte[] value) . Converts bytes to a 16-bit unsigned integer. int FromBytesToInt32(byte[] value) . Converts bytes to a 32-bit signed integer. uint FromBytesToUInt32(byte[] value) . Converts bytes to a 32-bit unsigned integer. long FromBytesToInt64(byte[] value) . Converts bytes to a 64-bit signed integer. ulong FromBytesToUInt64(byte[] value) . Converts bytes to a 64-bit unsigned integer. float FromBytesToFloat(byte[] value) . Converts bytes to a float value. double FromBytesToDouble(byte[] value) . Converts bytes to a float value. string FromBytesToString(byte[] value) . Converts bytes to a string. byte[] ToBytes(bool value) . Converts boolean value to bytes. byte[] ToBytes(short value) . Converts short value to bytes. byte[] ToBytes(ushort value) . Converts ushort value to bytes. byte[] ToBytes(int value) . Converts int value to bytes. byte[] ToBytes(uint value) . Converts uint value to bytes. byte[] ToBytes(long value) . Converts long value to bytes. byte[] ToBytes(ulong value) . Converts long value to bytes. string? ToHex(byte?[]? bytes, string delimiter) . Converts given bytes to hex with defined delimiter . string? ToHex&lt;T&gt;(T value) . Converts given value to binary . int Count(string name) . Gets the count value of a given group. int Count(string name, int parent) . Gets the count value of a given group. int ExtractFromDate(string? date, string partOfDate) . Extracts part of the date from the date . int ExtractFromDate(string date, string culture, string partOfDate) . Extracts part of the date from the date based on given culture . DateTimeOffset? GetDate() . Gets the current datetime . DateTimeOffset? UtcGetDate() . Gets the current datetime in UTC . int? Month(DateTimeOffset? value) . Gets the month from DateTimeOffset . int? Year(DateTimeOffset? value) . Gets the year from DateTimeOffset . int? Day(DateTimeOffset? value) . Gets the day from DateTimeOffset . int? Hour(DateTimeOffset? value) . Gets the hour from DateTimeOffset . int? Minute(DateTimeOffset? value) . Gets the minute from DateTimeOffset . int? Second(DateTimeOffset? value) . Gets the second from DateTimeOffset . int? Milliseconds(DateTimeOffset? value) . Gets the millisecond from DateTimeOffset . int? DayOfWeek(DateTimeOffset? value) . Gets the day of week from DateTimeOffset . TimeSpan? ExtractTimeSpan(DateTimeOffset? dateTimeOffset) . Extracts time from DateTimeOffset . DateTime? ToDateTimeOffset(string value) . Converts given value to DateTimeOffset . DateTimeOffset? ToDateTimeOffset(string value, string culture) . Converts given value to DateTimeOffset . IEnumerable&lt;T&gt;? Skip&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? skipCount) . Skips elements from the beginning of the sequence. IEnumerable&lt;T&gt;? Take&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? takeCount) . Takes elements from the beginning of the sequence. IEnumerable&lt;T&gt;? SkipAndTake&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? skipCount, int? takeCount) . Skip and takes elements from the beginning of the sequence. T[]? EnumerableToArray&lt;T&gt;(IEnumerable&lt;T&gt;? values) . Turn array arguments of T into a single array. T[]? MergeArrays&lt;T&gt;(T[][]? values) . Turn array arguments of T into a single array. IEnumerable&lt;T&gt;? LongestCommonSequence&lt;T&gt;(IEnumerable&lt;T&gt;? source, IEnumerable&lt;T&gt;? pattern) . Computes longest common sequence of two given sequences . T? GetElementAtOrDefault&lt;T&gt;(IEnumerable&lt;T&gt;? enumerable, int? index) . Gets the element at the specified index in a sequence . int? Length&lt;T&gt;(IEnumerable&lt;T&gt;? enumerable) . Gets the length of the sequence . int? Length&lt;T&gt;(T[]? array) . Gets the length of the array . T? Choose&lt;T&gt;(int? index, T[] values) . Gets the value of an array at the specified index . T If&lt;T&gt;(bool expressionResult, T a, T b) . Chose a or b value based on the expression result . bool? Match(string? regex, string? content) . Determine whether content matches the specified pattern . byte? Coalesce(byte?[] array) . Gets the first non-null value in a list . sbyte? Coalesce(sbyte?[] array) . Gets the first non-null value in a list . short? Coalesce(short?[] array) . Gets the first non-null value in a list . ushort? Coalesce(ushort?[] array) . Gets the first non-null value in a list . int? Coalesce(int?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(uint?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(long?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(ulong?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(Decimal?[] array) . Gets the first non-null value in a list . T? Coalesce&lt;T&gt;(T[] array) . Gets the first non-null value in a list . IEnumerable&lt;T&gt;? Distinct&lt;T&gt;(IEnumerable&lt;T&gt;? values) . Returns distinct elements from a collection. string? Md5(string? content) . Gets the md5 hash of the given string. string? Md5(byte?[]? content) . Gets the md5 hash of the given bytes array. string? Sha1(string? content) . Gets the sha256 hash of the given string. string? Sha1(byte?[]? content) . Gets the sha256 hash of the given bytes array. string? Sha256(string? content) . Gets the sha256 hash of the given string. string? Sha256(byte?[]? content) . Gets the sha256 hash of the given bytes array. string? Sha512(string? content) . Gets the sha256 hash of the given string. string? Sha512(byte?[]? content) . Gets the sha256 hash of the bytes array. string? ToJson&lt;T&gt;(T? obj) . Converts object to json. string[] ExtractFromJsonToArray(string? json, string? path) . Extracts values from json by path. string? ExtractFromJson(string? json, string? path) . Extracts values from json by path and joins them with comma. Decimal? Abs(Decimal? value) . Gets the absolute value . long? Abs(long? value) . Gets the absolute value . int? Abs(int? value) . Gets the absolute value . Decimal? Ceil(Decimal? value) . Gets the ceiling value . Decimal? Floor(Decimal? value) . Gets the floor value . Decimal? Sign(Decimal? value) . Determine whether value is greater, equal or less that zero . long? Sign(long? value) . Determine whether value is greater, equal or less that zero . Decimal? Round(Decimal? value, int precision) . Rounds the value within given precision . Decimal? PercentOf(Decimal? value, Decimal? max) . Gets the percentage of the value . int Rand() . Gets the random integer value . int? Rand(int? min, int? max) . Gets the random integer value . double? Pow(Decimal? x, Decimal? y) . Computes the pow between two values . double? Pow(double? x, double? y) . Computes the pow between two values . double? Sqrt(Decimal? x) . Computes the sqrt of a given value . double? Sqrt(double? x) . Computes the sqrt of a given value . double? Sqrt(long? x) . Computes the sqrt of a given value . double? PercentRank&lt;T&gt;(IEnumerable&lt;T&gt;? window, T? value) . Computes the percent rank of a given window . double? Log(Decimal? base, Decimal? value) . Calculates the logarithm of a value with a specified base. Decimal? Sin(Decimal? value) . Calculates sine of a value. double? Sin(double? value) . Calculates sine of a value. float? Sin(float? value) . Calculates sine of a value. Decimal? Cos(Decimal? value) . Calculates cosine of a value. double? Cos(double? value) . Calculates cosine of a value. float? Cos(float? value) . Calculates cosine of a value. Decimal Max(string name) . Gets the max value of a given group. Decimal Max(string name, int parent) . Gets the max value of a given group. Decimal Min(string name) . Gets the min value of a given group. Decimal Min(string name, int parent) . Gets the min value of a given group. Decimal StDev(string name, int parent) . Gets the StDev value of a given group. string NewId() . Gets the new identifier . string? Trim(string? value) . Removes leading and trailing whitespace from a string. string? TrimStart(string? value) . Removes leading whitespace from a string. string? TrimEnd(string? value) . Removes trailing whitespace from a string. string? Substring(string? value, int? index, int? length) . Gets the substring from the string. string? Substring(string value, int? length) . Gets the substring from the string . string? Concat(string[]? strings) . Concatenates the specified values . string? Concat(char?[]? characters) . Concatenates the specified characters . string? Concat(string? firstString, char?[]? chars) . Concatenates specified string fir characters . string? Concat(char? firstChar, string[]? strings) . Concatenate specific character with strings . string? Concat(object[]? objects) . Concatenates the specified strings . string? Concat&lt;T&gt;(T[]? objects) . Concatenates the specified strings . bool? Contains(string? content, string? what) . Determine whether the string contains the specified value . int? IndexOf(string? value, string? text) . Position of the first occurrence of the specified value . string? Soundex(string? value) . Computes soundex for the specified value . bool HasFuzzyMatchedWord(string text, string word, string separator) . Matches the specified text by splitting it with separator and applying fuzzy comparison . bool HasWordThatHasSmallerLevenshteinDistanceThan(string text, string word, int distance, string separator) . Matches the specified text by splitting it with separator and applying fuzzy comparison with a given distance . bool HasWordThatSoundLike(string text, string word, string separator) . Matches whether the specified word is present after being fuzzified within the specified text . bool HasTextThatSoundLikeSentence(string text, string sentence, string separator) . Matches whether the specified text is present in sentence after being fuzified . string? ToUpper(string value) . Makes the string uppercase . string? ToUpper(string value, string culture) . Makes the string uppercase within specified culture . string? ToUpperInvariant(string value) . Makes the string uppercase . string? ToLower(string value) . Makes the string lowercase . string? ToLower(string value, string culture) . Makes the string lowercase within specified culture . string? ToLowerInvariant(string value) . Makes the string lowercase . string? PadLeft(string? value, string? character, int? totalWidth) . Returns a new string that right-aligns the characters in this instance by padding them on the left with a specified Unicode character, for a specified total lengt . string? PadRight(string? value, string? character, int? totalWidth) . Returns a new string that left-aligns the characters in this instance by padding them on the right with a specified Unicode character, for a specified total length . string? Head(string? value, int? length) . Gets the first N characters of the string . string? Tail(string? value, int? length) . Gets the last N characters of the string . int? LevenshteinDistance(string? firstValue, string? secondValue) . Computes the Levenshtein distance between two strings . char? GetCharacterOf(string value, int index) . Gets the character at specified index . string? Reverse(string? value) . Reverses the string . string[] Split(string value, string[] separators) . Splits the string into an array of substrings based on the specified separators . char[] ToCharArray(string value) . Splits the string into an array of characters . string? LongestCommonSubstring(string source, string pattern) . Computes the longest common subsequence between two source and pattern . string Replicate(string value, int integer) . Clones the value n times . string? Translate(string? value, string? characters, string? translations) . Returns the string from the first argument after the characters specified in the second argument are translated into the characters specified in the third argument. string? Replace(string? text, string lookFor, string? changeTo) . Replaces the first occurrence of a specified string in this instance with another specified string . string? ToTitleCase(string? value) . Capitalizes the first letter of the string . string? GetNthWord(string? text, int? wordIndex, string? separator) . Gets the nth word of the string . string? GetFirstWord(string text, string separator) . Gets the first word of the string . string? GetSecondWord(string text, string separator) . Gets the second word of the string . string? GetThirdWord(string text, string separator) . Gets the third word of the string . string? GetLastWord(string? text, string? separator) . Gets last word of the string . bool? IsNullOrEmpty(string? value) . Determines whether the string is null or empty . bool? IsNullOrWhiteSpace(string? value) . Determines whether the string is null or whitespace . string? UrlEncode(string? value) . Encodes the value . string? UrlDecode(string? value) . Decodes the value . string? UriEncode(string? value) . Encodes the value . string? UriDecode(string? value) . Decodes the value . bool? StartsWith(string? value, string? prefix) . Determines whether the string starts with the specified prefix . bool? StartsWith(string? value, string? prefix, string comparison) . Determines whether the string starts with the specified prefix . bool? EndsWith(string? value, string? suffix) . Determines whether the string ends with the specified suffix . bool? EndsWith(string? value, string? suffix, string comparison) . Determines whether the string ends with the specified suffix . string? RegexReplace(string? value, string? pattern, string? replacement) . Replace the specified value part that matches the pattern with the replacement . string[]? SplitByLinuxNewLines(string? input) . Split string by Linux-style newlines (\\n) . string[]? SplitByWindowsNewLines(string? input) . Split string by Windows-style newlines (\\r\\n) . string[]? SplitByNewLines(string? input) . Smart split that handles both Windows (\\r\\n) and Linux (\\n) newlines . Decimal Sum(string name) . Gets the sum value of a given group. Decimal Sum(string name, int parent) . Gets the sum value of a given group. Decimal SumIncome(string name) . Gets the sum value of a given group. Decimal SumIncome(string name, int parent) . Gets the sum value of a given group. Decimal SumOutcome(string name) . Gets the outcome value of a given group. Decimal SumOutcome(string name, int parent) . Gets the outcome value of a given group. TimeSpan? SumTimeSpan(string name) . Gets the sum value of a given group. TimeSpan? SumTimeSpan(string name, int parent) . Gets the sum value of a given group. TimeSpan? MinTimeSpan(string name) . Gets the min value of a given group. TimeSpan? MinTimeSpan(string name, int parent) . Gets the min value of a given group. TimeSpan? MaxTimeSpan(string name) . Gets the max value of a given group. TimeSpan? MaxTimeSpan(string name, int parent) . Gets the min value of a given group. char? ToChar(string? value) . Converts given value to character . char? ToChar(int? value) . Converts given value to character . char? ToChar(short? value) . Converts given value to character . char? ToChar(byte? value) . Converts given value to character . char? ToChar(object? value) . Converts given value to character . DateTime? ToDateTime(string value) . Converts given value to DateTime . DateTime? ToDateTime(string value, string culture) . Converts given value to DateTime . Decimal? ToDecimal(string? value) . Converts given value to decimal . Decimal? ToDecimal(string value, string culture) . Converts given value to decimal withing given culture . Decimal? ToDecimal(byte? value) . Converts given value to Decimal . Decimal? ToDecimal(sbyte? value) . Converts given value to Decimal . Decimal? ToDecimal(short? value) . Converts given value to Decimal . Decimal? ToDecimal(ushort? value) . Converts given value to Decimal . Decimal? ToDecimal(long? value) . Converts given value to Decimal . Decimal? ToDecimal(ulong? value) . Converts given value to Decimal . Decimal? ToDecimal(float? value) . Converts given value to Decimal . Decimal? ToDecimal(double? value) . Converts given value to Decimal . Decimal? ToDecimal(object? value) . Converts given value to Decimal . double? ToDouble(object? value) . Converts given value to double . double? ToDouble(string? value) . Converts given value to double . double? ToDouble(byte? value) . Converts given value to double . double? ToDouble(sbyte? value) . Converts given value to double . double? ToDouble(short? value) . Converts given value to double . double? ToDouble(ushort? value) . Converts given value to double . double? ToDouble(int? value) . Converts given value to double . double? ToDouble(uint? value) . Converts given value to double . double? ToDouble(long? value) . Converts given value to double . double? ToDouble(ulong? value) . Converts given value to double . double? ToDouble(float? value) . Converts given value to double . double? ToDouble(double? value) . Converts given value to double . double? ToDouble(Decimal? value) . Converts given value to double . float? ToFloat(string? value) . Converts given value to float . float? ToFloat(byte? value) . Converts given value to float . float? ToFloat(sbyte? value) . Converts given value to float . float? ToFloat(short? value) . Converts given value to float . float? ToFloat(ushort? value) . Converts given value to float . float? ToFloat(int? value) . Converts given value to float . float? ToFloat(uint? value) . Converts given value to float . float? ToFloat(long? value) . Converts given value to float . float? ToFloat(ulong? value) . Converts given value to float . float? ToFloat(float? value) . Converts given value to float . float? ToFloat(Decimal? value) . Converts given value to float . int? ToInt32(string value) . Converts given value to int . int? ToInt32(byte? value) . Converts given value to int . int? ToInt32(sbyte? value) . Converts given value to int . int? ToInt32(short? value) . Converts given value to int . int? ToInt32(ushort? value) . Converts given value to int . int? ToInt32(int? value) . Converts given value to int . int? ToInt32(uint? value) . Converts given value to int . int? ToInt32(long? value) . Converts given value to int . int? ToInt32(ulong? value) . Converts given value to int . int? ToInt32(float? value) . Converts given value to int . int? ToInt32(double? value) . Converts given value to int . int? ToInt32(Decimal? value) . Converts given value to int . int? ToInt32(object? value) . Converts given value to int . long? ToInt64(string value) . Converts given value to Int64 . long? ToInt64(byte? value) . Converts given value to long . long? ToInt64(sbyte? value) . Converts given value to long . long? ToInt64(short? value) . Converts given value to long . long? ToInt64(ushort? value) . Converts given value to long . long? ToInt64(int? value) . Converts given value to long . long? ToInt64(uint? value) . Converts given value to long . long? ToInt64(long? value) . Converts given value to long . long? ToInt64(ulong? value) . Converts given value to long . long? ToInt64(float? value) . Converts given value to long . long? ToInt64(double? value) . Converts given value to long . long? ToInt64(Decimal? value) . Converts given value to long . long? ToInt64(object? value) . Converts given value to long . string? ToString(char? value) . Converts given value to string . string? ToString(DateTimeOffset? value) . Converts given value to string . string? ToString(DateTimeOffset? value, string format) . Converts given value to string . string? ToString(byte? value) . Converts given value to string . string? ToString(byte? value, string format) . Converts given value to string . string? ToString(sbyte? value) . Converts given value to string . string? ToString(sbyte? value, string format) . Converts given value to string . string? ToString(int? value) . Converts given value to string . string? ToString(int? value, string format) . Converts given value to string . string? ToString(uint? value) . Converts given value to string . string? ToString(uint? value, string format) . Converts given value to string . string? ToString(long? value) . Converts given value to string . string? ToString(long? value, string format) . Converts given value to string . string? ToString(ulong? value) . Converts given value to string . string? ToString(ulong? value, string format) . Converts given value to string . string? ToString(float? value) . Converts given value to string . string? ToString(float? value, string format) . Converts given value to string . string? ToString(double? value) . Converts given value to string . string? ToString(double? value, string format) . Converts given value to string . string? ToString(Decimal? value) . Converts given value to string . string? ToString(Decimal? value, string format) . Converts given value to string . string? ToString(bool? value) . Converts given value to string . string? ToString(object? value) . Converts given value to string . string? ToString&lt;T&gt;(T? value) . Converts given value to string . string ToString(string[] value) . Converts given value to string . string ToString&lt;T&gt;(T[] value) . Converts given value to string . TimeSpan? ToTimeSpan(string value) . Converts given value to TimeSpan . TimeSpan? ToTimeSpan(string value, string culture) . Converts given value to TimeSpan . IEnumerable&lt;T&gt; Window&lt;T&gt;(string name) . Gets the window . ",
    "url": "/data-sources/FlatFile/linux-x64.html#base-methods",
    
    "relUrl": "/data-sources/FlatFile/linux-x64.html#base-methods"
  },"166": {
    "doc": "Linux X64",
    "title": "Linux X64",
    "content": " ",
    "url": "/data-sources/FlatFile/linux-x64.html",
    
    "relUrl": "/data-sources/FlatFile/linux-x64.html"
  },"167": {
    "doc": "Linux X64",
    "title": "Musoq.DataSources.Archives",
    "content": "Provides schema to work with archives files . ",
    "url": "/data-sources/Archives/linux-x64.html#musoqdatasourcesarchives",
    
    "relUrl": "/data-sources/Archives/linux-x64.html#musoqdatasourcesarchives"
  },"168": {
    "doc": "Linux X64",
    "title": "Tables",
    "content": "Table is a collection of rows and columns that the plugin exposes. Below are the tables that are exposed by this data source. archives.file(string path) . Enumerate archive files like they were regular files . | Name | Type | Description | . | CompressionType | CompressionType | Compression type | . | ArchivedTime | DateTime? | When the file or directory were archived | . | CompressedSize | long | Compressed size of the file or directory | . | Crc | long | CRC of the file or directory | . | CreatedTime | DateTime? | When the file or directory were created | . | Key | string | Path to file or directory | . | LinkTarget | string | Link target | . | IsDirectory | bool | Is directory | . | IsEncrypted | bool | Is encrypted | . | IsSplitAfter | bool | Is split after | . | IsSolid | bool | Is solid | . | VolumeIndexFirst | int | Volume index first | . | VolumeIndexLast | int | Volume index last | . | LastAccessTime | DateTime? | When the file or directory were last accessed | . | LastModifiedTime | DateTime? | When the file or directory were last modified | . | Size | long | Size of the file or directory | . | Attrib | long? | Attributes of the file or directory | . | TextContent | string | Text content of a file | . ",
    "url": "/data-sources/Archives/linux-x64.html#tables",
    
    "relUrl": "/data-sources/Archives/linux-x64.html#tables"
  },"169": {
    "doc": "Linux X64",
    "title": "Methods",
    "content": "Methods are functions that can be called on the data source specific column. Below are the methods that are exposed by this data source. byte[] GetContent() . Gets the content of the entry as byte array. string GetTextContent() . Gets the content of the entry as string. IO.Stream GetStreamContent() . Gets the content of the entry as stream. ",
    "url": "/data-sources/Archives/linux-x64.html#methods",
    
    "relUrl": "/data-sources/Archives/linux-x64.html#methods"
  },"170": {
    "doc": "Linux X64",
    "title": "Base Methods",
    "content": "Base methods are methods that can be called on the data source specific column. Those methods are automatically inherited and enriches the data source specific methods. Below are those base methods that are exposed by this data source. int RowNumber() . Gets the row number of the current row. string? GetTypeName(object? obj) . Gets the typename of passed object. string AggregateValues(string name) . Aggregates values into a single value. string AggregateValues(string name, int parent) . Aggregates values into a single value. Decimal Avg(string name) . Gets the aggregated average value from the given group name . Decimal Avg(string name, int parent) . Gets the aggregated average value from the given group name . byte? ShiftLeft(byte? value, int shift) . Shifts the value to the left by the specified number of bits. short? ShiftLeft(short? value, int shift) . Shifts the value to the left by the specified number of bits. int? ShiftLeft(int? value, int shift) . Shifts the value to the left by the specified number of bits. long? ShiftLeft(long? value, int shift) . Shifts the value to the left by the specified number of bits. sbyte? ShiftLeft(sbyte? value, int shift) . Shifts the value to the left by the specified number of bits. ushort? ShiftLeft(ushort? value, int shift) . Shifts the value to the left by the specified number of bits. uint? ShiftLeft(uint? value, int shift) . Shifts the value to the left by the specified number of bits. ulong? ShiftLeft(ulong? value, int shift) . Shifts the value to the left by the specified number of bits. byte? ShiftRight(byte? value, int shift) . Shifts the value to the right by the specified number of bits. short? ShiftRight(short? value, int shift) . Shifts the value to the right by the specified number of bits. int? ShiftRight(int? value, int shift) . Shifts the value to the right by the specified number of bits. long? ShiftRight(long? value, int shift) . Shifts the value to the right by the specified number of bits. sbyte? ShiftRight(sbyte? value, int shift) . Shifts the value to the right by the specified number of bits. ushort? ShiftRight(ushort? value, int shift) . Shifts the value to the right by the specified number of bits. uint? ShiftRight(uint? value, int shift) . Shifts the value to the right by the specified number of bits. ulong? ShiftRight(ulong? value, int shift) . Shifts the value to the right by the specified number of bits. byte? Not(byte? value) . Performs bitwise NOT operation on a given value. short? Not(short? value) . Performs bitwise NOT operation on a given value. int? Not(int? value) . Performs bitwise NOT operation on a given value. long? Not(long? value) . Performs bitwise NOT operation on a given value. sbyte? Not(sbyte? value) . Performs bitwise NOT operation on a given value. ushort? Not(ushort? value) . Performs bitwise NOT operation on a given value. uint? Not(uint? value) . Performs bitwise NOT operation on a given value. ulong? Not(ulong? value) . Performs bitwise NOT operation on a given value. byte? And(byte? left, byte? right) . Performs bitwise AND operation on two given values. int? And(byte? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(byte? left, short? right) . Performs bitwise AND operation on two given values. int? And(byte? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(byte? left, int? right) . Performs bitwise AND operation on two given values. uint? And(byte? left, uint? right) . Performs bitwise AND operation on two given values. long? And(byte? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(byte? left, ulong? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, byte? right) . Performs bitwise AND operation on two given values. sbyte? And(sbyte? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, short? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, int? right) . Performs bitwise AND operation on two given values. uint? And(sbyte? left, uint? right) . Performs bitwise AND operation on two given values. long? And(sbyte? left, long? right) . Performs bitwise AND operation on two given values. int? And(short? left, byte? right) . Performs bitwise AND operation on two given values. int? And(short? left, sbyte? right) . Performs bitwise AND operation on two given values. short? And(short? left, short? right) . Performs bitwise AND operation on two given values. int? And(short? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(short? left, int? right) . Performs bitwise AND operation on two given values. uint? And(short? left, uint? right) . Performs bitwise AND operation on two given values. long? And(short? left, long? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, byte? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, short? right) . Performs bitwise AND operation on two given values. ushort? And(ushort? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, int? right) . Performs bitwise AND operation on two given values. uint? And(ushort? left, uint? right) . Performs bitwise AND operation on two given values. long? And(ushort? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(ushort? left, ulong? right) . Performs bitwise AND operation on two given values. int? And(int? left, byte? right) . Performs bitwise AND operation on two given values. int? And(int? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(int? left, short? right) . Performs bitwise AND operation on two given values. int? And(int? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(int? left, int? right) . Performs bitwise AND operation on two given values. uint? And(int? left, uint? right) . Performs bitwise AND operation on two given values. long? And(int? left, long? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, uint? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, byte? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, sbyte? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, short? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, ushort? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, int? right) . Performs bitwise AND operation on two given values. ulong? And(uint? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(uint? left, ulong? right) . Performs bitwise AND operation on two given values. long? And(long? left, long? right) . Performs bitwise AND operation on two given values. long? And(long? left, byte? right) . Performs bitwise AND operation on two given values. long? And(long? left, sbyte? right) . Performs bitwise AND operation on two given values. long? And(long? left, short? right) . Performs bitwise AND operation on two given values. long? And(long? left, ushort? right) . Performs bitwise AND operation on two given values. long? And(long? left, int? right) . Performs bitwise AND operation on two given values. long? And(long? left, uint? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, byte? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, ushort? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, uint? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, ulong? right) . Performs bitwise AND operation on two given values. byte? Or(byte? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, short? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(byte? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(byte? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(byte? left, ulong? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, byte? right) . Performs bitwise OR operation on two given values. sbyte? Or(sbyte? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, short? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(sbyte? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(sbyte? left, long? right) . Performs bitwise OR operation on two given values. int? Or(short? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(short? left, sbyte? right) . Performs bitwise OR operation on two given values. short? Or(short? left, short? right) . Performs bitwise OR operation on two given values. int? Or(short? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(short? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(short? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(short? left, long? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, short? right) . Performs bitwise OR operation on two given values. ushort? Or(ushort? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(ushort? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(ushort? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(ushort? left, ulong? right) . Performs bitwise OR operation on two given values. int? Or(int? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(int? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(int? left, short? right) . Performs bitwise OR operation on two given values. int? Or(int? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(int? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(int? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(int? left, long? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, uint? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, byte? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, sbyte? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, short? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, ushort? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, int? right) . Performs bitwise OR operation on two given values. ulong? Or(uint? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(uint? left, ulong? right) . Performs bitwise OR operation on two given values. long? Or(long? left, long? right) . Performs bitwise OR operation on two given values. long? Or(long? left, byte? right) . Performs bitwise OR operation on two given values. long? Or(long? left, sbyte? right) . Performs bitwise OR operation on two given values. long? Or(long? left, short? right) . Performs bitwise OR operation on two given values. long? Or(long? left, ushort? right) . Performs bitwise OR operation on two given values. long? Or(long? left, int? right) . Performs bitwise OR operation on two given values. long? Or(long? left, uint? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, byte? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, ushort? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, uint? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, ulong? right) . Performs bitwise OR operation on two given values. byte? Xor(byte? left, byte? right) . Performs bitwise OR operation on two given values. int? Xor(byte? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(byte? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(byte? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(byte? left, ulong? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, byte? right) . Performs bitwise Xor operation on two given values. sbyte? Xor(sbyte? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(sbyte? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(sbyte? left, long? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, sbyte? right) . Performs bitwise Xor operation on two given values. short? Xor(short? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, ushort? right) . Performs bitwise XOR operation on two given values. int? Xor(short? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(short? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(short? left, long? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, short? right) . Performs bitwise Xor operation on two given values. ushort? Xor(ushort? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(ushort? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(ushort? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ushort? left, ulong? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(int? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(int? left, long? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, uint? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, byte? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, sbyte? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, short? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, ushort? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, int? right) . Performs bitwise Xor operation on two given values. ulong? Xor(uint? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(uint? left, ulong? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, long? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, byte? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, sbyte? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, short? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, ushort? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, int? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, uint? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, ulong? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, byte? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, ushort? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, uint? right) . Performs bitwise Xor operation on two given values. byte[] GetBytes(string? content) . Gets the bytes from the given string. byte[] GetBytes(string? content, int length, int offset) . Gets the bytes from the given string within given offset and length. byte?[]? GetBytes(char? character) . Gets the bytes from the given character. byte?[]? GetBytes(bool? bit) . Gets the bytes from the given boolean. byte?[]? GetBytes(long? value) . Gets the bytes from the given long. byte?[]? GetBytes(int? value) . Gets the bytes from the given int. byte?[]? GetBytes(short? value) . Gets the bytes from the given short. byte?[]? GetBytes(ulong? value) . Gets the bytes from the given ulong. byte?[]? GetBytes(ushort? value) . Gets the bytes from the given ushort. byte?[]? GetBytes(uint? value) . Gets the bytes from the given uint. byte?[]? GetBytes(Decimal? value) . Gets the bytes from the given decimal. byte?[]? GetBytes(double? value) . Gets the bytes from the given double. byte?[]? GetBytes(float? value) . Gets the bytes from the given float. string? ToBin(byte?[]? bytes, string delimiter) . Converts given bytes to binary with defined delimiter . string ToBin&lt;T&gt;(T value) . Converts given value to binary . string ToOcta&lt;T&gt;(T value) . Converts given value to octal . string ToDec&lt;T&gt;(T value) . Converts given value to decimal . string ToBase64(byte[] value) . Converts given value to string . string ToBase64(byte[] value, int offset, int length) . Converts given array of bytes to string . byte[] FromBase64(string value) . Converts given string to bytes array . bool FromBytesToBool(byte[] value) . Converts bytes to boolean value. short FromBytesToInt16(byte[] value) . Converts bytes to a 16-bit signed integer. ushort FromBytesToUInt16(byte[] value) . Converts bytes to a 16-bit unsigned integer. int FromBytesToInt32(byte[] value) . Converts bytes to a 32-bit signed integer. uint FromBytesToUInt32(byte[] value) . Converts bytes to a 32-bit unsigned integer. long FromBytesToInt64(byte[] value) . Converts bytes to a 64-bit signed integer. ulong FromBytesToUInt64(byte[] value) . Converts bytes to a 64-bit unsigned integer. float FromBytesToFloat(byte[] value) . Converts bytes to a float value. double FromBytesToDouble(byte[] value) . Converts bytes to a float value. string FromBytesToString(byte[] value) . Converts bytes to a string. byte[] ToBytes(bool value) . Converts boolean value to bytes. byte[] ToBytes(short value) . Converts short value to bytes. byte[] ToBytes(ushort value) . Converts ushort value to bytes. byte[] ToBytes(int value) . Converts int value to bytes. byte[] ToBytes(uint value) . Converts uint value to bytes. byte[] ToBytes(long value) . Converts long value to bytes. byte[] ToBytes(ulong value) . Converts long value to bytes. string? ToHex(byte?[]? bytes, string delimiter) . Converts given bytes to hex with defined delimiter . string? ToHex&lt;T&gt;(T value) . Converts given value to binary . int Count(string name) . Gets the count value of a given group. int Count(string name, int parent) . Gets the count value of a given group. int ExtractFromDate(string? date, string partOfDate) . Extracts part of the date from the date . int ExtractFromDate(string date, string culture, string partOfDate) . Extracts part of the date from the date based on given culture . DateTimeOffset? GetDate() . Gets the current datetime . DateTimeOffset? UtcGetDate() . Gets the current datetime in UTC . int? Month(DateTimeOffset? value) . Gets the month from DateTimeOffset . int? Year(DateTimeOffset? value) . Gets the year from DateTimeOffset . int? Day(DateTimeOffset? value) . Gets the day from DateTimeOffset . int? Hour(DateTimeOffset? value) . Gets the hour from DateTimeOffset . int? Minute(DateTimeOffset? value) . Gets the minute from DateTimeOffset . int? Second(DateTimeOffset? value) . Gets the second from DateTimeOffset . int? Milliseconds(DateTimeOffset? value) . Gets the millisecond from DateTimeOffset . int? DayOfWeek(DateTimeOffset? value) . Gets the day of week from DateTimeOffset . TimeSpan? ExtractTimeSpan(DateTimeOffset? dateTimeOffset) . Extracts time from DateTimeOffset . DateTime? ToDateTimeOffset(string value) . Converts given value to DateTimeOffset . DateTimeOffset? ToDateTimeOffset(string value, string culture) . Converts given value to DateTimeOffset . IEnumerable&lt;T&gt;? Skip&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? skipCount) . Skips elements from the beginning of the sequence. IEnumerable&lt;T&gt;? Take&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? takeCount) . Takes elements from the beginning of the sequence. IEnumerable&lt;T&gt;? SkipAndTake&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? skipCount, int? takeCount) . Skip and takes elements from the beginning of the sequence. T[]? EnumerableToArray&lt;T&gt;(IEnumerable&lt;T&gt;? values) . Turn array arguments of T into a single array. T[]? MergeArrays&lt;T&gt;(T[][]? values) . Turn array arguments of T into a single array. IEnumerable&lt;T&gt;? LongestCommonSequence&lt;T&gt;(IEnumerable&lt;T&gt;? source, IEnumerable&lt;T&gt;? pattern) . Computes longest common sequence of two given sequences . T? GetElementAtOrDefault&lt;T&gt;(IEnumerable&lt;T&gt;? enumerable, int? index) . Gets the element at the specified index in a sequence . int? Length&lt;T&gt;(IEnumerable&lt;T&gt;? enumerable) . Gets the length of the sequence . int? Length&lt;T&gt;(T[]? array) . Gets the length of the array . T? Choose&lt;T&gt;(int? index, T[] values) . Gets the value of an array at the specified index . T If&lt;T&gt;(bool expressionResult, T a, T b) . Chose a or b value based on the expression result . bool? Match(string? regex, string? content) . Determine whether content matches the specified pattern . byte? Coalesce(byte?[] array) . Gets the first non-null value in a list . sbyte? Coalesce(sbyte?[] array) . Gets the first non-null value in a list . short? Coalesce(short?[] array) . Gets the first non-null value in a list . ushort? Coalesce(ushort?[] array) . Gets the first non-null value in a list . int? Coalesce(int?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(uint?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(long?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(ulong?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(Decimal?[] array) . Gets the first non-null value in a list . T? Coalesce&lt;T&gt;(T[] array) . Gets the first non-null value in a list . IEnumerable&lt;T&gt;? Distinct&lt;T&gt;(IEnumerable&lt;T&gt;? values) . Returns distinct elements from a collection. string? Md5(string? content) . Gets the md5 hash of the given string. string? Md5(byte?[]? content) . Gets the md5 hash of the given bytes array. string? Sha1(string? content) . Gets the sha256 hash of the given string. string? Sha1(byte?[]? content) . Gets the sha256 hash of the given bytes array. string? Sha256(string? content) . Gets the sha256 hash of the given string. string? Sha256(byte?[]? content) . Gets the sha256 hash of the given bytes array. string? Sha512(string? content) . Gets the sha256 hash of the given string. string? Sha512(byte?[]? content) . Gets the sha256 hash of the bytes array. string? ToJson&lt;T&gt;(T? obj) . Converts object to json. string[] ExtractFromJsonToArray(string? json, string? path) . Extracts values from json by path. string? ExtractFromJson(string? json, string? path) . Extracts values from json by path and joins them with comma. Decimal? Abs(Decimal? value) . Gets the absolute value . long? Abs(long? value) . Gets the absolute value . int? Abs(int? value) . Gets the absolute value . Decimal? Ceil(Decimal? value) . Gets the ceiling value . Decimal? Floor(Decimal? value) . Gets the floor value . Decimal? Sign(Decimal? value) . Determine whether value is greater, equal or less that zero . long? Sign(long? value) . Determine whether value is greater, equal or less that zero . Decimal? Round(Decimal? value, int precision) . Rounds the value within given precision . Decimal? PercentOf(Decimal? value, Decimal? max) . Gets the percentage of the value . int Rand() . Gets the random integer value . int? Rand(int? min, int? max) . Gets the random integer value . double? Pow(Decimal? x, Decimal? y) . Computes the pow between two values . double? Pow(double? x, double? y) . Computes the pow between two values . double? Sqrt(Decimal? x) . Computes the sqrt of a given value . double? Sqrt(double? x) . Computes the sqrt of a given value . double? Sqrt(long? x) . Computes the sqrt of a given value . double? PercentRank&lt;T&gt;(IEnumerable&lt;T&gt;? window, T? value) . Computes the percent rank of a given window . double? Log(Decimal? base, Decimal? value) . Calculates the logarithm of a value with a specified base. Decimal? Sin(Decimal? value) . Calculates sine of a value. double? Sin(double? value) . Calculates sine of a value. float? Sin(float? value) . Calculates sine of a value. Decimal? Cos(Decimal? value) . Calculates cosine of a value. double? Cos(double? value) . Calculates cosine of a value. float? Cos(float? value) . Calculates cosine of a value. Decimal Max(string name) . Gets the max value of a given group. Decimal Max(string name, int parent) . Gets the max value of a given group. Decimal Min(string name) . Gets the min value of a given group. Decimal Min(string name, int parent) . Gets the min value of a given group. Decimal StDev(string name, int parent) . Gets the StDev value of a given group. string NewId() . Gets the new identifier . string? Trim(string? value) . Removes leading and trailing whitespace from a string. string? TrimStart(string? value) . Removes leading whitespace from a string. string? TrimEnd(string? value) . Removes trailing whitespace from a string. string? Substring(string? value, int? index, int? length) . Gets the substring from the string. string? Substring(string value, int? length) . Gets the substring from the string . string? Concat(string[]? strings) . Concatenates the specified values . string? Concat(char?[]? characters) . Concatenates the specified characters . string? Concat(string? firstString, char?[]? chars) . Concatenates specified string fir characters . string? Concat(char? firstChar, string[]? strings) . Concatenate specific character with strings . string? Concat(object[]? objects) . Concatenates the specified strings . string? Concat&lt;T&gt;(T[]? objects) . Concatenates the specified strings . bool? Contains(string? content, string? what) . Determine whether the string contains the specified value . int? IndexOf(string? value, string? text) . Position of the first occurrence of the specified value . string? Soundex(string? value) . Computes soundex for the specified value . bool HasFuzzyMatchedWord(string text, string word, string separator) . Matches the specified text by splitting it with separator and applying fuzzy comparison . bool HasWordThatHasSmallerLevenshteinDistanceThan(string text, string word, int distance, string separator) . Matches the specified text by splitting it with separator and applying fuzzy comparison with a given distance . bool HasWordThatSoundLike(string text, string word, string separator) . Matches whether the specified word is present after being fuzzified within the specified text . bool HasTextThatSoundLikeSentence(string text, string sentence, string separator) . Matches whether the specified text is present in sentence after being fuzified . string? ToUpper(string value) . Makes the string uppercase . string? ToUpper(string value, string culture) . Makes the string uppercase within specified culture . string? ToUpperInvariant(string value) . Makes the string uppercase . string? ToLower(string value) . Makes the string lowercase . string? ToLower(string value, string culture) . Makes the string lowercase within specified culture . string? ToLowerInvariant(string value) . Makes the string lowercase . string? PadLeft(string? value, string? character, int? totalWidth) . Returns a new string that right-aligns the characters in this instance by padding them on the left with a specified Unicode character, for a specified total lengt . string? PadRight(string? value, string? character, int? totalWidth) . Returns a new string that left-aligns the characters in this instance by padding them on the right with a specified Unicode character, for a specified total length . string? Head(string? value, int? length) . Gets the first N characters of the string . string? Tail(string? value, int? length) . Gets the last N characters of the string . int? LevenshteinDistance(string? firstValue, string? secondValue) . Computes the Levenshtein distance between two strings . char? GetCharacterOf(string value, int index) . Gets the character at specified index . string? Reverse(string? value) . Reverses the string . string[] Split(string value, string[] separators) . Splits the string into an array of substrings based on the specified separators . char[] ToCharArray(string value) . Splits the string into an array of characters . string? LongestCommonSubstring(string source, string pattern) . Computes the longest common subsequence between two source and pattern . string Replicate(string value, int integer) . Clones the value n times . string? Translate(string? value, string? characters, string? translations) . Returns the string from the first argument after the characters specified in the second argument are translated into the characters specified in the third argument. string? Replace(string? text, string lookFor, string? changeTo) . Replaces the first occurrence of a specified string in this instance with another specified string . string? ToTitleCase(string? value) . Capitalizes the first letter of the string . string? GetNthWord(string? text, int? wordIndex, string? separator) . Gets the nth word of the string . string? GetFirstWord(string text, string separator) . Gets the first word of the string . string? GetSecondWord(string text, string separator) . Gets the second word of the string . string? GetThirdWord(string text, string separator) . Gets the third word of the string . string? GetLastWord(string? text, string? separator) . Gets last word of the string . bool? IsNullOrEmpty(string? value) . Determines whether the string is null or empty . bool? IsNullOrWhiteSpace(string? value) . Determines whether the string is null or whitespace . string? UrlEncode(string? value) . Encodes the value . string? UrlDecode(string? value) . Decodes the value . string? UriEncode(string? value) . Encodes the value . string? UriDecode(string? value) . Decodes the value . bool? StartsWith(string? value, string? prefix) . Determines whether the string starts with the specified prefix . bool? StartsWith(string? value, string? prefix, string comparison) . Determines whether the string starts with the specified prefix . bool? EndsWith(string? value, string? suffix) . Determines whether the string ends with the specified suffix . bool? EndsWith(string? value, string? suffix, string comparison) . Determines whether the string ends with the specified suffix . string? RegexReplace(string? value, string? pattern, string? replacement) . Replace the specified value part that matches the pattern with the replacement . string[]? SplitByLinuxNewLines(string? input) . Split string by Linux-style newlines (\\n) . string[]? SplitByWindowsNewLines(string? input) . Split string by Windows-style newlines (\\r\\n) . string[]? SplitByNewLines(string? input) . Smart split that handles both Windows (\\r\\n) and Linux (\\n) newlines . Decimal Sum(string name) . Gets the sum value of a given group. Decimal Sum(string name, int parent) . Gets the sum value of a given group. Decimal SumIncome(string name) . Gets the sum value of a given group. Decimal SumIncome(string name, int parent) . Gets the sum value of a given group. Decimal SumOutcome(string name) . Gets the outcome value of a given group. Decimal SumOutcome(string name, int parent) . Gets the outcome value of a given group. TimeSpan? SumTimeSpan(string name) . Gets the sum value of a given group. TimeSpan? SumTimeSpan(string name, int parent) . Gets the sum value of a given group. TimeSpan? MinTimeSpan(string name) . Gets the min value of a given group. TimeSpan? MinTimeSpan(string name, int parent) . Gets the min value of a given group. TimeSpan? MaxTimeSpan(string name) . Gets the max value of a given group. TimeSpan? MaxTimeSpan(string name, int parent) . Gets the min value of a given group. char? ToChar(string? value) . Converts given value to character . char? ToChar(int? value) . Converts given value to character . char? ToChar(short? value) . Converts given value to character . char? ToChar(byte? value) . Converts given value to character . char? ToChar(object? value) . Converts given value to character . DateTime? ToDateTime(string value) . Converts given value to DateTime . DateTime? ToDateTime(string value, string culture) . Converts given value to DateTime . Decimal? ToDecimal(string? value) . Converts given value to decimal . Decimal? ToDecimal(string value, string culture) . Converts given value to decimal withing given culture . Decimal? ToDecimal(byte? value) . Converts given value to Decimal . Decimal? ToDecimal(sbyte? value) . Converts given value to Decimal . Decimal? ToDecimal(short? value) . Converts given value to Decimal . Decimal? ToDecimal(ushort? value) . Converts given value to Decimal . Decimal? ToDecimal(long? value) . Converts given value to Decimal . Decimal? ToDecimal(ulong? value) . Converts given value to Decimal . Decimal? ToDecimal(float? value) . Converts given value to Decimal . Decimal? ToDecimal(double? value) . Converts given value to Decimal . Decimal? ToDecimal(object? value) . Converts given value to Decimal . double? ToDouble(object? value) . Converts given value to double . double? ToDouble(string? value) . Converts given value to double . double? ToDouble(byte? value) . Converts given value to double . double? ToDouble(sbyte? value) . Converts given value to double . double? ToDouble(short? value) . Converts given value to double . double? ToDouble(ushort? value) . Converts given value to double . double? ToDouble(int? value) . Converts given value to double . double? ToDouble(uint? value) . Converts given value to double . double? ToDouble(long? value) . Converts given value to double . double? ToDouble(ulong? value) . Converts given value to double . double? ToDouble(float? value) . Converts given value to double . double? ToDouble(double? value) . Converts given value to double . double? ToDouble(Decimal? value) . Converts given value to double . float? ToFloat(string? value) . Converts given value to float . float? ToFloat(byte? value) . Converts given value to float . float? ToFloat(sbyte? value) . Converts given value to float . float? ToFloat(short? value) . Converts given value to float . float? ToFloat(ushort? value) . Converts given value to float . float? ToFloat(int? value) . Converts given value to float . float? ToFloat(uint? value) . Converts given value to float . float? ToFloat(long? value) . Converts given value to float . float? ToFloat(ulong? value) . Converts given value to float . float? ToFloat(float? value) . Converts given value to float . float? ToFloat(Decimal? value) . Converts given value to float . int? ToInt32(string value) . Converts given value to int . int? ToInt32(byte? value) . Converts given value to int . int? ToInt32(sbyte? value) . Converts given value to int . int? ToInt32(short? value) . Converts given value to int . int? ToInt32(ushort? value) . Converts given value to int . int? ToInt32(int? value) . Converts given value to int . int? ToInt32(uint? value) . Converts given value to int . int? ToInt32(long? value) . Converts given value to int . int? ToInt32(ulong? value) . Converts given value to int . int? ToInt32(float? value) . Converts given value to int . int? ToInt32(double? value) . Converts given value to int . int? ToInt32(Decimal? value) . Converts given value to int . int? ToInt32(object? value) . Converts given value to int . long? ToInt64(string value) . Converts given value to Int64 . long? ToInt64(byte? value) . Converts given value to long . long? ToInt64(sbyte? value) . Converts given value to long . long? ToInt64(short? value) . Converts given value to long . long? ToInt64(ushort? value) . Converts given value to long . long? ToInt64(int? value) . Converts given value to long . long? ToInt64(uint? value) . Converts given value to long . long? ToInt64(long? value) . Converts given value to long . long? ToInt64(ulong? value) . Converts given value to long . long? ToInt64(float? value) . Converts given value to long . long? ToInt64(double? value) . Converts given value to long . long? ToInt64(Decimal? value) . Converts given value to long . long? ToInt64(object? value) . Converts given value to long . string? ToString(char? value) . Converts given value to string . string? ToString(DateTimeOffset? value) . Converts given value to string . string? ToString(DateTimeOffset? value, string format) . Converts given value to string . string? ToString(byte? value) . Converts given value to string . string? ToString(byte? value, string format) . Converts given value to string . string? ToString(sbyte? value) . Converts given value to string . string? ToString(sbyte? value, string format) . Converts given value to string . string? ToString(int? value) . Converts given value to string . string? ToString(int? value, string format) . Converts given value to string . string? ToString(uint? value) . Converts given value to string . string? ToString(uint? value, string format) . Converts given value to string . string? ToString(long? value) . Converts given value to string . string? ToString(long? value, string format) . Converts given value to string . string? ToString(ulong? value) . Converts given value to string . string? ToString(ulong? value, string format) . Converts given value to string . string? ToString(float? value) . Converts given value to string . string? ToString(float? value, string format) . Converts given value to string . string? ToString(double? value) . Converts given value to string . string? ToString(double? value, string format) . Converts given value to string . string? ToString(Decimal? value) . Converts given value to string . string? ToString(Decimal? value, string format) . Converts given value to string . string? ToString(bool? value) . Converts given value to string . string? ToString(object? value) . Converts given value to string . string? ToString&lt;T&gt;(T? value) . Converts given value to string . string ToString(string[] value) . Converts given value to string . string ToString&lt;T&gt;(T[] value) . Converts given value to string . TimeSpan? ToTimeSpan(string value) . Converts given value to TimeSpan . TimeSpan? ToTimeSpan(string value, string culture) . Converts given value to TimeSpan . IEnumerable&lt;T&gt; Window&lt;T&gt;(string name) . Gets the window . ",
    "url": "/data-sources/Archives/linux-x64.html#base-methods",
    
    "relUrl": "/data-sources/Archives/linux-x64.html#base-methods"
  },"171": {
    "doc": "Linux X64",
    "title": "Linux X64",
    "content": " ",
    "url": "/data-sources/Archives/linux-x64.html",
    
    "relUrl": "/data-sources/Archives/linux-x64.html"
  },"172": {
    "doc": "Linux X64",
    "title": "Musoq.DataSources.Kubernetes",
    "content": "Provides schema to work with Kubernetes. ",
    "url": "/data-sources/Kubernetes/linux-x64.html#musoqdatasourceskubernetes",
    
    "relUrl": "/data-sources/Kubernetes/linux-x64.html#musoqdatasourceskubernetes"
  },"173": {
    "doc": "Linux X64",
    "title": "Tables",
    "content": "Table is a collection of rows and columns that the plugin exposes. Below are the tables that are exposed by this data source. kubernetes.deployments() . Enumerate deployments . Environment variables . In order to use the plugin, the user must set any required environment variables as specified in the environments element. Failure to do so may result in the plugin not functioning correctly. | Name | Is required | Description | . | MUSOQ_KUBERNETES_CONFIG_FILE | false | Kubernetes config file | . Columns . | Name | Type | Description | . | Namespace | string | Namespace string | . | Name | string | Name string | . | CreationTimestamp | DateTime? | CreationTimestamp of the DeploymentEntity | . | Generation | long? | Generation of the DeploymentEntity | . | ResourceVersion | string | ResourceVersion string | . | Images | string | Image used within deployment | . | ImagePullPolicies | string | ImagePullPolicies used within deployment | . | RestartPolicy | string | RestartPolicy string | . | ContainersNames | string | Names of containers used within deployment | . | Statuses | string | Statuses of depl | . kubernetes.pods() . Enumerate pods . Environment variables . In order to use the plugin, the user must set any required environment variables as specified in the environments element. Failure to do so may result in the plugin not functioning correctly. | Name | Is required | Description | . | MUSOQ_KUBERNETES_CONFIG_FILE | false | Kubernetes config file | . Columns . | Name | Type | Description | . | Namespace | string | Namespace string | . | Name | string | Name string | . | Type | string | Type string | . | PF | string | PF string | . | Ready | string | Ready string | . | Restarts | string | Restarts string | . | Status | string | Status string | . | Cpu | string | Cpu string | . | Memory | string | Memory string | . | IP | string | IP string | . kubernetes.services() . Enumerates services . Environment variables . In order to use the plugin, the user must set any required environment variables as specified in the environments element. Failure to do so may result in the plugin not functioning correctly. | Name | Is required | Description | . | MUSOQ_KUBERNETES_CONFIG_FILE | false | Kubernetes config file | . Columns . | Name | Type | Description | . | Metadata | V1ObjectMeta | Metadata of the ServiceEntity | . | Spec | V1ServiceSpec | Spec of the ServiceEntity | . | Kind | string | Kind string | . | Status | V1ServiceStatus | Status of the ServiceEntity | . kubernetes.nodes() . Enumerates nodes . Environment variables . In order to use the plugin, the user must set any required environment variables as specified in the environments element. Failure to do so may result in the plugin not functioning correctly. | Name | Is required | Description | . | MUSOQ_KUBERNETES_CONFIG_FILE | false | Kubernetes config file | . Columns . | Name | Type | Description | . | Name | string | Name string | . | Status | string | Status string | . | Roles | string | Roles string | . | Age | DateTime? | Age of the NodeEntity | . | Version | string | Version string | . | Kernel | string | Kernel string | . | OS | string | OS string | . | Architecture | string | Architecture string | . | ContainerRuntime | string | Container Runtime string | . | Cpu | string | CPU string | . | Memory | string | Memory string | . kubernetes.configmaps() . Enumerate configmaps . Environment variables . In order to use the plugin, the user must set any required environment variables as specified in the environments element. Failure to do so may result in the plugin not functioning correctly. | Name | Is required | Description | . | MUSOQ_KUBERNETES_CONFIG_FILE | false | Kubernetes config file | . Columns . | Name | Type | Description | . | Namespace | string | Namespace string | . | Name | string | Name string | . | Age | DateTime? | Age | . kubernetes.cronJobs() . Enumerate cron jobs . Environment variables . In order to use the plugin, the user must set any required environment variables as specified in the environments element. Failure to do so may result in the plugin not functioning correctly. | Name | Is required | Description | . | MUSOQ_KUBERNETES_CONFIG_FILE | false | Kubernetes config file | . Columns . | Name | Type | Description | . | Namespace | string | Namespace string | . | Name | string | Name string | . | Schedule | string | Dictionary of the schedule | . | Active | bool | Flag indicating if the job is active | . | LastScheduleTime | DateTime? | Last schedule time of the job | . kubernetes.daemonSets() . Enumerate daemonsets . Environment variables . In order to use the plugin, the user must set any required environment variables as specified in the environments element. Failure to do so may result in the plugin not functioning correctly. | Name | Is required | Description | . | MUSOQ_KUBERNETES_CONFIG_FILE | false | Kubernetes config file | . Columns . | Name | Type | Description | . | Namespace | string | Namespace string | . | Name | string | Name string | . | Desired | int | Desired number of entities | . | Current | int | Current number of entities | . | Ready | int | Number of ready entities | . | UpToDate | int? | Number of up-to-date entities | . | Available | int? | Number of available entities | . | Age | DateTime? | Age of the entity | . kubernetes.jobs() . Enumerate jobs . Environment variables . In order to use the plugin, the user must set any required environment variables as specified in the environments element. Failure to do so may result in the plugin not functioning correctly. | Name | Is required | Description | . | MUSOQ_KUBERNETES_CONFIG_FILE | false | Kubernetes config file | . Columns . | Name | Type | Description | . | Namespace | string | Namespace string | . | Name | string | Name string | . | Completions | int | Number of completions | . | Duration | TimeSpan? | Duration of job execution | . | Images | string | Images string | . | Age | DateTime? | Age of the job | . kubernetes.persistentVolumeClaims() . Enumerate persistent volume claims . Environment variables . In order to use the plugin, the user must set any required environment variables as specified in the environments element. Failure to do so may result in the plugin not functioning correctly. | Name | Is required | Description | . | MUSOQ_KUBERNETES_CONFIG_FILE | false | Kubernetes config file | . Columns . | Name | Type | Description | . | Namespace | string | Namespace string | . | Name | string | Name string | . | Status | string | Status string | . | Volume | string | Volume string | . | Capacity | string | Capacity string | . | Age | DateTime? | Age of the PersistentVolumeClaimsEntity | . kubernetes.persistentVolumes() . Enumerate persistent volumes . Environment variables . In order to use the plugin, the user must set any required environment variables as specified in the environments element. Failure to do so may result in the plugin not functioning correctly. | Name | Is required | Description | . | MUSOQ_KUBERNETES_CONFIG_FILE | false | Kubernetes config file | . Columns . | Name | Type | Description | . | Name | string | Name string | . | Capacity | IDictionary&lt;string, ResourceQuantity&gt; | Dictionary of capacities | . | AccessModes | string | AccessModes string | . | ReclaimPolicy | string | Reclaim policy string | . | Status | string | Status string | . | Claim | string | Claim string | . | StorageClass | string | StorageClass string | . | Reason | string | Reason string | . | Age | DateTime? | Age of the PersistentVolumeEntity | . kubernetes.replicaSets() . Enumerate replicasets . Environment variables . In order to use the plugin, the user must set any required environment variables as specified in the environments element. Failure to do so may result in the plugin not functioning correctly. | Name | Is required | Description | . | MUSOQ_KUBERNETES_CONFIG_FILE | false | Kubernetes config file | . Columns . | Name | Type | Description | . | Namespace | string | Namespace string | . | Name | string | Name string | . | Desired | int? | Desired number of replicas | . | Current | string | Current string | . | ReadyAge | DateTime? | Age when the ReplicaSetEntity is ready | . kubernetes.secretsData() . Enumerate secrets data . Environment variables . In order to use the plugin, the user must set any required environment variables as specified in the environments element. Failure to do so may result in the plugin not functioning correctly. | Name | Is required | Description | . | MUSOQ_KUBERNETES_CONFIG_FILE | false | Kubernetes config file | . Columns . | Name | Type | Description | . | Namespace | string | Namespace string | . | Name | string | Name string | . | Key | string | Key string | . | Value | byte[] | Value byte array | . kubernetes.secrets() . Enumerate secrets . Environment variables . In order to use the plugin, the user must set any required environment variables as specified in the environments element. Failure to do so may result in the plugin not functioning correctly. | Name | Is required | Description | . | MUSOQ_KUBERNETES_CONFIG_FILE | false | Kubernetes config file | . Columns . | Name | Type | Description | . | Namespace | string | Namespace string | . | Name | string | Name string | . | Type | string | Type string | . | Age | DateTime? | Age of the SecretEntity | . kubernetes.statefulsets() . Enumerate statefulsets . Environment variables . In order to use the plugin, the user must set any required environment variables as specified in the environments element. Failure to do so may result in the plugin not functioning correctly. | Name | Is required | Description | . | MUSOQ_KUBERNETES_CONFIG_FILE | false | Kubernetes config file | . Columns . | Name | Type | Description | . | Namespace | string | Namespace string | . | Name | string | Name string | . | Replicas | int? | Number of replicas | . | Age | DateTime? | Age of the StatefulSetEntity | . kubernetes.podcontainers() . Enumerate pod containers . Environment variables . In order to use the plugin, the user must set any required environment variables as specified in the environments element. Failure to do so may result in the plugin not functioning correctly. | Name | Is required | Description | . | MUSOQ_KUBERNETES_CONFIG_FILE | false | Kubernetes config file | . Columns . | Name | Type | Description | . | Namespace | string | Namespace string | . | Name | string | Name string | . | ContainerName | string | Container name string | . | Image | string | Image string | . | ImagePullPolicy | string | Image pull policy string | . | Age | DateTime? | Container age | . kubernetes.podlogs(string podName, string string containerName, string namespace) . Enumerate pod containers . Environment variables . In order to use the plugin, the user must set any required environment variables as specified in the environments element. Failure to do so may result in the plugin not functioning correctly. | Name | Is required | Description | . | MUSOQ_KUBERNETES_CONFIG_FILE | false | Kubernetes config file | . Columns . | Name | Type | Description | . | Namespace | string | Namespace string | . | Name | string | Name string | . | ContainerName | string | Container name string | . | Line | string | Line string | . kubernetes.events() . Enumerate events . Environment variables . In order to use the plugin, the user must set any required environment variables as specified in the environments element. Failure to do so may result in the plugin not functioning correctly. | Name | Is required | Description | . | MUSOQ_KUBERNETES_CONFIG_FILE | false | Kubernetes config file | . Columns . | Name | Type | Description | . | Action | string | Action string | . | ApiVersion | string | ApiVersion string | . | Count | int? | Count of the event | . | EventTime | DateTime? | EventTime of the event | . | FirstTimestamp | DateTime? | FirstTimestamp of the event | . | InvolvedObject | V1ObjectReference | InvolvedObject of the event | . | Kind | string | Kind string | . | LastTimestamp | DateTime? | LastTimestamp of the event | . | Message | string | Message string | . | Reason | string | Reason string | . | Related | V1ObjectReference | Related of the event | . | ReportingComponent | string | ReportingComponent string | . | ReportingInstance | string | ReportingInstance string | . | Series | Corev1EventSeries | Series of the event | . | Source | V1EventSource | Source of the event | . | Type | string | Type string | . kubernetes.events(string namespace) . Enumerate events . Environment variables . In order to use the plugin, the user must set any required environment variables as specified in the environments element. Failure to do so may result in the plugin not functioning correctly. | Name | Is required | Description | . | MUSOQ_KUBERNETES_CONFIG_FILE | false | Kubernetes config file | . Columns . | Name | Type | Description | . | Action | string | Action string | . | ApiVersion | string | ApiVersion string | . | Count | int? | Count of the event | . | EventTime | DateTime? | EventTime of the event | . | FirstTimestamp | DateTime? | FirstTimestamp of the event | . | InvolvedObject | V1ObjectReference | InvolvedObject of the event | . | Kind | string | Kind string | . | LastTimestamp | DateTime? | LastTimestamp of the event | . | Message | string | Message string | . | Reason | string | Reason string | . | Related | V1ObjectReference | Related of the event | . | ReportingComponent | string | ReportingComponent string | . | ReportingInstance | string | ReportingInstance string | . | Series | Corev1EventSeries | Series of the event | . | Source | V1EventSource | Source of the event | . | Type | string | Type string | . ",
    "url": "/data-sources/Kubernetes/linux-x64.html#tables",
    
    "relUrl": "/data-sources/Kubernetes/linux-x64.html#tables"
  },"174": {
    "doc": "Linux X64",
    "title": "Methods",
    "content": "Methods are functions that can be called on the data source specific column. Below are the methods that are exposed by this data source. string EncodeSecret(string text) . Encodes the secret. string EncodeSecret(string text, string encoding) . Encodes the secret. string DecodeSecret(string text) . Decodes the secret. string? GetLabelOrDefault(string key) . Gets the pod container label. ",
    "url": "/data-sources/Kubernetes/linux-x64.html#methods",
    
    "relUrl": "/data-sources/Kubernetes/linux-x64.html#methods"
  },"175": {
    "doc": "Linux X64",
    "title": "Base Methods",
    "content": "Base methods are methods that can be called on the data source specific column. Those methods are automatically inherited and enriches the data source specific methods. Below are those base methods that are exposed by this data source. int RowNumber() . Gets the row number of the current row. string? GetTypeName(object? obj) . Gets the typename of passed object. string AggregateValues(string name) . Aggregates values into a single value. string AggregateValues(string name, int parent) . Aggregates values into a single value. Decimal Avg(string name) . Gets the aggregated average value from the given group name . Decimal Avg(string name, int parent) . Gets the aggregated average value from the given group name . byte? ShiftLeft(byte? value, int shift) . Shifts the value to the left by the specified number of bits. short? ShiftLeft(short? value, int shift) . Shifts the value to the left by the specified number of bits. int? ShiftLeft(int? value, int shift) . Shifts the value to the left by the specified number of bits. long? ShiftLeft(long? value, int shift) . Shifts the value to the left by the specified number of bits. sbyte? ShiftLeft(sbyte? value, int shift) . Shifts the value to the left by the specified number of bits. ushort? ShiftLeft(ushort? value, int shift) . Shifts the value to the left by the specified number of bits. uint? ShiftLeft(uint? value, int shift) . Shifts the value to the left by the specified number of bits. ulong? ShiftLeft(ulong? value, int shift) . Shifts the value to the left by the specified number of bits. byte? ShiftRight(byte? value, int shift) . Shifts the value to the right by the specified number of bits. short? ShiftRight(short? value, int shift) . Shifts the value to the right by the specified number of bits. int? ShiftRight(int? value, int shift) . Shifts the value to the right by the specified number of bits. long? ShiftRight(long? value, int shift) . Shifts the value to the right by the specified number of bits. sbyte? ShiftRight(sbyte? value, int shift) . Shifts the value to the right by the specified number of bits. ushort? ShiftRight(ushort? value, int shift) . Shifts the value to the right by the specified number of bits. uint? ShiftRight(uint? value, int shift) . Shifts the value to the right by the specified number of bits. ulong? ShiftRight(ulong? value, int shift) . Shifts the value to the right by the specified number of bits. byte? Not(byte? value) . Performs bitwise NOT operation on a given value. short? Not(short? value) . Performs bitwise NOT operation on a given value. int? Not(int? value) . Performs bitwise NOT operation on a given value. long? Not(long? value) . Performs bitwise NOT operation on a given value. sbyte? Not(sbyte? value) . Performs bitwise NOT operation on a given value. ushort? Not(ushort? value) . Performs bitwise NOT operation on a given value. uint? Not(uint? value) . Performs bitwise NOT operation on a given value. ulong? Not(ulong? value) . Performs bitwise NOT operation on a given value. byte? And(byte? left, byte? right) . Performs bitwise AND operation on two given values. int? And(byte? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(byte? left, short? right) . Performs bitwise AND operation on two given values. int? And(byte? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(byte? left, int? right) . Performs bitwise AND operation on two given values. uint? And(byte? left, uint? right) . Performs bitwise AND operation on two given values. long? And(byte? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(byte? left, ulong? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, byte? right) . Performs bitwise AND operation on two given values. sbyte? And(sbyte? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, short? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, int? right) . Performs bitwise AND operation on two given values. uint? And(sbyte? left, uint? right) . Performs bitwise AND operation on two given values. long? And(sbyte? left, long? right) . Performs bitwise AND operation on two given values. int? And(short? left, byte? right) . Performs bitwise AND operation on two given values. int? And(short? left, sbyte? right) . Performs bitwise AND operation on two given values. short? And(short? left, short? right) . Performs bitwise AND operation on two given values. int? And(short? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(short? left, int? right) . Performs bitwise AND operation on two given values. uint? And(short? left, uint? right) . Performs bitwise AND operation on two given values. long? And(short? left, long? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, byte? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, short? right) . Performs bitwise AND operation on two given values. ushort? And(ushort? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, int? right) . Performs bitwise AND operation on two given values. uint? And(ushort? left, uint? right) . Performs bitwise AND operation on two given values. long? And(ushort? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(ushort? left, ulong? right) . Performs bitwise AND operation on two given values. int? And(int? left, byte? right) . Performs bitwise AND operation on two given values. int? And(int? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(int? left, short? right) . Performs bitwise AND operation on two given values. int? And(int? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(int? left, int? right) . Performs bitwise AND operation on two given values. uint? And(int? left, uint? right) . Performs bitwise AND operation on two given values. long? And(int? left, long? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, uint? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, byte? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, sbyte? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, short? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, ushort? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, int? right) . Performs bitwise AND operation on two given values. ulong? And(uint? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(uint? left, ulong? right) . Performs bitwise AND operation on two given values. long? And(long? left, long? right) . Performs bitwise AND operation on two given values. long? And(long? left, byte? right) . Performs bitwise AND operation on two given values. long? And(long? left, sbyte? right) . Performs bitwise AND operation on two given values. long? And(long? left, short? right) . Performs bitwise AND operation on two given values. long? And(long? left, ushort? right) . Performs bitwise AND operation on two given values. long? And(long? left, int? right) . Performs bitwise AND operation on two given values. long? And(long? left, uint? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, byte? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, ushort? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, uint? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, ulong? right) . Performs bitwise AND operation on two given values. byte? Or(byte? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, short? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(byte? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(byte? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(byte? left, ulong? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, byte? right) . Performs bitwise OR operation on two given values. sbyte? Or(sbyte? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, short? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(sbyte? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(sbyte? left, long? right) . Performs bitwise OR operation on two given values. int? Or(short? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(short? left, sbyte? right) . Performs bitwise OR operation on two given values. short? Or(short? left, short? right) . Performs bitwise OR operation on two given values. int? Or(short? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(short? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(short? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(short? left, long? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, short? right) . Performs bitwise OR operation on two given values. ushort? Or(ushort? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(ushort? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(ushort? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(ushort? left, ulong? right) . Performs bitwise OR operation on two given values. int? Or(int? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(int? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(int? left, short? right) . Performs bitwise OR operation on two given values. int? Or(int? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(int? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(int? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(int? left, long? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, uint? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, byte? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, sbyte? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, short? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, ushort? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, int? right) . Performs bitwise OR operation on two given values. ulong? Or(uint? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(uint? left, ulong? right) . Performs bitwise OR operation on two given values. long? Or(long? left, long? right) . Performs bitwise OR operation on two given values. long? Or(long? left, byte? right) . Performs bitwise OR operation on two given values. long? Or(long? left, sbyte? right) . Performs bitwise OR operation on two given values. long? Or(long? left, short? right) . Performs bitwise OR operation on two given values. long? Or(long? left, ushort? right) . Performs bitwise OR operation on two given values. long? Or(long? left, int? right) . Performs bitwise OR operation on two given values. long? Or(long? left, uint? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, byte? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, ushort? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, uint? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, ulong? right) . Performs bitwise OR operation on two given values. byte? Xor(byte? left, byte? right) . Performs bitwise OR operation on two given values. int? Xor(byte? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(byte? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(byte? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(byte? left, ulong? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, byte? right) . Performs bitwise Xor operation on two given values. sbyte? Xor(sbyte? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(sbyte? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(sbyte? left, long? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, sbyte? right) . Performs bitwise Xor operation on two given values. short? Xor(short? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, ushort? right) . Performs bitwise XOR operation on two given values. int? Xor(short? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(short? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(short? left, long? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, short? right) . Performs bitwise Xor operation on two given values. ushort? Xor(ushort? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(ushort? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(ushort? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ushort? left, ulong? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(int? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(int? left, long? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, uint? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, byte? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, sbyte? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, short? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, ushort? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, int? right) . Performs bitwise Xor operation on two given values. ulong? Xor(uint? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(uint? left, ulong? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, long? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, byte? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, sbyte? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, short? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, ushort? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, int? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, uint? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, ulong? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, byte? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, ushort? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, uint? right) . Performs bitwise Xor operation on two given values. byte[] GetBytes(string? content) . Gets the bytes from the given string. byte[] GetBytes(string? content, int length, int offset) . Gets the bytes from the given string within given offset and length. byte?[]? GetBytes(char? character) . Gets the bytes from the given character. byte?[]? GetBytes(bool? bit) . Gets the bytes from the given boolean. byte?[]? GetBytes(long? value) . Gets the bytes from the given long. byte?[]? GetBytes(int? value) . Gets the bytes from the given int. byte?[]? GetBytes(short? value) . Gets the bytes from the given short. byte?[]? GetBytes(ulong? value) . Gets the bytes from the given ulong. byte?[]? GetBytes(ushort? value) . Gets the bytes from the given ushort. byte?[]? GetBytes(uint? value) . Gets the bytes from the given uint. byte?[]? GetBytes(Decimal? value) . Gets the bytes from the given decimal. byte?[]? GetBytes(double? value) . Gets the bytes from the given double. byte?[]? GetBytes(float? value) . Gets the bytes from the given float. string? ToBin(byte?[]? bytes, string delimiter) . Converts given bytes to binary with defined delimiter . string ToBin&lt;T&gt;(T value) . Converts given value to binary . string ToOcta&lt;T&gt;(T value) . Converts given value to octal . string ToDec&lt;T&gt;(T value) . Converts given value to decimal . string ToBase64(byte[] value) . Converts given value to string . string ToBase64(byte[] value, int offset, int length) . Converts given array of bytes to string . byte[] FromBase64(string value) . Converts given string to bytes array . bool FromBytesToBool(byte[] value) . Converts bytes to boolean value. short FromBytesToInt16(byte[] value) . Converts bytes to a 16-bit signed integer. ushort FromBytesToUInt16(byte[] value) . Converts bytes to a 16-bit unsigned integer. int FromBytesToInt32(byte[] value) . Converts bytes to a 32-bit signed integer. uint FromBytesToUInt32(byte[] value) . Converts bytes to a 32-bit unsigned integer. long FromBytesToInt64(byte[] value) . Converts bytes to a 64-bit signed integer. ulong FromBytesToUInt64(byte[] value) . Converts bytes to a 64-bit unsigned integer. float FromBytesToFloat(byte[] value) . Converts bytes to a float value. double FromBytesToDouble(byte[] value) . Converts bytes to a float value. string FromBytesToString(byte[] value) . Converts bytes to a string. byte[] ToBytes(bool value) . Converts boolean value to bytes. byte[] ToBytes(short value) . Converts short value to bytes. byte[] ToBytes(ushort value) . Converts ushort value to bytes. byte[] ToBytes(int value) . Converts int value to bytes. byte[] ToBytes(uint value) . Converts uint value to bytes. byte[] ToBytes(long value) . Converts long value to bytes. byte[] ToBytes(ulong value) . Converts long value to bytes. string? ToHex(byte?[]? bytes, string delimiter) . Converts given bytes to hex with defined delimiter . string? ToHex&lt;T&gt;(T value) . Converts given value to binary . int Count(string name) . Gets the count value of a given group. int Count(string name, int parent) . Gets the count value of a given group. int ExtractFromDate(string? date, string partOfDate) . Extracts part of the date from the date . int ExtractFromDate(string date, string culture, string partOfDate) . Extracts part of the date from the date based on given culture . DateTimeOffset? GetDate() . Gets the current datetime . DateTimeOffset? UtcGetDate() . Gets the current datetime in UTC . int? Month(DateTimeOffset? value) . Gets the month from DateTimeOffset . int? Year(DateTimeOffset? value) . Gets the year from DateTimeOffset . int? Day(DateTimeOffset? value) . Gets the day from DateTimeOffset . int? Hour(DateTimeOffset? value) . Gets the hour from DateTimeOffset . int? Minute(DateTimeOffset? value) . Gets the minute from DateTimeOffset . int? Second(DateTimeOffset? value) . Gets the second from DateTimeOffset . int? Milliseconds(DateTimeOffset? value) . Gets the millisecond from DateTimeOffset . int? DayOfWeek(DateTimeOffset? value) . Gets the day of week from DateTimeOffset . TimeSpan? ExtractTimeSpan(DateTimeOffset? dateTimeOffset) . Extracts time from DateTimeOffset . DateTime? ToDateTimeOffset(string value) . Converts given value to DateTimeOffset . DateTimeOffset? ToDateTimeOffset(string value, string culture) . Converts given value to DateTimeOffset . IEnumerable&lt;T&gt;? Skip&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? skipCount) . Skips elements from the beginning of the sequence. IEnumerable&lt;T&gt;? Take&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? takeCount) . Takes elements from the beginning of the sequence. IEnumerable&lt;T&gt;? SkipAndTake&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? skipCount, int? takeCount) . Skip and takes elements from the beginning of the sequence. T[]? EnumerableToArray&lt;T&gt;(IEnumerable&lt;T&gt;? values) . Turn array arguments of T into a single array. T[]? MergeArrays&lt;T&gt;(T[][]? values) . Turn array arguments of T into a single array. IEnumerable&lt;T&gt;? LongestCommonSequence&lt;T&gt;(IEnumerable&lt;T&gt;? source, IEnumerable&lt;T&gt;? pattern) . Computes longest common sequence of two given sequences . T? GetElementAtOrDefault&lt;T&gt;(IEnumerable&lt;T&gt;? enumerable, int? index) . Gets the element at the specified index in a sequence . int? Length&lt;T&gt;(IEnumerable&lt;T&gt;? enumerable) . Gets the length of the sequence . int? Length&lt;T&gt;(T[]? array) . Gets the length of the array . T? Choose&lt;T&gt;(int? index, T[] values) . Gets the value of an array at the specified index . T If&lt;T&gt;(bool expressionResult, T a, T b) . Chose a or b value based on the expression result . bool? Match(string? regex, string? content) . Determine whether content matches the specified pattern . byte? Coalesce(byte?[] array) . Gets the first non-null value in a list . sbyte? Coalesce(sbyte?[] array) . Gets the first non-null value in a list . short? Coalesce(short?[] array) . Gets the first non-null value in a list . ushort? Coalesce(ushort?[] array) . Gets the first non-null value in a list . int? Coalesce(int?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(uint?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(long?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(ulong?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(Decimal?[] array) . Gets the first non-null value in a list . T? Coalesce&lt;T&gt;(T[] array) . Gets the first non-null value in a list . IEnumerable&lt;T&gt;? Distinct&lt;T&gt;(IEnumerable&lt;T&gt;? values) . Returns distinct elements from a collection. string? Md5(string? content) . Gets the md5 hash of the given string. string? Md5(byte?[]? content) . Gets the md5 hash of the given bytes array. string? Sha1(string? content) . Gets the sha256 hash of the given string. string? Sha1(byte?[]? content) . Gets the sha256 hash of the given bytes array. string? Sha256(string? content) . Gets the sha256 hash of the given string. string? Sha256(byte?[]? content) . Gets the sha256 hash of the given bytes array. string? Sha512(string? content) . Gets the sha256 hash of the given string. string? Sha512(byte?[]? content) . Gets the sha256 hash of the bytes array. string? ToJson&lt;T&gt;(T? obj) . Converts object to json. string[] ExtractFromJsonToArray(string? json, string? path) . Extracts values from json by path. string? ExtractFromJson(string? json, string? path) . Extracts values from json by path and joins them with comma. Decimal? Abs(Decimal? value) . Gets the absolute value . long? Abs(long? value) . Gets the absolute value . int? Abs(int? value) . Gets the absolute value . Decimal? Ceil(Decimal? value) . Gets the ceiling value . Decimal? Floor(Decimal? value) . Gets the floor value . Decimal? Sign(Decimal? value) . Determine whether value is greater, equal or less that zero . long? Sign(long? value) . Determine whether value is greater, equal or less that zero . Decimal? Round(Decimal? value, int precision) . Rounds the value within given precision . Decimal? PercentOf(Decimal? value, Decimal? max) . Gets the percentage of the value . int Rand() . Gets the random integer value . int? Rand(int? min, int? max) . Gets the random integer value . double? Pow(Decimal? x, Decimal? y) . Computes the pow between two values . double? Pow(double? x, double? y) . Computes the pow between two values . double? Sqrt(Decimal? x) . Computes the sqrt of a given value . double? Sqrt(double? x) . Computes the sqrt of a given value . double? Sqrt(long? x) . Computes the sqrt of a given value . double? PercentRank&lt;T&gt;(IEnumerable&lt;T&gt;? window, T? value) . Computes the percent rank of a given window . double? Log(Decimal? base, Decimal? value) . Calculates the logarithm of a value with a specified base. Decimal? Sin(Decimal? value) . Calculates sine of a value. double? Sin(double? value) . Calculates sine of a value. float? Sin(float? value) . Calculates sine of a value. Decimal? Cos(Decimal? value) . Calculates cosine of a value. double? Cos(double? value) . Calculates cosine of a value. float? Cos(float? value) . Calculates cosine of a value. Decimal Max(string name) . Gets the max value of a given group. Decimal Max(string name, int parent) . Gets the max value of a given group. Decimal Min(string name) . Gets the min value of a given group. Decimal Min(string name, int parent) . Gets the min value of a given group. Decimal StDev(string name, int parent) . Gets the StDev value of a given group. string NewId() . Gets the new identifier . string? Trim(string? value) . Removes leading and trailing whitespace from a string. string? TrimStart(string? value) . Removes leading whitespace from a string. string? TrimEnd(string? value) . Removes trailing whitespace from a string. string? Substring(string? value, int? index, int? length) . Gets the substring from the string. string? Substring(string value, int? length) . Gets the substring from the string . string? Concat(string[]? strings) . Concatenates the specified values . string? Concat(char?[]? characters) . Concatenates the specified characters . string? Concat(string? firstString, char?[]? chars) . Concatenates specified string fir characters . string? Concat(char? firstChar, string[]? strings) . Concatenate specific character with strings . string? Concat(object[]? objects) . Concatenates the specified strings . string? Concat&lt;T&gt;(T[]? objects) . Concatenates the specified strings . bool? Contains(string? content, string? what) . Determine whether the string contains the specified value . int? IndexOf(string? value, string? text) . Position of the first occurrence of the specified value . string? Soundex(string? value) . Computes soundex for the specified value . bool HasFuzzyMatchedWord(string text, string word, string separator) . Matches the specified text by splitting it with separator and applying fuzzy comparison . bool HasWordThatHasSmallerLevenshteinDistanceThan(string text, string word, int distance, string separator) . Matches the specified text by splitting it with separator and applying fuzzy comparison with a given distance . bool HasWordThatSoundLike(string text, string word, string separator) . Matches whether the specified word is present after being fuzzified within the specified text . bool HasTextThatSoundLikeSentence(string text, string sentence, string separator) . Matches whether the specified text is present in sentence after being fuzified . string? ToUpper(string value) . Makes the string uppercase . string? ToUpper(string value, string culture) . Makes the string uppercase within specified culture . string? ToUpperInvariant(string value) . Makes the string uppercase . string? ToLower(string value) . Makes the string lowercase . string? ToLower(string value, string culture) . Makes the string lowercase within specified culture . string? ToLowerInvariant(string value) . Makes the string lowercase . string? PadLeft(string? value, string? character, int? totalWidth) . Returns a new string that right-aligns the characters in this instance by padding them on the left with a specified Unicode character, for a specified total lengt . string? PadRight(string? value, string? character, int? totalWidth) . Returns a new string that left-aligns the characters in this instance by padding them on the right with a specified Unicode character, for a specified total length . string? Head(string? value, int? length) . Gets the first N characters of the string . string? Tail(string? value, int? length) . Gets the last N characters of the string . int? LevenshteinDistance(string? firstValue, string? secondValue) . Computes the Levenshtein distance between two strings . char? GetCharacterOf(string value, int index) . Gets the character at specified index . string? Reverse(string? value) . Reverses the string . string[] Split(string value, string[] separators) . Splits the string into an array of substrings based on the specified separators . char[] ToCharArray(string value) . Splits the string into an array of characters . string? LongestCommonSubstring(string source, string pattern) . Computes the longest common subsequence between two source and pattern . string Replicate(string value, int integer) . Clones the value n times . string? Translate(string? value, string? characters, string? translations) . Returns the string from the first argument after the characters specified in the second argument are translated into the characters specified in the third argument. string? Replace(string? text, string lookFor, string? changeTo) . Replaces the first occurrence of a specified string in this instance with another specified string . string? ToTitleCase(string? value) . Capitalizes the first letter of the string . string? GetNthWord(string? text, int? wordIndex, string? separator) . Gets the nth word of the string . string? GetFirstWord(string text, string separator) . Gets the first word of the string . string? GetSecondWord(string text, string separator) . Gets the second word of the string . string? GetThirdWord(string text, string separator) . Gets the third word of the string . string? GetLastWord(string? text, string? separator) . Gets last word of the string . bool? IsNullOrEmpty(string? value) . Determines whether the string is null or empty . bool? IsNullOrWhiteSpace(string? value) . Determines whether the string is null or whitespace . string? UrlEncode(string? value) . Encodes the value . string? UrlDecode(string? value) . Decodes the value . string? UriEncode(string? value) . Encodes the value . string? UriDecode(string? value) . Decodes the value . bool? StartsWith(string? value, string? prefix) . Determines whether the string starts with the specified prefix . bool? StartsWith(string? value, string? prefix, string comparison) . Determines whether the string starts with the specified prefix . bool? EndsWith(string? value, string? suffix) . Determines whether the string ends with the specified suffix . bool? EndsWith(string? value, string? suffix, string comparison) . Determines whether the string ends with the specified suffix . string? RegexReplace(string? value, string? pattern, string? replacement) . Replace the specified value part that matches the pattern with the replacement . string[]? SplitByLinuxNewLines(string? input) . Split string by Linux-style newlines (\\n) . string[]? SplitByWindowsNewLines(string? input) . Split string by Windows-style newlines (\\r\\n) . string[]? SplitByNewLines(string? input) . Smart split that handles both Windows (\\r\\n) and Linux (\\n) newlines . Decimal Sum(string name) . Gets the sum value of a given group. Decimal Sum(string name, int parent) . Gets the sum value of a given group. Decimal SumIncome(string name) . Gets the sum value of a given group. Decimal SumIncome(string name, int parent) . Gets the sum value of a given group. Decimal SumOutcome(string name) . Gets the outcome value of a given group. Decimal SumOutcome(string name, int parent) . Gets the outcome value of a given group. TimeSpan? SumTimeSpan(string name) . Gets the sum value of a given group. TimeSpan? SumTimeSpan(string name, int parent) . Gets the sum value of a given group. TimeSpan? MinTimeSpan(string name) . Gets the min value of a given group. TimeSpan? MinTimeSpan(string name, int parent) . Gets the min value of a given group. TimeSpan? MaxTimeSpan(string name) . Gets the max value of a given group. TimeSpan? MaxTimeSpan(string name, int parent) . Gets the min value of a given group. char? ToChar(string? value) . Converts given value to character . char? ToChar(int? value) . Converts given value to character . char? ToChar(short? value) . Converts given value to character . char? ToChar(byte? value) . Converts given value to character . char? ToChar(object? value) . Converts given value to character . DateTime? ToDateTime(string value) . Converts given value to DateTime . DateTime? ToDateTime(string value, string culture) . Converts given value to DateTime . Decimal? ToDecimal(string? value) . Converts given value to decimal . Decimal? ToDecimal(string value, string culture) . Converts given value to decimal withing given culture . Decimal? ToDecimal(byte? value) . Converts given value to Decimal . Decimal? ToDecimal(sbyte? value) . Converts given value to Decimal . Decimal? ToDecimal(short? value) . Converts given value to Decimal . Decimal? ToDecimal(ushort? value) . Converts given value to Decimal . Decimal? ToDecimal(long? value) . Converts given value to Decimal . Decimal? ToDecimal(ulong? value) . Converts given value to Decimal . Decimal? ToDecimal(float? value) . Converts given value to Decimal . Decimal? ToDecimal(double? value) . Converts given value to Decimal . Decimal? ToDecimal(object? value) . Converts given value to Decimal . double? ToDouble(object? value) . Converts given value to double . double? ToDouble(string? value) . Converts given value to double . double? ToDouble(byte? value) . Converts given value to double . double? ToDouble(sbyte? value) . Converts given value to double . double? ToDouble(short? value) . Converts given value to double . double? ToDouble(ushort? value) . Converts given value to double . double? ToDouble(int? value) . Converts given value to double . double? ToDouble(uint? value) . Converts given value to double . double? ToDouble(long? value) . Converts given value to double . double? ToDouble(ulong? value) . Converts given value to double . double? ToDouble(float? value) . Converts given value to double . double? ToDouble(double? value) . Converts given value to double . double? ToDouble(Decimal? value) . Converts given value to double . float? ToFloat(string? value) . Converts given value to float . float? ToFloat(byte? value) . Converts given value to float . float? ToFloat(sbyte? value) . Converts given value to float . float? ToFloat(short? value) . Converts given value to float . float? ToFloat(ushort? value) . Converts given value to float . float? ToFloat(int? value) . Converts given value to float . float? ToFloat(uint? value) . Converts given value to float . float? ToFloat(long? value) . Converts given value to float . float? ToFloat(ulong? value) . Converts given value to float . float? ToFloat(float? value) . Converts given value to float . float? ToFloat(Decimal? value) . Converts given value to float . int? ToInt32(string value) . Converts given value to int . int? ToInt32(byte? value) . Converts given value to int . int? ToInt32(sbyte? value) . Converts given value to int . int? ToInt32(short? value) . Converts given value to int . int? ToInt32(ushort? value) . Converts given value to int . int? ToInt32(int? value) . Converts given value to int . int? ToInt32(uint? value) . Converts given value to int . int? ToInt32(long? value) . Converts given value to int . int? ToInt32(ulong? value) . Converts given value to int . int? ToInt32(float? value) . Converts given value to int . int? ToInt32(double? value) . Converts given value to int . int? ToInt32(Decimal? value) . Converts given value to int . int? ToInt32(object? value) . Converts given value to int . long? ToInt64(string value) . Converts given value to Int64 . long? ToInt64(byte? value) . Converts given value to long . long? ToInt64(sbyte? value) . Converts given value to long . long? ToInt64(short? value) . Converts given value to long . long? ToInt64(ushort? value) . Converts given value to long . long? ToInt64(int? value) . Converts given value to long . long? ToInt64(uint? value) . Converts given value to long . long? ToInt64(long? value) . Converts given value to long . long? ToInt64(ulong? value) . Converts given value to long . long? ToInt64(float? value) . Converts given value to long . long? ToInt64(double? value) . Converts given value to long . long? ToInt64(Decimal? value) . Converts given value to long . long? ToInt64(object? value) . Converts given value to long . string? ToString(char? value) . Converts given value to string . string? ToString(DateTimeOffset? value) . Converts given value to string . string? ToString(DateTimeOffset? value, string format) . Converts given value to string . string? ToString(byte? value) . Converts given value to string . string? ToString(byte? value, string format) . Converts given value to string . string? ToString(sbyte? value) . Converts given value to string . string? ToString(sbyte? value, string format) . Converts given value to string . string? ToString(int? value) . Converts given value to string . string? ToString(int? value, string format) . Converts given value to string . string? ToString(uint? value) . Converts given value to string . string? ToString(uint? value, string format) . Converts given value to string . string? ToString(long? value) . Converts given value to string . string? ToString(long? value, string format) . Converts given value to string . string? ToString(ulong? value) . Converts given value to string . string? ToString(ulong? value, string format) . Converts given value to string . string? ToString(float? value) . Converts given value to string . string? ToString(float? value, string format) . Converts given value to string . string? ToString(double? value) . Converts given value to string . string? ToString(double? value, string format) . Converts given value to string . string? ToString(Decimal? value) . Converts given value to string . string? ToString(Decimal? value, string format) . Converts given value to string . string? ToString(bool? value) . Converts given value to string . string? ToString(object? value) . Converts given value to string . string? ToString&lt;T&gt;(T? value) . Converts given value to string . string ToString(string[] value) . Converts given value to string . string ToString&lt;T&gt;(T[] value) . Converts given value to string . TimeSpan? ToTimeSpan(string value) . Converts given value to TimeSpan . TimeSpan? ToTimeSpan(string value, string culture) . Converts given value to TimeSpan . IEnumerable&lt;T&gt; Window&lt;T&gt;(string name) . Gets the window . ",
    "url": "/data-sources/Kubernetes/linux-x64.html#base-methods",
    
    "relUrl": "/data-sources/Kubernetes/linux-x64.html#base-methods"
  },"176": {
    "doc": "Linux X64",
    "title": "Linux X64",
    "content": " ",
    "url": "/data-sources/Kubernetes/linux-x64.html",
    
    "relUrl": "/data-sources/Kubernetes/linux-x64.html"
  },"177": {
    "doc": "Linux X64",
    "title": "Musoq.DataSources.Postgres",
    "content": "Provides schema to work with postgres database . ",
    "url": "/data-sources/Postgres/linux-x64.html#musoqdatasourcespostgres",
    
    "relUrl": "/data-sources/Postgres/linux-x64.html#musoqdatasourcespostgres"
  },"178": {
    "doc": "Linux X64",
    "title": "Tables",
    "content": "Table is a collection of rows and columns that the plugin exposes. Below are the tables that are exposed by this data source. postgres.tableName(‘schemaName’) . Gives ability to process sqlite table . Environment variables . In order to use the plugin, the user must set any required environment variables as specified in the environments element. Failure to do so may result in the plugin not functioning correctly. | Name | Is required | Description | . | NPGSQL_CONNECTION_STRING | true | Postgres connections string | . Columns . This table has a dynamic structure, which means that its columns and other details cannot be determined until runtime. As a result, it is not possible to include a complete description of this table in the documentation. Instead, the actual columns and other details of this table will be determined at runtime. ",
    "url": "/data-sources/Postgres/linux-x64.html#tables",
    
    "relUrl": "/data-sources/Postgres/linux-x64.html#tables"
  },"179": {
    "doc": "Linux X64",
    "title": "Base Methods",
    "content": "Base methods are methods that can be called on the data source specific column. Those methods are automatically inherited and enriches the data source specific methods. Below are those base methods that are exposed by this data source. int RowNumber() . Gets the row number of the current row. string? GetTypeName(object? obj) . Gets the typename of passed object. string AggregateValues(string name) . Aggregates values into a single value. string AggregateValues(string name, int parent) . Aggregates values into a single value. Decimal Avg(string name) . Gets the aggregated average value from the given group name . Decimal Avg(string name, int parent) . Gets the aggregated average value from the given group name . byte? ShiftLeft(byte? value, int shift) . Shifts the value to the left by the specified number of bits. short? ShiftLeft(short? value, int shift) . Shifts the value to the left by the specified number of bits. int? ShiftLeft(int? value, int shift) . Shifts the value to the left by the specified number of bits. long? ShiftLeft(long? value, int shift) . Shifts the value to the left by the specified number of bits. sbyte? ShiftLeft(sbyte? value, int shift) . Shifts the value to the left by the specified number of bits. ushort? ShiftLeft(ushort? value, int shift) . Shifts the value to the left by the specified number of bits. uint? ShiftLeft(uint? value, int shift) . Shifts the value to the left by the specified number of bits. ulong? ShiftLeft(ulong? value, int shift) . Shifts the value to the left by the specified number of bits. byte? ShiftRight(byte? value, int shift) . Shifts the value to the right by the specified number of bits. short? ShiftRight(short? value, int shift) . Shifts the value to the right by the specified number of bits. int? ShiftRight(int? value, int shift) . Shifts the value to the right by the specified number of bits. long? ShiftRight(long? value, int shift) . Shifts the value to the right by the specified number of bits. sbyte? ShiftRight(sbyte? value, int shift) . Shifts the value to the right by the specified number of bits. ushort? ShiftRight(ushort? value, int shift) . Shifts the value to the right by the specified number of bits. uint? ShiftRight(uint? value, int shift) . Shifts the value to the right by the specified number of bits. ulong? ShiftRight(ulong? value, int shift) . Shifts the value to the right by the specified number of bits. byte? Not(byte? value) . Performs bitwise NOT operation on a given value. short? Not(short? value) . Performs bitwise NOT operation on a given value. int? Not(int? value) . Performs bitwise NOT operation on a given value. long? Not(long? value) . Performs bitwise NOT operation on a given value. sbyte? Not(sbyte? value) . Performs bitwise NOT operation on a given value. ushort? Not(ushort? value) . Performs bitwise NOT operation on a given value. uint? Not(uint? value) . Performs bitwise NOT operation on a given value. ulong? Not(ulong? value) . Performs bitwise NOT operation on a given value. byte? And(byte? left, byte? right) . Performs bitwise AND operation on two given values. int? And(byte? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(byte? left, short? right) . Performs bitwise AND operation on two given values. int? And(byte? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(byte? left, int? right) . Performs bitwise AND operation on two given values. uint? And(byte? left, uint? right) . Performs bitwise AND operation on two given values. long? And(byte? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(byte? left, ulong? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, byte? right) . Performs bitwise AND operation on two given values. sbyte? And(sbyte? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, short? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, int? right) . Performs bitwise AND operation on two given values. uint? And(sbyte? left, uint? right) . Performs bitwise AND operation on two given values. long? And(sbyte? left, long? right) . Performs bitwise AND operation on two given values. int? And(short? left, byte? right) . Performs bitwise AND operation on two given values. int? And(short? left, sbyte? right) . Performs bitwise AND operation on two given values. short? And(short? left, short? right) . Performs bitwise AND operation on two given values. int? And(short? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(short? left, int? right) . Performs bitwise AND operation on two given values. uint? And(short? left, uint? right) . Performs bitwise AND operation on two given values. long? And(short? left, long? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, byte? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, short? right) . Performs bitwise AND operation on two given values. ushort? And(ushort? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, int? right) . Performs bitwise AND operation on two given values. uint? And(ushort? left, uint? right) . Performs bitwise AND operation on two given values. long? And(ushort? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(ushort? left, ulong? right) . Performs bitwise AND operation on two given values. int? And(int? left, byte? right) . Performs bitwise AND operation on two given values. int? And(int? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(int? left, short? right) . Performs bitwise AND operation on two given values. int? And(int? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(int? left, int? right) . Performs bitwise AND operation on two given values. uint? And(int? left, uint? right) . Performs bitwise AND operation on two given values. long? And(int? left, long? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, uint? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, byte? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, sbyte? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, short? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, ushort? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, int? right) . Performs bitwise AND operation on two given values. ulong? And(uint? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(uint? left, ulong? right) . Performs bitwise AND operation on two given values. long? And(long? left, long? right) . Performs bitwise AND operation on two given values. long? And(long? left, byte? right) . Performs bitwise AND operation on two given values. long? And(long? left, sbyte? right) . Performs bitwise AND operation on two given values. long? And(long? left, short? right) . Performs bitwise AND operation on two given values. long? And(long? left, ushort? right) . Performs bitwise AND operation on two given values. long? And(long? left, int? right) . Performs bitwise AND operation on two given values. long? And(long? left, uint? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, byte? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, ushort? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, uint? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, ulong? right) . Performs bitwise AND operation on two given values. byte? Or(byte? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, short? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(byte? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(byte? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(byte? left, ulong? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, byte? right) . Performs bitwise OR operation on two given values. sbyte? Or(sbyte? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, short? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(sbyte? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(sbyte? left, long? right) . Performs bitwise OR operation on two given values. int? Or(short? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(short? left, sbyte? right) . Performs bitwise OR operation on two given values. short? Or(short? left, short? right) . Performs bitwise OR operation on two given values. int? Or(short? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(short? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(short? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(short? left, long? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, short? right) . Performs bitwise OR operation on two given values. ushort? Or(ushort? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(ushort? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(ushort? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(ushort? left, ulong? right) . Performs bitwise OR operation on two given values. int? Or(int? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(int? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(int? left, short? right) . Performs bitwise OR operation on two given values. int? Or(int? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(int? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(int? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(int? left, long? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, uint? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, byte? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, sbyte? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, short? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, ushort? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, int? right) . Performs bitwise OR operation on two given values. ulong? Or(uint? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(uint? left, ulong? right) . Performs bitwise OR operation on two given values. long? Or(long? left, long? right) . Performs bitwise OR operation on two given values. long? Or(long? left, byte? right) . Performs bitwise OR operation on two given values. long? Or(long? left, sbyte? right) . Performs bitwise OR operation on two given values. long? Or(long? left, short? right) . Performs bitwise OR operation on two given values. long? Or(long? left, ushort? right) . Performs bitwise OR operation on two given values. long? Or(long? left, int? right) . Performs bitwise OR operation on two given values. long? Or(long? left, uint? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, byte? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, ushort? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, uint? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, ulong? right) . Performs bitwise OR operation on two given values. byte? Xor(byte? left, byte? right) . Performs bitwise OR operation on two given values. int? Xor(byte? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(byte? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(byte? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(byte? left, ulong? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, byte? right) . Performs bitwise Xor operation on two given values. sbyte? Xor(sbyte? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(sbyte? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(sbyte? left, long? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, sbyte? right) . Performs bitwise Xor operation on two given values. short? Xor(short? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, ushort? right) . Performs bitwise XOR operation on two given values. int? Xor(short? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(short? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(short? left, long? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, short? right) . Performs bitwise Xor operation on two given values. ushort? Xor(ushort? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(ushort? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(ushort? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ushort? left, ulong? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(int? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(int? left, long? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, uint? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, byte? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, sbyte? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, short? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, ushort? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, int? right) . Performs bitwise Xor operation on two given values. ulong? Xor(uint? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(uint? left, ulong? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, long? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, byte? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, sbyte? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, short? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, ushort? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, int? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, uint? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, ulong? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, byte? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, ushort? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, uint? right) . Performs bitwise Xor operation on two given values. byte[] GetBytes(string? content) . Gets the bytes from the given string. byte[] GetBytes(string? content, int length, int offset) . Gets the bytes from the given string within given offset and length. byte?[]? GetBytes(char? character) . Gets the bytes from the given character. byte?[]? GetBytes(bool? bit) . Gets the bytes from the given boolean. byte?[]? GetBytes(long? value) . Gets the bytes from the given long. byte?[]? GetBytes(int? value) . Gets the bytes from the given int. byte?[]? GetBytes(short? value) . Gets the bytes from the given short. byte?[]? GetBytes(ulong? value) . Gets the bytes from the given ulong. byte?[]? GetBytes(ushort? value) . Gets the bytes from the given ushort. byte?[]? GetBytes(uint? value) . Gets the bytes from the given uint. byte?[]? GetBytes(Decimal? value) . Gets the bytes from the given decimal. byte?[]? GetBytes(double? value) . Gets the bytes from the given double. byte?[]? GetBytes(float? value) . Gets the bytes from the given float. string? ToBin(byte?[]? bytes, string delimiter) . Converts given bytes to binary with defined delimiter . string ToBin&lt;T&gt;(T value) . Converts given value to binary . string ToOcta&lt;T&gt;(T value) . Converts given value to octal . string ToDec&lt;T&gt;(T value) . Converts given value to decimal . string ToBase64(byte[] value) . Converts given value to string . string ToBase64(byte[] value, int offset, int length) . Converts given array of bytes to string . byte[] FromBase64(string value) . Converts given string to bytes array . bool FromBytesToBool(byte[] value) . Converts bytes to boolean value. short FromBytesToInt16(byte[] value) . Converts bytes to a 16-bit signed integer. ushort FromBytesToUInt16(byte[] value) . Converts bytes to a 16-bit unsigned integer. int FromBytesToInt32(byte[] value) . Converts bytes to a 32-bit signed integer. uint FromBytesToUInt32(byte[] value) . Converts bytes to a 32-bit unsigned integer. long FromBytesToInt64(byte[] value) . Converts bytes to a 64-bit signed integer. ulong FromBytesToUInt64(byte[] value) . Converts bytes to a 64-bit unsigned integer. float FromBytesToFloat(byte[] value) . Converts bytes to a float value. double FromBytesToDouble(byte[] value) . Converts bytes to a float value. string FromBytesToString(byte[] value) . Converts bytes to a string. byte[] ToBytes(bool value) . Converts boolean value to bytes. byte[] ToBytes(short value) . Converts short value to bytes. byte[] ToBytes(ushort value) . Converts ushort value to bytes. byte[] ToBytes(int value) . Converts int value to bytes. byte[] ToBytes(uint value) . Converts uint value to bytes. byte[] ToBytes(long value) . Converts long value to bytes. byte[] ToBytes(ulong value) . Converts long value to bytes. string? ToHex(byte?[]? bytes, string delimiter) . Converts given bytes to hex with defined delimiter . string? ToHex&lt;T&gt;(T value) . Converts given value to binary . int Count(string name) . Gets the count value of a given group. int Count(string name, int parent) . Gets the count value of a given group. int ExtractFromDate(string? date, string partOfDate) . Extracts part of the date from the date . int ExtractFromDate(string date, string culture, string partOfDate) . Extracts part of the date from the date based on given culture . DateTimeOffset? GetDate() . Gets the current datetime . DateTimeOffset? UtcGetDate() . Gets the current datetime in UTC . int? Month(DateTimeOffset? value) . Gets the month from DateTimeOffset . int? Year(DateTimeOffset? value) . Gets the year from DateTimeOffset . int? Day(DateTimeOffset? value) . Gets the day from DateTimeOffset . int? Hour(DateTimeOffset? value) . Gets the hour from DateTimeOffset . int? Minute(DateTimeOffset? value) . Gets the minute from DateTimeOffset . int? Second(DateTimeOffset? value) . Gets the second from DateTimeOffset . int? Milliseconds(DateTimeOffset? value) . Gets the millisecond from DateTimeOffset . int? DayOfWeek(DateTimeOffset? value) . Gets the day of week from DateTimeOffset . TimeSpan? ExtractTimeSpan(DateTimeOffset? dateTimeOffset) . Extracts time from DateTimeOffset . DateTime? ToDateTimeOffset(string value) . Converts given value to DateTimeOffset . DateTimeOffset? ToDateTimeOffset(string value, string culture) . Converts given value to DateTimeOffset . IEnumerable&lt;T&gt;? Skip&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? skipCount) . Skips elements from the beginning of the sequence. IEnumerable&lt;T&gt;? Take&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? takeCount) . Takes elements from the beginning of the sequence. IEnumerable&lt;T&gt;? SkipAndTake&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? skipCount, int? takeCount) . Skip and takes elements from the beginning of the sequence. T[]? EnumerableToArray&lt;T&gt;(IEnumerable&lt;T&gt;? values) . Turn array arguments of T into a single array. T[]? MergeArrays&lt;T&gt;(T[][]? values) . Turn array arguments of T into a single array. IEnumerable&lt;T&gt;? LongestCommonSequence&lt;T&gt;(IEnumerable&lt;T&gt;? source, IEnumerable&lt;T&gt;? pattern) . Computes longest common sequence of two given sequences . T? GetElementAtOrDefault&lt;T&gt;(IEnumerable&lt;T&gt;? enumerable, int? index) . Gets the element at the specified index in a sequence . int? Length&lt;T&gt;(IEnumerable&lt;T&gt;? enumerable) . Gets the length of the sequence . int? Length&lt;T&gt;(T[]? array) . Gets the length of the array . T? Choose&lt;T&gt;(int? index, T[] values) . Gets the value of an array at the specified index . T If&lt;T&gt;(bool expressionResult, T a, T b) . Chose a or b value based on the expression result . bool? Match(string? regex, string? content) . Determine whether content matches the specified pattern . byte? Coalesce(byte?[] array) . Gets the first non-null value in a list . sbyte? Coalesce(sbyte?[] array) . Gets the first non-null value in a list . short? Coalesce(short?[] array) . Gets the first non-null value in a list . ushort? Coalesce(ushort?[] array) . Gets the first non-null value in a list . int? Coalesce(int?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(uint?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(long?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(ulong?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(Decimal?[] array) . Gets the first non-null value in a list . T? Coalesce&lt;T&gt;(T[] array) . Gets the first non-null value in a list . IEnumerable&lt;T&gt;? Distinct&lt;T&gt;(IEnumerable&lt;T&gt;? values) . Returns distinct elements from a collection. string? Md5(string? content) . Gets the md5 hash of the given string. string? Md5(byte?[]? content) . Gets the md5 hash of the given bytes array. string? Sha1(string? content) . Gets the sha256 hash of the given string. string? Sha1(byte?[]? content) . Gets the sha256 hash of the given bytes array. string? Sha256(string? content) . Gets the sha256 hash of the given string. string? Sha256(byte?[]? content) . Gets the sha256 hash of the given bytes array. string? Sha512(string? content) . Gets the sha256 hash of the given string. string? Sha512(byte?[]? content) . Gets the sha256 hash of the bytes array. string? ToJson&lt;T&gt;(T? obj) . Converts object to json. string[] ExtractFromJsonToArray(string? json, string? path) . Extracts values from json by path. string? ExtractFromJson(string? json, string? path) . Extracts values from json by path and joins them with comma. Decimal? Abs(Decimal? value) . Gets the absolute value . long? Abs(long? value) . Gets the absolute value . int? Abs(int? value) . Gets the absolute value . Decimal? Ceil(Decimal? value) . Gets the ceiling value . Decimal? Floor(Decimal? value) . Gets the floor value . Decimal? Sign(Decimal? value) . Determine whether value is greater, equal or less that zero . long? Sign(long? value) . Determine whether value is greater, equal or less that zero . Decimal? Round(Decimal? value, int precision) . Rounds the value within given precision . Decimal? PercentOf(Decimal? value, Decimal? max) . Gets the percentage of the value . int Rand() . Gets the random integer value . int? Rand(int? min, int? max) . Gets the random integer value . double? Pow(Decimal? x, Decimal? y) . Computes the pow between two values . double? Pow(double? x, double? y) . Computes the pow between two values . double? Sqrt(Decimal? x) . Computes the sqrt of a given value . double? Sqrt(double? x) . Computes the sqrt of a given value . double? Sqrt(long? x) . Computes the sqrt of a given value . double? PercentRank&lt;T&gt;(IEnumerable&lt;T&gt;? window, T? value) . Computes the percent rank of a given window . double? Log(Decimal? base, Decimal? value) . Calculates the logarithm of a value with a specified base. Decimal? Sin(Decimal? value) . Calculates sine of a value. double? Sin(double? value) . Calculates sine of a value. float? Sin(float? value) . Calculates sine of a value. Decimal? Cos(Decimal? value) . Calculates cosine of a value. double? Cos(double? value) . Calculates cosine of a value. float? Cos(float? value) . Calculates cosine of a value. Decimal Max(string name) . Gets the max value of a given group. Decimal Max(string name, int parent) . Gets the max value of a given group. Decimal Min(string name) . Gets the min value of a given group. Decimal Min(string name, int parent) . Gets the min value of a given group. Decimal StDev(string name, int parent) . Gets the StDev value of a given group. string NewId() . Gets the new identifier . string? Trim(string? value) . Removes leading and trailing whitespace from a string. string? TrimStart(string? value) . Removes leading whitespace from a string. string? TrimEnd(string? value) . Removes trailing whitespace from a string. string? Substring(string? value, int? index, int? length) . Gets the substring from the string. string? Substring(string value, int? length) . Gets the substring from the string . string? Concat(string[]? strings) . Concatenates the specified values . string? Concat(char?[]? characters) . Concatenates the specified characters . string? Concat(string? firstString, char?[]? chars) . Concatenates specified string fir characters . string? Concat(char? firstChar, string[]? strings) . Concatenate specific character with strings . string? Concat(object[]? objects) . Concatenates the specified strings . string? Concat&lt;T&gt;(T[]? objects) . Concatenates the specified strings . bool? Contains(string? content, string? what) . Determine whether the string contains the specified value . int? IndexOf(string? value, string? text) . Position of the first occurrence of the specified value . string? Soundex(string? value) . Computes soundex for the specified value . bool HasFuzzyMatchedWord(string text, string word, string separator) . Matches the specified text by splitting it with separator and applying fuzzy comparison . bool HasWordThatHasSmallerLevenshteinDistanceThan(string text, string word, int distance, string separator) . Matches the specified text by splitting it with separator and applying fuzzy comparison with a given distance . bool HasWordThatSoundLike(string text, string word, string separator) . Matches whether the specified word is present after being fuzzified within the specified text . bool HasTextThatSoundLikeSentence(string text, string sentence, string separator) . Matches whether the specified text is present in sentence after being fuzified . string? ToUpper(string value) . Makes the string uppercase . string? ToUpper(string value, string culture) . Makes the string uppercase within specified culture . string? ToUpperInvariant(string value) . Makes the string uppercase . string? ToLower(string value) . Makes the string lowercase . string? ToLower(string value, string culture) . Makes the string lowercase within specified culture . string? ToLowerInvariant(string value) . Makes the string lowercase . string? PadLeft(string? value, string? character, int? totalWidth) . Returns a new string that right-aligns the characters in this instance by padding them on the left with a specified Unicode character, for a specified total lengt . string? PadRight(string? value, string? character, int? totalWidth) . Returns a new string that left-aligns the characters in this instance by padding them on the right with a specified Unicode character, for a specified total length . string? Head(string? value, int? length) . Gets the first N characters of the string . string? Tail(string? value, int? length) . Gets the last N characters of the string . int? LevenshteinDistance(string? firstValue, string? secondValue) . Computes the Levenshtein distance between two strings . char? GetCharacterOf(string value, int index) . Gets the character at specified index . string? Reverse(string? value) . Reverses the string . string[] Split(string value, string[] separators) . Splits the string into an array of substrings based on the specified separators . char[] ToCharArray(string value) . Splits the string into an array of characters . string? LongestCommonSubstring(string source, string pattern) . Computes the longest common subsequence between two source and pattern . string Replicate(string value, int integer) . Clones the value n times . string? Translate(string? value, string? characters, string? translations) . Returns the string from the first argument after the characters specified in the second argument are translated into the characters specified in the third argument. string? Replace(string? text, string lookFor, string? changeTo) . Replaces the first occurrence of a specified string in this instance with another specified string . string? ToTitleCase(string? value) . Capitalizes the first letter of the string . string? GetNthWord(string? text, int? wordIndex, string? separator) . Gets the nth word of the string . string? GetFirstWord(string text, string separator) . Gets the first word of the string . string? GetSecondWord(string text, string separator) . Gets the second word of the string . string? GetThirdWord(string text, string separator) . Gets the third word of the string . string? GetLastWord(string? text, string? separator) . Gets last word of the string . bool? IsNullOrEmpty(string? value) . Determines whether the string is null or empty . bool? IsNullOrWhiteSpace(string? value) . Determines whether the string is null or whitespace . string? UrlEncode(string? value) . Encodes the value . string? UrlDecode(string? value) . Decodes the value . string? UriEncode(string? value) . Encodes the value . string? UriDecode(string? value) . Decodes the value . bool? StartsWith(string? value, string? prefix) . Determines whether the string starts with the specified prefix . bool? StartsWith(string? value, string? prefix, string comparison) . Determines whether the string starts with the specified prefix . bool? EndsWith(string? value, string? suffix) . Determines whether the string ends with the specified suffix . bool? EndsWith(string? value, string? suffix, string comparison) . Determines whether the string ends with the specified suffix . string? RegexReplace(string? value, string? pattern, string? replacement) . Replace the specified value part that matches the pattern with the replacement . string[]? SplitByLinuxNewLines(string? input) . Split string by Linux-style newlines (\\n) . string[]? SplitByWindowsNewLines(string? input) . Split string by Windows-style newlines (\\r\\n) . string[]? SplitByNewLines(string? input) . Smart split that handles both Windows (\\r\\n) and Linux (\\n) newlines . Decimal Sum(string name) . Gets the sum value of a given group. Decimal Sum(string name, int parent) . Gets the sum value of a given group. Decimal SumIncome(string name) . Gets the sum value of a given group. Decimal SumIncome(string name, int parent) . Gets the sum value of a given group. Decimal SumOutcome(string name) . Gets the outcome value of a given group. Decimal SumOutcome(string name, int parent) . Gets the outcome value of a given group. TimeSpan? SumTimeSpan(string name) . Gets the sum value of a given group. TimeSpan? SumTimeSpan(string name, int parent) . Gets the sum value of a given group. TimeSpan? MinTimeSpan(string name) . Gets the min value of a given group. TimeSpan? MinTimeSpan(string name, int parent) . Gets the min value of a given group. TimeSpan? MaxTimeSpan(string name) . Gets the max value of a given group. TimeSpan? MaxTimeSpan(string name, int parent) . Gets the min value of a given group. char? ToChar(string? value) . Converts given value to character . char? ToChar(int? value) . Converts given value to character . char? ToChar(short? value) . Converts given value to character . char? ToChar(byte? value) . Converts given value to character . char? ToChar(object? value) . Converts given value to character . DateTime? ToDateTime(string value) . Converts given value to DateTime . DateTime? ToDateTime(string value, string culture) . Converts given value to DateTime . Decimal? ToDecimal(string? value) . Converts given value to decimal . Decimal? ToDecimal(string value, string culture) . Converts given value to decimal withing given culture . Decimal? ToDecimal(byte? value) . Converts given value to Decimal . Decimal? ToDecimal(sbyte? value) . Converts given value to Decimal . Decimal? ToDecimal(short? value) . Converts given value to Decimal . Decimal? ToDecimal(ushort? value) . Converts given value to Decimal . Decimal? ToDecimal(long? value) . Converts given value to Decimal . Decimal? ToDecimal(ulong? value) . Converts given value to Decimal . Decimal? ToDecimal(float? value) . Converts given value to Decimal . Decimal? ToDecimal(double? value) . Converts given value to Decimal . Decimal? ToDecimal(object? value) . Converts given value to Decimal . double? ToDouble(object? value) . Converts given value to double . double? ToDouble(string? value) . Converts given value to double . double? ToDouble(byte? value) . Converts given value to double . double? ToDouble(sbyte? value) . Converts given value to double . double? ToDouble(short? value) . Converts given value to double . double? ToDouble(ushort? value) . Converts given value to double . double? ToDouble(int? value) . Converts given value to double . double? ToDouble(uint? value) . Converts given value to double . double? ToDouble(long? value) . Converts given value to double . double? ToDouble(ulong? value) . Converts given value to double . double? ToDouble(float? value) . Converts given value to double . double? ToDouble(double? value) . Converts given value to double . double? ToDouble(Decimal? value) . Converts given value to double . float? ToFloat(string? value) . Converts given value to float . float? ToFloat(byte? value) . Converts given value to float . float? ToFloat(sbyte? value) . Converts given value to float . float? ToFloat(short? value) . Converts given value to float . float? ToFloat(ushort? value) . Converts given value to float . float? ToFloat(int? value) . Converts given value to float . float? ToFloat(uint? value) . Converts given value to float . float? ToFloat(long? value) . Converts given value to float . float? ToFloat(ulong? value) . Converts given value to float . float? ToFloat(float? value) . Converts given value to float . float? ToFloat(Decimal? value) . Converts given value to float . int? ToInt32(string value) . Converts given value to int . int? ToInt32(byte? value) . Converts given value to int . int? ToInt32(sbyte? value) . Converts given value to int . int? ToInt32(short? value) . Converts given value to int . int? ToInt32(ushort? value) . Converts given value to int . int? ToInt32(int? value) . Converts given value to int . int? ToInt32(uint? value) . Converts given value to int . int? ToInt32(long? value) . Converts given value to int . int? ToInt32(ulong? value) . Converts given value to int . int? ToInt32(float? value) . Converts given value to int . int? ToInt32(double? value) . Converts given value to int . int? ToInt32(Decimal? value) . Converts given value to int . int? ToInt32(object? value) . Converts given value to int . long? ToInt64(string value) . Converts given value to Int64 . long? ToInt64(byte? value) . Converts given value to long . long? ToInt64(sbyte? value) . Converts given value to long . long? ToInt64(short? value) . Converts given value to long . long? ToInt64(ushort? value) . Converts given value to long . long? ToInt64(int? value) . Converts given value to long . long? ToInt64(uint? value) . Converts given value to long . long? ToInt64(long? value) . Converts given value to long . long? ToInt64(ulong? value) . Converts given value to long . long? ToInt64(float? value) . Converts given value to long . long? ToInt64(double? value) . Converts given value to long . long? ToInt64(Decimal? value) . Converts given value to long . long? ToInt64(object? value) . Converts given value to long . string? ToString(char? value) . Converts given value to string . string? ToString(DateTimeOffset? value) . Converts given value to string . string? ToString(DateTimeOffset? value, string format) . Converts given value to string . string? ToString(byte? value) . Converts given value to string . string? ToString(byte? value, string format) . Converts given value to string . string? ToString(sbyte? value) . Converts given value to string . string? ToString(sbyte? value, string format) . Converts given value to string . string? ToString(int? value) . Converts given value to string . string? ToString(int? value, string format) . Converts given value to string . string? ToString(uint? value) . Converts given value to string . string? ToString(uint? value, string format) . Converts given value to string . string? ToString(long? value) . Converts given value to string . string? ToString(long? value, string format) . Converts given value to string . string? ToString(ulong? value) . Converts given value to string . string? ToString(ulong? value, string format) . Converts given value to string . string? ToString(float? value) . Converts given value to string . string? ToString(float? value, string format) . Converts given value to string . string? ToString(double? value) . Converts given value to string . string? ToString(double? value, string format) . Converts given value to string . string? ToString(Decimal? value) . Converts given value to string . string? ToString(Decimal? value, string format) . Converts given value to string . string? ToString(bool? value) . Converts given value to string . string? ToString(object? value) . Converts given value to string . string? ToString&lt;T&gt;(T? value) . Converts given value to string . string ToString(string[] value) . Converts given value to string . string ToString&lt;T&gt;(T[] value) . Converts given value to string . TimeSpan? ToTimeSpan(string value) . Converts given value to TimeSpan . TimeSpan? ToTimeSpan(string value, string culture) . Converts given value to TimeSpan . IEnumerable&lt;T&gt; Window&lt;T&gt;(string name) . Gets the window . ",
    "url": "/data-sources/Postgres/linux-x64.html#base-methods",
    
    "relUrl": "/data-sources/Postgres/linux-x64.html#base-methods"
  },"180": {
    "doc": "Linux X64",
    "title": "Linux X64",
    "content": " ",
    "url": "/data-sources/Postgres/linux-x64.html",
    
    "relUrl": "/data-sources/Postgres/linux-x64.html"
  },"181": {
    "doc": "Linux X64",
    "title": "Musoq.DataSources.Time",
    "content": " ",
    "url": "/data-sources/Time/linux-x64.html#musoqdatasourcestime",
    
    "relUrl": "/data-sources/Time/linux-x64.html#musoqdatasourcestime"
  },"182": {
    "doc": "Linux X64",
    "title": "Tables",
    "content": "Table is a collection of rows and columns that the plugin exposes. Below are the tables that are exposed by this data source. time.interval(string startDateTime, string stopDateTime, string interval) . Compute dates between two ranges . | Name | Type | Description | . | DateTime | DateTime | Gets the DateTime object | . | Second | int | Gets second of current computed DateTime | . | Minute | int | Gets minute of current computed DateTime | . | Hour | int | Gets the hour of current computed DateTime | . | Day | int | Gets the day of current computed DateTime | . | Month | int | Gets the month of current computed DateTime | . | Year | int | Gets the year of current computed DateTime | . | DayOfWeek | int | Gets the day of week of current computed DateTime | . | DayOfYear | int | Gets the day of year of current computed DateTime | . | TimeOfDay | TimeSpan | Gets the time of day of current computed DateTime | . ",
    "url": "/data-sources/Time/linux-x64.html#tables",
    
    "relUrl": "/data-sources/Time/linux-x64.html#tables"
  },"183": {
    "doc": "Linux X64",
    "title": "Base Methods",
    "content": "Base methods are methods that can be called on the data source specific column. Those methods are automatically inherited and enriches the data source specific methods. Below are those base methods that are exposed by this data source. int RowNumber() . Gets the row number of the current row. string? GetTypeName(object? obj) . Gets the typename of passed object. string AggregateValues(string name) . Aggregates values into a single value. string AggregateValues(string name, int parent) . Aggregates values into a single value. Decimal Avg(string name) . Gets the aggregated average value from the given group name . Decimal Avg(string name, int parent) . Gets the aggregated average value from the given group name . byte? ShiftLeft(byte? value, int shift) . Shifts the value to the left by the specified number of bits. short? ShiftLeft(short? value, int shift) . Shifts the value to the left by the specified number of bits. int? ShiftLeft(int? value, int shift) . Shifts the value to the left by the specified number of bits. long? ShiftLeft(long? value, int shift) . Shifts the value to the left by the specified number of bits. sbyte? ShiftLeft(sbyte? value, int shift) . Shifts the value to the left by the specified number of bits. ushort? ShiftLeft(ushort? value, int shift) . Shifts the value to the left by the specified number of bits. uint? ShiftLeft(uint? value, int shift) . Shifts the value to the left by the specified number of bits. ulong? ShiftLeft(ulong? value, int shift) . Shifts the value to the left by the specified number of bits. byte? ShiftRight(byte? value, int shift) . Shifts the value to the right by the specified number of bits. short? ShiftRight(short? value, int shift) . Shifts the value to the right by the specified number of bits. int? ShiftRight(int? value, int shift) . Shifts the value to the right by the specified number of bits. long? ShiftRight(long? value, int shift) . Shifts the value to the right by the specified number of bits. sbyte? ShiftRight(sbyte? value, int shift) . Shifts the value to the right by the specified number of bits. ushort? ShiftRight(ushort? value, int shift) . Shifts the value to the right by the specified number of bits. uint? ShiftRight(uint? value, int shift) . Shifts the value to the right by the specified number of bits. ulong? ShiftRight(ulong? value, int shift) . Shifts the value to the right by the specified number of bits. byte? Not(byte? value) . Performs bitwise NOT operation on a given value. short? Not(short? value) . Performs bitwise NOT operation on a given value. int? Not(int? value) . Performs bitwise NOT operation on a given value. long? Not(long? value) . Performs bitwise NOT operation on a given value. sbyte? Not(sbyte? value) . Performs bitwise NOT operation on a given value. ushort? Not(ushort? value) . Performs bitwise NOT operation on a given value. uint? Not(uint? value) . Performs bitwise NOT operation on a given value. ulong? Not(ulong? value) . Performs bitwise NOT operation on a given value. byte? And(byte? left, byte? right) . Performs bitwise AND operation on two given values. int? And(byte? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(byte? left, short? right) . Performs bitwise AND operation on two given values. int? And(byte? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(byte? left, int? right) . Performs bitwise AND operation on two given values. uint? And(byte? left, uint? right) . Performs bitwise AND operation on two given values. long? And(byte? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(byte? left, ulong? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, byte? right) . Performs bitwise AND operation on two given values. sbyte? And(sbyte? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, short? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, int? right) . Performs bitwise AND operation on two given values. uint? And(sbyte? left, uint? right) . Performs bitwise AND operation on two given values. long? And(sbyte? left, long? right) . Performs bitwise AND operation on two given values. int? And(short? left, byte? right) . Performs bitwise AND operation on two given values. int? And(short? left, sbyte? right) . Performs bitwise AND operation on two given values. short? And(short? left, short? right) . Performs bitwise AND operation on two given values. int? And(short? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(short? left, int? right) . Performs bitwise AND operation on two given values. uint? And(short? left, uint? right) . Performs bitwise AND operation on two given values. long? And(short? left, long? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, byte? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, short? right) . Performs bitwise AND operation on two given values. ushort? And(ushort? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, int? right) . Performs bitwise AND operation on two given values. uint? And(ushort? left, uint? right) . Performs bitwise AND operation on two given values. long? And(ushort? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(ushort? left, ulong? right) . Performs bitwise AND operation on two given values. int? And(int? left, byte? right) . Performs bitwise AND operation on two given values. int? And(int? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(int? left, short? right) . Performs bitwise AND operation on two given values. int? And(int? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(int? left, int? right) . Performs bitwise AND operation on two given values. uint? And(int? left, uint? right) . Performs bitwise AND operation on two given values. long? And(int? left, long? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, uint? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, byte? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, sbyte? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, short? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, ushort? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, int? right) . Performs bitwise AND operation on two given values. ulong? And(uint? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(uint? left, ulong? right) . Performs bitwise AND operation on two given values. long? And(long? left, long? right) . Performs bitwise AND operation on two given values. long? And(long? left, byte? right) . Performs bitwise AND operation on two given values. long? And(long? left, sbyte? right) . Performs bitwise AND operation on two given values. long? And(long? left, short? right) . Performs bitwise AND operation on two given values. long? And(long? left, ushort? right) . Performs bitwise AND operation on two given values. long? And(long? left, int? right) . Performs bitwise AND operation on two given values. long? And(long? left, uint? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, byte? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, ushort? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, uint? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, ulong? right) . Performs bitwise AND operation on two given values. byte? Or(byte? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, short? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(byte? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(byte? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(byte? left, ulong? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, byte? right) . Performs bitwise OR operation on two given values. sbyte? Or(sbyte? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, short? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(sbyte? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(sbyte? left, long? right) . Performs bitwise OR operation on two given values. int? Or(short? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(short? left, sbyte? right) . Performs bitwise OR operation on two given values. short? Or(short? left, short? right) . Performs bitwise OR operation on two given values. int? Or(short? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(short? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(short? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(short? left, long? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, short? right) . Performs bitwise OR operation on two given values. ushort? Or(ushort? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(ushort? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(ushort? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(ushort? left, ulong? right) . Performs bitwise OR operation on two given values. int? Or(int? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(int? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(int? left, short? right) . Performs bitwise OR operation on two given values. int? Or(int? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(int? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(int? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(int? left, long? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, uint? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, byte? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, sbyte? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, short? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, ushort? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, int? right) . Performs bitwise OR operation on two given values. ulong? Or(uint? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(uint? left, ulong? right) . Performs bitwise OR operation on two given values. long? Or(long? left, long? right) . Performs bitwise OR operation on two given values. long? Or(long? left, byte? right) . Performs bitwise OR operation on two given values. long? Or(long? left, sbyte? right) . Performs bitwise OR operation on two given values. long? Or(long? left, short? right) . Performs bitwise OR operation on two given values. long? Or(long? left, ushort? right) . Performs bitwise OR operation on two given values. long? Or(long? left, int? right) . Performs bitwise OR operation on two given values. long? Or(long? left, uint? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, byte? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, ushort? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, uint? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, ulong? right) . Performs bitwise OR operation on two given values. byte? Xor(byte? left, byte? right) . Performs bitwise OR operation on two given values. int? Xor(byte? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(byte? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(byte? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(byte? left, ulong? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, byte? right) . Performs bitwise Xor operation on two given values. sbyte? Xor(sbyte? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(sbyte? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(sbyte? left, long? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, sbyte? right) . Performs bitwise Xor operation on two given values. short? Xor(short? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, ushort? right) . Performs bitwise XOR operation on two given values. int? Xor(short? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(short? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(short? left, long? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, short? right) . Performs bitwise Xor operation on two given values. ushort? Xor(ushort? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(ushort? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(ushort? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ushort? left, ulong? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(int? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(int? left, long? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, uint? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, byte? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, sbyte? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, short? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, ushort? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, int? right) . Performs bitwise Xor operation on two given values. ulong? Xor(uint? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(uint? left, ulong? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, long? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, byte? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, sbyte? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, short? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, ushort? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, int? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, uint? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, ulong? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, byte? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, ushort? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, uint? right) . Performs bitwise Xor operation on two given values. byte[] GetBytes(string? content) . Gets the bytes from the given string. byte[] GetBytes(string? content, int length, int offset) . Gets the bytes from the given string within given offset and length. byte?[]? GetBytes(char? character) . Gets the bytes from the given character. byte?[]? GetBytes(bool? bit) . Gets the bytes from the given boolean. byte?[]? GetBytes(long? value) . Gets the bytes from the given long. byte?[]? GetBytes(int? value) . Gets the bytes from the given int. byte?[]? GetBytes(short? value) . Gets the bytes from the given short. byte?[]? GetBytes(ulong? value) . Gets the bytes from the given ulong. byte?[]? GetBytes(ushort? value) . Gets the bytes from the given ushort. byte?[]? GetBytes(uint? value) . Gets the bytes from the given uint. byte?[]? GetBytes(Decimal? value) . Gets the bytes from the given decimal. byte?[]? GetBytes(double? value) . Gets the bytes from the given double. byte?[]? GetBytes(float? value) . Gets the bytes from the given float. string? ToBin(byte?[]? bytes, string delimiter) . Converts given bytes to binary with defined delimiter . string ToBin&lt;T&gt;(T value) . Converts given value to binary . string ToOcta&lt;T&gt;(T value) . Converts given value to octal . string ToDec&lt;T&gt;(T value) . Converts given value to decimal . string ToBase64(byte[] value) . Converts given value to string . string ToBase64(byte[] value, int offset, int length) . Converts given array of bytes to string . byte[] FromBase64(string value) . Converts given string to bytes array . bool FromBytesToBool(byte[] value) . Converts bytes to boolean value. short FromBytesToInt16(byte[] value) . Converts bytes to a 16-bit signed integer. ushort FromBytesToUInt16(byte[] value) . Converts bytes to a 16-bit unsigned integer. int FromBytesToInt32(byte[] value) . Converts bytes to a 32-bit signed integer. uint FromBytesToUInt32(byte[] value) . Converts bytes to a 32-bit unsigned integer. long FromBytesToInt64(byte[] value) . Converts bytes to a 64-bit signed integer. ulong FromBytesToUInt64(byte[] value) . Converts bytes to a 64-bit unsigned integer. float FromBytesToFloat(byte[] value) . Converts bytes to a float value. double FromBytesToDouble(byte[] value) . Converts bytes to a float value. string FromBytesToString(byte[] value) . Converts bytes to a string. byte[] ToBytes(bool value) . Converts boolean value to bytes. byte[] ToBytes(short value) . Converts short value to bytes. byte[] ToBytes(ushort value) . Converts ushort value to bytes. byte[] ToBytes(int value) . Converts int value to bytes. byte[] ToBytes(uint value) . Converts uint value to bytes. byte[] ToBytes(long value) . Converts long value to bytes. byte[] ToBytes(ulong value) . Converts long value to bytes. string? ToHex(byte?[]? bytes, string delimiter) . Converts given bytes to hex with defined delimiter . string? ToHex&lt;T&gt;(T value) . Converts given value to binary . int Count(string name) . Gets the count value of a given group. int Count(string name, int parent) . Gets the count value of a given group. int ExtractFromDate(string? date, string partOfDate) . Extracts part of the date from the date . int ExtractFromDate(string date, string culture, string partOfDate) . Extracts part of the date from the date based on given culture . DateTimeOffset? GetDate() . Gets the current datetime . DateTimeOffset? UtcGetDate() . Gets the current datetime in UTC . int? Month(DateTimeOffset? value) . Gets the month from DateTimeOffset . int? Year(DateTimeOffset? value) . Gets the year from DateTimeOffset . int? Day(DateTimeOffset? value) . Gets the day from DateTimeOffset . int? Hour(DateTimeOffset? value) . Gets the hour from DateTimeOffset . int? Minute(DateTimeOffset? value) . Gets the minute from DateTimeOffset . int? Second(DateTimeOffset? value) . Gets the second from DateTimeOffset . int? Milliseconds(DateTimeOffset? value) . Gets the millisecond from DateTimeOffset . int? DayOfWeek(DateTimeOffset? value) . Gets the day of week from DateTimeOffset . TimeSpan? ExtractTimeSpan(DateTimeOffset? dateTimeOffset) . Extracts time from DateTimeOffset . DateTime? ToDateTimeOffset(string value) . Converts given value to DateTimeOffset . DateTimeOffset? ToDateTimeOffset(string value, string culture) . Converts given value to DateTimeOffset . IEnumerable&lt;T&gt;? Skip&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? skipCount) . Skips elements from the beginning of the sequence. IEnumerable&lt;T&gt;? Take&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? takeCount) . Takes elements from the beginning of the sequence. IEnumerable&lt;T&gt;? SkipAndTake&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? skipCount, int? takeCount) . Skip and takes elements from the beginning of the sequence. T[]? EnumerableToArray&lt;T&gt;(IEnumerable&lt;T&gt;? values) . Turn array arguments of T into a single array. T[]? MergeArrays&lt;T&gt;(T[][]? values) . Turn array arguments of T into a single array. IEnumerable&lt;T&gt;? LongestCommonSequence&lt;T&gt;(IEnumerable&lt;T&gt;? source, IEnumerable&lt;T&gt;? pattern) . Computes longest common sequence of two given sequences . T? GetElementAtOrDefault&lt;T&gt;(IEnumerable&lt;T&gt;? enumerable, int? index) . Gets the element at the specified index in a sequence . int? Length&lt;T&gt;(IEnumerable&lt;T&gt;? enumerable) . Gets the length of the sequence . int? Length&lt;T&gt;(T[]? array) . Gets the length of the array . T? Choose&lt;T&gt;(int? index, T[] values) . Gets the value of an array at the specified index . T If&lt;T&gt;(bool expressionResult, T a, T b) . Chose a or b value based on the expression result . bool? Match(string? regex, string? content) . Determine whether content matches the specified pattern . byte? Coalesce(byte?[] array) . Gets the first non-null value in a list . sbyte? Coalesce(sbyte?[] array) . Gets the first non-null value in a list . short? Coalesce(short?[] array) . Gets the first non-null value in a list . ushort? Coalesce(ushort?[] array) . Gets the first non-null value in a list . int? Coalesce(int?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(uint?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(long?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(ulong?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(Decimal?[] array) . Gets the first non-null value in a list . T? Coalesce&lt;T&gt;(T[] array) . Gets the first non-null value in a list . IEnumerable&lt;T&gt;? Distinct&lt;T&gt;(IEnumerable&lt;T&gt;? values) . Returns distinct elements from a collection. string? Md5(string? content) . Gets the md5 hash of the given string. string? Md5(byte?[]? content) . Gets the md5 hash of the given bytes array. string? Sha1(string? content) . Gets the sha256 hash of the given string. string? Sha1(byte?[]? content) . Gets the sha256 hash of the given bytes array. string? Sha256(string? content) . Gets the sha256 hash of the given string. string? Sha256(byte?[]? content) . Gets the sha256 hash of the given bytes array. string? Sha512(string? content) . Gets the sha256 hash of the given string. string? Sha512(byte?[]? content) . Gets the sha256 hash of the bytes array. string? ToJson&lt;T&gt;(T? obj) . Converts object to json. string[] ExtractFromJsonToArray(string? json, string? path) . Extracts values from json by path. string? ExtractFromJson(string? json, string? path) . Extracts values from json by path and joins them with comma. Decimal? Abs(Decimal? value) . Gets the absolute value . long? Abs(long? value) . Gets the absolute value . int? Abs(int? value) . Gets the absolute value . Decimal? Ceil(Decimal? value) . Gets the ceiling value . Decimal? Floor(Decimal? value) . Gets the floor value . Decimal? Sign(Decimal? value) . Determine whether value is greater, equal or less that zero . long? Sign(long? value) . Determine whether value is greater, equal or less that zero . Decimal? Round(Decimal? value, int precision) . Rounds the value within given precision . Decimal? PercentOf(Decimal? value, Decimal? max) . Gets the percentage of the value . int Rand() . Gets the random integer value . int? Rand(int? min, int? max) . Gets the random integer value . double? Pow(Decimal? x, Decimal? y) . Computes the pow between two values . double? Pow(double? x, double? y) . Computes the pow between two values . double? Sqrt(Decimal? x) . Computes the sqrt of a given value . double? Sqrt(double? x) . Computes the sqrt of a given value . double? Sqrt(long? x) . Computes the sqrt of a given value . double? PercentRank&lt;T&gt;(IEnumerable&lt;T&gt;? window, T? value) . Computes the percent rank of a given window . double? Log(Decimal? base, Decimal? value) . Calculates the logarithm of a value with a specified base. Decimal? Sin(Decimal? value) . Calculates sine of a value. double? Sin(double? value) . Calculates sine of a value. float? Sin(float? value) . Calculates sine of a value. Decimal? Cos(Decimal? value) . Calculates cosine of a value. double? Cos(double? value) . Calculates cosine of a value. float? Cos(float? value) . Calculates cosine of a value. Decimal Max(string name) . Gets the max value of a given group. Decimal Max(string name, int parent) . Gets the max value of a given group. Decimal Min(string name) . Gets the min value of a given group. Decimal Min(string name, int parent) . Gets the min value of a given group. Decimal StDev(string name, int parent) . Gets the StDev value of a given group. string NewId() . Gets the new identifier . string? Trim(string? value) . Removes leading and trailing whitespace from a string. string? TrimStart(string? value) . Removes leading whitespace from a string. string? TrimEnd(string? value) . Removes trailing whitespace from a string. string? Substring(string? value, int? index, int? length) . Gets the substring from the string. string? Substring(string value, int? length) . Gets the substring from the string . string? Concat(string[]? strings) . Concatenates the specified values . string? Concat(char?[]? characters) . Concatenates the specified characters . string? Concat(string? firstString, char?[]? chars) . Concatenates specified string fir characters . string? Concat(char? firstChar, string[]? strings) . Concatenate specific character with strings . string? Concat(object[]? objects) . Concatenates the specified strings . string? Concat&lt;T&gt;(T[]? objects) . Concatenates the specified strings . bool? Contains(string? content, string? what) . Determine whether the string contains the specified value . int? IndexOf(string? value, string? text) . Position of the first occurrence of the specified value . string? Soundex(string? value) . Computes soundex for the specified value . bool HasFuzzyMatchedWord(string text, string word, string separator) . Matches the specified text by splitting it with separator and applying fuzzy comparison . bool HasWordThatHasSmallerLevenshteinDistanceThan(string text, string word, int distance, string separator) . Matches the specified text by splitting it with separator and applying fuzzy comparison with a given distance . bool HasWordThatSoundLike(string text, string word, string separator) . Matches whether the specified word is present after being fuzzified within the specified text . bool HasTextThatSoundLikeSentence(string text, string sentence, string separator) . Matches whether the specified text is present in sentence after being fuzified . string? ToUpper(string value) . Makes the string uppercase . string? ToUpper(string value, string culture) . Makes the string uppercase within specified culture . string? ToUpperInvariant(string value) . Makes the string uppercase . string? ToLower(string value) . Makes the string lowercase . string? ToLower(string value, string culture) . Makes the string lowercase within specified culture . string? ToLowerInvariant(string value) . Makes the string lowercase . string? PadLeft(string? value, string? character, int? totalWidth) . Returns a new string that right-aligns the characters in this instance by padding them on the left with a specified Unicode character, for a specified total lengt . string? PadRight(string? value, string? character, int? totalWidth) . Returns a new string that left-aligns the characters in this instance by padding them on the right with a specified Unicode character, for a specified total length . string? Head(string? value, int? length) . Gets the first N characters of the string . string? Tail(string? value, int? length) . Gets the last N characters of the string . int? LevenshteinDistance(string? firstValue, string? secondValue) . Computes the Levenshtein distance between two strings . char? GetCharacterOf(string value, int index) . Gets the character at specified index . string? Reverse(string? value) . Reverses the string . string[] Split(string value, string[] separators) . Splits the string into an array of substrings based on the specified separators . char[] ToCharArray(string value) . Splits the string into an array of characters . string? LongestCommonSubstring(string source, string pattern) . Computes the longest common subsequence between two source and pattern . string Replicate(string value, int integer) . Clones the value n times . string? Translate(string? value, string? characters, string? translations) . Returns the string from the first argument after the characters specified in the second argument are translated into the characters specified in the third argument. string? Replace(string? text, string lookFor, string? changeTo) . Replaces the first occurrence of a specified string in this instance with another specified string . string? ToTitleCase(string? value) . Capitalizes the first letter of the string . string? GetNthWord(string? text, int? wordIndex, string? separator) . Gets the nth word of the string . string? GetFirstWord(string text, string separator) . Gets the first word of the string . string? GetSecondWord(string text, string separator) . Gets the second word of the string . string? GetThirdWord(string text, string separator) . Gets the third word of the string . string? GetLastWord(string? text, string? separator) . Gets last word of the string . bool? IsNullOrEmpty(string? value) . Determines whether the string is null or empty . bool? IsNullOrWhiteSpace(string? value) . Determines whether the string is null or whitespace . string? UrlEncode(string? value) . Encodes the value . string? UrlDecode(string? value) . Decodes the value . string? UriEncode(string? value) . Encodes the value . string? UriDecode(string? value) . Decodes the value . bool? StartsWith(string? value, string? prefix) . Determines whether the string starts with the specified prefix . bool? StartsWith(string? value, string? prefix, string comparison) . Determines whether the string starts with the specified prefix . bool? EndsWith(string? value, string? suffix) . Determines whether the string ends with the specified suffix . bool? EndsWith(string? value, string? suffix, string comparison) . Determines whether the string ends with the specified suffix . string? RegexReplace(string? value, string? pattern, string? replacement) . Replace the specified value part that matches the pattern with the replacement . string[]? SplitByLinuxNewLines(string? input) . Split string by Linux-style newlines (\\n) . string[]? SplitByWindowsNewLines(string? input) . Split string by Windows-style newlines (\\r\\n) . string[]? SplitByNewLines(string? input) . Smart split that handles both Windows (\\r\\n) and Linux (\\n) newlines . Decimal Sum(string name) . Gets the sum value of a given group. Decimal Sum(string name, int parent) . Gets the sum value of a given group. Decimal SumIncome(string name) . Gets the sum value of a given group. Decimal SumIncome(string name, int parent) . Gets the sum value of a given group. Decimal SumOutcome(string name) . Gets the outcome value of a given group. Decimal SumOutcome(string name, int parent) . Gets the outcome value of a given group. TimeSpan? SumTimeSpan(string name) . Gets the sum value of a given group. TimeSpan? SumTimeSpan(string name, int parent) . Gets the sum value of a given group. TimeSpan? MinTimeSpan(string name) . Gets the min value of a given group. TimeSpan? MinTimeSpan(string name, int parent) . Gets the min value of a given group. TimeSpan? MaxTimeSpan(string name) . Gets the max value of a given group. TimeSpan? MaxTimeSpan(string name, int parent) . Gets the min value of a given group. char? ToChar(string? value) . Converts given value to character . char? ToChar(int? value) . Converts given value to character . char? ToChar(short? value) . Converts given value to character . char? ToChar(byte? value) . Converts given value to character . char? ToChar(object? value) . Converts given value to character . DateTime? ToDateTime(string value) . Converts given value to DateTime . DateTime? ToDateTime(string value, string culture) . Converts given value to DateTime . Decimal? ToDecimal(string? value) . Converts given value to decimal . Decimal? ToDecimal(string value, string culture) . Converts given value to decimal withing given culture . Decimal? ToDecimal(byte? value) . Converts given value to Decimal . Decimal? ToDecimal(sbyte? value) . Converts given value to Decimal . Decimal? ToDecimal(short? value) . Converts given value to Decimal . Decimal? ToDecimal(ushort? value) . Converts given value to Decimal . Decimal? ToDecimal(long? value) . Converts given value to Decimal . Decimal? ToDecimal(ulong? value) . Converts given value to Decimal . Decimal? ToDecimal(float? value) . Converts given value to Decimal . Decimal? ToDecimal(double? value) . Converts given value to Decimal . Decimal? ToDecimal(object? value) . Converts given value to Decimal . double? ToDouble(object? value) . Converts given value to double . double? ToDouble(string? value) . Converts given value to double . double? ToDouble(byte? value) . Converts given value to double . double? ToDouble(sbyte? value) . Converts given value to double . double? ToDouble(short? value) . Converts given value to double . double? ToDouble(ushort? value) . Converts given value to double . double? ToDouble(int? value) . Converts given value to double . double? ToDouble(uint? value) . Converts given value to double . double? ToDouble(long? value) . Converts given value to double . double? ToDouble(ulong? value) . Converts given value to double . double? ToDouble(float? value) . Converts given value to double . double? ToDouble(double? value) . Converts given value to double . double? ToDouble(Decimal? value) . Converts given value to double . float? ToFloat(string? value) . Converts given value to float . float? ToFloat(byte? value) . Converts given value to float . float? ToFloat(sbyte? value) . Converts given value to float . float? ToFloat(short? value) . Converts given value to float . float? ToFloat(ushort? value) . Converts given value to float . float? ToFloat(int? value) . Converts given value to float . float? ToFloat(uint? value) . Converts given value to float . float? ToFloat(long? value) . Converts given value to float . float? ToFloat(ulong? value) . Converts given value to float . float? ToFloat(float? value) . Converts given value to float . float? ToFloat(Decimal? value) . Converts given value to float . int? ToInt32(string value) . Converts given value to int . int? ToInt32(byte? value) . Converts given value to int . int? ToInt32(sbyte? value) . Converts given value to int . int? ToInt32(short? value) . Converts given value to int . int? ToInt32(ushort? value) . Converts given value to int . int? ToInt32(int? value) . Converts given value to int . int? ToInt32(uint? value) . Converts given value to int . int? ToInt32(long? value) . Converts given value to int . int? ToInt32(ulong? value) . Converts given value to int . int? ToInt32(float? value) . Converts given value to int . int? ToInt32(double? value) . Converts given value to int . int? ToInt32(Decimal? value) . Converts given value to int . int? ToInt32(object? value) . Converts given value to int . long? ToInt64(string value) . Converts given value to Int64 . long? ToInt64(byte? value) . Converts given value to long . long? ToInt64(sbyte? value) . Converts given value to long . long? ToInt64(short? value) . Converts given value to long . long? ToInt64(ushort? value) . Converts given value to long . long? ToInt64(int? value) . Converts given value to long . long? ToInt64(uint? value) . Converts given value to long . long? ToInt64(long? value) . Converts given value to long . long? ToInt64(ulong? value) . Converts given value to long . long? ToInt64(float? value) . Converts given value to long . long? ToInt64(double? value) . Converts given value to long . long? ToInt64(Decimal? value) . Converts given value to long . long? ToInt64(object? value) . Converts given value to long . string? ToString(char? value) . Converts given value to string . string? ToString(DateTimeOffset? value) . Converts given value to string . string? ToString(DateTimeOffset? value, string format) . Converts given value to string . string? ToString(byte? value) . Converts given value to string . string? ToString(byte? value, string format) . Converts given value to string . string? ToString(sbyte? value) . Converts given value to string . string? ToString(sbyte? value, string format) . Converts given value to string . string? ToString(int? value) . Converts given value to string . string? ToString(int? value, string format) . Converts given value to string . string? ToString(uint? value) . Converts given value to string . string? ToString(uint? value, string format) . Converts given value to string . string? ToString(long? value) . Converts given value to string . string? ToString(long? value, string format) . Converts given value to string . string? ToString(ulong? value) . Converts given value to string . string? ToString(ulong? value, string format) . Converts given value to string . string? ToString(float? value) . Converts given value to string . string? ToString(float? value, string format) . Converts given value to string . string? ToString(double? value) . Converts given value to string . string? ToString(double? value, string format) . Converts given value to string . string? ToString(Decimal? value) . Converts given value to string . string? ToString(Decimal? value, string format) . Converts given value to string . string? ToString(bool? value) . Converts given value to string . string? ToString(object? value) . Converts given value to string . string? ToString&lt;T&gt;(T? value) . Converts given value to string . string ToString(string[] value) . Converts given value to string . string ToString&lt;T&gt;(T[] value) . Converts given value to string . TimeSpan? ToTimeSpan(string value) . Converts given value to TimeSpan . TimeSpan? ToTimeSpan(string value, string culture) . Converts given value to TimeSpan . IEnumerable&lt;T&gt; Window&lt;T&gt;(string name) . Gets the window . ",
    "url": "/data-sources/Time/linux-x64.html#base-methods",
    
    "relUrl": "/data-sources/Time/linux-x64.html#base-methods"
  },"184": {
    "doc": "Linux X64",
    "title": "Linux X64",
    "content": " ",
    "url": "/data-sources/Time/linux-x64.html",
    
    "relUrl": "/data-sources/Time/linux-x64.html"
  },"185": {
    "doc": "Linux X64",
    "title": "Musoq.DataSources.CANBus",
    "content": "Provides schema to work with CAN bus data. ",
    "url": "/data-sources/CANBus/linux-x64.html#musoqdatasourcescanbus",
    
    "relUrl": "/data-sources/CANBus/linux-x64.html#musoqdatasourcescanbus"
  },"186": {
    "doc": "Linux X64",
    "title": "Tables",
    "content": "Table is a collection of rows and columns that the plugin exposes. Below are the tables that are exposed by this data source. can.separatedvalues(string csvData, string dbcData, string idOfType = “dec” | “hex” | “bin”) . Treats csv, tsv or others separated values files as CAN bus records. The file must be of format Timestamp, ID, DLC, Data where Data values must be in format of unsigned integer number (123) or in hexadecimal (0x7b). Based on the loaded dbc file, you will have access access to additional column named {DBC_MESSAGE_NAME}. From here, you can access value {DBC_SIGNAL_NAME} of a message (ie. {DBC_MESSAGE_NAME}.{DBC_SIGNAL_NAME}). Returned value will be of type double . This table has a dynamic structure, which means that its columns and other details cannot be determined until runtime. As a result, it is not possible to include a complete description of this table in the documentation. Instead, the actual columns and other details of this table will be determined at runtime. However, this table has a well-known set of columns that are always present. These columns are described below. | Name | Type | Description | . | ID | uint | ID of the message entity | . | Timestamp | ulong | Timestamp of the message entity | . | Message | MessageEntity | The Message | . | IsWellKnown | uint | Whether the message is well known or not (is within dbc file) | . | DataAsBytes | byte[] | Data as bytes | . | Data | ulong | Data as ulong | . can.messages(string dbc) . Parses dbc file and returns all messages defined within it. | Name | Type | Description | . | Id | uint | ID of the message entity | . | IsExtId | bool | Is external Id | . | Name | string | Name of the message entity | . | DLC | ushort | DLC of the message entity | . | Transmitter | string | Transmitter of the message entity | . | Comment | string | Comment for the message entity | . | CycleTime | int | Cycle time for the message entity | . | Signals | SignalEntity[] | Signals of the message | . can.signals(string dbc) . Parses dbc file and returns all signals defined within it. | Name | Type | Description | . | Id | uint | Id of the signal entity | . | Name | string | Name of the signal entity | . | StartBit | ushort | Start bit of the signal entity | . | Length | ushort | Length of the signal entity | . | ByteOrder | byte | Byte order of the signal entity | . | InitialValue | double | Initial value of the signal entity | . | Factor | double | Factor for the signal entity | . | IsInteger | bool | Whether the signal entity is integer or not | . | Offset | double | Offset for the signal entity | . | Minimum | double | Minimum value for the signal entity | . | Maximum | double | Maximum value for the signal entity | . | Unit | string | Unit for the signal entity | . | Receiver | string[] | Receiver for the signal entity | . | Comment | string | Comment for the signal entity | . | Multiplexing | string | Multiplexing details for the signal entity | . | MessageName | string | Message name for the signal entity | . | ValueMap | string | Value map for the signal entity | . | MessageOrder | int | Order of signal within the message definition | . ",
    "url": "/data-sources/CANBus/linux-x64.html#tables",
    
    "relUrl": "/data-sources/CANBus/linux-x64.html#tables"
  },"187": {
    "doc": "Linux X64",
    "title": "Private Tables",
    "content": "Private tables are tables that are not exposed by the plugin, but are available for use in queries when using CROSS / OUTER APPLY operator. ValueMapEntity[] . Represent possible values of a signal . | Name | Type | Description | . | Value | int | Value of signal | . | Name | string | Name of the value | . ",
    "url": "/data-sources/CANBus/linux-x64.html#private-tables",
    
    "relUrl": "/data-sources/CANBus/linux-x64.html#private-tables"
  },"188": {
    "doc": "Linux X64",
    "title": "Methods",
    "content": "Methods are functions that can be called on the data source specific column. Below are the methods that are exposed by this data source. ulong EncodeMessage(string name, byte value) . Converts bytes to encoded signal of a message for CAN bus. ulong EncodeMessage(string name, short value) . Converts short to encoded signal of a message for CAN bus. ulong EncodeMessage(string name, ushort value) . Converts ushort to encoded signal of a message for CAN bus. ulong EncodeMessage(string name, int value) . Converts int to encoded signal of a message for CAN bus. ulong EncodeMessage(string name, uint value) . Converts uint to encoded signal of a message for CAN bus. ulong EncodeMessage(string name, long value) . Converts long to encoded signal of a message for CAN bus. ulong EncodeMessage(string name, ulong value) . Converts ulong to encoded signal of a message for CAN bus. ulong EncodeMessage(string name, float value) . Converts float to encoded signal of a message for CAN bus. ulong EncodeMessage(string name, double value) . Converts double to encoded signal of a message for CAN bus. ulong EncodeMessage(string jsonValues) . Converts structured json to encoded signals of a message for CAN bus. It’s structure is of { signalName1: signalValue1, ..., signalNameN : signalValueN } . double DecodeMessage(string name, byte value) . Treats byte as encoded signal of a message for CAN bus and decodes it. double DecodeMessage(string name, short value) . Treats short as encoded signal of a message for CAN bus and decodes it. double DecodeMessage(string name, ushort value) . Treats ushort as encoded signal of a message for CAN bus and decodes it. double DecodeMessage(string name, int value) . Treats int as encoded signal of a message for CAN bus and decodes it. double DecodeMessage(string name, uint value) . Treats uint as encoded signal of a message for CAN bus and decodes it. double DecodeMessage(string name, long value) . Treats long as encoded signal of a message for CAN bus and decodes it. double DecodeMessage(string name, ulong value) . Treats ulong as encoded signal of a message for CAN bus and decodes it. DateTimeOffset? FromTimestamp(ulong timestamp, string resolution) . Converts timestamp to date time offset. DateTimeOffset? ToDateTimeOffset(string date, string format) . Creates the date time offset from given date and time in a given format. ",
    "url": "/data-sources/CANBus/linux-x64.html#methods",
    
    "relUrl": "/data-sources/CANBus/linux-x64.html#methods"
  },"189": {
    "doc": "Linux X64",
    "title": "Base Methods",
    "content": "Base methods are methods that can be called on the data source specific column. Those methods are automatically inherited and enriches the data source specific methods. Below are those base methods that are exposed by this data source. int RowNumber() . Gets the row number of the current row. string? GetTypeName(object? obj) . Gets the typename of passed object. string AggregateValues(string name) . Aggregates values into a single value. string AggregateValues(string name, int parent) . Aggregates values into a single value. Decimal Avg(string name) . Gets the aggregated average value from the given group name . Decimal Avg(string name, int parent) . Gets the aggregated average value from the given group name . byte? ShiftLeft(byte? value, int shift) . Shifts the value to the left by the specified number of bits. short? ShiftLeft(short? value, int shift) . Shifts the value to the left by the specified number of bits. int? ShiftLeft(int? value, int shift) . Shifts the value to the left by the specified number of bits. long? ShiftLeft(long? value, int shift) . Shifts the value to the left by the specified number of bits. sbyte? ShiftLeft(sbyte? value, int shift) . Shifts the value to the left by the specified number of bits. ushort? ShiftLeft(ushort? value, int shift) . Shifts the value to the left by the specified number of bits. uint? ShiftLeft(uint? value, int shift) . Shifts the value to the left by the specified number of bits. ulong? ShiftLeft(ulong? value, int shift) . Shifts the value to the left by the specified number of bits. byte? ShiftRight(byte? value, int shift) . Shifts the value to the right by the specified number of bits. short? ShiftRight(short? value, int shift) . Shifts the value to the right by the specified number of bits. int? ShiftRight(int? value, int shift) . Shifts the value to the right by the specified number of bits. long? ShiftRight(long? value, int shift) . Shifts the value to the right by the specified number of bits. sbyte? ShiftRight(sbyte? value, int shift) . Shifts the value to the right by the specified number of bits. ushort? ShiftRight(ushort? value, int shift) . Shifts the value to the right by the specified number of bits. uint? ShiftRight(uint? value, int shift) . Shifts the value to the right by the specified number of bits. ulong? ShiftRight(ulong? value, int shift) . Shifts the value to the right by the specified number of bits. byte? Not(byte? value) . Performs bitwise NOT operation on a given value. short? Not(short? value) . Performs bitwise NOT operation on a given value. int? Not(int? value) . Performs bitwise NOT operation on a given value. long? Not(long? value) . Performs bitwise NOT operation on a given value. sbyte? Not(sbyte? value) . Performs bitwise NOT operation on a given value. ushort? Not(ushort? value) . Performs bitwise NOT operation on a given value. uint? Not(uint? value) . Performs bitwise NOT operation on a given value. ulong? Not(ulong? value) . Performs bitwise NOT operation on a given value. byte? And(byte? left, byte? right) . Performs bitwise AND operation on two given values. int? And(byte? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(byte? left, short? right) . Performs bitwise AND operation on two given values. int? And(byte? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(byte? left, int? right) . Performs bitwise AND operation on two given values. uint? And(byte? left, uint? right) . Performs bitwise AND operation on two given values. long? And(byte? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(byte? left, ulong? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, byte? right) . Performs bitwise AND operation on two given values. sbyte? And(sbyte? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, short? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, int? right) . Performs bitwise AND operation on two given values. uint? And(sbyte? left, uint? right) . Performs bitwise AND operation on two given values. long? And(sbyte? left, long? right) . Performs bitwise AND operation on two given values. int? And(short? left, byte? right) . Performs bitwise AND operation on two given values. int? And(short? left, sbyte? right) . Performs bitwise AND operation on two given values. short? And(short? left, short? right) . Performs bitwise AND operation on two given values. int? And(short? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(short? left, int? right) . Performs bitwise AND operation on two given values. uint? And(short? left, uint? right) . Performs bitwise AND operation on two given values. long? And(short? left, long? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, byte? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, short? right) . Performs bitwise AND operation on two given values. ushort? And(ushort? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, int? right) . Performs bitwise AND operation on two given values. uint? And(ushort? left, uint? right) . Performs bitwise AND operation on two given values. long? And(ushort? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(ushort? left, ulong? right) . Performs bitwise AND operation on two given values. int? And(int? left, byte? right) . Performs bitwise AND operation on two given values. int? And(int? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(int? left, short? right) . Performs bitwise AND operation on two given values. int? And(int? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(int? left, int? right) . Performs bitwise AND operation on two given values. uint? And(int? left, uint? right) . Performs bitwise AND operation on two given values. long? And(int? left, long? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, uint? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, byte? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, sbyte? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, short? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, ushort? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, int? right) . Performs bitwise AND operation on two given values. ulong? And(uint? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(uint? left, ulong? right) . Performs bitwise AND operation on two given values. long? And(long? left, long? right) . Performs bitwise AND operation on two given values. long? And(long? left, byte? right) . Performs bitwise AND operation on two given values. long? And(long? left, sbyte? right) . Performs bitwise AND operation on two given values. long? And(long? left, short? right) . Performs bitwise AND operation on two given values. long? And(long? left, ushort? right) . Performs bitwise AND operation on two given values. long? And(long? left, int? right) . Performs bitwise AND operation on two given values. long? And(long? left, uint? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, byte? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, ushort? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, uint? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, ulong? right) . Performs bitwise AND operation on two given values. byte? Or(byte? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, short? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(byte? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(byte? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(byte? left, ulong? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, byte? right) . Performs bitwise OR operation on two given values. sbyte? Or(sbyte? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, short? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(sbyte? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(sbyte? left, long? right) . Performs bitwise OR operation on two given values. int? Or(short? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(short? left, sbyte? right) . Performs bitwise OR operation on two given values. short? Or(short? left, short? right) . Performs bitwise OR operation on two given values. int? Or(short? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(short? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(short? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(short? left, long? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, short? right) . Performs bitwise OR operation on two given values. ushort? Or(ushort? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(ushort? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(ushort? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(ushort? left, ulong? right) . Performs bitwise OR operation on two given values. int? Or(int? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(int? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(int? left, short? right) . Performs bitwise OR operation on two given values. int? Or(int? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(int? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(int? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(int? left, long? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, uint? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, byte? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, sbyte? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, short? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, ushort? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, int? right) . Performs bitwise OR operation on two given values. ulong? Or(uint? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(uint? left, ulong? right) . Performs bitwise OR operation on two given values. long? Or(long? left, long? right) . Performs bitwise OR operation on two given values. long? Or(long? left, byte? right) . Performs bitwise OR operation on two given values. long? Or(long? left, sbyte? right) . Performs bitwise OR operation on two given values. long? Or(long? left, short? right) . Performs bitwise OR operation on two given values. long? Or(long? left, ushort? right) . Performs bitwise OR operation on two given values. long? Or(long? left, int? right) . Performs bitwise OR operation on two given values. long? Or(long? left, uint? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, byte? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, ushort? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, uint? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, ulong? right) . Performs bitwise OR operation on two given values. byte? Xor(byte? left, byte? right) . Performs bitwise OR operation on two given values. int? Xor(byte? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(byte? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(byte? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(byte? left, ulong? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, byte? right) . Performs bitwise Xor operation on two given values. sbyte? Xor(sbyte? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(sbyte? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(sbyte? left, long? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, sbyte? right) . Performs bitwise Xor operation on two given values. short? Xor(short? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, ushort? right) . Performs bitwise XOR operation on two given values. int? Xor(short? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(short? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(short? left, long? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, short? right) . Performs bitwise Xor operation on two given values. ushort? Xor(ushort? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(ushort? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(ushort? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ushort? left, ulong? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(int? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(int? left, long? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, uint? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, byte? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, sbyte? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, short? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, ushort? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, int? right) . Performs bitwise Xor operation on two given values. ulong? Xor(uint? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(uint? left, ulong? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, long? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, byte? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, sbyte? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, short? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, ushort? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, int? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, uint? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, ulong? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, byte? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, ushort? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, uint? right) . Performs bitwise Xor operation on two given values. byte[] GetBytes(string? content) . Gets the bytes from the given string. byte[] GetBytes(string? content, int length, int offset) . Gets the bytes from the given string within given offset and length. byte?[]? GetBytes(char? character) . Gets the bytes from the given character. byte?[]? GetBytes(bool? bit) . Gets the bytes from the given boolean. byte?[]? GetBytes(long? value) . Gets the bytes from the given long. byte?[]? GetBytes(int? value) . Gets the bytes from the given int. byte?[]? GetBytes(short? value) . Gets the bytes from the given short. byte?[]? GetBytes(ulong? value) . Gets the bytes from the given ulong. byte?[]? GetBytes(ushort? value) . Gets the bytes from the given ushort. byte?[]? GetBytes(uint? value) . Gets the bytes from the given uint. byte?[]? GetBytes(Decimal? value) . Gets the bytes from the given decimal. byte?[]? GetBytes(double? value) . Gets the bytes from the given double. byte?[]? GetBytes(float? value) . Gets the bytes from the given float. string? ToBin(byte?[]? bytes, string delimiter) . Converts given bytes to binary with defined delimiter . string ToBin&lt;T&gt;(T value) . Converts given value to binary . string ToOcta&lt;T&gt;(T value) . Converts given value to octal . string ToDec&lt;T&gt;(T value) . Converts given value to decimal . string ToBase64(byte[] value) . Converts given value to string . string ToBase64(byte[] value, int offset, int length) . Converts given array of bytes to string . byte[] FromBase64(string value) . Converts given string to bytes array . bool FromBytesToBool(byte[] value) . Converts bytes to boolean value. short FromBytesToInt16(byte[] value) . Converts bytes to a 16-bit signed integer. ushort FromBytesToUInt16(byte[] value) . Converts bytes to a 16-bit unsigned integer. int FromBytesToInt32(byte[] value) . Converts bytes to a 32-bit signed integer. uint FromBytesToUInt32(byte[] value) . Converts bytes to a 32-bit unsigned integer. long FromBytesToInt64(byte[] value) . Converts bytes to a 64-bit signed integer. ulong FromBytesToUInt64(byte[] value) . Converts bytes to a 64-bit unsigned integer. float FromBytesToFloat(byte[] value) . Converts bytes to a float value. double FromBytesToDouble(byte[] value) . Converts bytes to a float value. string FromBytesToString(byte[] value) . Converts bytes to a string. byte[] ToBytes(bool value) . Converts boolean value to bytes. byte[] ToBytes(short value) . Converts short value to bytes. byte[] ToBytes(ushort value) . Converts ushort value to bytes. byte[] ToBytes(int value) . Converts int value to bytes. byte[] ToBytes(uint value) . Converts uint value to bytes. byte[] ToBytes(long value) . Converts long value to bytes. byte[] ToBytes(ulong value) . Converts long value to bytes. string? ToHex(byte?[]? bytes, string delimiter) . Converts given bytes to hex with defined delimiter . string? ToHex&lt;T&gt;(T value) . Converts given value to binary . int Count(string name) . Gets the count value of a given group. int Count(string name, int parent) . Gets the count value of a given group. int ExtractFromDate(string? date, string partOfDate) . Extracts part of the date from the date . int ExtractFromDate(string date, string culture, string partOfDate) . Extracts part of the date from the date based on given culture . DateTimeOffset? GetDate() . Gets the current datetime . DateTimeOffset? UtcGetDate() . Gets the current datetime in UTC . int? Month(DateTimeOffset? value) . Gets the month from DateTimeOffset . int? Year(DateTimeOffset? value) . Gets the year from DateTimeOffset . int? Day(DateTimeOffset? value) . Gets the day from DateTimeOffset . int? Hour(DateTimeOffset? value) . Gets the hour from DateTimeOffset . int? Minute(DateTimeOffset? value) . Gets the minute from DateTimeOffset . int? Second(DateTimeOffset? value) . Gets the second from DateTimeOffset . int? Milliseconds(DateTimeOffset? value) . Gets the millisecond from DateTimeOffset . int? DayOfWeek(DateTimeOffset? value) . Gets the day of week from DateTimeOffset . TimeSpan? ExtractTimeSpan(DateTimeOffset? dateTimeOffset) . Extracts time from DateTimeOffset . DateTime? ToDateTimeOffset(string value) . Converts given value to DateTimeOffset . DateTimeOffset? ToDateTimeOffset(string value, string culture) . Converts given value to DateTimeOffset . IEnumerable&lt;T&gt;? Skip&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? skipCount) . Skips elements from the beginning of the sequence. IEnumerable&lt;T&gt;? Take&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? takeCount) . Takes elements from the beginning of the sequence. IEnumerable&lt;T&gt;? SkipAndTake&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? skipCount, int? takeCount) . Skip and takes elements from the beginning of the sequence. T[]? EnumerableToArray&lt;T&gt;(IEnumerable&lt;T&gt;? values) . Turn array arguments of T into a single array. T[]? MergeArrays&lt;T&gt;(T[][]? values) . Turn array arguments of T into a single array. IEnumerable&lt;T&gt;? LongestCommonSequence&lt;T&gt;(IEnumerable&lt;T&gt;? source, IEnumerable&lt;T&gt;? pattern) . Computes longest common sequence of two given sequences . T? GetElementAtOrDefault&lt;T&gt;(IEnumerable&lt;T&gt;? enumerable, int? index) . Gets the element at the specified index in a sequence . int? Length&lt;T&gt;(IEnumerable&lt;T&gt;? enumerable) . Gets the length of the sequence . int? Length&lt;T&gt;(T[]? array) . Gets the length of the array . T? Choose&lt;T&gt;(int? index, T[] values) . Gets the value of an array at the specified index . T If&lt;T&gt;(bool expressionResult, T a, T b) . Chose a or b value based on the expression result . bool? Match(string? regex, string? content) . Determine whether content matches the specified pattern . byte? Coalesce(byte?[] array) . Gets the first non-null value in a list . sbyte? Coalesce(sbyte?[] array) . Gets the first non-null value in a list . short? Coalesce(short?[] array) . Gets the first non-null value in a list . ushort? Coalesce(ushort?[] array) . Gets the first non-null value in a list . int? Coalesce(int?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(uint?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(long?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(ulong?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(Decimal?[] array) . Gets the first non-null value in a list . T? Coalesce&lt;T&gt;(T[] array) . Gets the first non-null value in a list . IEnumerable&lt;T&gt;? Distinct&lt;T&gt;(IEnumerable&lt;T&gt;? values) . Returns distinct elements from a collection. string? Md5(string? content) . Gets the md5 hash of the given string. string? Md5(byte?[]? content) . Gets the md5 hash of the given bytes array. string? Sha1(string? content) . Gets the sha256 hash of the given string. string? Sha1(byte?[]? content) . Gets the sha256 hash of the given bytes array. string? Sha256(string? content) . Gets the sha256 hash of the given string. string? Sha256(byte?[]? content) . Gets the sha256 hash of the given bytes array. string? Sha512(string? content) . Gets the sha256 hash of the given string. string? Sha512(byte?[]? content) . Gets the sha256 hash of the bytes array. string? ToJson&lt;T&gt;(T? obj) . Converts object to json. string[] ExtractFromJsonToArray(string? json, string? path) . Extracts values from json by path. string? ExtractFromJson(string? json, string? path) . Extracts values from json by path and joins them with comma. Decimal? Abs(Decimal? value) . Gets the absolute value . long? Abs(long? value) . Gets the absolute value . int? Abs(int? value) . Gets the absolute value . Decimal? Ceil(Decimal? value) . Gets the ceiling value . Decimal? Floor(Decimal? value) . Gets the floor value . Decimal? Sign(Decimal? value) . Determine whether value is greater, equal or less that zero . long? Sign(long? value) . Determine whether value is greater, equal or less that zero . Decimal? Round(Decimal? value, int precision) . Rounds the value within given precision . Decimal? PercentOf(Decimal? value, Decimal? max) . Gets the percentage of the value . int Rand() . Gets the random integer value . int? Rand(int? min, int? max) . Gets the random integer value . double? Pow(Decimal? x, Decimal? y) . Computes the pow between two values . double? Pow(double? x, double? y) . Computes the pow between two values . double? Sqrt(Decimal? x) . Computes the sqrt of a given value . double? Sqrt(double? x) . Computes the sqrt of a given value . double? Sqrt(long? x) . Computes the sqrt of a given value . double? PercentRank&lt;T&gt;(IEnumerable&lt;T&gt;? window, T? value) . Computes the percent rank of a given window . double? Log(Decimal? base, Decimal? value) . Calculates the logarithm of a value with a specified base. Decimal? Sin(Decimal? value) . Calculates sine of a value. double? Sin(double? value) . Calculates sine of a value. float? Sin(float? value) . Calculates sine of a value. Decimal? Cos(Decimal? value) . Calculates cosine of a value. double? Cos(double? value) . Calculates cosine of a value. float? Cos(float? value) . Calculates cosine of a value. Decimal Max(string name) . Gets the max value of a given group. Decimal Max(string name, int parent) . Gets the max value of a given group. Decimal Min(string name) . Gets the min value of a given group. Decimal Min(string name, int parent) . Gets the min value of a given group. Decimal StDev(string name, int parent) . Gets the StDev value of a given group. string NewId() . Gets the new identifier . string? Trim(string? value) . Removes leading and trailing whitespace from a string. string? TrimStart(string? value) . Removes leading whitespace from a string. string? TrimEnd(string? value) . Removes trailing whitespace from a string. string? Substring(string? value, int? index, int? length) . Gets the substring from the string. string? Substring(string value, int? length) . Gets the substring from the string . string? Concat(string[]? strings) . Concatenates the specified values . string? Concat(char?[]? characters) . Concatenates the specified characters . string? Concat(string? firstString, char?[]? chars) . Concatenates specified string fir characters . string? Concat(char? firstChar, string[]? strings) . Concatenate specific character with strings . string? Concat(object[]? objects) . Concatenates the specified strings . string? Concat&lt;T&gt;(T[]? objects) . Concatenates the specified strings . bool? Contains(string? content, string? what) . Determine whether the string contains the specified value . int? IndexOf(string? value, string? text) . Position of the first occurrence of the specified value . string? Soundex(string? value) . Computes soundex for the specified value . bool HasFuzzyMatchedWord(string text, string word, string separator) . Matches the specified text by splitting it with separator and applying fuzzy comparison . bool HasWordThatHasSmallerLevenshteinDistanceThan(string text, string word, int distance, string separator) . Matches the specified text by splitting it with separator and applying fuzzy comparison with a given distance . bool HasWordThatSoundLike(string text, string word, string separator) . Matches whether the specified word is present after being fuzzified within the specified text . bool HasTextThatSoundLikeSentence(string text, string sentence, string separator) . Matches whether the specified text is present in sentence after being fuzified . string? ToUpper(string value) . Makes the string uppercase . string? ToUpper(string value, string culture) . Makes the string uppercase within specified culture . string? ToUpperInvariant(string value) . Makes the string uppercase . string? ToLower(string value) . Makes the string lowercase . string? ToLower(string value, string culture) . Makes the string lowercase within specified culture . string? ToLowerInvariant(string value) . Makes the string lowercase . string? PadLeft(string? value, string? character, int? totalWidth) . Returns a new string that right-aligns the characters in this instance by padding them on the left with a specified Unicode character, for a specified total lengt . string? PadRight(string? value, string? character, int? totalWidth) . Returns a new string that left-aligns the characters in this instance by padding them on the right with a specified Unicode character, for a specified total length . string? Head(string? value, int? length) . Gets the first N characters of the string . string? Tail(string? value, int? length) . Gets the last N characters of the string . int? LevenshteinDistance(string? firstValue, string? secondValue) . Computes the Levenshtein distance between two strings . char? GetCharacterOf(string value, int index) . Gets the character at specified index . string? Reverse(string? value) . Reverses the string . string[] Split(string value, string[] separators) . Splits the string into an array of substrings based on the specified separators . char[] ToCharArray(string value) . Splits the string into an array of characters . string? LongestCommonSubstring(string source, string pattern) . Computes the longest common subsequence between two source and pattern . string Replicate(string value, int integer) . Clones the value n times . string? Translate(string? value, string? characters, string? translations) . Returns the string from the first argument after the characters specified in the second argument are translated into the characters specified in the third argument. string? Replace(string? text, string lookFor, string? changeTo) . Replaces the first occurrence of a specified string in this instance with another specified string . string? ToTitleCase(string? value) . Capitalizes the first letter of the string . string? GetNthWord(string? text, int? wordIndex, string? separator) . Gets the nth word of the string . string? GetFirstWord(string text, string separator) . Gets the first word of the string . string? GetSecondWord(string text, string separator) . Gets the second word of the string . string? GetThirdWord(string text, string separator) . Gets the third word of the string . string? GetLastWord(string? text, string? separator) . Gets last word of the string . bool? IsNullOrEmpty(string? value) . Determines whether the string is null or empty . bool? IsNullOrWhiteSpace(string? value) . Determines whether the string is null or whitespace . string? UrlEncode(string? value) . Encodes the value . string? UrlDecode(string? value) . Decodes the value . string? UriEncode(string? value) . Encodes the value . string? UriDecode(string? value) . Decodes the value . bool? StartsWith(string? value, string? prefix) . Determines whether the string starts with the specified prefix . bool? StartsWith(string? value, string? prefix, string comparison) . Determines whether the string starts with the specified prefix . bool? EndsWith(string? value, string? suffix) . Determines whether the string ends with the specified suffix . bool? EndsWith(string? value, string? suffix, string comparison) . Determines whether the string ends with the specified suffix . string? RegexReplace(string? value, string? pattern, string? replacement) . Replace the specified value part that matches the pattern with the replacement . string[]? SplitByLinuxNewLines(string? input) . Split string by Linux-style newlines (\\n) . string[]? SplitByWindowsNewLines(string? input) . Split string by Windows-style newlines (\\r\\n) . string[]? SplitByNewLines(string? input) . Smart split that handles both Windows (\\r\\n) and Linux (\\n) newlines . Decimal Sum(string name) . Gets the sum value of a given group. Decimal Sum(string name, int parent) . Gets the sum value of a given group. Decimal SumIncome(string name) . Gets the sum value of a given group. Decimal SumIncome(string name, int parent) . Gets the sum value of a given group. Decimal SumOutcome(string name) . Gets the outcome value of a given group. Decimal SumOutcome(string name, int parent) . Gets the outcome value of a given group. TimeSpan? SumTimeSpan(string name) . Gets the sum value of a given group. TimeSpan? SumTimeSpan(string name, int parent) . Gets the sum value of a given group. TimeSpan? MinTimeSpan(string name) . Gets the min value of a given group. TimeSpan? MinTimeSpan(string name, int parent) . Gets the min value of a given group. TimeSpan? MaxTimeSpan(string name) . Gets the max value of a given group. TimeSpan? MaxTimeSpan(string name, int parent) . Gets the min value of a given group. char? ToChar(string? value) . Converts given value to character . char? ToChar(int? value) . Converts given value to character . char? ToChar(short? value) . Converts given value to character . char? ToChar(byte? value) . Converts given value to character . char? ToChar(object? value) . Converts given value to character . DateTime? ToDateTime(string value) . Converts given value to DateTime . DateTime? ToDateTime(string value, string culture) . Converts given value to DateTime . Decimal? ToDecimal(string? value) . Converts given value to decimal . Decimal? ToDecimal(string value, string culture) . Converts given value to decimal withing given culture . Decimal? ToDecimal(byte? value) . Converts given value to Decimal . Decimal? ToDecimal(sbyte? value) . Converts given value to Decimal . Decimal? ToDecimal(short? value) . Converts given value to Decimal . Decimal? ToDecimal(ushort? value) . Converts given value to Decimal . Decimal? ToDecimal(long? value) . Converts given value to Decimal . Decimal? ToDecimal(ulong? value) . Converts given value to Decimal . Decimal? ToDecimal(float? value) . Converts given value to Decimal . Decimal? ToDecimal(double? value) . Converts given value to Decimal . Decimal? ToDecimal(object? value) . Converts given value to Decimal . double? ToDouble(object? value) . Converts given value to double . double? ToDouble(string? value) . Converts given value to double . double? ToDouble(byte? value) . Converts given value to double . double? ToDouble(sbyte? value) . Converts given value to double . double? ToDouble(short? value) . Converts given value to double . double? ToDouble(ushort? value) . Converts given value to double . double? ToDouble(int? value) . Converts given value to double . double? ToDouble(uint? value) . Converts given value to double . double? ToDouble(long? value) . Converts given value to double . double? ToDouble(ulong? value) . Converts given value to double . double? ToDouble(float? value) . Converts given value to double . double? ToDouble(double? value) . Converts given value to double . double? ToDouble(Decimal? value) . Converts given value to double . float? ToFloat(string? value) . Converts given value to float . float? ToFloat(byte? value) . Converts given value to float . float? ToFloat(sbyte? value) . Converts given value to float . float? ToFloat(short? value) . Converts given value to float . float? ToFloat(ushort? value) . Converts given value to float . float? ToFloat(int? value) . Converts given value to float . float? ToFloat(uint? value) . Converts given value to float . float? ToFloat(long? value) . Converts given value to float . float? ToFloat(ulong? value) . Converts given value to float . float? ToFloat(float? value) . Converts given value to float . float? ToFloat(Decimal? value) . Converts given value to float . int? ToInt32(string value) . Converts given value to int . int? ToInt32(byte? value) . Converts given value to int . int? ToInt32(sbyte? value) . Converts given value to int . int? ToInt32(short? value) . Converts given value to int . int? ToInt32(ushort? value) . Converts given value to int . int? ToInt32(int? value) . Converts given value to int . int? ToInt32(uint? value) . Converts given value to int . int? ToInt32(long? value) . Converts given value to int . int? ToInt32(ulong? value) . Converts given value to int . int? ToInt32(float? value) . Converts given value to int . int? ToInt32(double? value) . Converts given value to int . int? ToInt32(Decimal? value) . Converts given value to int . int? ToInt32(object? value) . Converts given value to int . long? ToInt64(string value) . Converts given value to Int64 . long? ToInt64(byte? value) . Converts given value to long . long? ToInt64(sbyte? value) . Converts given value to long . long? ToInt64(short? value) . Converts given value to long . long? ToInt64(ushort? value) . Converts given value to long . long? ToInt64(int? value) . Converts given value to long . long? ToInt64(uint? value) . Converts given value to long . long? ToInt64(long? value) . Converts given value to long . long? ToInt64(ulong? value) . Converts given value to long . long? ToInt64(float? value) . Converts given value to long . long? ToInt64(double? value) . Converts given value to long . long? ToInt64(Decimal? value) . Converts given value to long . long? ToInt64(object? value) . Converts given value to long . string? ToString(char? value) . Converts given value to string . string? ToString(DateTimeOffset? value) . Converts given value to string . string? ToString(DateTimeOffset? value, string format) . Converts given value to string . string? ToString(byte? value) . Converts given value to string . string? ToString(byte? value, string format) . Converts given value to string . string? ToString(sbyte? value) . Converts given value to string . string? ToString(sbyte? value, string format) . Converts given value to string . string? ToString(int? value) . Converts given value to string . string? ToString(int? value, string format) . Converts given value to string . string? ToString(uint? value) . Converts given value to string . string? ToString(uint? value, string format) . Converts given value to string . string? ToString(long? value) . Converts given value to string . string? ToString(long? value, string format) . Converts given value to string . string? ToString(ulong? value) . Converts given value to string . string? ToString(ulong? value, string format) . Converts given value to string . string? ToString(float? value) . Converts given value to string . string? ToString(float? value, string format) . Converts given value to string . string? ToString(double? value) . Converts given value to string . string? ToString(double? value, string format) . Converts given value to string . string? ToString(Decimal? value) . Converts given value to string . string? ToString(Decimal? value, string format) . Converts given value to string . string? ToString(bool? value) . Converts given value to string . string? ToString(object? value) . Converts given value to string . string? ToString&lt;T&gt;(T? value) . Converts given value to string . string ToString(string[] value) . Converts given value to string . string ToString&lt;T&gt;(T[] value) . Converts given value to string . TimeSpan? ToTimeSpan(string value) . Converts given value to TimeSpan . TimeSpan? ToTimeSpan(string value, string culture) . Converts given value to TimeSpan . IEnumerable&lt;T&gt; Window&lt;T&gt;(string name) . Gets the window . ",
    "url": "/data-sources/CANBus/linux-x64.html#base-methods",
    
    "relUrl": "/data-sources/CANBus/linux-x64.html#base-methods"
  },"190": {
    "doc": "Linux X64",
    "title": "Linux X64",
    "content": " ",
    "url": "/data-sources/CANBus/linux-x64.html",
    
    "relUrl": "/data-sources/CANBus/linux-x64.html"
  },"191": {
    "doc": "Linux X64",
    "title": "Musoq.DataSources.SeparatedValues",
    "content": "Provides schema to work with separated values like .csv, .tsv, semicolon. ",
    "url": "/data-sources/SeparatedValues/linux-x64.html#musoqdatasourcesseparatedvalues",
    
    "relUrl": "/data-sources/SeparatedValues/linux-x64.html#musoqdatasourcesseparatedvalues"
  },"192": {
    "doc": "Linux X64",
    "title": "Tables",
    "content": "Table is a collection of rows and columns that the plugin exposes. Below are the tables that are exposed by this data source. separatedvalues.comma(string path, bool hasHeader, int skipLines) . Gives the ability to process .CSV files . This table has a dynamic structure, which means that its columns and other details cannot be determined until runtime. As a result, it is not possible to include a complete description of this table in the documentation. Instead, the actual columns and other details of this table will be determined at runtime. separatedvalues.tab(string path, bool hasHeader, int skipLines) . Gives the ability to process .TSV files . This table has a dynamic structure, which means that its columns and other details cannot be determined until runtime. As a result, it is not possible to include a complete description of this table in the documentation. Instead, the actual columns and other details of this table will be determined at runtime. separatedvalues.semicolon(string path, bool hasHeader, int skipLines) . Gives the ability to process semicolon files . This table has a dynamic structure, which means that its columns and other details cannot be determined until runtime. As a result, it is not possible to include a complete description of this table in the documentation. Instead, the actual columns and other details of this table will be determined at runtime. ",
    "url": "/data-sources/SeparatedValues/linux-x64.html#tables",
    
    "relUrl": "/data-sources/SeparatedValues/linux-x64.html#tables"
  },"193": {
    "doc": "Linux X64",
    "title": "Methods",
    "content": "Methods are functions that can be called on the data source specific column. Below are the methods that are exposed by this data source. string ClusteredByContainsKey(string dictionaryFilePath, string value) . Categorize values based on provided file . ",
    "url": "/data-sources/SeparatedValues/linux-x64.html#methods",
    
    "relUrl": "/data-sources/SeparatedValues/linux-x64.html#methods"
  },"194": {
    "doc": "Linux X64",
    "title": "Base Methods",
    "content": "Base methods are methods that can be called on the data source specific column. Those methods are automatically inherited and enriches the data source specific methods. Below are those base methods that are exposed by this data source. int RowNumber() . Gets the row number of the current row. string? GetTypeName(object? obj) . Gets the typename of passed object. string AggregateValues(string name) . Aggregates values into a single value. string AggregateValues(string name, int parent) . Aggregates values into a single value. Decimal Avg(string name) . Gets the aggregated average value from the given group name . Decimal Avg(string name, int parent) . Gets the aggregated average value from the given group name . byte? ShiftLeft(byte? value, int shift) . Shifts the value to the left by the specified number of bits. short? ShiftLeft(short? value, int shift) . Shifts the value to the left by the specified number of bits. int? ShiftLeft(int? value, int shift) . Shifts the value to the left by the specified number of bits. long? ShiftLeft(long? value, int shift) . Shifts the value to the left by the specified number of bits. sbyte? ShiftLeft(sbyte? value, int shift) . Shifts the value to the left by the specified number of bits. ushort? ShiftLeft(ushort? value, int shift) . Shifts the value to the left by the specified number of bits. uint? ShiftLeft(uint? value, int shift) . Shifts the value to the left by the specified number of bits. ulong? ShiftLeft(ulong? value, int shift) . Shifts the value to the left by the specified number of bits. byte? ShiftRight(byte? value, int shift) . Shifts the value to the right by the specified number of bits. short? ShiftRight(short? value, int shift) . Shifts the value to the right by the specified number of bits. int? ShiftRight(int? value, int shift) . Shifts the value to the right by the specified number of bits. long? ShiftRight(long? value, int shift) . Shifts the value to the right by the specified number of bits. sbyte? ShiftRight(sbyte? value, int shift) . Shifts the value to the right by the specified number of bits. ushort? ShiftRight(ushort? value, int shift) . Shifts the value to the right by the specified number of bits. uint? ShiftRight(uint? value, int shift) . Shifts the value to the right by the specified number of bits. ulong? ShiftRight(ulong? value, int shift) . Shifts the value to the right by the specified number of bits. byte? Not(byte? value) . Performs bitwise NOT operation on a given value. short? Not(short? value) . Performs bitwise NOT operation on a given value. int? Not(int? value) . Performs bitwise NOT operation on a given value. long? Not(long? value) . Performs bitwise NOT operation on a given value. sbyte? Not(sbyte? value) . Performs bitwise NOT operation on a given value. ushort? Not(ushort? value) . Performs bitwise NOT operation on a given value. uint? Not(uint? value) . Performs bitwise NOT operation on a given value. ulong? Not(ulong? value) . Performs bitwise NOT operation on a given value. byte? And(byte? left, byte? right) . Performs bitwise AND operation on two given values. int? And(byte? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(byte? left, short? right) . Performs bitwise AND operation on two given values. int? And(byte? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(byte? left, int? right) . Performs bitwise AND operation on two given values. uint? And(byte? left, uint? right) . Performs bitwise AND operation on two given values. long? And(byte? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(byte? left, ulong? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, byte? right) . Performs bitwise AND operation on two given values. sbyte? And(sbyte? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, short? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, int? right) . Performs bitwise AND operation on two given values. uint? And(sbyte? left, uint? right) . Performs bitwise AND operation on two given values. long? And(sbyte? left, long? right) . Performs bitwise AND operation on two given values. int? And(short? left, byte? right) . Performs bitwise AND operation on two given values. int? And(short? left, sbyte? right) . Performs bitwise AND operation on two given values. short? And(short? left, short? right) . Performs bitwise AND operation on two given values. int? And(short? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(short? left, int? right) . Performs bitwise AND operation on two given values. uint? And(short? left, uint? right) . Performs bitwise AND operation on two given values. long? And(short? left, long? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, byte? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, short? right) . Performs bitwise AND operation on two given values. ushort? And(ushort? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, int? right) . Performs bitwise AND operation on two given values. uint? And(ushort? left, uint? right) . Performs bitwise AND operation on two given values. long? And(ushort? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(ushort? left, ulong? right) . Performs bitwise AND operation on two given values. int? And(int? left, byte? right) . Performs bitwise AND operation on two given values. int? And(int? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(int? left, short? right) . Performs bitwise AND operation on two given values. int? And(int? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(int? left, int? right) . Performs bitwise AND operation on two given values. uint? And(int? left, uint? right) . Performs bitwise AND operation on two given values. long? And(int? left, long? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, uint? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, byte? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, sbyte? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, short? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, ushort? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, int? right) . Performs bitwise AND operation on two given values. ulong? And(uint? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(uint? left, ulong? right) . Performs bitwise AND operation on two given values. long? And(long? left, long? right) . Performs bitwise AND operation on two given values. long? And(long? left, byte? right) . Performs bitwise AND operation on two given values. long? And(long? left, sbyte? right) . Performs bitwise AND operation on two given values. long? And(long? left, short? right) . Performs bitwise AND operation on two given values. long? And(long? left, ushort? right) . Performs bitwise AND operation on two given values. long? And(long? left, int? right) . Performs bitwise AND operation on two given values. long? And(long? left, uint? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, byte? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, ushort? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, uint? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, ulong? right) . Performs bitwise AND operation on two given values. byte? Or(byte? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, short? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(byte? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(byte? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(byte? left, ulong? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, byte? right) . Performs bitwise OR operation on two given values. sbyte? Or(sbyte? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, short? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(sbyte? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(sbyte? left, long? right) . Performs bitwise OR operation on two given values. int? Or(short? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(short? left, sbyte? right) . Performs bitwise OR operation on two given values. short? Or(short? left, short? right) . Performs bitwise OR operation on two given values. int? Or(short? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(short? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(short? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(short? left, long? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, short? right) . Performs bitwise OR operation on two given values. ushort? Or(ushort? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(ushort? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(ushort? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(ushort? left, ulong? right) . Performs bitwise OR operation on two given values. int? Or(int? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(int? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(int? left, short? right) . Performs bitwise OR operation on two given values. int? Or(int? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(int? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(int? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(int? left, long? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, uint? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, byte? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, sbyte? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, short? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, ushort? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, int? right) . Performs bitwise OR operation on two given values. ulong? Or(uint? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(uint? left, ulong? right) . Performs bitwise OR operation on two given values. long? Or(long? left, long? right) . Performs bitwise OR operation on two given values. long? Or(long? left, byte? right) . Performs bitwise OR operation on two given values. long? Or(long? left, sbyte? right) . Performs bitwise OR operation on two given values. long? Or(long? left, short? right) . Performs bitwise OR operation on two given values. long? Or(long? left, ushort? right) . Performs bitwise OR operation on two given values. long? Or(long? left, int? right) . Performs bitwise OR operation on two given values. long? Or(long? left, uint? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, byte? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, ushort? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, uint? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, ulong? right) . Performs bitwise OR operation on two given values. byte? Xor(byte? left, byte? right) . Performs bitwise OR operation on two given values. int? Xor(byte? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(byte? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(byte? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(byte? left, ulong? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, byte? right) . Performs bitwise Xor operation on two given values. sbyte? Xor(sbyte? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(sbyte? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(sbyte? left, long? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, sbyte? right) . Performs bitwise Xor operation on two given values. short? Xor(short? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, ushort? right) . Performs bitwise XOR operation on two given values. int? Xor(short? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(short? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(short? left, long? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, short? right) . Performs bitwise Xor operation on two given values. ushort? Xor(ushort? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(ushort? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(ushort? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ushort? left, ulong? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(int? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(int? left, long? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, uint? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, byte? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, sbyte? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, short? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, ushort? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, int? right) . Performs bitwise Xor operation on two given values. ulong? Xor(uint? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(uint? left, ulong? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, long? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, byte? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, sbyte? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, short? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, ushort? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, int? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, uint? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, ulong? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, byte? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, ushort? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, uint? right) . Performs bitwise Xor operation on two given values. byte[] GetBytes(string? content) . Gets the bytes from the given string. byte[] GetBytes(string? content, int length, int offset) . Gets the bytes from the given string within given offset and length. byte?[]? GetBytes(char? character) . Gets the bytes from the given character. byte?[]? GetBytes(bool? bit) . Gets the bytes from the given boolean. byte?[]? GetBytes(long? value) . Gets the bytes from the given long. byte?[]? GetBytes(int? value) . Gets the bytes from the given int. byte?[]? GetBytes(short? value) . Gets the bytes from the given short. byte?[]? GetBytes(ulong? value) . Gets the bytes from the given ulong. byte?[]? GetBytes(ushort? value) . Gets the bytes from the given ushort. byte?[]? GetBytes(uint? value) . Gets the bytes from the given uint. byte?[]? GetBytes(Decimal? value) . Gets the bytes from the given decimal. byte?[]? GetBytes(double? value) . Gets the bytes from the given double. byte?[]? GetBytes(float? value) . Gets the bytes from the given float. string? ToBin(byte?[]? bytes, string delimiter) . Converts given bytes to binary with defined delimiter . string ToBin&lt;T&gt;(T value) . Converts given value to binary . string ToOcta&lt;T&gt;(T value) . Converts given value to octal . string ToDec&lt;T&gt;(T value) . Converts given value to decimal . string ToBase64(byte[] value) . Converts given value to string . string ToBase64(byte[] value, int offset, int length) . Converts given array of bytes to string . byte[] FromBase64(string value) . Converts given string to bytes array . bool FromBytesToBool(byte[] value) . Converts bytes to boolean value. short FromBytesToInt16(byte[] value) . Converts bytes to a 16-bit signed integer. ushort FromBytesToUInt16(byte[] value) . Converts bytes to a 16-bit unsigned integer. int FromBytesToInt32(byte[] value) . Converts bytes to a 32-bit signed integer. uint FromBytesToUInt32(byte[] value) . Converts bytes to a 32-bit unsigned integer. long FromBytesToInt64(byte[] value) . Converts bytes to a 64-bit signed integer. ulong FromBytesToUInt64(byte[] value) . Converts bytes to a 64-bit unsigned integer. float FromBytesToFloat(byte[] value) . Converts bytes to a float value. double FromBytesToDouble(byte[] value) . Converts bytes to a float value. string FromBytesToString(byte[] value) . Converts bytes to a string. byte[] ToBytes(bool value) . Converts boolean value to bytes. byte[] ToBytes(short value) . Converts short value to bytes. byte[] ToBytes(ushort value) . Converts ushort value to bytes. byte[] ToBytes(int value) . Converts int value to bytes. byte[] ToBytes(uint value) . Converts uint value to bytes. byte[] ToBytes(long value) . Converts long value to bytes. byte[] ToBytes(ulong value) . Converts long value to bytes. string? ToHex(byte?[]? bytes, string delimiter) . Converts given bytes to hex with defined delimiter . string? ToHex&lt;T&gt;(T value) . Converts given value to binary . int Count(string name) . Gets the count value of a given group. int Count(string name, int parent) . Gets the count value of a given group. int ExtractFromDate(string? date, string partOfDate) . Extracts part of the date from the date . int ExtractFromDate(string date, string culture, string partOfDate) . Extracts part of the date from the date based on given culture . DateTimeOffset? GetDate() . Gets the current datetime . DateTimeOffset? UtcGetDate() . Gets the current datetime in UTC . int? Month(DateTimeOffset? value) . Gets the month from DateTimeOffset . int? Year(DateTimeOffset? value) . Gets the year from DateTimeOffset . int? Day(DateTimeOffset? value) . Gets the day from DateTimeOffset . int? Hour(DateTimeOffset? value) . Gets the hour from DateTimeOffset . int? Minute(DateTimeOffset? value) . Gets the minute from DateTimeOffset . int? Second(DateTimeOffset? value) . Gets the second from DateTimeOffset . int? Milliseconds(DateTimeOffset? value) . Gets the millisecond from DateTimeOffset . int? DayOfWeek(DateTimeOffset? value) . Gets the day of week from DateTimeOffset . TimeSpan? ExtractTimeSpan(DateTimeOffset? dateTimeOffset) . Extracts time from DateTimeOffset . DateTime? ToDateTimeOffset(string value) . Converts given value to DateTimeOffset . DateTimeOffset? ToDateTimeOffset(string value, string culture) . Converts given value to DateTimeOffset . IEnumerable&lt;T&gt;? Skip&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? skipCount) . Skips elements from the beginning of the sequence. IEnumerable&lt;T&gt;? Take&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? takeCount) . Takes elements from the beginning of the sequence. IEnumerable&lt;T&gt;? SkipAndTake&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? skipCount, int? takeCount) . Skip and takes elements from the beginning of the sequence. T[]? EnumerableToArray&lt;T&gt;(IEnumerable&lt;T&gt;? values) . Turn array arguments of T into a single array. T[]? MergeArrays&lt;T&gt;(T[][]? values) . Turn array arguments of T into a single array. IEnumerable&lt;T&gt;? LongestCommonSequence&lt;T&gt;(IEnumerable&lt;T&gt;? source, IEnumerable&lt;T&gt;? pattern) . Computes longest common sequence of two given sequences . T? GetElementAtOrDefault&lt;T&gt;(IEnumerable&lt;T&gt;? enumerable, int? index) . Gets the element at the specified index in a sequence . int? Length&lt;T&gt;(IEnumerable&lt;T&gt;? enumerable) . Gets the length of the sequence . int? Length&lt;T&gt;(T[]? array) . Gets the length of the array . T? Choose&lt;T&gt;(int? index, T[] values) . Gets the value of an array at the specified index . T If&lt;T&gt;(bool expressionResult, T a, T b) . Chose a or b value based on the expression result . bool? Match(string? regex, string? content) . Determine whether content matches the specified pattern . byte? Coalesce(byte?[] array) . Gets the first non-null value in a list . sbyte? Coalesce(sbyte?[] array) . Gets the first non-null value in a list . short? Coalesce(short?[] array) . Gets the first non-null value in a list . ushort? Coalesce(ushort?[] array) . Gets the first non-null value in a list . int? Coalesce(int?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(uint?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(long?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(ulong?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(Decimal?[] array) . Gets the first non-null value in a list . T? Coalesce&lt;T&gt;(T[] array) . Gets the first non-null value in a list . IEnumerable&lt;T&gt;? Distinct&lt;T&gt;(IEnumerable&lt;T&gt;? values) . Returns distinct elements from a collection. string? Md5(string? content) . Gets the md5 hash of the given string. string? Md5(byte?[]? content) . Gets the md5 hash of the given bytes array. string? Sha1(string? content) . Gets the sha256 hash of the given string. string? Sha1(byte?[]? content) . Gets the sha256 hash of the given bytes array. string? Sha256(string? content) . Gets the sha256 hash of the given string. string? Sha256(byte?[]? content) . Gets the sha256 hash of the given bytes array. string? Sha512(string? content) . Gets the sha256 hash of the given string. string? Sha512(byte?[]? content) . Gets the sha256 hash of the bytes array. string? ToJson&lt;T&gt;(T? obj) . Converts object to json. string[] ExtractFromJsonToArray(string? json, string? path) . Extracts values from json by path. string? ExtractFromJson(string? json, string? path) . Extracts values from json by path and joins them with comma. Decimal? Abs(Decimal? value) . Gets the absolute value . long? Abs(long? value) . Gets the absolute value . int? Abs(int? value) . Gets the absolute value . Decimal? Ceil(Decimal? value) . Gets the ceiling value . Decimal? Floor(Decimal? value) . Gets the floor value . Decimal? Sign(Decimal? value) . Determine whether value is greater, equal or less that zero . long? Sign(long? value) . Determine whether value is greater, equal or less that zero . Decimal? Round(Decimal? value, int precision) . Rounds the value within given precision . Decimal? PercentOf(Decimal? value, Decimal? max) . Gets the percentage of the value . int Rand() . Gets the random integer value . int? Rand(int? min, int? max) . Gets the random integer value . double? Pow(Decimal? x, Decimal? y) . Computes the pow between two values . double? Pow(double? x, double? y) . Computes the pow between two values . double? Sqrt(Decimal? x) . Computes the sqrt of a given value . double? Sqrt(double? x) . Computes the sqrt of a given value . double? Sqrt(long? x) . Computes the sqrt of a given value . double? PercentRank&lt;T&gt;(IEnumerable&lt;T&gt;? window, T? value) . Computes the percent rank of a given window . double? Log(Decimal? base, Decimal? value) . Calculates the logarithm of a value with a specified base. Decimal? Sin(Decimal? value) . Calculates sine of a value. double? Sin(double? value) . Calculates sine of a value. float? Sin(float? value) . Calculates sine of a value. Decimal? Cos(Decimal? value) . Calculates cosine of a value. double? Cos(double? value) . Calculates cosine of a value. float? Cos(float? value) . Calculates cosine of a value. Decimal Max(string name) . Gets the max value of a given group. Decimal Max(string name, int parent) . Gets the max value of a given group. Decimal Min(string name) . Gets the min value of a given group. Decimal Min(string name, int parent) . Gets the min value of a given group. Decimal StDev(string name, int parent) . Gets the StDev value of a given group. string NewId() . Gets the new identifier . string? Trim(string? value) . Removes leading and trailing whitespace from a string. string? TrimStart(string? value) . Removes leading whitespace from a string. string? TrimEnd(string? value) . Removes trailing whitespace from a string. string? Substring(string? value, int? index, int? length) . Gets the substring from the string. string? Substring(string value, int? length) . Gets the substring from the string . string? Concat(string[]? strings) . Concatenates the specified values . string? Concat(char?[]? characters) . Concatenates the specified characters . string? Concat(string? firstString, char?[]? chars) . Concatenates specified string fir characters . string? Concat(char? firstChar, string[]? strings) . Concatenate specific character with strings . string? Concat(object[]? objects) . Concatenates the specified strings . string? Concat&lt;T&gt;(T[]? objects) . Concatenates the specified strings . bool? Contains(string? content, string? what) . Determine whether the string contains the specified value . int? IndexOf(string? value, string? text) . Position of the first occurrence of the specified value . string? Soundex(string? value) . Computes soundex for the specified value . bool HasFuzzyMatchedWord(string text, string word, string separator) . Matches the specified text by splitting it with separator and applying fuzzy comparison . bool HasWordThatHasSmallerLevenshteinDistanceThan(string text, string word, int distance, string separator) . Matches the specified text by splitting it with separator and applying fuzzy comparison with a given distance . bool HasWordThatSoundLike(string text, string word, string separator) . Matches whether the specified word is present after being fuzzified within the specified text . bool HasTextThatSoundLikeSentence(string text, string sentence, string separator) . Matches whether the specified text is present in sentence after being fuzified . string? ToUpper(string value) . Makes the string uppercase . string? ToUpper(string value, string culture) . Makes the string uppercase within specified culture . string? ToUpperInvariant(string value) . Makes the string uppercase . string? ToLower(string value) . Makes the string lowercase . string? ToLower(string value, string culture) . Makes the string lowercase within specified culture . string? ToLowerInvariant(string value) . Makes the string lowercase . string? PadLeft(string? value, string? character, int? totalWidth) . Returns a new string that right-aligns the characters in this instance by padding them on the left with a specified Unicode character, for a specified total lengt . string? PadRight(string? value, string? character, int? totalWidth) . Returns a new string that left-aligns the characters in this instance by padding them on the right with a specified Unicode character, for a specified total length . string? Head(string? value, int? length) . Gets the first N characters of the string . string? Tail(string? value, int? length) . Gets the last N characters of the string . int? LevenshteinDistance(string? firstValue, string? secondValue) . Computes the Levenshtein distance between two strings . char? GetCharacterOf(string value, int index) . Gets the character at specified index . string? Reverse(string? value) . Reverses the string . string[] Split(string value, string[] separators) . Splits the string into an array of substrings based on the specified separators . char[] ToCharArray(string value) . Splits the string into an array of characters . string? LongestCommonSubstring(string source, string pattern) . Computes the longest common subsequence between two source and pattern . string Replicate(string value, int integer) . Clones the value n times . string? Translate(string? value, string? characters, string? translations) . Returns the string from the first argument after the characters specified in the second argument are translated into the characters specified in the third argument. string? Replace(string? text, string lookFor, string? changeTo) . Replaces the first occurrence of a specified string in this instance with another specified string . string? ToTitleCase(string? value) . Capitalizes the first letter of the string . string? GetNthWord(string? text, int? wordIndex, string? separator) . Gets the nth word of the string . string? GetFirstWord(string text, string separator) . Gets the first word of the string . string? GetSecondWord(string text, string separator) . Gets the second word of the string . string? GetThirdWord(string text, string separator) . Gets the third word of the string . string? GetLastWord(string? text, string? separator) . Gets last word of the string . bool? IsNullOrEmpty(string? value) . Determines whether the string is null or empty . bool? IsNullOrWhiteSpace(string? value) . Determines whether the string is null or whitespace . string? UrlEncode(string? value) . Encodes the value . string? UrlDecode(string? value) . Decodes the value . string? UriEncode(string? value) . Encodes the value . string? UriDecode(string? value) . Decodes the value . bool? StartsWith(string? value, string? prefix) . Determines whether the string starts with the specified prefix . bool? StartsWith(string? value, string? prefix, string comparison) . Determines whether the string starts with the specified prefix . bool? EndsWith(string? value, string? suffix) . Determines whether the string ends with the specified suffix . bool? EndsWith(string? value, string? suffix, string comparison) . Determines whether the string ends with the specified suffix . string? RegexReplace(string? value, string? pattern, string? replacement) . Replace the specified value part that matches the pattern with the replacement . string[]? SplitByLinuxNewLines(string? input) . Split string by Linux-style newlines (\\n) . string[]? SplitByWindowsNewLines(string? input) . Split string by Windows-style newlines (\\r\\n) . string[]? SplitByNewLines(string? input) . Smart split that handles both Windows (\\r\\n) and Linux (\\n) newlines . Decimal Sum(string name) . Gets the sum value of a given group. Decimal Sum(string name, int parent) . Gets the sum value of a given group. Decimal SumIncome(string name) . Gets the sum value of a given group. Decimal SumIncome(string name, int parent) . Gets the sum value of a given group. Decimal SumOutcome(string name) . Gets the outcome value of a given group. Decimal SumOutcome(string name, int parent) . Gets the outcome value of a given group. TimeSpan? SumTimeSpan(string name) . Gets the sum value of a given group. TimeSpan? SumTimeSpan(string name, int parent) . Gets the sum value of a given group. TimeSpan? MinTimeSpan(string name) . Gets the min value of a given group. TimeSpan? MinTimeSpan(string name, int parent) . Gets the min value of a given group. TimeSpan? MaxTimeSpan(string name) . Gets the max value of a given group. TimeSpan? MaxTimeSpan(string name, int parent) . Gets the min value of a given group. char? ToChar(string? value) . Converts given value to character . char? ToChar(int? value) . Converts given value to character . char? ToChar(short? value) . Converts given value to character . char? ToChar(byte? value) . Converts given value to character . char? ToChar(object? value) . Converts given value to character . DateTime? ToDateTime(string value) . Converts given value to DateTime . DateTime? ToDateTime(string value, string culture) . Converts given value to DateTime . Decimal? ToDecimal(string? value) . Converts given value to decimal . Decimal? ToDecimal(string value, string culture) . Converts given value to decimal withing given culture . Decimal? ToDecimal(byte? value) . Converts given value to Decimal . Decimal? ToDecimal(sbyte? value) . Converts given value to Decimal . Decimal? ToDecimal(short? value) . Converts given value to Decimal . Decimal? ToDecimal(ushort? value) . Converts given value to Decimal . Decimal? ToDecimal(long? value) . Converts given value to Decimal . Decimal? ToDecimal(ulong? value) . Converts given value to Decimal . Decimal? ToDecimal(float? value) . Converts given value to Decimal . Decimal? ToDecimal(double? value) . Converts given value to Decimal . Decimal? ToDecimal(object? value) . Converts given value to Decimal . double? ToDouble(object? value) . Converts given value to double . double? ToDouble(string? value) . Converts given value to double . double? ToDouble(byte? value) . Converts given value to double . double? ToDouble(sbyte? value) . Converts given value to double . double? ToDouble(short? value) . Converts given value to double . double? ToDouble(ushort? value) . Converts given value to double . double? ToDouble(int? value) . Converts given value to double . double? ToDouble(uint? value) . Converts given value to double . double? ToDouble(long? value) . Converts given value to double . double? ToDouble(ulong? value) . Converts given value to double . double? ToDouble(float? value) . Converts given value to double . double? ToDouble(double? value) . Converts given value to double . double? ToDouble(Decimal? value) . Converts given value to double . float? ToFloat(string? value) . Converts given value to float . float? ToFloat(byte? value) . Converts given value to float . float? ToFloat(sbyte? value) . Converts given value to float . float? ToFloat(short? value) . Converts given value to float . float? ToFloat(ushort? value) . Converts given value to float . float? ToFloat(int? value) . Converts given value to float . float? ToFloat(uint? value) . Converts given value to float . float? ToFloat(long? value) . Converts given value to float . float? ToFloat(ulong? value) . Converts given value to float . float? ToFloat(float? value) . Converts given value to float . float? ToFloat(Decimal? value) . Converts given value to float . int? ToInt32(string value) . Converts given value to int . int? ToInt32(byte? value) . Converts given value to int . int? ToInt32(sbyte? value) . Converts given value to int . int? ToInt32(short? value) . Converts given value to int . int? ToInt32(ushort? value) . Converts given value to int . int? ToInt32(int? value) . Converts given value to int . int? ToInt32(uint? value) . Converts given value to int . int? ToInt32(long? value) . Converts given value to int . int? ToInt32(ulong? value) . Converts given value to int . int? ToInt32(float? value) . Converts given value to int . int? ToInt32(double? value) . Converts given value to int . int? ToInt32(Decimal? value) . Converts given value to int . int? ToInt32(object? value) . Converts given value to int . long? ToInt64(string value) . Converts given value to Int64 . long? ToInt64(byte? value) . Converts given value to long . long? ToInt64(sbyte? value) . Converts given value to long . long? ToInt64(short? value) . Converts given value to long . long? ToInt64(ushort? value) . Converts given value to long . long? ToInt64(int? value) . Converts given value to long . long? ToInt64(uint? value) . Converts given value to long . long? ToInt64(long? value) . Converts given value to long . long? ToInt64(ulong? value) . Converts given value to long . long? ToInt64(float? value) . Converts given value to long . long? ToInt64(double? value) . Converts given value to long . long? ToInt64(Decimal? value) . Converts given value to long . long? ToInt64(object? value) . Converts given value to long . string? ToString(char? value) . Converts given value to string . string? ToString(DateTimeOffset? value) . Converts given value to string . string? ToString(DateTimeOffset? value, string format) . Converts given value to string . string? ToString(byte? value) . Converts given value to string . string? ToString(byte? value, string format) . Converts given value to string . string? ToString(sbyte? value) . Converts given value to string . string? ToString(sbyte? value, string format) . Converts given value to string . string? ToString(int? value) . Converts given value to string . string? ToString(int? value, string format) . Converts given value to string . string? ToString(uint? value) . Converts given value to string . string? ToString(uint? value, string format) . Converts given value to string . string? ToString(long? value) . Converts given value to string . string? ToString(long? value, string format) . Converts given value to string . string? ToString(ulong? value) . Converts given value to string . string? ToString(ulong? value, string format) . Converts given value to string . string? ToString(float? value) . Converts given value to string . string? ToString(float? value, string format) . Converts given value to string . string? ToString(double? value) . Converts given value to string . string? ToString(double? value, string format) . Converts given value to string . string? ToString(Decimal? value) . Converts given value to string . string? ToString(Decimal? value, string format) . Converts given value to string . string? ToString(bool? value) . Converts given value to string . string? ToString(object? value) . Converts given value to string . string? ToString&lt;T&gt;(T? value) . Converts given value to string . string ToString(string[] value) . Converts given value to string . string ToString&lt;T&gt;(T[] value) . Converts given value to string . TimeSpan? ToTimeSpan(string value) . Converts given value to TimeSpan . TimeSpan? ToTimeSpan(string value, string culture) . Converts given value to TimeSpan . IEnumerable&lt;T&gt; Window&lt;T&gt;(string name) . Gets the window . ",
    "url": "/data-sources/SeparatedValues/linux-x64.html#base-methods",
    
    "relUrl": "/data-sources/SeparatedValues/linux-x64.html#base-methods"
  },"195": {
    "doc": "Linux X64",
    "title": "Linux X64",
    "content": " ",
    "url": "/data-sources/SeparatedValues/linux-x64.html",
    
    "relUrl": "/data-sources/SeparatedValues/linux-x64.html"
  },"196": {
    "doc": "Linux X64",
    "title": "Musoq.DataSources.Json",
    "content": "Provides schema to work with json files . ",
    "url": "/data-sources/Json/linux-x64.html#musoqdatasourcesjson",
    
    "relUrl": "/data-sources/Json/linux-x64.html#musoqdatasourcesjson"
  },"197": {
    "doc": "Linux X64",
    "title": "Tables",
    "content": "Table is a collection of rows and columns that the plugin exposes. Below are the tables that are exposed by this data source. json.file(string jsonFilePath, string jsonSchemaFilePath) . Gives the ability to process json files . This table has a dynamic structure, which means that its columns and other details cannot be determined until runtime. As a result, it is not possible to include a complete description of this table in the documentation. Instead, the actual columns and other details of this table will be determined at runtime. ",
    "url": "/data-sources/Json/linux-x64.html#tables",
    
    "relUrl": "/data-sources/Json/linux-x64.html#tables"
  },"198": {
    "doc": "Linux X64",
    "title": "Methods",
    "content": "Methods are functions that can be called on the data source specific column. Below are the methods that are exposed by this data source. int Length(List&lt;Dynamic.ExpandoObject&gt; array) . Gets the length of the array . int Length(List&lt;object&gt; array) . Gets the length of the array . string MakeFlat(List&lt;Dynamic.ExpandoObject&gt; array) . Flattening the array . string MakeFlat(List&lt;object&gt; array) . Flattening the array . ",
    "url": "/data-sources/Json/linux-x64.html#methods",
    
    "relUrl": "/data-sources/Json/linux-x64.html#methods"
  },"199": {
    "doc": "Linux X64",
    "title": "Base Methods",
    "content": "Base methods are methods that can be called on the data source specific column. Those methods are automatically inherited and enriches the data source specific methods. Below are those base methods that are exposed by this data source. int RowNumber() . Gets the row number of the current row. string? GetTypeName(object? obj) . Gets the typename of passed object. string AggregateValues(string name) . Aggregates values into a single value. string AggregateValues(string name, int parent) . Aggregates values into a single value. Decimal Avg(string name) . Gets the aggregated average value from the given group name . Decimal Avg(string name, int parent) . Gets the aggregated average value from the given group name . byte? ShiftLeft(byte? value, int shift) . Shifts the value to the left by the specified number of bits. short? ShiftLeft(short? value, int shift) . Shifts the value to the left by the specified number of bits. int? ShiftLeft(int? value, int shift) . Shifts the value to the left by the specified number of bits. long? ShiftLeft(long? value, int shift) . Shifts the value to the left by the specified number of bits. sbyte? ShiftLeft(sbyte? value, int shift) . Shifts the value to the left by the specified number of bits. ushort? ShiftLeft(ushort? value, int shift) . Shifts the value to the left by the specified number of bits. uint? ShiftLeft(uint? value, int shift) . Shifts the value to the left by the specified number of bits. ulong? ShiftLeft(ulong? value, int shift) . Shifts the value to the left by the specified number of bits. byte? ShiftRight(byte? value, int shift) . Shifts the value to the right by the specified number of bits. short? ShiftRight(short? value, int shift) . Shifts the value to the right by the specified number of bits. int? ShiftRight(int? value, int shift) . Shifts the value to the right by the specified number of bits. long? ShiftRight(long? value, int shift) . Shifts the value to the right by the specified number of bits. sbyte? ShiftRight(sbyte? value, int shift) . Shifts the value to the right by the specified number of bits. ushort? ShiftRight(ushort? value, int shift) . Shifts the value to the right by the specified number of bits. uint? ShiftRight(uint? value, int shift) . Shifts the value to the right by the specified number of bits. ulong? ShiftRight(ulong? value, int shift) . Shifts the value to the right by the specified number of bits. byte? Not(byte? value) . Performs bitwise NOT operation on a given value. short? Not(short? value) . Performs bitwise NOT operation on a given value. int? Not(int? value) . Performs bitwise NOT operation on a given value. long? Not(long? value) . Performs bitwise NOT operation on a given value. sbyte? Not(sbyte? value) . Performs bitwise NOT operation on a given value. ushort? Not(ushort? value) . Performs bitwise NOT operation on a given value. uint? Not(uint? value) . Performs bitwise NOT operation on a given value. ulong? Not(ulong? value) . Performs bitwise NOT operation on a given value. byte? And(byte? left, byte? right) . Performs bitwise AND operation on two given values. int? And(byte? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(byte? left, short? right) . Performs bitwise AND operation on two given values. int? And(byte? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(byte? left, int? right) . Performs bitwise AND operation on two given values. uint? And(byte? left, uint? right) . Performs bitwise AND operation on two given values. long? And(byte? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(byte? left, ulong? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, byte? right) . Performs bitwise AND operation on two given values. sbyte? And(sbyte? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, short? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, int? right) . Performs bitwise AND operation on two given values. uint? And(sbyte? left, uint? right) . Performs bitwise AND operation on two given values. long? And(sbyte? left, long? right) . Performs bitwise AND operation on two given values. int? And(short? left, byte? right) . Performs bitwise AND operation on two given values. int? And(short? left, sbyte? right) . Performs bitwise AND operation on two given values. short? And(short? left, short? right) . Performs bitwise AND operation on two given values. int? And(short? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(short? left, int? right) . Performs bitwise AND operation on two given values. uint? And(short? left, uint? right) . Performs bitwise AND operation on two given values. long? And(short? left, long? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, byte? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, short? right) . Performs bitwise AND operation on two given values. ushort? And(ushort? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, int? right) . Performs bitwise AND operation on two given values. uint? And(ushort? left, uint? right) . Performs bitwise AND operation on two given values. long? And(ushort? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(ushort? left, ulong? right) . Performs bitwise AND operation on two given values. int? And(int? left, byte? right) . Performs bitwise AND operation on two given values. int? And(int? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(int? left, short? right) . Performs bitwise AND operation on two given values. int? And(int? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(int? left, int? right) . Performs bitwise AND operation on two given values. uint? And(int? left, uint? right) . Performs bitwise AND operation on two given values. long? And(int? left, long? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, uint? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, byte? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, sbyte? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, short? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, ushort? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, int? right) . Performs bitwise AND operation on two given values. ulong? And(uint? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(uint? left, ulong? right) . Performs bitwise AND operation on two given values. long? And(long? left, long? right) . Performs bitwise AND operation on two given values. long? And(long? left, byte? right) . Performs bitwise AND operation on two given values. long? And(long? left, sbyte? right) . Performs bitwise AND operation on two given values. long? And(long? left, short? right) . Performs bitwise AND operation on two given values. long? And(long? left, ushort? right) . Performs bitwise AND operation on two given values. long? And(long? left, int? right) . Performs bitwise AND operation on two given values. long? And(long? left, uint? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, byte? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, ushort? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, uint? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, ulong? right) . Performs bitwise AND operation on two given values. byte? Or(byte? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, short? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(byte? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(byte? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(byte? left, ulong? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, byte? right) . Performs bitwise OR operation on two given values. sbyte? Or(sbyte? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, short? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(sbyte? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(sbyte? left, long? right) . Performs bitwise OR operation on two given values. int? Or(short? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(short? left, sbyte? right) . Performs bitwise OR operation on two given values. short? Or(short? left, short? right) . Performs bitwise OR operation on two given values. int? Or(short? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(short? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(short? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(short? left, long? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, short? right) . Performs bitwise OR operation on two given values. ushort? Or(ushort? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(ushort? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(ushort? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(ushort? left, ulong? right) . Performs bitwise OR operation on two given values. int? Or(int? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(int? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(int? left, short? right) . Performs bitwise OR operation on two given values. int? Or(int? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(int? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(int? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(int? left, long? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, uint? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, byte? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, sbyte? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, short? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, ushort? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, int? right) . Performs bitwise OR operation on two given values. ulong? Or(uint? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(uint? left, ulong? right) . Performs bitwise OR operation on two given values. long? Or(long? left, long? right) . Performs bitwise OR operation on two given values. long? Or(long? left, byte? right) . Performs bitwise OR operation on two given values. long? Or(long? left, sbyte? right) . Performs bitwise OR operation on two given values. long? Or(long? left, short? right) . Performs bitwise OR operation on two given values. long? Or(long? left, ushort? right) . Performs bitwise OR operation on two given values. long? Or(long? left, int? right) . Performs bitwise OR operation on two given values. long? Or(long? left, uint? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, byte? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, ushort? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, uint? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, ulong? right) . Performs bitwise OR operation on two given values. byte? Xor(byte? left, byte? right) . Performs bitwise OR operation on two given values. int? Xor(byte? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(byte? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(byte? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(byte? left, ulong? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, byte? right) . Performs bitwise Xor operation on two given values. sbyte? Xor(sbyte? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(sbyte? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(sbyte? left, long? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, sbyte? right) . Performs bitwise Xor operation on two given values. short? Xor(short? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, ushort? right) . Performs bitwise XOR operation on two given values. int? Xor(short? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(short? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(short? left, long? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, short? right) . Performs bitwise Xor operation on two given values. ushort? Xor(ushort? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(ushort? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(ushort? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ushort? left, ulong? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(int? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(int? left, long? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, uint? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, byte? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, sbyte? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, short? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, ushort? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, int? right) . Performs bitwise Xor operation on two given values. ulong? Xor(uint? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(uint? left, ulong? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, long? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, byte? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, sbyte? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, short? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, ushort? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, int? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, uint? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, ulong? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, byte? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, ushort? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, uint? right) . Performs bitwise Xor operation on two given values. byte[] GetBytes(string? content) . Gets the bytes from the given string. byte[] GetBytes(string? content, int length, int offset) . Gets the bytes from the given string within given offset and length. byte?[]? GetBytes(char? character) . Gets the bytes from the given character. byte?[]? GetBytes(bool? bit) . Gets the bytes from the given boolean. byte?[]? GetBytes(long? value) . Gets the bytes from the given long. byte?[]? GetBytes(int? value) . Gets the bytes from the given int. byte?[]? GetBytes(short? value) . Gets the bytes from the given short. byte?[]? GetBytes(ulong? value) . Gets the bytes from the given ulong. byte?[]? GetBytes(ushort? value) . Gets the bytes from the given ushort. byte?[]? GetBytes(uint? value) . Gets the bytes from the given uint. byte?[]? GetBytes(Decimal? value) . Gets the bytes from the given decimal. byte?[]? GetBytes(double? value) . Gets the bytes from the given double. byte?[]? GetBytes(float? value) . Gets the bytes from the given float. string? ToBin(byte?[]? bytes, string delimiter) . Converts given bytes to binary with defined delimiter . string ToBin&lt;T&gt;(T value) . Converts given value to binary . string ToOcta&lt;T&gt;(T value) . Converts given value to octal . string ToDec&lt;T&gt;(T value) . Converts given value to decimal . string ToBase64(byte[] value) . Converts given value to string . string ToBase64(byte[] value, int offset, int length) . Converts given array of bytes to string . byte[] FromBase64(string value) . Converts given string to bytes array . bool FromBytesToBool(byte[] value) . Converts bytes to boolean value. short FromBytesToInt16(byte[] value) . Converts bytes to a 16-bit signed integer. ushort FromBytesToUInt16(byte[] value) . Converts bytes to a 16-bit unsigned integer. int FromBytesToInt32(byte[] value) . Converts bytes to a 32-bit signed integer. uint FromBytesToUInt32(byte[] value) . Converts bytes to a 32-bit unsigned integer. long FromBytesToInt64(byte[] value) . Converts bytes to a 64-bit signed integer. ulong FromBytesToUInt64(byte[] value) . Converts bytes to a 64-bit unsigned integer. float FromBytesToFloat(byte[] value) . Converts bytes to a float value. double FromBytesToDouble(byte[] value) . Converts bytes to a float value. string FromBytesToString(byte[] value) . Converts bytes to a string. byte[] ToBytes(bool value) . Converts boolean value to bytes. byte[] ToBytes(short value) . Converts short value to bytes. byte[] ToBytes(ushort value) . Converts ushort value to bytes. byte[] ToBytes(int value) . Converts int value to bytes. byte[] ToBytes(uint value) . Converts uint value to bytes. byte[] ToBytes(long value) . Converts long value to bytes. byte[] ToBytes(ulong value) . Converts long value to bytes. string? ToHex(byte?[]? bytes, string delimiter) . Converts given bytes to hex with defined delimiter . string? ToHex&lt;T&gt;(T value) . Converts given value to binary . int Count(string name) . Gets the count value of a given group. int Count(string name, int parent) . Gets the count value of a given group. int ExtractFromDate(string? date, string partOfDate) . Extracts part of the date from the date . int ExtractFromDate(string date, string culture, string partOfDate) . Extracts part of the date from the date based on given culture . DateTimeOffset? GetDate() . Gets the current datetime . DateTimeOffset? UtcGetDate() . Gets the current datetime in UTC . int? Month(DateTimeOffset? value) . Gets the month from DateTimeOffset . int? Year(DateTimeOffset? value) . Gets the year from DateTimeOffset . int? Day(DateTimeOffset? value) . Gets the day from DateTimeOffset . int? Hour(DateTimeOffset? value) . Gets the hour from DateTimeOffset . int? Minute(DateTimeOffset? value) . Gets the minute from DateTimeOffset . int? Second(DateTimeOffset? value) . Gets the second from DateTimeOffset . int? Milliseconds(DateTimeOffset? value) . Gets the millisecond from DateTimeOffset . int? DayOfWeek(DateTimeOffset? value) . Gets the day of week from DateTimeOffset . TimeSpan? ExtractTimeSpan(DateTimeOffset? dateTimeOffset) . Extracts time from DateTimeOffset . DateTime? ToDateTimeOffset(string value) . Converts given value to DateTimeOffset . DateTimeOffset? ToDateTimeOffset(string value, string culture) . Converts given value to DateTimeOffset . IEnumerable&lt;T&gt;? Skip&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? skipCount) . Skips elements from the beginning of the sequence. IEnumerable&lt;T&gt;? Take&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? takeCount) . Takes elements from the beginning of the sequence. IEnumerable&lt;T&gt;? SkipAndTake&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? skipCount, int? takeCount) . Skip and takes elements from the beginning of the sequence. T[]? EnumerableToArray&lt;T&gt;(IEnumerable&lt;T&gt;? values) . Turn array arguments of T into a single array. T[]? MergeArrays&lt;T&gt;(T[][]? values) . Turn array arguments of T into a single array. IEnumerable&lt;T&gt;? LongestCommonSequence&lt;T&gt;(IEnumerable&lt;T&gt;? source, IEnumerable&lt;T&gt;? pattern) . Computes longest common sequence of two given sequences . T? GetElementAtOrDefault&lt;T&gt;(IEnumerable&lt;T&gt;? enumerable, int? index) . Gets the element at the specified index in a sequence . int? Length&lt;T&gt;(IEnumerable&lt;T&gt;? enumerable) . Gets the length of the sequence . int? Length&lt;T&gt;(T[]? array) . Gets the length of the array . T? Choose&lt;T&gt;(int? index, T[] values) . Gets the value of an array at the specified index . T If&lt;T&gt;(bool expressionResult, T a, T b) . Chose a or b value based on the expression result . bool? Match(string? regex, string? content) . Determine whether content matches the specified pattern . byte? Coalesce(byte?[] array) . Gets the first non-null value in a list . sbyte? Coalesce(sbyte?[] array) . Gets the first non-null value in a list . short? Coalesce(short?[] array) . Gets the first non-null value in a list . ushort? Coalesce(ushort?[] array) . Gets the first non-null value in a list . int? Coalesce(int?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(uint?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(long?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(ulong?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(Decimal?[] array) . Gets the first non-null value in a list . T? Coalesce&lt;T&gt;(T[] array) . Gets the first non-null value in a list . IEnumerable&lt;T&gt;? Distinct&lt;T&gt;(IEnumerable&lt;T&gt;? values) . Returns distinct elements from a collection. string? Md5(string? content) . Gets the md5 hash of the given string. string? Md5(byte?[]? content) . Gets the md5 hash of the given bytes array. string? Sha1(string? content) . Gets the sha256 hash of the given string. string? Sha1(byte?[]? content) . Gets the sha256 hash of the given bytes array. string? Sha256(string? content) . Gets the sha256 hash of the given string. string? Sha256(byte?[]? content) . Gets the sha256 hash of the given bytes array. string? Sha512(string? content) . Gets the sha256 hash of the given string. string? Sha512(byte?[]? content) . Gets the sha256 hash of the bytes array. string? ToJson&lt;T&gt;(T? obj) . Converts object to json. string[] ExtractFromJsonToArray(string? json, string? path) . Extracts values from json by path. string? ExtractFromJson(string? json, string? path) . Extracts values from json by path and joins them with comma. Decimal? Abs(Decimal? value) . Gets the absolute value . long? Abs(long? value) . Gets the absolute value . int? Abs(int? value) . Gets the absolute value . Decimal? Ceil(Decimal? value) . Gets the ceiling value . Decimal? Floor(Decimal? value) . Gets the floor value . Decimal? Sign(Decimal? value) . Determine whether value is greater, equal or less that zero . long? Sign(long? value) . Determine whether value is greater, equal or less that zero . Decimal? Round(Decimal? value, int precision) . Rounds the value within given precision . Decimal? PercentOf(Decimal? value, Decimal? max) . Gets the percentage of the value . int Rand() . Gets the random integer value . int? Rand(int? min, int? max) . Gets the random integer value . double? Pow(Decimal? x, Decimal? y) . Computes the pow between two values . double? Pow(double? x, double? y) . Computes the pow between two values . double? Sqrt(Decimal? x) . Computes the sqrt of a given value . double? Sqrt(double? x) . Computes the sqrt of a given value . double? Sqrt(long? x) . Computes the sqrt of a given value . double? PercentRank&lt;T&gt;(IEnumerable&lt;T&gt;? window, T? value) . Computes the percent rank of a given window . double? Log(Decimal? base, Decimal? value) . Calculates the logarithm of a value with a specified base. Decimal? Sin(Decimal? value) . Calculates sine of a value. double? Sin(double? value) . Calculates sine of a value. float? Sin(float? value) . Calculates sine of a value. Decimal? Cos(Decimal? value) . Calculates cosine of a value. double? Cos(double? value) . Calculates cosine of a value. float? Cos(float? value) . Calculates cosine of a value. Decimal Max(string name) . Gets the max value of a given group. Decimal Max(string name, int parent) . Gets the max value of a given group. Decimal Min(string name) . Gets the min value of a given group. Decimal Min(string name, int parent) . Gets the min value of a given group. Decimal StDev(string name, int parent) . Gets the StDev value of a given group. string NewId() . Gets the new identifier . string? Trim(string? value) . Removes leading and trailing whitespace from a string. string? TrimStart(string? value) . Removes leading whitespace from a string. string? TrimEnd(string? value) . Removes trailing whitespace from a string. string? Substring(string? value, int? index, int? length) . Gets the substring from the string. string? Substring(string value, int? length) . Gets the substring from the string . string? Concat(string[]? strings) . Concatenates the specified values . string? Concat(char?[]? characters) . Concatenates the specified characters . string? Concat(string? firstString, char?[]? chars) . Concatenates specified string fir characters . string? Concat(char? firstChar, string[]? strings) . Concatenate specific character with strings . string? Concat(object[]? objects) . Concatenates the specified strings . string? Concat&lt;T&gt;(T[]? objects) . Concatenates the specified strings . bool? Contains(string? content, string? what) . Determine whether the string contains the specified value . int? IndexOf(string? value, string? text) . Position of the first occurrence of the specified value . string? Soundex(string? value) . Computes soundex for the specified value . bool HasFuzzyMatchedWord(string text, string word, string separator) . Matches the specified text by splitting it with separator and applying fuzzy comparison . bool HasWordThatHasSmallerLevenshteinDistanceThan(string text, string word, int distance, string separator) . Matches the specified text by splitting it with separator and applying fuzzy comparison with a given distance . bool HasWordThatSoundLike(string text, string word, string separator) . Matches whether the specified word is present after being fuzzified within the specified text . bool HasTextThatSoundLikeSentence(string text, string sentence, string separator) . Matches whether the specified text is present in sentence after being fuzified . string? ToUpper(string value) . Makes the string uppercase . string? ToUpper(string value, string culture) . Makes the string uppercase within specified culture . string? ToUpperInvariant(string value) . Makes the string uppercase . string? ToLower(string value) . Makes the string lowercase . string? ToLower(string value, string culture) . Makes the string lowercase within specified culture . string? ToLowerInvariant(string value) . Makes the string lowercase . string? PadLeft(string? value, string? character, int? totalWidth) . Returns a new string that right-aligns the characters in this instance by padding them on the left with a specified Unicode character, for a specified total lengt . string? PadRight(string? value, string? character, int? totalWidth) . Returns a new string that left-aligns the characters in this instance by padding them on the right with a specified Unicode character, for a specified total length . string? Head(string? value, int? length) . Gets the first N characters of the string . string? Tail(string? value, int? length) . Gets the last N characters of the string . int? LevenshteinDistance(string? firstValue, string? secondValue) . Computes the Levenshtein distance between two strings . char? GetCharacterOf(string value, int index) . Gets the character at specified index . string? Reverse(string? value) . Reverses the string . string[] Split(string value, string[] separators) . Splits the string into an array of substrings based on the specified separators . char[] ToCharArray(string value) . Splits the string into an array of characters . string? LongestCommonSubstring(string source, string pattern) . Computes the longest common subsequence between two source and pattern . string Replicate(string value, int integer) . Clones the value n times . string? Translate(string? value, string? characters, string? translations) . Returns the string from the first argument after the characters specified in the second argument are translated into the characters specified in the third argument. string? Replace(string? text, string lookFor, string? changeTo) . Replaces the first occurrence of a specified string in this instance with another specified string . string? ToTitleCase(string? value) . Capitalizes the first letter of the string . string? GetNthWord(string? text, int? wordIndex, string? separator) . Gets the nth word of the string . string? GetFirstWord(string text, string separator) . Gets the first word of the string . string? GetSecondWord(string text, string separator) . Gets the second word of the string . string? GetThirdWord(string text, string separator) . Gets the third word of the string . string? GetLastWord(string? text, string? separator) . Gets last word of the string . bool? IsNullOrEmpty(string? value) . Determines whether the string is null or empty . bool? IsNullOrWhiteSpace(string? value) . Determines whether the string is null or whitespace . string? UrlEncode(string? value) . Encodes the value . string? UrlDecode(string? value) . Decodes the value . string? UriEncode(string? value) . Encodes the value . string? UriDecode(string? value) . Decodes the value . bool? StartsWith(string? value, string? prefix) . Determines whether the string starts with the specified prefix . bool? StartsWith(string? value, string? prefix, string comparison) . Determines whether the string starts with the specified prefix . bool? EndsWith(string? value, string? suffix) . Determines whether the string ends with the specified suffix . bool? EndsWith(string? value, string? suffix, string comparison) . Determines whether the string ends with the specified suffix . string? RegexReplace(string? value, string? pattern, string? replacement) . Replace the specified value part that matches the pattern with the replacement . string[]? SplitByLinuxNewLines(string? input) . Split string by Linux-style newlines (\\n) . string[]? SplitByWindowsNewLines(string? input) . Split string by Windows-style newlines (\\r\\n) . string[]? SplitByNewLines(string? input) . Smart split that handles both Windows (\\r\\n) and Linux (\\n) newlines . Decimal Sum(string name) . Gets the sum value of a given group. Decimal Sum(string name, int parent) . Gets the sum value of a given group. Decimal SumIncome(string name) . Gets the sum value of a given group. Decimal SumIncome(string name, int parent) . Gets the sum value of a given group. Decimal SumOutcome(string name) . Gets the outcome value of a given group. Decimal SumOutcome(string name, int parent) . Gets the outcome value of a given group. TimeSpan? SumTimeSpan(string name) . Gets the sum value of a given group. TimeSpan? SumTimeSpan(string name, int parent) . Gets the sum value of a given group. TimeSpan? MinTimeSpan(string name) . Gets the min value of a given group. TimeSpan? MinTimeSpan(string name, int parent) . Gets the min value of a given group. TimeSpan? MaxTimeSpan(string name) . Gets the max value of a given group. TimeSpan? MaxTimeSpan(string name, int parent) . Gets the min value of a given group. char? ToChar(string? value) . Converts given value to character . char? ToChar(int? value) . Converts given value to character . char? ToChar(short? value) . Converts given value to character . char? ToChar(byte? value) . Converts given value to character . char? ToChar(object? value) . Converts given value to character . DateTime? ToDateTime(string value) . Converts given value to DateTime . DateTime? ToDateTime(string value, string culture) . Converts given value to DateTime . Decimal? ToDecimal(string? value) . Converts given value to decimal . Decimal? ToDecimal(string value, string culture) . Converts given value to decimal withing given culture . Decimal? ToDecimal(byte? value) . Converts given value to Decimal . Decimal? ToDecimal(sbyte? value) . Converts given value to Decimal . Decimal? ToDecimal(short? value) . Converts given value to Decimal . Decimal? ToDecimal(ushort? value) . Converts given value to Decimal . Decimal? ToDecimal(long? value) . Converts given value to Decimal . Decimal? ToDecimal(ulong? value) . Converts given value to Decimal . Decimal? ToDecimal(float? value) . Converts given value to Decimal . Decimal? ToDecimal(double? value) . Converts given value to Decimal . Decimal? ToDecimal(object? value) . Converts given value to Decimal . double? ToDouble(object? value) . Converts given value to double . double? ToDouble(string? value) . Converts given value to double . double? ToDouble(byte? value) . Converts given value to double . double? ToDouble(sbyte? value) . Converts given value to double . double? ToDouble(short? value) . Converts given value to double . double? ToDouble(ushort? value) . Converts given value to double . double? ToDouble(int? value) . Converts given value to double . double? ToDouble(uint? value) . Converts given value to double . double? ToDouble(long? value) . Converts given value to double . double? ToDouble(ulong? value) . Converts given value to double . double? ToDouble(float? value) . Converts given value to double . double? ToDouble(double? value) . Converts given value to double . double? ToDouble(Decimal? value) . Converts given value to double . float? ToFloat(string? value) . Converts given value to float . float? ToFloat(byte? value) . Converts given value to float . float? ToFloat(sbyte? value) . Converts given value to float . float? ToFloat(short? value) . Converts given value to float . float? ToFloat(ushort? value) . Converts given value to float . float? ToFloat(int? value) . Converts given value to float . float? ToFloat(uint? value) . Converts given value to float . float? ToFloat(long? value) . Converts given value to float . float? ToFloat(ulong? value) . Converts given value to float . float? ToFloat(float? value) . Converts given value to float . float? ToFloat(Decimal? value) . Converts given value to float . int? ToInt32(string value) . Converts given value to int . int? ToInt32(byte? value) . Converts given value to int . int? ToInt32(sbyte? value) . Converts given value to int . int? ToInt32(short? value) . Converts given value to int . int? ToInt32(ushort? value) . Converts given value to int . int? ToInt32(int? value) . Converts given value to int . int? ToInt32(uint? value) . Converts given value to int . int? ToInt32(long? value) . Converts given value to int . int? ToInt32(ulong? value) . Converts given value to int . int? ToInt32(float? value) . Converts given value to int . int? ToInt32(double? value) . Converts given value to int . int? ToInt32(Decimal? value) . Converts given value to int . int? ToInt32(object? value) . Converts given value to int . long? ToInt64(string value) . Converts given value to Int64 . long? ToInt64(byte? value) . Converts given value to long . long? ToInt64(sbyte? value) . Converts given value to long . long? ToInt64(short? value) . Converts given value to long . long? ToInt64(ushort? value) . Converts given value to long . long? ToInt64(int? value) . Converts given value to long . long? ToInt64(uint? value) . Converts given value to long . long? ToInt64(long? value) . Converts given value to long . long? ToInt64(ulong? value) . Converts given value to long . long? ToInt64(float? value) . Converts given value to long . long? ToInt64(double? value) . Converts given value to long . long? ToInt64(Decimal? value) . Converts given value to long . long? ToInt64(object? value) . Converts given value to long . string? ToString(char? value) . Converts given value to string . string? ToString(DateTimeOffset? value) . Converts given value to string . string? ToString(DateTimeOffset? value, string format) . Converts given value to string . string? ToString(byte? value) . Converts given value to string . string? ToString(byte? value, string format) . Converts given value to string . string? ToString(sbyte? value) . Converts given value to string . string? ToString(sbyte? value, string format) . Converts given value to string . string? ToString(int? value) . Converts given value to string . string? ToString(int? value, string format) . Converts given value to string . string? ToString(uint? value) . Converts given value to string . string? ToString(uint? value, string format) . Converts given value to string . string? ToString(long? value) . Converts given value to string . string? ToString(long? value, string format) . Converts given value to string . string? ToString(ulong? value) . Converts given value to string . string? ToString(ulong? value, string format) . Converts given value to string . string? ToString(float? value) . Converts given value to string . string? ToString(float? value, string format) . Converts given value to string . string? ToString(double? value) . Converts given value to string . string? ToString(double? value, string format) . Converts given value to string . string? ToString(Decimal? value) . Converts given value to string . string? ToString(Decimal? value, string format) . Converts given value to string . string? ToString(bool? value) . Converts given value to string . string? ToString(object? value) . Converts given value to string . string? ToString&lt;T&gt;(T? value) . Converts given value to string . string ToString(string[] value) . Converts given value to string . string ToString&lt;T&gt;(T[] value) . Converts given value to string . TimeSpan? ToTimeSpan(string value) . Converts given value to TimeSpan . TimeSpan? ToTimeSpan(string value, string culture) . Converts given value to TimeSpan . IEnumerable&lt;T&gt; Window&lt;T&gt;(string name) . Gets the window . ",
    "url": "/data-sources/Json/linux-x64.html#base-methods",
    
    "relUrl": "/data-sources/Json/linux-x64.html#base-methods"
  },"200": {
    "doc": "Linux X64",
    "title": "Linux X64",
    "content": " ",
    "url": "/data-sources/Json/linux-x64.html",
    
    "relUrl": "/data-sources/Json/linux-x64.html"
  },"201": {
    "doc": "Linux X64",
    "title": "Musoq.DataSources.Roslyn",
    "content": "Provides schema to work with Roslyn data source. ",
    "url": "/data-sources/roslyn/linux-x64.html#musoqdatasourcesroslyn",
    
    "relUrl": "/data-sources/roslyn/linux-x64.html#musoqdatasourcesroslyn"
  },"202": {
    "doc": "Linux X64",
    "title": "Tables",
    "content": "Table is a collection of rows and columns that the plugin exposes. Below are the tables that are exposed by this data source. csharp.solution(string path) . Allows to perform queries on the given solution file. | Name | Type | Description | . | Id | string | Solution id | . | Projects | ProjectEntity[] | Projects within the solution | . ",
    "url": "/data-sources/roslyn/linux-x64.html#tables",
    
    "relUrl": "/data-sources/roslyn/linux-x64.html#tables"
  },"203": {
    "doc": "Linux X64",
    "title": "Private Tables",
    "content": "Private tables are tables that are not exposed by the plugin, but are available for use in queries when using CROSS / OUTER APPLY operator. ProjectEntity . Represent project of solution . | Name | Type | Description | . | Id | string | Project id | . | FilePath | string | File path | . | OutputFilePath | string | Output file path | . | OutputRefFilePath | string | Output reference file path | . | DefaultNamespace | string | Default namespace | . | Language | string | Language | . | AssemblyName | string | Assembly name | . | Name | string | Name | . | IsSubmission | bool | Is submission | . | Version | string | Version | . | Documents | DocumentEntity[] | Documents | . DocumentEntity . Represent document of project . | Name | Type | Description | . | Name | string | Name | . | Text | string | Text | . | ClassCount | int | Class count | . | InterfaceCount | int | Interface count | . | EnumCount | int | Enum count | . | Classes | ClassEntity[] | Struct count | . | Interfaces | InterfaceEntity[] | Interfaces | . | Enums | EnumEntity[] | Enums | . ReferencedDocumentEntity . Represent referenced document of project . | Name | Type | Description | . | Name | string | Name | . | Text | string | Text | . | ClassCount | int | Class count | . | InterfaceCount | int | Interface count | . | EnumCount | int | Enum count | . | Classes | ClassEntity[] | Struct count | . | Interfaces | InterfaceEntity[] | Interfaces | . | Enums | EnumEntity[] | Enums | . | StartLine | int | Start line | . | StartColumn | int | Start column | . | EndLine | int | End line | . | EndColumn | int | End column | . ClassEntity . Represent class of document . | Name | Type | Description | . | Document | DocumentEntity | Document | . | Text | string | Text | . | IsAbstract | bool | Is abstract | . | IsSealed | bool | Is sealed | . | IsStatic | bool | Is static | . | BaseTypes | string[] | Base types | . | Interfaces | string[] | Interfaces | . | TypeParameters | string[] | Type parameters | . | MemberNames | string[] | Member names | . | Attributes | string[] | Attributes | . | Name | string | Name | . | FullName | string | Full name | . | Namespace | string | Namespace | . | Modifiers | string[] | Modifiers | . | Methods | MethodEntity[] | Methods | . | Properties | PropertyEntity[] | Properties | . | MethodsCount | int | Methods count | . | PropertiesCount | int | Properties count | . | FieldsCount | int | Fields count | . | InheritanceDepth | int | Inheritance depth | . | ConstructorsCount | int | Constructors count | . | NestedClassesCount | int | Nested classes count | . | NestedInterfacesCount | int | Nested interfaces count | . | InterfacesCount | int | Interfaces count | . | LackOfCohesion | int | Lack of cohesion | . | LinesOfCode | int | Lines of code | . EnumEntity . Represent enum of document . | Name | Type | Description | . | Document | DocumentEntity | Document | . | Members | string[] | Members | . | Name | string | Name | . | FullName | string | Full name | . | Namespace | string | Namespace | . | Modifiers | string[] | Modifiers | . | Methods | MethodEntity[] | Methods | . | Properties | PropertyEntity[] | Properties | . InterfaceEntity . Represent interface of document . | Name | Type | Description | . | Document | DocumentEntity | Document | . | BaseInterfaces | string[] | Base interfaces | . | Name | string | Name | . | FullName | string | Full name | . | Namespace | string | Namespace | . | Modifiers | string[] | Modifiers | . | Methods | MethodEntity[] | Methods | . | Properties | PropertyEntity[] | Properties | . MethodEntity . Represent method of class . | Name | Type | Description | . | Name | string | Name | . | ReturnType | string | Return type | . | Parameters | ParameterEntity[] | Parameters | . | Modifiers | string[] | Modifiers | . | Text | string | Text | . | Attributes | AttributeEntity[] | Attributes | . | CyclomaticComplexity | int | Cyclomatic complexity | . PropertyEntity . Represent property of class . | Name | Type | Description | . | Name | string | Name | . | Type | string | Type | . | IsIndexer | bool | Is indexer | . | IsReadOnly | bool | Is read only | . | IsWriteOnly | bool | Is write only | . | IsRequired | bool | Is required | . | IsWithEvents | bool | Is with events | . | IsVirtual | bool | Is virtual | . | IsOverride | bool | Is override | . | IsAbstract | bool | Is abstract | . | IsSealed | bool | Is sealed | . | IsStatic | bool | Is static | . | Modifiers | string[] | Modifiers | . ParameterEntity . Represent parameter of method . | Name | Type | Description | . | Name | string | Name | . | Type | string | Type | . | IsOptional | bool | Is optional | . | IsParams | bool | Is params | . | IsThis | bool | Is this | . | IsDiscard | bool | Is discard | . | IsIn | bool | Is in | . | IsOut | bool | Is out | . | IsRef | bool | Is ref | . | IsByRef | bool | Is by ref | . | IsByValue | bool | Is by value | . ProjectReferenceEntity . Represent project reference . | Name | Type | Description | . | Name | string | Name | . LibraryReferenceEntity . Represent library reference . | Name | Type | Description | . | Name | string | Name | . | Version | string | Version | . | Culture | string | Culture | . | Location | string | Location | . ",
    "url": "/data-sources/roslyn/linux-x64.html#private-tables",
    
    "relUrl": "/data-sources/roslyn/linux-x64.html#private-tables"
  },"204": {
    "doc": "Linux X64",
    "title": "Methods",
    "content": "Methods are functions that can be called on the data source specific column. Below are the methods that are exposed by this data source. IEnumerable&lt;Musoq.DataSources.Roslyn.Entities.ProjectEntity&gt; GetProjectsByNames(string[] names) . Gets projects by names. IEnumerable&lt;Musoq.DataSources.Roslyn.Entities.ClassEntity&gt; GetClassesByNames(string[] names) . Gets classes by names. IEnumerable&lt;Musoq.DataSources.Roslyn.Entities.InterfaceEntity&gt; GetInterfacesByNames(string[] names) . Gets classes by names. IEnumerable&lt;Musoq.DataSources.Roslyn.Entities.EnumEntity&gt; GetEnumsByNames(string[] names) . Gets classes by names. IEnumerable&lt;Musoq.DataSources.Roslyn.Entities.ReferencedDocumentEntity&gt; FindReferences(Musoq.DataSources.Roslyn.Entities.ClassEntity entity) . Finds references of the specified class entity. IEnumerable&lt;Musoq.DataSources.Roslyn.Entities.ReferencedDocumentEntity&gt; FindReferences(Musoq.DataSources.Roslyn.Entities.InterfaceEntity entity) . Finds references of the specified interface entity. IEnumerable&lt;Musoq.DataSources.Roslyn.Entities.ReferencedDocumentEntity&gt; FindReferences(Musoq.DataSources.Roslyn.Entities.EnumEntity entity) . Finds references of the specified interface entity. ",
    "url": "/data-sources/roslyn/linux-x64.html#methods",
    
    "relUrl": "/data-sources/roslyn/linux-x64.html#methods"
  },"205": {
    "doc": "Linux X64",
    "title": "Base Methods",
    "content": "Base methods are methods that can be called on the data source specific column. Those methods are automatically inherited and enriches the data source specific methods. Below are those base methods that are exposed by this data source. int RowNumber() . Gets the row number of the current row. string? GetTypeName(object? obj) . Gets the typename of passed object. string AggregateValues(string name) . Aggregates values into a single value. string AggregateValues(string name, int parent) . Aggregates values into a single value. Decimal Avg(string name) . Gets the aggregated average value from the given group name . Decimal Avg(string name, int parent) . Gets the aggregated average value from the given group name . byte? ShiftLeft(byte? value, int shift) . Shifts the value to the left by the specified number of bits. short? ShiftLeft(short? value, int shift) . Shifts the value to the left by the specified number of bits. int? ShiftLeft(int? value, int shift) . Shifts the value to the left by the specified number of bits. long? ShiftLeft(long? value, int shift) . Shifts the value to the left by the specified number of bits. sbyte? ShiftLeft(sbyte? value, int shift) . Shifts the value to the left by the specified number of bits. ushort? ShiftLeft(ushort? value, int shift) . Shifts the value to the left by the specified number of bits. uint? ShiftLeft(uint? value, int shift) . Shifts the value to the left by the specified number of bits. ulong? ShiftLeft(ulong? value, int shift) . Shifts the value to the left by the specified number of bits. byte? ShiftRight(byte? value, int shift) . Shifts the value to the right by the specified number of bits. short? ShiftRight(short? value, int shift) . Shifts the value to the right by the specified number of bits. int? ShiftRight(int? value, int shift) . Shifts the value to the right by the specified number of bits. long? ShiftRight(long? value, int shift) . Shifts the value to the right by the specified number of bits. sbyte? ShiftRight(sbyte? value, int shift) . Shifts the value to the right by the specified number of bits. ushort? ShiftRight(ushort? value, int shift) . Shifts the value to the right by the specified number of bits. uint? ShiftRight(uint? value, int shift) . Shifts the value to the right by the specified number of bits. ulong? ShiftRight(ulong? value, int shift) . Shifts the value to the right by the specified number of bits. byte? Not(byte? value) . Performs bitwise NOT operation on a given value. short? Not(short? value) . Performs bitwise NOT operation on a given value. int? Not(int? value) . Performs bitwise NOT operation on a given value. long? Not(long? value) . Performs bitwise NOT operation on a given value. sbyte? Not(sbyte? value) . Performs bitwise NOT operation on a given value. ushort? Not(ushort? value) . Performs bitwise NOT operation on a given value. uint? Not(uint? value) . Performs bitwise NOT operation on a given value. ulong? Not(ulong? value) . Performs bitwise NOT operation on a given value. byte? And(byte? left, byte? right) . Performs bitwise AND operation on two given values. int? And(byte? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(byte? left, short? right) . Performs bitwise AND operation on two given values. int? And(byte? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(byte? left, int? right) . Performs bitwise AND operation on two given values. uint? And(byte? left, uint? right) . Performs bitwise AND operation on two given values. long? And(byte? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(byte? left, ulong? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, byte? right) . Performs bitwise AND operation on two given values. sbyte? And(sbyte? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, short? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, int? right) . Performs bitwise AND operation on two given values. uint? And(sbyte? left, uint? right) . Performs bitwise AND operation on two given values. long? And(sbyte? left, long? right) . Performs bitwise AND operation on two given values. int? And(short? left, byte? right) . Performs bitwise AND operation on two given values. int? And(short? left, sbyte? right) . Performs bitwise AND operation on two given values. short? And(short? left, short? right) . Performs bitwise AND operation on two given values. int? And(short? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(short? left, int? right) . Performs bitwise AND operation on two given values. uint? And(short? left, uint? right) . Performs bitwise AND operation on two given values. long? And(short? left, long? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, byte? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, short? right) . Performs bitwise AND operation on two given values. ushort? And(ushort? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, int? right) . Performs bitwise AND operation on two given values. uint? And(ushort? left, uint? right) . Performs bitwise AND operation on two given values. long? And(ushort? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(ushort? left, ulong? right) . Performs bitwise AND operation on two given values. int? And(int? left, byte? right) . Performs bitwise AND operation on two given values. int? And(int? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(int? left, short? right) . Performs bitwise AND operation on two given values. int? And(int? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(int? left, int? right) . Performs bitwise AND operation on two given values. uint? And(int? left, uint? right) . Performs bitwise AND operation on two given values. long? And(int? left, long? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, uint? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, byte? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, sbyte? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, short? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, ushort? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, int? right) . Performs bitwise AND operation on two given values. ulong? And(uint? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(uint? left, ulong? right) . Performs bitwise AND operation on two given values. long? And(long? left, long? right) . Performs bitwise AND operation on two given values. long? And(long? left, byte? right) . Performs bitwise AND operation on two given values. long? And(long? left, sbyte? right) . Performs bitwise AND operation on two given values. long? And(long? left, short? right) . Performs bitwise AND operation on two given values. long? And(long? left, ushort? right) . Performs bitwise AND operation on two given values. long? And(long? left, int? right) . Performs bitwise AND operation on two given values. long? And(long? left, uint? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, byte? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, ushort? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, uint? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, ulong? right) . Performs bitwise AND operation on two given values. byte? Or(byte? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, short? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(byte? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(byte? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(byte? left, ulong? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, byte? right) . Performs bitwise OR operation on two given values. sbyte? Or(sbyte? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, short? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(sbyte? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(sbyte? left, long? right) . Performs bitwise OR operation on two given values. int? Or(short? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(short? left, sbyte? right) . Performs bitwise OR operation on two given values. short? Or(short? left, short? right) . Performs bitwise OR operation on two given values. int? Or(short? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(short? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(short? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(short? left, long? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, short? right) . Performs bitwise OR operation on two given values. ushort? Or(ushort? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(ushort? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(ushort? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(ushort? left, ulong? right) . Performs bitwise OR operation on two given values. int? Or(int? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(int? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(int? left, short? right) . Performs bitwise OR operation on two given values. int? Or(int? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(int? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(int? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(int? left, long? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, uint? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, byte? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, sbyte? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, short? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, ushort? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, int? right) . Performs bitwise OR operation on two given values. ulong? Or(uint? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(uint? left, ulong? right) . Performs bitwise OR operation on two given values. long? Or(long? left, long? right) . Performs bitwise OR operation on two given values. long? Or(long? left, byte? right) . Performs bitwise OR operation on two given values. long? Or(long? left, sbyte? right) . Performs bitwise OR operation on two given values. long? Or(long? left, short? right) . Performs bitwise OR operation on two given values. long? Or(long? left, ushort? right) . Performs bitwise OR operation on two given values. long? Or(long? left, int? right) . Performs bitwise OR operation on two given values. long? Or(long? left, uint? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, byte? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, ushort? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, uint? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, ulong? right) . Performs bitwise OR operation on two given values. byte? Xor(byte? left, byte? right) . Performs bitwise OR operation on two given values. int? Xor(byte? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(byte? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(byte? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(byte? left, ulong? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, byte? right) . Performs bitwise Xor operation on two given values. sbyte? Xor(sbyte? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(sbyte? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(sbyte? left, long? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, sbyte? right) . Performs bitwise Xor operation on two given values. short? Xor(short? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, ushort? right) . Performs bitwise XOR operation on two given values. int? Xor(short? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(short? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(short? left, long? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, short? right) . Performs bitwise Xor operation on two given values. ushort? Xor(ushort? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(ushort? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(ushort? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ushort? left, ulong? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(int? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(int? left, long? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, uint? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, byte? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, sbyte? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, short? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, ushort? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, int? right) . Performs bitwise Xor operation on two given values. ulong? Xor(uint? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(uint? left, ulong? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, long? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, byte? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, sbyte? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, short? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, ushort? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, int? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, uint? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, ulong? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, byte? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, ushort? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, uint? right) . Performs bitwise Xor operation on two given values. byte[] GetBytes(string? content) . Gets the bytes from the given string. byte[] GetBytes(string? content, int length, int offset) . Gets the bytes from the given string within given offset and length. byte?[]? GetBytes(char? character) . Gets the bytes from the given character. byte?[]? GetBytes(bool? bit) . Gets the bytes from the given boolean. byte?[]? GetBytes(long? value) . Gets the bytes from the given long. byte?[]? GetBytes(int? value) . Gets the bytes from the given int. byte?[]? GetBytes(short? value) . Gets the bytes from the given short. byte?[]? GetBytes(ulong? value) . Gets the bytes from the given ulong. byte?[]? GetBytes(ushort? value) . Gets the bytes from the given ushort. byte?[]? GetBytes(uint? value) . Gets the bytes from the given uint. byte?[]? GetBytes(Decimal? value) . Gets the bytes from the given decimal. byte?[]? GetBytes(double? value) . Gets the bytes from the given double. byte?[]? GetBytes(float? value) . Gets the bytes from the given float. string? ToBin(byte?[]? bytes, string delimiter) . Converts given bytes to binary with defined delimiter . string ToBin&lt;T&gt;(T value) . Converts given value to binary . string ToOcta&lt;T&gt;(T value) . Converts given value to octal . string ToDec&lt;T&gt;(T value) . Converts given value to decimal . string ToBase64(byte[] value) . Converts given value to string . string ToBase64(byte[] value, int offset, int length) . Converts given array of bytes to string . byte[] FromBase64(string value) . Converts given string to bytes array . bool FromBytesToBool(byte[] value) . Converts bytes to boolean value. short FromBytesToInt16(byte[] value) . Converts bytes to a 16-bit signed integer. ushort FromBytesToUInt16(byte[] value) . Converts bytes to a 16-bit unsigned integer. int FromBytesToInt32(byte[] value) . Converts bytes to a 32-bit signed integer. uint FromBytesToUInt32(byte[] value) . Converts bytes to a 32-bit unsigned integer. long FromBytesToInt64(byte[] value) . Converts bytes to a 64-bit signed integer. ulong FromBytesToUInt64(byte[] value) . Converts bytes to a 64-bit unsigned integer. float FromBytesToFloat(byte[] value) . Converts bytes to a float value. double FromBytesToDouble(byte[] value) . Converts bytes to a float value. string FromBytesToString(byte[] value) . Converts bytes to a string. byte[] ToBytes(bool value) . Converts boolean value to bytes. byte[] ToBytes(short value) . Converts short value to bytes. byte[] ToBytes(ushort value) . Converts ushort value to bytes. byte[] ToBytes(int value) . Converts int value to bytes. byte[] ToBytes(uint value) . Converts uint value to bytes. byte[] ToBytes(long value) . Converts long value to bytes. byte[] ToBytes(ulong value) . Converts long value to bytes. string? ToHex(byte?[]? bytes, string delimiter) . Converts given bytes to hex with defined delimiter . string? ToHex&lt;T&gt;(T value) . Converts given value to binary . int Count(string name) . Gets the count value of a given group. int Count(string name, int parent) . Gets the count value of a given group. int ExtractFromDate(string? date, string partOfDate) . Extracts part of the date from the date . int ExtractFromDate(string date, string culture, string partOfDate) . Extracts part of the date from the date based on given culture . DateTimeOffset? GetDate() . Gets the current datetime . DateTimeOffset? UtcGetDate() . Gets the current datetime in UTC . int? Month(DateTimeOffset? value) . Gets the month from DateTimeOffset . int? Year(DateTimeOffset? value) . Gets the year from DateTimeOffset . int? Day(DateTimeOffset? value) . Gets the day from DateTimeOffset . int? Hour(DateTimeOffset? value) . Gets the hour from DateTimeOffset . int? Minute(DateTimeOffset? value) . Gets the minute from DateTimeOffset . int? Second(DateTimeOffset? value) . Gets the second from DateTimeOffset . int? Milliseconds(DateTimeOffset? value) . Gets the millisecond from DateTimeOffset . int? DayOfWeek(DateTimeOffset? value) . Gets the day of week from DateTimeOffset . TimeSpan? ExtractTimeSpan(DateTimeOffset? dateTimeOffset) . Extracts time from DateTimeOffset . DateTime? ToDateTimeOffset(string value) . Converts given value to DateTimeOffset . DateTimeOffset? ToDateTimeOffset(string value, string culture) . Converts given value to DateTimeOffset . IEnumerable&lt;T&gt;? Skip&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? skipCount) . Skips elements from the beginning of the sequence. IEnumerable&lt;T&gt;? Take&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? takeCount) . Takes elements from the beginning of the sequence. IEnumerable&lt;T&gt;? SkipAndTake&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? skipCount, int? takeCount) . Skip and takes elements from the beginning of the sequence. T[]? EnumerableToArray&lt;T&gt;(IEnumerable&lt;T&gt;? values) . Turn array arguments of T into a single array. T[]? MergeArrays&lt;T&gt;(T[][]? values) . Turn array arguments of T into a single array. IEnumerable&lt;T&gt;? LongestCommonSequence&lt;T&gt;(IEnumerable&lt;T&gt;? source, IEnumerable&lt;T&gt;? pattern) . Computes longest common sequence of two given sequences . T? GetElementAtOrDefault&lt;T&gt;(IEnumerable&lt;T&gt;? enumerable, int? index) . Gets the element at the specified index in a sequence . int? Length&lt;T&gt;(IEnumerable&lt;T&gt;? enumerable) . Gets the length of the sequence . int? Length&lt;T&gt;(T[]? array) . Gets the length of the array . T? Choose&lt;T&gt;(int? index, T[] values) . Gets the value of an array at the specified index . T If&lt;T&gt;(bool expressionResult, T a, T b) . Chose a or b value based on the expression result . bool? Match(string? regex, string? content) . Determine whether content matches the specified pattern . byte? Coalesce(byte?[] array) . Gets the first non-null value in a list . sbyte? Coalesce(sbyte?[] array) . Gets the first non-null value in a list . short? Coalesce(short?[] array) . Gets the first non-null value in a list . ushort? Coalesce(ushort?[] array) . Gets the first non-null value in a list . int? Coalesce(int?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(uint?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(long?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(ulong?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(Decimal?[] array) . Gets the first non-null value in a list . T? Coalesce&lt;T&gt;(T[] array) . Gets the first non-null value in a list . IEnumerable&lt;T&gt;? Distinct&lt;T&gt;(IEnumerable&lt;T&gt;? values) . Returns distinct elements from a collection. string? Md5(string? content) . Gets the md5 hash of the given string. string? Md5(byte?[]? content) . Gets the md5 hash of the given bytes array. string? Sha1(string? content) . Gets the sha256 hash of the given string. string? Sha1(byte?[]? content) . Gets the sha256 hash of the given bytes array. string? Sha256(string? content) . Gets the sha256 hash of the given string. string? Sha256(byte?[]? content) . Gets the sha256 hash of the given bytes array. string? Sha512(string? content) . Gets the sha256 hash of the given string. string? Sha512(byte?[]? content) . Gets the sha256 hash of the bytes array. string? ToJson&lt;T&gt;(T? obj) . Converts object to json. string[] ExtractFromJsonToArray(string? json, string? path) . Extracts values from json by path. string? ExtractFromJson(string? json, string? path) . Extracts values from json by path and joins them with comma. Decimal? Abs(Decimal? value) . Gets the absolute value . long? Abs(long? value) . Gets the absolute value . int? Abs(int? value) . Gets the absolute value . Decimal? Ceil(Decimal? value) . Gets the ceiling value . Decimal? Floor(Decimal? value) . Gets the floor value . Decimal? Sign(Decimal? value) . Determine whether value is greater, equal or less that zero . long? Sign(long? value) . Determine whether value is greater, equal or less that zero . Decimal? Round(Decimal? value, int precision) . Rounds the value within given precision . Decimal? PercentOf(Decimal? value, Decimal? max) . Gets the percentage of the value . int Rand() . Gets the random integer value . int? Rand(int? min, int? max) . Gets the random integer value . double? Pow(Decimal? x, Decimal? y) . Computes the pow between two values . double? Pow(double? x, double? y) . Computes the pow between two values . double? Sqrt(Decimal? x) . Computes the sqrt of a given value . double? Sqrt(double? x) . Computes the sqrt of a given value . double? Sqrt(long? x) . Computes the sqrt of a given value . double? PercentRank&lt;T&gt;(IEnumerable&lt;T&gt;? window, T? value) . Computes the percent rank of a given window . double? Log(Decimal? base, Decimal? value) . Calculates the logarithm of a value with a specified base. Decimal? Sin(Decimal? value) . Calculates sine of a value. double? Sin(double? value) . Calculates sine of a value. float? Sin(float? value) . Calculates sine of a value. Decimal? Cos(Decimal? value) . Calculates cosine of a value. double? Cos(double? value) . Calculates cosine of a value. float? Cos(float? value) . Calculates cosine of a value. Decimal Max(string name) . Gets the max value of a given group. Decimal Max(string name, int parent) . Gets the max value of a given group. Decimal Min(string name) . Gets the min value of a given group. Decimal Min(string name, int parent) . Gets the min value of a given group. Decimal StDev(string name, int parent) . Gets the StDev value of a given group. string NewId() . Gets the new identifier . string? Trim(string? value) . Removes leading and trailing whitespace from a string. string? TrimStart(string? value) . Removes leading whitespace from a string. string? TrimEnd(string? value) . Removes trailing whitespace from a string. string? Substring(string? value, int? index, int? length) . Gets the substring from the string. string? Substring(string value, int? length) . Gets the substring from the string . string? Concat(string[]? strings) . Concatenates the specified values . string? Concat(char?[]? characters) . Concatenates the specified characters . string? Concat(string? firstString, char?[]? chars) . Concatenates specified string fir characters . string? Concat(char? firstChar, string[]? strings) . Concatenate specific character with strings . string? Concat(object[]? objects) . Concatenates the specified strings . string? Concat&lt;T&gt;(T[]? objects) . Concatenates the specified strings . bool? Contains(string? content, string? what) . Determine whether the string contains the specified value . int? IndexOf(string? value, string? text) . Position of the first occurrence of the specified value . string? Soundex(string? value) . Computes soundex for the specified value . bool HasFuzzyMatchedWord(string text, string word, string separator) . Matches the specified text by splitting it with separator and applying fuzzy comparison . bool HasWordThatHasSmallerLevenshteinDistanceThan(string text, string word, int distance, string separator) . Matches the specified text by splitting it with separator and applying fuzzy comparison with a given distance . bool HasWordThatSoundLike(string text, string word, string separator) . Matches whether the specified word is present after being fuzzified within the specified text . bool HasTextThatSoundLikeSentence(string text, string sentence, string separator) . Matches whether the specified text is present in sentence after being fuzified . string? ToUpper(string value) . Makes the string uppercase . string? ToUpper(string value, string culture) . Makes the string uppercase within specified culture . string? ToUpperInvariant(string value) . Makes the string uppercase . string? ToLower(string value) . Makes the string lowercase . string? ToLower(string value, string culture) . Makes the string lowercase within specified culture . string? ToLowerInvariant(string value) . Makes the string lowercase . string? PadLeft(string? value, string? character, int? totalWidth) . Returns a new string that right-aligns the characters in this instance by padding them on the left with a specified Unicode character, for a specified total lengt . string? PadRight(string? value, string? character, int? totalWidth) . Returns a new string that left-aligns the characters in this instance by padding them on the right with a specified Unicode character, for a specified total length . string? Head(string? value, int? length) . Gets the first N characters of the string . string? Tail(string? value, int? length) . Gets the last N characters of the string . int? LevenshteinDistance(string? firstValue, string? secondValue) . Computes the Levenshtein distance between two strings . char? GetCharacterOf(string value, int index) . Gets the character at specified index . string? Reverse(string? value) . Reverses the string . string[] Split(string value, string[] separators) . Splits the string into an array of substrings based on the specified separators . char[] ToCharArray(string value) . Splits the string into an array of characters . string? LongestCommonSubstring(string source, string pattern) . Computes the longest common subsequence between two source and pattern . string Replicate(string value, int integer) . Clones the value n times . string? Translate(string? value, string? characters, string? translations) . Returns the string from the first argument after the characters specified in the second argument are translated into the characters specified in the third argument. string? Replace(string? text, string lookFor, string? changeTo) . Replaces the first occurrence of a specified string in this instance with another specified string . string? ToTitleCase(string? value) . Capitalizes the first letter of the string . string? GetNthWord(string? text, int? wordIndex, string? separator) . Gets the nth word of the string . string? GetFirstWord(string text, string separator) . Gets the first word of the string . string? GetSecondWord(string text, string separator) . Gets the second word of the string . string? GetThirdWord(string text, string separator) . Gets the third word of the string . string? GetLastWord(string? text, string? separator) . Gets last word of the string . bool? IsNullOrEmpty(string? value) . Determines whether the string is null or empty . bool? IsNullOrWhiteSpace(string? value) . Determines whether the string is null or whitespace . string? UrlEncode(string? value) . Encodes the value . string? UrlDecode(string? value) . Decodes the value . string? UriEncode(string? value) . Encodes the value . string? UriDecode(string? value) . Decodes the value . bool? StartsWith(string? value, string? prefix) . Determines whether the string starts with the specified prefix . bool? StartsWith(string? value, string? prefix, string comparison) . Determines whether the string starts with the specified prefix . bool? EndsWith(string? value, string? suffix) . Determines whether the string ends with the specified suffix . bool? EndsWith(string? value, string? suffix, string comparison) . Determines whether the string ends with the specified suffix . string? RegexReplace(string? value, string? pattern, string? replacement) . Replace the specified value part that matches the pattern with the replacement . string[]? SplitByLinuxNewLines(string? input) . Split string by Linux-style newlines (\\n) . string[]? SplitByWindowsNewLines(string? input) . Split string by Windows-style newlines (\\r\\n) . string[]? SplitByNewLines(string? input) . Smart split that handles both Windows (\\r\\n) and Linux (\\n) newlines . Decimal Sum(string name) . Gets the sum value of a given group. Decimal Sum(string name, int parent) . Gets the sum value of a given group. Decimal SumIncome(string name) . Gets the sum value of a given group. Decimal SumIncome(string name, int parent) . Gets the sum value of a given group. Decimal SumOutcome(string name) . Gets the outcome value of a given group. Decimal SumOutcome(string name, int parent) . Gets the outcome value of a given group. TimeSpan? SumTimeSpan(string name) . Gets the sum value of a given group. TimeSpan? SumTimeSpan(string name, int parent) . Gets the sum value of a given group. TimeSpan? MinTimeSpan(string name) . Gets the min value of a given group. TimeSpan? MinTimeSpan(string name, int parent) . Gets the min value of a given group. TimeSpan? MaxTimeSpan(string name) . Gets the max value of a given group. TimeSpan? MaxTimeSpan(string name, int parent) . Gets the min value of a given group. char? ToChar(string? value) . Converts given value to character . char? ToChar(int? value) . Converts given value to character . char? ToChar(short? value) . Converts given value to character . char? ToChar(byte? value) . Converts given value to character . char? ToChar(object? value) . Converts given value to character . DateTime? ToDateTime(string value) . Converts given value to DateTime . DateTime? ToDateTime(string value, string culture) . Converts given value to DateTime . Decimal? ToDecimal(string? value) . Converts given value to decimal . Decimal? ToDecimal(string value, string culture) . Converts given value to decimal withing given culture . Decimal? ToDecimal(byte? value) . Converts given value to Decimal . Decimal? ToDecimal(sbyte? value) . Converts given value to Decimal . Decimal? ToDecimal(short? value) . Converts given value to Decimal . Decimal? ToDecimal(ushort? value) . Converts given value to Decimal . Decimal? ToDecimal(long? value) . Converts given value to Decimal . Decimal? ToDecimal(ulong? value) . Converts given value to Decimal . Decimal? ToDecimal(float? value) . Converts given value to Decimal . Decimal? ToDecimal(double? value) . Converts given value to Decimal . Decimal? ToDecimal(object? value) . Converts given value to Decimal . double? ToDouble(object? value) . Converts given value to double . double? ToDouble(string? value) . Converts given value to double . double? ToDouble(byte? value) . Converts given value to double . double? ToDouble(sbyte? value) . Converts given value to double . double? ToDouble(short? value) . Converts given value to double . double? ToDouble(ushort? value) . Converts given value to double . double? ToDouble(int? value) . Converts given value to double . double? ToDouble(uint? value) . Converts given value to double . double? ToDouble(long? value) . Converts given value to double . double? ToDouble(ulong? value) . Converts given value to double . double? ToDouble(float? value) . Converts given value to double . double? ToDouble(double? value) . Converts given value to double . double? ToDouble(Decimal? value) . Converts given value to double . float? ToFloat(string? value) . Converts given value to float . float? ToFloat(byte? value) . Converts given value to float . float? ToFloat(sbyte? value) . Converts given value to float . float? ToFloat(short? value) . Converts given value to float . float? ToFloat(ushort? value) . Converts given value to float . float? ToFloat(int? value) . Converts given value to float . float? ToFloat(uint? value) . Converts given value to float . float? ToFloat(long? value) . Converts given value to float . float? ToFloat(ulong? value) . Converts given value to float . float? ToFloat(float? value) . Converts given value to float . float? ToFloat(Decimal? value) . Converts given value to float . int? ToInt32(string value) . Converts given value to int . int? ToInt32(byte? value) . Converts given value to int . int? ToInt32(sbyte? value) . Converts given value to int . int? ToInt32(short? value) . Converts given value to int . int? ToInt32(ushort? value) . Converts given value to int . int? ToInt32(int? value) . Converts given value to int . int? ToInt32(uint? value) . Converts given value to int . int? ToInt32(long? value) . Converts given value to int . int? ToInt32(ulong? value) . Converts given value to int . int? ToInt32(float? value) . Converts given value to int . int? ToInt32(double? value) . Converts given value to int . int? ToInt32(Decimal? value) . Converts given value to int . int? ToInt32(object? value) . Converts given value to int . long? ToInt64(string value) . Converts given value to Int64 . long? ToInt64(byte? value) . Converts given value to long . long? ToInt64(sbyte? value) . Converts given value to long . long? ToInt64(short? value) . Converts given value to long . long? ToInt64(ushort? value) . Converts given value to long . long? ToInt64(int? value) . Converts given value to long . long? ToInt64(uint? value) . Converts given value to long . long? ToInt64(long? value) . Converts given value to long . long? ToInt64(ulong? value) . Converts given value to long . long? ToInt64(float? value) . Converts given value to long . long? ToInt64(double? value) . Converts given value to long . long? ToInt64(Decimal? value) . Converts given value to long . long? ToInt64(object? value) . Converts given value to long . string? ToString(char? value) . Converts given value to string . string? ToString(DateTimeOffset? value) . Converts given value to string . string? ToString(DateTimeOffset? value, string format) . Converts given value to string . string? ToString(byte? value) . Converts given value to string . string? ToString(byte? value, string format) . Converts given value to string . string? ToString(sbyte? value) . Converts given value to string . string? ToString(sbyte? value, string format) . Converts given value to string . string? ToString(int? value) . Converts given value to string . string? ToString(int? value, string format) . Converts given value to string . string? ToString(uint? value) . Converts given value to string . string? ToString(uint? value, string format) . Converts given value to string . string? ToString(long? value) . Converts given value to string . string? ToString(long? value, string format) . Converts given value to string . string? ToString(ulong? value) . Converts given value to string . string? ToString(ulong? value, string format) . Converts given value to string . string? ToString(float? value) . Converts given value to string . string? ToString(float? value, string format) . Converts given value to string . string? ToString(double? value) . Converts given value to string . string? ToString(double? value, string format) . Converts given value to string . string? ToString(Decimal? value) . Converts given value to string . string? ToString(Decimal? value, string format) . Converts given value to string . string? ToString(bool? value) . Converts given value to string . string? ToString(object? value) . Converts given value to string . string? ToString&lt;T&gt;(T? value) . Converts given value to string . string ToString(string[] value) . Converts given value to string . string ToString&lt;T&gt;(T[] value) . Converts given value to string . TimeSpan? ToTimeSpan(string value) . Converts given value to TimeSpan . TimeSpan? ToTimeSpan(string value, string culture) . Converts given value to TimeSpan . IEnumerable&lt;T&gt; Window&lt;T&gt;(string name) . Gets the window . ",
    "url": "/data-sources/roslyn/linux-x64.html#base-methods",
    
    "relUrl": "/data-sources/roslyn/linux-x64.html#base-methods"
  },"206": {
    "doc": "Linux X64",
    "title": "Linux X64",
    "content": " ",
    "url": "/data-sources/roslyn/linux-x64.html",
    
    "relUrl": "/data-sources/roslyn/linux-x64.html"
  },"207": {
    "doc": "Linux X64",
    "title": "Musoq.DataSources.Docker",
    "content": "Provides schema to work with docker containers, images, networks and volumes. ",
    "url": "/data-sources/Docker/linux-x64.html#musoqdatasourcesdocker",
    
    "relUrl": "/data-sources/Docker/linux-x64.html#musoqdatasourcesdocker"
  },"208": {
    "doc": "Linux X64",
    "title": "Tables",
    "content": "Table is a collection of rows and columns that the plugin exposes. Below are the tables that are exposed by this data source. docker.containers() . Gets containers of local docker . | Name | Type | Description | . | ID | string | Container ID | . | Names | IList&lt;string&gt; | Container names | . | Image | string | Image name | . | ImageID | string | Image ID | . | Command | string | Command the container run on with | . | Created | string | Container created datetime | . | Ports | IList&lt;string&gt; | Mapped ports | . | SizeRw | long | Size of the created or changed files | . | SizeRootFs | long | Total size of all files in the container | . | Labels | IDictionary&lt;string, string&gt; | Assigned labels to specific container | . | Status | string | Status of the container | . | NetworkSettings | SummaryNetworkSettings | Network settings | . | Mounts | IList&lt;MountPoint&gt; | Mounted points | . | FlattenPorts | string | Mapped ports as a string with comma delimiter | . docker.images() . Gets images of local docker . | Name | Type | Description | . | Containers | long | Number of containers | . | Created | DateTime | Creation time | . | ID | string | Unique identifier | . | Labels | IDictionary&lt;string, string&gt; | Set of labels | . | ParentID | string | Parent’s unique identifier | . | RepoDigests | IList&lt;string&gt; | List of repository digests | . | RepoTags | IList&lt;string&gt; | List of repository tags | . | SharedSize | long | Shared size in bytes | . | Size | long | Size in bytes | . | VirtualSize | long | Virtual size in bytes | . docker.volumes() . Gets volumes of local docker . | Name | Type | Description | . | CreatedAt | string | Creation time of the volume | . | Driver | string | Driver used for the volume | . | Labels | IDictionary&lt;string, string&gt; | Set of labels for the volume | . | Mountpoint | string | Mount point for the volume | . | Name | string | Name of the volume | . | Options | IDictionary&lt;string, string&gt; | Set of options for the volume | . | Scope | string | Scope of the volume | . | Status | IDictionary&lt;string, string&gt; | Status information for the volume | . | UsageData | VolumeUsageData | Usage data for the volume | . docker.networks() . Gets networks of local docker . | Name | Type | Description | . | Name | string | Name of the network | . | ID | string | Unique identifier of the network | . | Created | DateTime | Creation time of the network | . | Scope | string | Scope of the network | . | Driver | string | Driver used for the network | . | EnableIPv6 | bool | Flag indicating if IPv6 is enabled | . | IPAM | IPAM | IP Address Management specification | . | Internal | bool | Flag indicating if the network is internal | . | Attachable | bool | Flag indicating if the network is attachable | . | Ingress | bool | Flag indicating if the network is ingress | . | ConfigFrom | ConfigReference | Network configuration source | . | ConfigOnly | bool | Flag indicating if the network is configuration only | . | Containers | IDictionary&lt;string, EndpointResource&gt; | Dictionary of connected containers | . | Options | IDictionary&lt;string, string&gt; | Set of options for the network | . | Labels | IDictionary&lt;string, string&gt; | Set of labels for the network | . | Peers | IList&lt;PeerInfo&gt; | List of network peers | . | Services | IDictionary&lt;string, ServiceInfo&gt; | Dictionary of network services | . ",
    "url": "/data-sources/Docker/linux-x64.html#tables",
    
    "relUrl": "/data-sources/Docker/linux-x64.html#tables"
  },"209": {
    "doc": "Linux X64",
    "title": "Base Methods",
    "content": "Base methods are methods that can be called on the data source specific column. Those methods are automatically inherited and enriches the data source specific methods. Below are those base methods that are exposed by this data source. int RowNumber() . Gets the row number of the current row. string? GetTypeName(object? obj) . Gets the typename of passed object. string AggregateValues(string name) . Aggregates values into a single value. string AggregateValues(string name, int parent) . Aggregates values into a single value. Decimal Avg(string name) . Gets the aggregated average value from the given group name . Decimal Avg(string name, int parent) . Gets the aggregated average value from the given group name . byte? ShiftLeft(byte? value, int shift) . Shifts the value to the left by the specified number of bits. short? ShiftLeft(short? value, int shift) . Shifts the value to the left by the specified number of bits. int? ShiftLeft(int? value, int shift) . Shifts the value to the left by the specified number of bits. long? ShiftLeft(long? value, int shift) . Shifts the value to the left by the specified number of bits. sbyte? ShiftLeft(sbyte? value, int shift) . Shifts the value to the left by the specified number of bits. ushort? ShiftLeft(ushort? value, int shift) . Shifts the value to the left by the specified number of bits. uint? ShiftLeft(uint? value, int shift) . Shifts the value to the left by the specified number of bits. ulong? ShiftLeft(ulong? value, int shift) . Shifts the value to the left by the specified number of bits. byte? ShiftRight(byte? value, int shift) . Shifts the value to the right by the specified number of bits. short? ShiftRight(short? value, int shift) . Shifts the value to the right by the specified number of bits. int? ShiftRight(int? value, int shift) . Shifts the value to the right by the specified number of bits. long? ShiftRight(long? value, int shift) . Shifts the value to the right by the specified number of bits. sbyte? ShiftRight(sbyte? value, int shift) . Shifts the value to the right by the specified number of bits. ushort? ShiftRight(ushort? value, int shift) . Shifts the value to the right by the specified number of bits. uint? ShiftRight(uint? value, int shift) . Shifts the value to the right by the specified number of bits. ulong? ShiftRight(ulong? value, int shift) . Shifts the value to the right by the specified number of bits. byte? Not(byte? value) . Performs bitwise NOT operation on a given value. short? Not(short? value) . Performs bitwise NOT operation on a given value. int? Not(int? value) . Performs bitwise NOT operation on a given value. long? Not(long? value) . Performs bitwise NOT operation on a given value. sbyte? Not(sbyte? value) . Performs bitwise NOT operation on a given value. ushort? Not(ushort? value) . Performs bitwise NOT operation on a given value. uint? Not(uint? value) . Performs bitwise NOT operation on a given value. ulong? Not(ulong? value) . Performs bitwise NOT operation on a given value. byte? And(byte? left, byte? right) . Performs bitwise AND operation on two given values. int? And(byte? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(byte? left, short? right) . Performs bitwise AND operation on two given values. int? And(byte? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(byte? left, int? right) . Performs bitwise AND operation on two given values. uint? And(byte? left, uint? right) . Performs bitwise AND operation on two given values. long? And(byte? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(byte? left, ulong? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, byte? right) . Performs bitwise AND operation on two given values. sbyte? And(sbyte? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, short? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, int? right) . Performs bitwise AND operation on two given values. uint? And(sbyte? left, uint? right) . Performs bitwise AND operation on two given values. long? And(sbyte? left, long? right) . Performs bitwise AND operation on two given values. int? And(short? left, byte? right) . Performs bitwise AND operation on two given values. int? And(short? left, sbyte? right) . Performs bitwise AND operation on two given values. short? And(short? left, short? right) . Performs bitwise AND operation on two given values. int? And(short? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(short? left, int? right) . Performs bitwise AND operation on two given values. uint? And(short? left, uint? right) . Performs bitwise AND operation on two given values. long? And(short? left, long? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, byte? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, short? right) . Performs bitwise AND operation on two given values. ushort? And(ushort? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, int? right) . Performs bitwise AND operation on two given values. uint? And(ushort? left, uint? right) . Performs bitwise AND operation on two given values. long? And(ushort? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(ushort? left, ulong? right) . Performs bitwise AND operation on two given values. int? And(int? left, byte? right) . Performs bitwise AND operation on two given values. int? And(int? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(int? left, short? right) . Performs bitwise AND operation on two given values. int? And(int? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(int? left, int? right) . Performs bitwise AND operation on two given values. uint? And(int? left, uint? right) . Performs bitwise AND operation on two given values. long? And(int? left, long? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, uint? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, byte? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, sbyte? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, short? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, ushort? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, int? right) . Performs bitwise AND operation on two given values. ulong? And(uint? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(uint? left, ulong? right) . Performs bitwise AND operation on two given values. long? And(long? left, long? right) . Performs bitwise AND operation on two given values. long? And(long? left, byte? right) . Performs bitwise AND operation on two given values. long? And(long? left, sbyte? right) . Performs bitwise AND operation on two given values. long? And(long? left, short? right) . Performs bitwise AND operation on two given values. long? And(long? left, ushort? right) . Performs bitwise AND operation on two given values. long? And(long? left, int? right) . Performs bitwise AND operation on two given values. long? And(long? left, uint? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, byte? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, ushort? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, uint? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, ulong? right) . Performs bitwise AND operation on two given values. byte? Or(byte? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, short? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(byte? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(byte? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(byte? left, ulong? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, byte? right) . Performs bitwise OR operation on two given values. sbyte? Or(sbyte? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, short? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(sbyte? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(sbyte? left, long? right) . Performs bitwise OR operation on two given values. int? Or(short? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(short? left, sbyte? right) . Performs bitwise OR operation on two given values. short? Or(short? left, short? right) . Performs bitwise OR operation on two given values. int? Or(short? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(short? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(short? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(short? left, long? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, short? right) . Performs bitwise OR operation on two given values. ushort? Or(ushort? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(ushort? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(ushort? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(ushort? left, ulong? right) . Performs bitwise OR operation on two given values. int? Or(int? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(int? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(int? left, short? right) . Performs bitwise OR operation on two given values. int? Or(int? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(int? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(int? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(int? left, long? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, uint? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, byte? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, sbyte? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, short? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, ushort? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, int? right) . Performs bitwise OR operation on two given values. ulong? Or(uint? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(uint? left, ulong? right) . Performs bitwise OR operation on two given values. long? Or(long? left, long? right) . Performs bitwise OR operation on two given values. long? Or(long? left, byte? right) . Performs bitwise OR operation on two given values. long? Or(long? left, sbyte? right) . Performs bitwise OR operation on two given values. long? Or(long? left, short? right) . Performs bitwise OR operation on two given values. long? Or(long? left, ushort? right) . Performs bitwise OR operation on two given values. long? Or(long? left, int? right) . Performs bitwise OR operation on two given values. long? Or(long? left, uint? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, byte? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, ushort? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, uint? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, ulong? right) . Performs bitwise OR operation on two given values. byte? Xor(byte? left, byte? right) . Performs bitwise OR operation on two given values. int? Xor(byte? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(byte? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(byte? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(byte? left, ulong? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, byte? right) . Performs bitwise Xor operation on two given values. sbyte? Xor(sbyte? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(sbyte? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(sbyte? left, long? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, sbyte? right) . Performs bitwise Xor operation on two given values. short? Xor(short? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, ushort? right) . Performs bitwise XOR operation on two given values. int? Xor(short? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(short? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(short? left, long? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, short? right) . Performs bitwise Xor operation on two given values. ushort? Xor(ushort? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(ushort? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(ushort? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ushort? left, ulong? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(int? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(int? left, long? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, uint? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, byte? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, sbyte? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, short? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, ushort? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, int? right) . Performs bitwise Xor operation on two given values. ulong? Xor(uint? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(uint? left, ulong? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, long? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, byte? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, sbyte? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, short? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, ushort? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, int? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, uint? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, ulong? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, byte? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, ushort? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, uint? right) . Performs bitwise Xor operation on two given values. byte[] GetBytes(string? content) . Gets the bytes from the given string. byte[] GetBytes(string? content, int length, int offset) . Gets the bytes from the given string within given offset and length. byte?[]? GetBytes(char? character) . Gets the bytes from the given character. byte?[]? GetBytes(bool? bit) . Gets the bytes from the given boolean. byte?[]? GetBytes(long? value) . Gets the bytes from the given long. byte?[]? GetBytes(int? value) . Gets the bytes from the given int. byte?[]? GetBytes(short? value) . Gets the bytes from the given short. byte?[]? GetBytes(ulong? value) . Gets the bytes from the given ulong. byte?[]? GetBytes(ushort? value) . Gets the bytes from the given ushort. byte?[]? GetBytes(uint? value) . Gets the bytes from the given uint. byte?[]? GetBytes(Decimal? value) . Gets the bytes from the given decimal. byte?[]? GetBytes(double? value) . Gets the bytes from the given double. byte?[]? GetBytes(float? value) . Gets the bytes from the given float. string? ToBin(byte?[]? bytes, string delimiter) . Converts given bytes to binary with defined delimiter . string ToBin&lt;T&gt;(T value) . Converts given value to binary . string ToOcta&lt;T&gt;(T value) . Converts given value to octal . string ToDec&lt;T&gt;(T value) . Converts given value to decimal . string ToBase64(byte[] value) . Converts given value to string . string ToBase64(byte[] value, int offset, int length) . Converts given array of bytes to string . byte[] FromBase64(string value) . Converts given string to bytes array . bool FromBytesToBool(byte[] value) . Converts bytes to boolean value. short FromBytesToInt16(byte[] value) . Converts bytes to a 16-bit signed integer. ushort FromBytesToUInt16(byte[] value) . Converts bytes to a 16-bit unsigned integer. int FromBytesToInt32(byte[] value) . Converts bytes to a 32-bit signed integer. uint FromBytesToUInt32(byte[] value) . Converts bytes to a 32-bit unsigned integer. long FromBytesToInt64(byte[] value) . Converts bytes to a 64-bit signed integer. ulong FromBytesToUInt64(byte[] value) . Converts bytes to a 64-bit unsigned integer. float FromBytesToFloat(byte[] value) . Converts bytes to a float value. double FromBytesToDouble(byte[] value) . Converts bytes to a float value. string FromBytesToString(byte[] value) . Converts bytes to a string. byte[] ToBytes(bool value) . Converts boolean value to bytes. byte[] ToBytes(short value) . Converts short value to bytes. byte[] ToBytes(ushort value) . Converts ushort value to bytes. byte[] ToBytes(int value) . Converts int value to bytes. byte[] ToBytes(uint value) . Converts uint value to bytes. byte[] ToBytes(long value) . Converts long value to bytes. byte[] ToBytes(ulong value) . Converts long value to bytes. string? ToHex(byte?[]? bytes, string delimiter) . Converts given bytes to hex with defined delimiter . string? ToHex&lt;T&gt;(T value) . Converts given value to binary . int Count(string name) . Gets the count value of a given group. int Count(string name, int parent) . Gets the count value of a given group. int ExtractFromDate(string? date, string partOfDate) . Extracts part of the date from the date . int ExtractFromDate(string date, string culture, string partOfDate) . Extracts part of the date from the date based on given culture . DateTimeOffset? GetDate() . Gets the current datetime . DateTimeOffset? UtcGetDate() . Gets the current datetime in UTC . int? Month(DateTimeOffset? value) . Gets the month from DateTimeOffset . int? Year(DateTimeOffset? value) . Gets the year from DateTimeOffset . int? Day(DateTimeOffset? value) . Gets the day from DateTimeOffset . int? Hour(DateTimeOffset? value) . Gets the hour from DateTimeOffset . int? Minute(DateTimeOffset? value) . Gets the minute from DateTimeOffset . int? Second(DateTimeOffset? value) . Gets the second from DateTimeOffset . int? Milliseconds(DateTimeOffset? value) . Gets the millisecond from DateTimeOffset . int? DayOfWeek(DateTimeOffset? value) . Gets the day of week from DateTimeOffset . TimeSpan? ExtractTimeSpan(DateTimeOffset? dateTimeOffset) . Extracts time from DateTimeOffset . DateTime? ToDateTimeOffset(string value) . Converts given value to DateTimeOffset . DateTimeOffset? ToDateTimeOffset(string value, string culture) . Converts given value to DateTimeOffset . IEnumerable&lt;T&gt;? Skip&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? skipCount) . Skips elements from the beginning of the sequence. IEnumerable&lt;T&gt;? Take&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? takeCount) . Takes elements from the beginning of the sequence. IEnumerable&lt;T&gt;? SkipAndTake&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? skipCount, int? takeCount) . Skip and takes elements from the beginning of the sequence. T[]? EnumerableToArray&lt;T&gt;(IEnumerable&lt;T&gt;? values) . Turn array arguments of T into a single array. T[]? MergeArrays&lt;T&gt;(T[][]? values) . Turn array arguments of T into a single array. IEnumerable&lt;T&gt;? LongestCommonSequence&lt;T&gt;(IEnumerable&lt;T&gt;? source, IEnumerable&lt;T&gt;? pattern) . Computes longest common sequence of two given sequences . T? GetElementAtOrDefault&lt;T&gt;(IEnumerable&lt;T&gt;? enumerable, int? index) . Gets the element at the specified index in a sequence . int? Length&lt;T&gt;(IEnumerable&lt;T&gt;? enumerable) . Gets the length of the sequence . int? Length&lt;T&gt;(T[]? array) . Gets the length of the array . T? Choose&lt;T&gt;(int? index, T[] values) . Gets the value of an array at the specified index . T If&lt;T&gt;(bool expressionResult, T a, T b) . Chose a or b value based on the expression result . bool? Match(string? regex, string? content) . Determine whether content matches the specified pattern . byte? Coalesce(byte?[] array) . Gets the first non-null value in a list . sbyte? Coalesce(sbyte?[] array) . Gets the first non-null value in a list . short? Coalesce(short?[] array) . Gets the first non-null value in a list . ushort? Coalesce(ushort?[] array) . Gets the first non-null value in a list . int? Coalesce(int?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(uint?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(long?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(ulong?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(Decimal?[] array) . Gets the first non-null value in a list . T? Coalesce&lt;T&gt;(T[] array) . Gets the first non-null value in a list . IEnumerable&lt;T&gt;? Distinct&lt;T&gt;(IEnumerable&lt;T&gt;? values) . Returns distinct elements from a collection. string? Md5(string? content) . Gets the md5 hash of the given string. string? Md5(byte?[]? content) . Gets the md5 hash of the given bytes array. string? Sha1(string? content) . Gets the sha256 hash of the given string. string? Sha1(byte?[]? content) . Gets the sha256 hash of the given bytes array. string? Sha256(string? content) . Gets the sha256 hash of the given string. string? Sha256(byte?[]? content) . Gets the sha256 hash of the given bytes array. string? Sha512(string? content) . Gets the sha256 hash of the given string. string? Sha512(byte?[]? content) . Gets the sha256 hash of the bytes array. string? ToJson&lt;T&gt;(T? obj) . Converts object to json. string[] ExtractFromJsonToArray(string? json, string? path) . Extracts values from json by path. string? ExtractFromJson(string? json, string? path) . Extracts values from json by path and joins them with comma. Decimal? Abs(Decimal? value) . Gets the absolute value . long? Abs(long? value) . Gets the absolute value . int? Abs(int? value) . Gets the absolute value . Decimal? Ceil(Decimal? value) . Gets the ceiling value . Decimal? Floor(Decimal? value) . Gets the floor value . Decimal? Sign(Decimal? value) . Determine whether value is greater, equal or less that zero . long? Sign(long? value) . Determine whether value is greater, equal or less that zero . Decimal? Round(Decimal? value, int precision) . Rounds the value within given precision . Decimal? PercentOf(Decimal? value, Decimal? max) . Gets the percentage of the value . int Rand() . Gets the random integer value . int? Rand(int? min, int? max) . Gets the random integer value . double? Pow(Decimal? x, Decimal? y) . Computes the pow between two values . double? Pow(double? x, double? y) . Computes the pow between two values . double? Sqrt(Decimal? x) . Computes the sqrt of a given value . double? Sqrt(double? x) . Computes the sqrt of a given value . double? Sqrt(long? x) . Computes the sqrt of a given value . double? PercentRank&lt;T&gt;(IEnumerable&lt;T&gt;? window, T? value) . Computes the percent rank of a given window . double? Log(Decimal? base, Decimal? value) . Calculates the logarithm of a value with a specified base. Decimal? Sin(Decimal? value) . Calculates sine of a value. double? Sin(double? value) . Calculates sine of a value. float? Sin(float? value) . Calculates sine of a value. Decimal? Cos(Decimal? value) . Calculates cosine of a value. double? Cos(double? value) . Calculates cosine of a value. float? Cos(float? value) . Calculates cosine of a value. Decimal Max(string name) . Gets the max value of a given group. Decimal Max(string name, int parent) . Gets the max value of a given group. Decimal Min(string name) . Gets the min value of a given group. Decimal Min(string name, int parent) . Gets the min value of a given group. Decimal StDev(string name, int parent) . Gets the StDev value of a given group. string NewId() . Gets the new identifier . string? Trim(string? value) . Removes leading and trailing whitespace from a string. string? TrimStart(string? value) . Removes leading whitespace from a string. string? TrimEnd(string? value) . Removes trailing whitespace from a string. string? Substring(string? value, int? index, int? length) . Gets the substring from the string. string? Substring(string value, int? length) . Gets the substring from the string . string? Concat(string[]? strings) . Concatenates the specified values . string? Concat(char?[]? characters) . Concatenates the specified characters . string? Concat(string? firstString, char?[]? chars) . Concatenates specified string fir characters . string? Concat(char? firstChar, string[]? strings) . Concatenate specific character with strings . string? Concat(object[]? objects) . Concatenates the specified strings . string? Concat&lt;T&gt;(T[]? objects) . Concatenates the specified strings . bool? Contains(string? content, string? what) . Determine whether the string contains the specified value . int? IndexOf(string? value, string? text) . Position of the first occurrence of the specified value . string? Soundex(string? value) . Computes soundex for the specified value . bool HasFuzzyMatchedWord(string text, string word, string separator) . Matches the specified text by splitting it with separator and applying fuzzy comparison . bool HasWordThatHasSmallerLevenshteinDistanceThan(string text, string word, int distance, string separator) . Matches the specified text by splitting it with separator and applying fuzzy comparison with a given distance . bool HasWordThatSoundLike(string text, string word, string separator) . Matches whether the specified word is present after being fuzzified within the specified text . bool HasTextThatSoundLikeSentence(string text, string sentence, string separator) . Matches whether the specified text is present in sentence after being fuzified . string? ToUpper(string value) . Makes the string uppercase . string? ToUpper(string value, string culture) . Makes the string uppercase within specified culture . string? ToUpperInvariant(string value) . Makes the string uppercase . string? ToLower(string value) . Makes the string lowercase . string? ToLower(string value, string culture) . Makes the string lowercase within specified culture . string? ToLowerInvariant(string value) . Makes the string lowercase . string? PadLeft(string? value, string? character, int? totalWidth) . Returns a new string that right-aligns the characters in this instance by padding them on the left with a specified Unicode character, for a specified total lengt . string? PadRight(string? value, string? character, int? totalWidth) . Returns a new string that left-aligns the characters in this instance by padding them on the right with a specified Unicode character, for a specified total length . string? Head(string? value, int? length) . Gets the first N characters of the string . string? Tail(string? value, int? length) . Gets the last N characters of the string . int? LevenshteinDistance(string? firstValue, string? secondValue) . Computes the Levenshtein distance between two strings . char? GetCharacterOf(string value, int index) . Gets the character at specified index . string? Reverse(string? value) . Reverses the string . string[] Split(string value, string[] separators) . Splits the string into an array of substrings based on the specified separators . char[] ToCharArray(string value) . Splits the string into an array of characters . string? LongestCommonSubstring(string source, string pattern) . Computes the longest common subsequence between two source and pattern . string Replicate(string value, int integer) . Clones the value n times . string? Translate(string? value, string? characters, string? translations) . Returns the string from the first argument after the characters specified in the second argument are translated into the characters specified in the third argument. string? Replace(string? text, string lookFor, string? changeTo) . Replaces the first occurrence of a specified string in this instance with another specified string . string? ToTitleCase(string? value) . Capitalizes the first letter of the string . string? GetNthWord(string? text, int? wordIndex, string? separator) . Gets the nth word of the string . string? GetFirstWord(string text, string separator) . Gets the first word of the string . string? GetSecondWord(string text, string separator) . Gets the second word of the string . string? GetThirdWord(string text, string separator) . Gets the third word of the string . string? GetLastWord(string? text, string? separator) . Gets last word of the string . bool? IsNullOrEmpty(string? value) . Determines whether the string is null or empty . bool? IsNullOrWhiteSpace(string? value) . Determines whether the string is null or whitespace . string? UrlEncode(string? value) . Encodes the value . string? UrlDecode(string? value) . Decodes the value . string? UriEncode(string? value) . Encodes the value . string? UriDecode(string? value) . Decodes the value . bool? StartsWith(string? value, string? prefix) . Determines whether the string starts with the specified prefix . bool? StartsWith(string? value, string? prefix, string comparison) . Determines whether the string starts with the specified prefix . bool? EndsWith(string? value, string? suffix) . Determines whether the string ends with the specified suffix . bool? EndsWith(string? value, string? suffix, string comparison) . Determines whether the string ends with the specified suffix . string? RegexReplace(string? value, string? pattern, string? replacement) . Replace the specified value part that matches the pattern with the replacement . string[]? SplitByLinuxNewLines(string? input) . Split string by Linux-style newlines (\\n) . string[]? SplitByWindowsNewLines(string? input) . Split string by Windows-style newlines (\\r\\n) . string[]? SplitByNewLines(string? input) . Smart split that handles both Windows (\\r\\n) and Linux (\\n) newlines . Decimal Sum(string name) . Gets the sum value of a given group. Decimal Sum(string name, int parent) . Gets the sum value of a given group. Decimal SumIncome(string name) . Gets the sum value of a given group. Decimal SumIncome(string name, int parent) . Gets the sum value of a given group. Decimal SumOutcome(string name) . Gets the outcome value of a given group. Decimal SumOutcome(string name, int parent) . Gets the outcome value of a given group. TimeSpan? SumTimeSpan(string name) . Gets the sum value of a given group. TimeSpan? SumTimeSpan(string name, int parent) . Gets the sum value of a given group. TimeSpan? MinTimeSpan(string name) . Gets the min value of a given group. TimeSpan? MinTimeSpan(string name, int parent) . Gets the min value of a given group. TimeSpan? MaxTimeSpan(string name) . Gets the max value of a given group. TimeSpan? MaxTimeSpan(string name, int parent) . Gets the min value of a given group. char? ToChar(string? value) . Converts given value to character . char? ToChar(int? value) . Converts given value to character . char? ToChar(short? value) . Converts given value to character . char? ToChar(byte? value) . Converts given value to character . char? ToChar(object? value) . Converts given value to character . DateTime? ToDateTime(string value) . Converts given value to DateTime . DateTime? ToDateTime(string value, string culture) . Converts given value to DateTime . Decimal? ToDecimal(string? value) . Converts given value to decimal . Decimal? ToDecimal(string value, string culture) . Converts given value to decimal withing given culture . Decimal? ToDecimal(byte? value) . Converts given value to Decimal . Decimal? ToDecimal(sbyte? value) . Converts given value to Decimal . Decimal? ToDecimal(short? value) . Converts given value to Decimal . Decimal? ToDecimal(ushort? value) . Converts given value to Decimal . Decimal? ToDecimal(long? value) . Converts given value to Decimal . Decimal? ToDecimal(ulong? value) . Converts given value to Decimal . Decimal? ToDecimal(float? value) . Converts given value to Decimal . Decimal? ToDecimal(double? value) . Converts given value to Decimal . Decimal? ToDecimal(object? value) . Converts given value to Decimal . double? ToDouble(object? value) . Converts given value to double . double? ToDouble(string? value) . Converts given value to double . double? ToDouble(byte? value) . Converts given value to double . double? ToDouble(sbyte? value) . Converts given value to double . double? ToDouble(short? value) . Converts given value to double . double? ToDouble(ushort? value) . Converts given value to double . double? ToDouble(int? value) . Converts given value to double . double? ToDouble(uint? value) . Converts given value to double . double? ToDouble(long? value) . Converts given value to double . double? ToDouble(ulong? value) . Converts given value to double . double? ToDouble(float? value) . Converts given value to double . double? ToDouble(double? value) . Converts given value to double . double? ToDouble(Decimal? value) . Converts given value to double . float? ToFloat(string? value) . Converts given value to float . float? ToFloat(byte? value) . Converts given value to float . float? ToFloat(sbyte? value) . Converts given value to float . float? ToFloat(short? value) . Converts given value to float . float? ToFloat(ushort? value) . Converts given value to float . float? ToFloat(int? value) . Converts given value to float . float? ToFloat(uint? value) . Converts given value to float . float? ToFloat(long? value) . Converts given value to float . float? ToFloat(ulong? value) . Converts given value to float . float? ToFloat(float? value) . Converts given value to float . float? ToFloat(Decimal? value) . Converts given value to float . int? ToInt32(string value) . Converts given value to int . int? ToInt32(byte? value) . Converts given value to int . int? ToInt32(sbyte? value) . Converts given value to int . int? ToInt32(short? value) . Converts given value to int . int? ToInt32(ushort? value) . Converts given value to int . int? ToInt32(int? value) . Converts given value to int . int? ToInt32(uint? value) . Converts given value to int . int? ToInt32(long? value) . Converts given value to int . int? ToInt32(ulong? value) . Converts given value to int . int? ToInt32(float? value) . Converts given value to int . int? ToInt32(double? value) . Converts given value to int . int? ToInt32(Decimal? value) . Converts given value to int . int? ToInt32(object? value) . Converts given value to int . long? ToInt64(string value) . Converts given value to Int64 . long? ToInt64(byte? value) . Converts given value to long . long? ToInt64(sbyte? value) . Converts given value to long . long? ToInt64(short? value) . Converts given value to long . long? ToInt64(ushort? value) . Converts given value to long . long? ToInt64(int? value) . Converts given value to long . long? ToInt64(uint? value) . Converts given value to long . long? ToInt64(long? value) . Converts given value to long . long? ToInt64(ulong? value) . Converts given value to long . long? ToInt64(float? value) . Converts given value to long . long? ToInt64(double? value) . Converts given value to long . long? ToInt64(Decimal? value) . Converts given value to long . long? ToInt64(object? value) . Converts given value to long . string? ToString(char? value) . Converts given value to string . string? ToString(DateTimeOffset? value) . Converts given value to string . string? ToString(DateTimeOffset? value, string format) . Converts given value to string . string? ToString(byte? value) . Converts given value to string . string? ToString(byte? value, string format) . Converts given value to string . string? ToString(sbyte? value) . Converts given value to string . string? ToString(sbyte? value, string format) . Converts given value to string . string? ToString(int? value) . Converts given value to string . string? ToString(int? value, string format) . Converts given value to string . string? ToString(uint? value) . Converts given value to string . string? ToString(uint? value, string format) . Converts given value to string . string? ToString(long? value) . Converts given value to string . string? ToString(long? value, string format) . Converts given value to string . string? ToString(ulong? value) . Converts given value to string . string? ToString(ulong? value, string format) . Converts given value to string . string? ToString(float? value) . Converts given value to string . string? ToString(float? value, string format) . Converts given value to string . string? ToString(double? value) . Converts given value to string . string? ToString(double? value, string format) . Converts given value to string . string? ToString(Decimal? value) . Converts given value to string . string? ToString(Decimal? value, string format) . Converts given value to string . string? ToString(bool? value) . Converts given value to string . string? ToString(object? value) . Converts given value to string . string? ToString&lt;T&gt;(T? value) . Converts given value to string . string ToString(string[] value) . Converts given value to string . string ToString&lt;T&gt;(T[] value) . Converts given value to string . TimeSpan? ToTimeSpan(string value) . Converts given value to TimeSpan . TimeSpan? ToTimeSpan(string value, string culture) . Converts given value to TimeSpan . IEnumerable&lt;T&gt; Window&lt;T&gt;(string name) . Gets the window . ",
    "url": "/data-sources/Docker/linux-x64.html#base-methods",
    
    "relUrl": "/data-sources/Docker/linux-x64.html#base-methods"
  },"210": {
    "doc": "Linux X64",
    "title": "Linux X64",
    "content": " ",
    "url": "/data-sources/Docker/linux-x64.html",
    
    "relUrl": "/data-sources/Docker/linux-x64.html"
  },"211": {
    "doc": "MacOs X64",
    "title": "Musoq.DataSources.CANBus",
    "content": "Provides schema to work with CAN bus data. ",
    "url": "/data-sources/CANBus/macos-x64.html#musoqdatasourcescanbus",
    
    "relUrl": "/data-sources/CANBus/macos-x64.html#musoqdatasourcescanbus"
  },"212": {
    "doc": "MacOs X64",
    "title": "Tables",
    "content": "Table is a collection of rows and columns that the plugin exposes. Below are the tables that are exposed by this data source. can.separatedvalues(string csvData, string dbcData, string idOfType = “dec” | “hex” | “bin”) . Treats csv, tsv or others separated values files as CAN bus records. The file must be of format Timestamp, ID, DLC, Data where Data values must be in format of unsigned integer number (123) or in hexadecimal (0x7b). Based on the loaded dbc file, you will have access access to additional column named {DBC_MESSAGE_NAME}. From here, you can access value {DBC_SIGNAL_NAME} of a message (ie. {DBC_MESSAGE_NAME}.{DBC_SIGNAL_NAME}). Returned value will be of type double . This table has a dynamic structure, which means that its columns and other details cannot be determined until runtime. As a result, it is not possible to include a complete description of this table in the documentation. Instead, the actual columns and other details of this table will be determined at runtime. However, this table has a well-known set of columns that are always present. These columns are described below. | Name | Type | Description | . | ID | uint | ID of the message entity | . | Timestamp | ulong | Timestamp of the message entity | . | Message | MessageEntity | The Message | . | IsWellKnown | uint | Whether the message is well known or not (is within dbc file) | . | DataAsBytes | byte[] | Data as bytes | . | Data | ulong | Data as ulong | . can.messages(string dbc) . Parses dbc file and returns all messages defined within it. | Name | Type | Description | . | Id | uint | ID of the message entity | . | IsExtId | bool | Is external Id | . | Name | string | Name of the message entity | . | DLC | ushort | DLC of the message entity | . | Transmitter | string | Transmitter of the message entity | . | Comment | string | Comment for the message entity | . | CycleTime | int | Cycle time for the message entity | . | Signals | SignalEntity[] | Signals of the message | . can.signals(string dbc) . Parses dbc file and returns all signals defined within it. | Name | Type | Description | . | Id | uint | Id of the signal entity | . | Name | string | Name of the signal entity | . | StartBit | ushort | Start bit of the signal entity | . | Length | ushort | Length of the signal entity | . | ByteOrder | byte | Byte order of the signal entity | . | InitialValue | double | Initial value of the signal entity | . | Factor | double | Factor for the signal entity | . | IsInteger | bool | Whether the signal entity is integer or not | . | Offset | double | Offset for the signal entity | . | Minimum | double | Minimum value for the signal entity | . | Maximum | double | Maximum value for the signal entity | . | Unit | string | Unit for the signal entity | . | Receiver | string[] | Receiver for the signal entity | . | Comment | string | Comment for the signal entity | . | Multiplexing | string | Multiplexing details for the signal entity | . | MessageName | string | Message name for the signal entity | . | ValueMap | string | Value map for the signal entity | . | MessageOrder | int | Order of signal within the message definition | . ",
    "url": "/data-sources/CANBus/macos-x64.html#tables",
    
    "relUrl": "/data-sources/CANBus/macos-x64.html#tables"
  },"213": {
    "doc": "MacOs X64",
    "title": "Private Tables",
    "content": "Private tables are tables that are not exposed by the plugin, but are available for use in queries when using CROSS / OUTER APPLY operator. ValueMapEntity[] . Represent possible values of a signal . | Name | Type | Description | . | Value | int | Value of signal | . | Name | string | Name of the value | . ",
    "url": "/data-sources/CANBus/macos-x64.html#private-tables",
    
    "relUrl": "/data-sources/CANBus/macos-x64.html#private-tables"
  },"214": {
    "doc": "MacOs X64",
    "title": "Methods",
    "content": "Methods are functions that can be called on the data source specific column. Below are the methods that are exposed by this data source. ulong EncodeMessage(string name, byte value) . Converts bytes to encoded signal of a message for CAN bus. ulong EncodeMessage(string name, short value) . Converts short to encoded signal of a message for CAN bus. ulong EncodeMessage(string name, ushort value) . Converts ushort to encoded signal of a message for CAN bus. ulong EncodeMessage(string name, int value) . Converts int to encoded signal of a message for CAN bus. ulong EncodeMessage(string name, uint value) . Converts uint to encoded signal of a message for CAN bus. ulong EncodeMessage(string name, long value) . Converts long to encoded signal of a message for CAN bus. ulong EncodeMessage(string name, ulong value) . Converts ulong to encoded signal of a message for CAN bus. ulong EncodeMessage(string name, float value) . Converts float to encoded signal of a message for CAN bus. ulong EncodeMessage(string name, double value) . Converts double to encoded signal of a message for CAN bus. ulong EncodeMessage(string jsonValues) . Converts structured json to encoded signals of a message for CAN bus. It’s structure is of { signalName1: signalValue1, ..., signalNameN : signalValueN } . double DecodeMessage(string name, byte value) . Treats byte as encoded signal of a message for CAN bus and decodes it. double DecodeMessage(string name, short value) . Treats short as encoded signal of a message for CAN bus and decodes it. double DecodeMessage(string name, ushort value) . Treats ushort as encoded signal of a message for CAN bus and decodes it. double DecodeMessage(string name, int value) . Treats int as encoded signal of a message for CAN bus and decodes it. double DecodeMessage(string name, uint value) . Treats uint as encoded signal of a message for CAN bus and decodes it. double DecodeMessage(string name, long value) . Treats long as encoded signal of a message for CAN bus and decodes it. double DecodeMessage(string name, ulong value) . Treats ulong as encoded signal of a message for CAN bus and decodes it. DateTimeOffset? FromTimestamp(ulong timestamp, string resolution) . Converts timestamp to date time offset. DateTimeOffset? ToDateTimeOffset(string date, string format) . Creates the date time offset from given date and time in a given format. ",
    "url": "/data-sources/CANBus/macos-x64.html#methods",
    
    "relUrl": "/data-sources/CANBus/macos-x64.html#methods"
  },"215": {
    "doc": "MacOs X64",
    "title": "Base Methods",
    "content": "Base methods are methods that can be called on the data source specific column. Those methods are automatically inherited and enriches the data source specific methods. Below are those base methods that are exposed by this data source. int RowNumber() . Gets the row number of the current row. string? GetTypeName(object? obj) . Gets the typename of passed object. string AggregateValues(string name) . Aggregates values into a single value. string AggregateValues(string name, int parent) . Aggregates values into a single value. Decimal Avg(string name) . Gets the aggregated average value from the given group name . Decimal Avg(string name, int parent) . Gets the aggregated average value from the given group name . byte? ShiftLeft(byte? value, int shift) . Shifts the value to the left by the specified number of bits. short? ShiftLeft(short? value, int shift) . Shifts the value to the left by the specified number of bits. int? ShiftLeft(int? value, int shift) . Shifts the value to the left by the specified number of bits. long? ShiftLeft(long? value, int shift) . Shifts the value to the left by the specified number of bits. sbyte? ShiftLeft(sbyte? value, int shift) . Shifts the value to the left by the specified number of bits. ushort? ShiftLeft(ushort? value, int shift) . Shifts the value to the left by the specified number of bits. uint? ShiftLeft(uint? value, int shift) . Shifts the value to the left by the specified number of bits. ulong? ShiftLeft(ulong? value, int shift) . Shifts the value to the left by the specified number of bits. byte? ShiftRight(byte? value, int shift) . Shifts the value to the right by the specified number of bits. short? ShiftRight(short? value, int shift) . Shifts the value to the right by the specified number of bits. int? ShiftRight(int? value, int shift) . Shifts the value to the right by the specified number of bits. long? ShiftRight(long? value, int shift) . Shifts the value to the right by the specified number of bits. sbyte? ShiftRight(sbyte? value, int shift) . Shifts the value to the right by the specified number of bits. ushort? ShiftRight(ushort? value, int shift) . Shifts the value to the right by the specified number of bits. uint? ShiftRight(uint? value, int shift) . Shifts the value to the right by the specified number of bits. ulong? ShiftRight(ulong? value, int shift) . Shifts the value to the right by the specified number of bits. byte? Not(byte? value) . Performs bitwise NOT operation on a given value. short? Not(short? value) . Performs bitwise NOT operation on a given value. int? Not(int? value) . Performs bitwise NOT operation on a given value. long? Not(long? value) . Performs bitwise NOT operation on a given value. sbyte? Not(sbyte? value) . Performs bitwise NOT operation on a given value. ushort? Not(ushort? value) . Performs bitwise NOT operation on a given value. uint? Not(uint? value) . Performs bitwise NOT operation on a given value. ulong? Not(ulong? value) . Performs bitwise NOT operation on a given value. byte? And(byte? left, byte? right) . Performs bitwise AND operation on two given values. int? And(byte? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(byte? left, short? right) . Performs bitwise AND operation on two given values. int? And(byte? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(byte? left, int? right) . Performs bitwise AND operation on two given values. uint? And(byte? left, uint? right) . Performs bitwise AND operation on two given values. long? And(byte? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(byte? left, ulong? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, byte? right) . Performs bitwise AND operation on two given values. sbyte? And(sbyte? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, short? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, int? right) . Performs bitwise AND operation on two given values. uint? And(sbyte? left, uint? right) . Performs bitwise AND operation on two given values. long? And(sbyte? left, long? right) . Performs bitwise AND operation on two given values. int? And(short? left, byte? right) . Performs bitwise AND operation on two given values. int? And(short? left, sbyte? right) . Performs bitwise AND operation on two given values. short? And(short? left, short? right) . Performs bitwise AND operation on two given values. int? And(short? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(short? left, int? right) . Performs bitwise AND operation on two given values. uint? And(short? left, uint? right) . Performs bitwise AND operation on two given values. long? And(short? left, long? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, byte? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, short? right) . Performs bitwise AND operation on two given values. ushort? And(ushort? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, int? right) . Performs bitwise AND operation on two given values. uint? And(ushort? left, uint? right) . Performs bitwise AND operation on two given values. long? And(ushort? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(ushort? left, ulong? right) . Performs bitwise AND operation on two given values. int? And(int? left, byte? right) . Performs bitwise AND operation on two given values. int? And(int? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(int? left, short? right) . Performs bitwise AND operation on two given values. int? And(int? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(int? left, int? right) . Performs bitwise AND operation on two given values. uint? And(int? left, uint? right) . Performs bitwise AND operation on two given values. long? And(int? left, long? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, uint? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, byte? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, sbyte? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, short? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, ushort? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, int? right) . Performs bitwise AND operation on two given values. ulong? And(uint? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(uint? left, ulong? right) . Performs bitwise AND operation on two given values. long? And(long? left, long? right) . Performs bitwise AND operation on two given values. long? And(long? left, byte? right) . Performs bitwise AND operation on two given values. long? And(long? left, sbyte? right) . Performs bitwise AND operation on two given values. long? And(long? left, short? right) . Performs bitwise AND operation on two given values. long? And(long? left, ushort? right) . Performs bitwise AND operation on two given values. long? And(long? left, int? right) . Performs bitwise AND operation on two given values. long? And(long? left, uint? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, byte? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, ushort? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, uint? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, ulong? right) . Performs bitwise AND operation on two given values. byte? Or(byte? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, short? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(byte? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(byte? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(byte? left, ulong? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, byte? right) . Performs bitwise OR operation on two given values. sbyte? Or(sbyte? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, short? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(sbyte? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(sbyte? left, long? right) . Performs bitwise OR operation on two given values. int? Or(short? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(short? left, sbyte? right) . Performs bitwise OR operation on two given values. short? Or(short? left, short? right) . Performs bitwise OR operation on two given values. int? Or(short? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(short? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(short? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(short? left, long? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, short? right) . Performs bitwise OR operation on two given values. ushort? Or(ushort? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(ushort? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(ushort? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(ushort? left, ulong? right) . Performs bitwise OR operation on two given values. int? Or(int? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(int? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(int? left, short? right) . Performs bitwise OR operation on two given values. int? Or(int? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(int? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(int? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(int? left, long? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, uint? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, byte? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, sbyte? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, short? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, ushort? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, int? right) . Performs bitwise OR operation on two given values. ulong? Or(uint? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(uint? left, ulong? right) . Performs bitwise OR operation on two given values. long? Or(long? left, long? right) . Performs bitwise OR operation on two given values. long? Or(long? left, byte? right) . Performs bitwise OR operation on two given values. long? Or(long? left, sbyte? right) . Performs bitwise OR operation on two given values. long? Or(long? left, short? right) . Performs bitwise OR operation on two given values. long? Or(long? left, ushort? right) . Performs bitwise OR operation on two given values. long? Or(long? left, int? right) . Performs bitwise OR operation on two given values. long? Or(long? left, uint? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, byte? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, ushort? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, uint? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, ulong? right) . Performs bitwise OR operation on two given values. byte? Xor(byte? left, byte? right) . Performs bitwise OR operation on two given values. int? Xor(byte? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(byte? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(byte? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(byte? left, ulong? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, byte? right) . Performs bitwise Xor operation on two given values. sbyte? Xor(sbyte? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(sbyte? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(sbyte? left, long? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, sbyte? right) . Performs bitwise Xor operation on two given values. short? Xor(short? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, ushort? right) . Performs bitwise XOR operation on two given values. int? Xor(short? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(short? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(short? left, long? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, short? right) . Performs bitwise Xor operation on two given values. ushort? Xor(ushort? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(ushort? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(ushort? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ushort? left, ulong? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(int? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(int? left, long? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, uint? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, byte? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, sbyte? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, short? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, ushort? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, int? right) . Performs bitwise Xor operation on two given values. ulong? Xor(uint? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(uint? left, ulong? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, long? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, byte? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, sbyte? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, short? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, ushort? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, int? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, uint? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, ulong? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, byte? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, ushort? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, uint? right) . Performs bitwise Xor operation on two given values. byte[] GetBytes(string? content) . Gets the bytes from the given string. byte[] GetBytes(string? content, int length, int offset) . Gets the bytes from the given string within given offset and length. byte?[]? GetBytes(char? character) . Gets the bytes from the given character. byte?[]? GetBytes(bool? bit) . Gets the bytes from the given boolean. byte?[]? GetBytes(long? value) . Gets the bytes from the given long. byte?[]? GetBytes(int? value) . Gets the bytes from the given int. byte?[]? GetBytes(short? value) . Gets the bytes from the given short. byte?[]? GetBytes(ulong? value) . Gets the bytes from the given ulong. byte?[]? GetBytes(ushort? value) . Gets the bytes from the given ushort. byte?[]? GetBytes(uint? value) . Gets the bytes from the given uint. byte?[]? GetBytes(Decimal? value) . Gets the bytes from the given decimal. byte?[]? GetBytes(double? value) . Gets the bytes from the given double. byte?[]? GetBytes(float? value) . Gets the bytes from the given float. string? ToBin(byte?[]? bytes, string delimiter) . Converts given bytes to binary with defined delimiter . string ToBin&lt;T&gt;(T value) . Converts given value to binary . string ToOcta&lt;T&gt;(T value) . Converts given value to octal . string ToDec&lt;T&gt;(T value) . Converts given value to decimal . string ToBase64(byte[] value) . Converts given value to string . string ToBase64(byte[] value, int offset, int length) . Converts given array of bytes to string . byte[] FromBase64(string value) . Converts given string to bytes array . bool FromBytesToBool(byte[] value) . Converts bytes to boolean value. short FromBytesToInt16(byte[] value) . Converts bytes to a 16-bit signed integer. ushort FromBytesToUInt16(byte[] value) . Converts bytes to a 16-bit unsigned integer. int FromBytesToInt32(byte[] value) . Converts bytes to a 32-bit signed integer. uint FromBytesToUInt32(byte[] value) . Converts bytes to a 32-bit unsigned integer. long FromBytesToInt64(byte[] value) . Converts bytes to a 64-bit signed integer. ulong FromBytesToUInt64(byte[] value) . Converts bytes to a 64-bit unsigned integer. float FromBytesToFloat(byte[] value) . Converts bytes to a float value. double FromBytesToDouble(byte[] value) . Converts bytes to a float value. string FromBytesToString(byte[] value) . Converts bytes to a string. byte[] ToBytes(bool value) . Converts boolean value to bytes. byte[] ToBytes(short value) . Converts short value to bytes. byte[] ToBytes(ushort value) . Converts ushort value to bytes. byte[] ToBytes(int value) . Converts int value to bytes. byte[] ToBytes(uint value) . Converts uint value to bytes. byte[] ToBytes(long value) . Converts long value to bytes. byte[] ToBytes(ulong value) . Converts long value to bytes. string? ToHex(byte?[]? bytes, string delimiter) . Converts given bytes to hex with defined delimiter . string? ToHex&lt;T&gt;(T value) . Converts given value to binary . int Count(string name) . Gets the count value of a given group. int Count(string name, int parent) . Gets the count value of a given group. int ExtractFromDate(string? date, string partOfDate) . Extracts part of the date from the date . int ExtractFromDate(string date, string culture, string partOfDate) . Extracts part of the date from the date based on given culture . DateTimeOffset? GetDate() . Gets the current datetime . DateTimeOffset? UtcGetDate() . Gets the current datetime in UTC . int? Month(DateTimeOffset? value) . Gets the month from DateTimeOffset . int? Year(DateTimeOffset? value) . Gets the year from DateTimeOffset . int? Day(DateTimeOffset? value) . Gets the day from DateTimeOffset . int? Hour(DateTimeOffset? value) . Gets the hour from DateTimeOffset . int? Minute(DateTimeOffset? value) . Gets the minute from DateTimeOffset . int? Second(DateTimeOffset? value) . Gets the second from DateTimeOffset . int? Milliseconds(DateTimeOffset? value) . Gets the millisecond from DateTimeOffset . int? DayOfWeek(DateTimeOffset? value) . Gets the day of week from DateTimeOffset . TimeSpan? ExtractTimeSpan(DateTimeOffset? dateTimeOffset) . Extracts time from DateTimeOffset . DateTime? ToDateTimeOffset(string value) . Converts given value to DateTimeOffset . DateTimeOffset? ToDateTimeOffset(string value, string culture) . Converts given value to DateTimeOffset . IEnumerable&lt;T&gt;? Skip&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? skipCount) . Skips elements from the beginning of the sequence. IEnumerable&lt;T&gt;? Take&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? takeCount) . Takes elements from the beginning of the sequence. IEnumerable&lt;T&gt;? SkipAndTake&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? skipCount, int? takeCount) . Skip and takes elements from the beginning of the sequence. T[]? EnumerableToArray&lt;T&gt;(IEnumerable&lt;T&gt;? values) . Turn array arguments of T into a single array. T[]? MergeArrays&lt;T&gt;(T[][]? values) . Turn array arguments of T into a single array. IEnumerable&lt;T&gt;? LongestCommonSequence&lt;T&gt;(IEnumerable&lt;T&gt;? source, IEnumerable&lt;T&gt;? pattern) . Computes longest common sequence of two given sequences . T? GetElementAtOrDefault&lt;T&gt;(IEnumerable&lt;T&gt;? enumerable, int? index) . Gets the element at the specified index in a sequence . int? Length&lt;T&gt;(IEnumerable&lt;T&gt;? enumerable) . Gets the length of the sequence . int? Length&lt;T&gt;(T[]? array) . Gets the length of the array . T? Choose&lt;T&gt;(int? index, T[] values) . Gets the value of an array at the specified index . T If&lt;T&gt;(bool expressionResult, T a, T b) . Chose a or b value based on the expression result . bool? Match(string? regex, string? content) . Determine whether content matches the specified pattern . byte? Coalesce(byte?[] array) . Gets the first non-null value in a list . sbyte? Coalesce(sbyte?[] array) . Gets the first non-null value in a list . short? Coalesce(short?[] array) . Gets the first non-null value in a list . ushort? Coalesce(ushort?[] array) . Gets the first non-null value in a list . int? Coalesce(int?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(uint?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(long?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(ulong?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(Decimal?[] array) . Gets the first non-null value in a list . T? Coalesce&lt;T&gt;(T[] array) . Gets the first non-null value in a list . IEnumerable&lt;T&gt;? Distinct&lt;T&gt;(IEnumerable&lt;T&gt;? values) . Returns distinct elements from a collection. string? Md5(string? content) . Gets the md5 hash of the given string. string? Md5(byte?[]? content) . Gets the md5 hash of the given bytes array. string? Sha1(string? content) . Gets the sha256 hash of the given string. string? Sha1(byte?[]? content) . Gets the sha256 hash of the given bytes array. string? Sha256(string? content) . Gets the sha256 hash of the given string. string? Sha256(byte?[]? content) . Gets the sha256 hash of the given bytes array. string? Sha512(string? content) . Gets the sha256 hash of the given string. string? Sha512(byte?[]? content) . Gets the sha256 hash of the bytes array. string? ToJson&lt;T&gt;(T? obj) . Converts object to json. string[] ExtractFromJsonToArray(string? json, string? path) . Extracts values from json by path. string? ExtractFromJson(string? json, string? path) . Extracts values from json by path and joins them with comma. Decimal? Abs(Decimal? value) . Gets the absolute value . long? Abs(long? value) . Gets the absolute value . int? Abs(int? value) . Gets the absolute value . Decimal? Ceil(Decimal? value) . Gets the ceiling value . Decimal? Floor(Decimal? value) . Gets the floor value . Decimal? Sign(Decimal? value) . Determine whether value is greater, equal or less that zero . long? Sign(long? value) . Determine whether value is greater, equal or less that zero . Decimal? Round(Decimal? value, int precision) . Rounds the value within given precision . Decimal? PercentOf(Decimal? value, Decimal? max) . Gets the percentage of the value . int Rand() . Gets the random integer value . int? Rand(int? min, int? max) . Gets the random integer value . double? Pow(Decimal? x, Decimal? y) . Computes the pow between two values . double? Pow(double? x, double? y) . Computes the pow between two values . double? Sqrt(Decimal? x) . Computes the sqrt of a given value . double? Sqrt(double? x) . Computes the sqrt of a given value . double? Sqrt(long? x) . Computes the sqrt of a given value . double? PercentRank&lt;T&gt;(IEnumerable&lt;T&gt;? window, T? value) . Computes the percent rank of a given window . double? Log(Decimal? base, Decimal? value) . Calculates the logarithm of a value with a specified base. Decimal? Sin(Decimal? value) . Calculates sine of a value. double? Sin(double? value) . Calculates sine of a value. float? Sin(float? value) . Calculates sine of a value. Decimal? Cos(Decimal? value) . Calculates cosine of a value. double? Cos(double? value) . Calculates cosine of a value. float? Cos(float? value) . Calculates cosine of a value. Decimal Max(string name) . Gets the max value of a given group. Decimal Max(string name, int parent) . Gets the max value of a given group. Decimal Min(string name) . Gets the min value of a given group. Decimal Min(string name, int parent) . Gets the min value of a given group. Decimal StDev(string name, int parent) . Gets the StDev value of a given group. string NewId() . Gets the new identifier . string? Trim(string? value) . Removes leading and trailing whitespace from a string. string? TrimStart(string? value) . Removes leading whitespace from a string. string? TrimEnd(string? value) . Removes trailing whitespace from a string. string? Substring(string? value, int? index, int? length) . Gets the substring from the string. string? Substring(string value, int? length) . Gets the substring from the string . string? Concat(string[]? strings) . Concatenates the specified values . string? Concat(char?[]? characters) . Concatenates the specified characters . string? Concat(string? firstString, char?[]? chars) . Concatenates specified string fir characters . string? Concat(char? firstChar, string[]? strings) . Concatenate specific character with strings . string? Concat(object[]? objects) . Concatenates the specified strings . string? Concat&lt;T&gt;(T[]? objects) . Concatenates the specified strings . bool? Contains(string? content, string? what) . Determine whether the string contains the specified value . int? IndexOf(string? value, string? text) . Position of the first occurrence of the specified value . string? Soundex(string? value) . Computes soundex for the specified value . bool HasFuzzyMatchedWord(string text, string word, string separator) . Matches the specified text by splitting it with separator and applying fuzzy comparison . bool HasWordThatHasSmallerLevenshteinDistanceThan(string text, string word, int distance, string separator) . Matches the specified text by splitting it with separator and applying fuzzy comparison with a given distance . bool HasWordThatSoundLike(string text, string word, string separator) . Matches whether the specified word is present after being fuzzified within the specified text . bool HasTextThatSoundLikeSentence(string text, string sentence, string separator) . Matches whether the specified text is present in sentence after being fuzified . string? ToUpper(string value) . Makes the string uppercase . string? ToUpper(string value, string culture) . Makes the string uppercase within specified culture . string? ToUpperInvariant(string value) . Makes the string uppercase . string? ToLower(string value) . Makes the string lowercase . string? ToLower(string value, string culture) . Makes the string lowercase within specified culture . string? ToLowerInvariant(string value) . Makes the string lowercase . string? PadLeft(string? value, string? character, int? totalWidth) . Returns a new string that right-aligns the characters in this instance by padding them on the left with a specified Unicode character, for a specified total lengt . string? PadRight(string? value, string? character, int? totalWidth) . Returns a new string that left-aligns the characters in this instance by padding them on the right with a specified Unicode character, for a specified total length . string? Head(string? value, int? length) . Gets the first N characters of the string . string? Tail(string? value, int? length) . Gets the last N characters of the string . int? LevenshteinDistance(string? firstValue, string? secondValue) . Computes the Levenshtein distance between two strings . char? GetCharacterOf(string value, int index) . Gets the character at specified index . string? Reverse(string? value) . Reverses the string . string[] Split(string value, string[] separators) . Splits the string into an array of substrings based on the specified separators . char[] ToCharArray(string value) . Splits the string into an array of characters . string? LongestCommonSubstring(string source, string pattern) . Computes the longest common subsequence between two source and pattern . string Replicate(string value, int integer) . Clones the value n times . string? Translate(string? value, string? characters, string? translations) . Returns the string from the first argument after the characters specified in the second argument are translated into the characters specified in the third argument. string? Replace(string? text, string lookFor, string? changeTo) . Replaces the first occurrence of a specified string in this instance with another specified string . string? ToTitleCase(string? value) . Capitalizes the first letter of the string . string? GetNthWord(string? text, int? wordIndex, string? separator) . Gets the nth word of the string . string? GetFirstWord(string text, string separator) . Gets the first word of the string . string? GetSecondWord(string text, string separator) . Gets the second word of the string . string? GetThirdWord(string text, string separator) . Gets the third word of the string . string? GetLastWord(string? text, string? separator) . Gets last word of the string . bool? IsNullOrEmpty(string? value) . Determines whether the string is null or empty . bool? IsNullOrWhiteSpace(string? value) . Determines whether the string is null or whitespace . string? UrlEncode(string? value) . Encodes the value . string? UrlDecode(string? value) . Decodes the value . string? UriEncode(string? value) . Encodes the value . string? UriDecode(string? value) . Decodes the value . bool? StartsWith(string? value, string? prefix) . Determines whether the string starts with the specified prefix . bool? StartsWith(string? value, string? prefix, string comparison) . Determines whether the string starts with the specified prefix . bool? EndsWith(string? value, string? suffix) . Determines whether the string ends with the specified suffix . bool? EndsWith(string? value, string? suffix, string comparison) . Determines whether the string ends with the specified suffix . string? RegexReplace(string? value, string? pattern, string? replacement) . Replace the specified value part that matches the pattern with the replacement . string[]? SplitByLinuxNewLines(string? input) . Split string by Linux-style newlines (\\n) . string[]? SplitByWindowsNewLines(string? input) . Split string by Windows-style newlines (\\r\\n) . string[]? SplitByNewLines(string? input) . Smart split that handles both Windows (\\r\\n) and Linux (\\n) newlines . Decimal Sum(string name) . Gets the sum value of a given group. Decimal Sum(string name, int parent) . Gets the sum value of a given group. Decimal SumIncome(string name) . Gets the sum value of a given group. Decimal SumIncome(string name, int parent) . Gets the sum value of a given group. Decimal SumOutcome(string name) . Gets the outcome value of a given group. Decimal SumOutcome(string name, int parent) . Gets the outcome value of a given group. TimeSpan? SumTimeSpan(string name) . Gets the sum value of a given group. TimeSpan? SumTimeSpan(string name, int parent) . Gets the sum value of a given group. TimeSpan? MinTimeSpan(string name) . Gets the min value of a given group. TimeSpan? MinTimeSpan(string name, int parent) . Gets the min value of a given group. TimeSpan? MaxTimeSpan(string name) . Gets the max value of a given group. TimeSpan? MaxTimeSpan(string name, int parent) . Gets the min value of a given group. char? ToChar(string? value) . Converts given value to character . char? ToChar(int? value) . Converts given value to character . char? ToChar(short? value) . Converts given value to character . char? ToChar(byte? value) . Converts given value to character . char? ToChar(object? value) . Converts given value to character . DateTime? ToDateTime(string value) . Converts given value to DateTime . DateTime? ToDateTime(string value, string culture) . Converts given value to DateTime . Decimal? ToDecimal(string? value) . Converts given value to decimal . Decimal? ToDecimal(string value, string culture) . Converts given value to decimal withing given culture . Decimal? ToDecimal(byte? value) . Converts given value to Decimal . Decimal? ToDecimal(sbyte? value) . Converts given value to Decimal . Decimal? ToDecimal(short? value) . Converts given value to Decimal . Decimal? ToDecimal(ushort? value) . Converts given value to Decimal . Decimal? ToDecimal(long? value) . Converts given value to Decimal . Decimal? ToDecimal(ulong? value) . Converts given value to Decimal . Decimal? ToDecimal(float? value) . Converts given value to Decimal . Decimal? ToDecimal(double? value) . Converts given value to Decimal . Decimal? ToDecimal(object? value) . Converts given value to Decimal . double? ToDouble(object? value) . Converts given value to double . double? ToDouble(string? value) . Converts given value to double . double? ToDouble(byte? value) . Converts given value to double . double? ToDouble(sbyte? value) . Converts given value to double . double? ToDouble(short? value) . Converts given value to double . double? ToDouble(ushort? value) . Converts given value to double . double? ToDouble(int? value) . Converts given value to double . double? ToDouble(uint? value) . Converts given value to double . double? ToDouble(long? value) . Converts given value to double . double? ToDouble(ulong? value) . Converts given value to double . double? ToDouble(float? value) . Converts given value to double . double? ToDouble(double? value) . Converts given value to double . double? ToDouble(Decimal? value) . Converts given value to double . float? ToFloat(string? value) . Converts given value to float . float? ToFloat(byte? value) . Converts given value to float . float? ToFloat(sbyte? value) . Converts given value to float . float? ToFloat(short? value) . Converts given value to float . float? ToFloat(ushort? value) . Converts given value to float . float? ToFloat(int? value) . Converts given value to float . float? ToFloat(uint? value) . Converts given value to float . float? ToFloat(long? value) . Converts given value to float . float? ToFloat(ulong? value) . Converts given value to float . float? ToFloat(float? value) . Converts given value to float . float? ToFloat(Decimal? value) . Converts given value to float . int? ToInt32(string value) . Converts given value to int . int? ToInt32(byte? value) . Converts given value to int . int? ToInt32(sbyte? value) . Converts given value to int . int? ToInt32(short? value) . Converts given value to int . int? ToInt32(ushort? value) . Converts given value to int . int? ToInt32(int? value) . Converts given value to int . int? ToInt32(uint? value) . Converts given value to int . int? ToInt32(long? value) . Converts given value to int . int? ToInt32(ulong? value) . Converts given value to int . int? ToInt32(float? value) . Converts given value to int . int? ToInt32(double? value) . Converts given value to int . int? ToInt32(Decimal? value) . Converts given value to int . int? ToInt32(object? value) . Converts given value to int . long? ToInt64(string value) . Converts given value to Int64 . long? ToInt64(byte? value) . Converts given value to long . long? ToInt64(sbyte? value) . Converts given value to long . long? ToInt64(short? value) . Converts given value to long . long? ToInt64(ushort? value) . Converts given value to long . long? ToInt64(int? value) . Converts given value to long . long? ToInt64(uint? value) . Converts given value to long . long? ToInt64(long? value) . Converts given value to long . long? ToInt64(ulong? value) . Converts given value to long . long? ToInt64(float? value) . Converts given value to long . long? ToInt64(double? value) . Converts given value to long . long? ToInt64(Decimal? value) . Converts given value to long . long? ToInt64(object? value) . Converts given value to long . string? ToString(char? value) . Converts given value to string . string? ToString(DateTimeOffset? value) . Converts given value to string . string? ToString(DateTimeOffset? value, string format) . Converts given value to string . string? ToString(byte? value) . Converts given value to string . string? ToString(byte? value, string format) . Converts given value to string . string? ToString(sbyte? value) . Converts given value to string . string? ToString(sbyte? value, string format) . Converts given value to string . string? ToString(int? value) . Converts given value to string . string? ToString(int? value, string format) . Converts given value to string . string? ToString(uint? value) . Converts given value to string . string? ToString(uint? value, string format) . Converts given value to string . string? ToString(long? value) . Converts given value to string . string? ToString(long? value, string format) . Converts given value to string . string? ToString(ulong? value) . Converts given value to string . string? ToString(ulong? value, string format) . Converts given value to string . string? ToString(float? value) . Converts given value to string . string? ToString(float? value, string format) . Converts given value to string . string? ToString(double? value) . Converts given value to string . string? ToString(double? value, string format) . Converts given value to string . string? ToString(Decimal? value) . Converts given value to string . string? ToString(Decimal? value, string format) . Converts given value to string . string? ToString(bool? value) . Converts given value to string . string? ToString(object? value) . Converts given value to string . string? ToString&lt;T&gt;(T? value) . Converts given value to string . string ToString(string[] value) . Converts given value to string . string ToString&lt;T&gt;(T[] value) . Converts given value to string . TimeSpan? ToTimeSpan(string value) . Converts given value to TimeSpan . TimeSpan? ToTimeSpan(string value, string culture) . Converts given value to TimeSpan . IEnumerable&lt;T&gt; Window&lt;T&gt;(string name) . Gets the window . ",
    "url": "/data-sources/CANBus/macos-x64.html#base-methods",
    
    "relUrl": "/data-sources/CANBus/macos-x64.html#base-methods"
  },"216": {
    "doc": "MacOs X64",
    "title": "MacOs X64",
    "content": " ",
    "url": "/data-sources/CANBus/macos-x64.html",
    
    "relUrl": "/data-sources/CANBus/macos-x64.html"
  },"217": {
    "doc": "MacOs X64",
    "title": "Musoq.DataSources.Time",
    "content": " ",
    "url": "/data-sources/Time/macos-x64.html#musoqdatasourcestime",
    
    "relUrl": "/data-sources/Time/macos-x64.html#musoqdatasourcestime"
  },"218": {
    "doc": "MacOs X64",
    "title": "Tables",
    "content": "Table is a collection of rows and columns that the plugin exposes. Below are the tables that are exposed by this data source. time.interval(string startDateTime, string stopDateTime, string interval) . Compute dates between two ranges . | Name | Type | Description | . | DateTime | DateTime | Gets the DateTime object | . | Second | int | Gets second of current computed DateTime | . | Minute | int | Gets minute of current computed DateTime | . | Hour | int | Gets the hour of current computed DateTime | . | Day | int | Gets the day of current computed DateTime | . | Month | int | Gets the month of current computed DateTime | . | Year | int | Gets the year of current computed DateTime | . | DayOfWeek | int | Gets the day of week of current computed DateTime | . | DayOfYear | int | Gets the day of year of current computed DateTime | . | TimeOfDay | TimeSpan | Gets the time of day of current computed DateTime | . ",
    "url": "/data-sources/Time/macos-x64.html#tables",
    
    "relUrl": "/data-sources/Time/macos-x64.html#tables"
  },"219": {
    "doc": "MacOs X64",
    "title": "Base Methods",
    "content": "Base methods are methods that can be called on the data source specific column. Those methods are automatically inherited and enriches the data source specific methods. Below are those base methods that are exposed by this data source. int RowNumber() . Gets the row number of the current row. string? GetTypeName(object? obj) . Gets the typename of passed object. string AggregateValues(string name) . Aggregates values into a single value. string AggregateValues(string name, int parent) . Aggregates values into a single value. Decimal Avg(string name) . Gets the aggregated average value from the given group name . Decimal Avg(string name, int parent) . Gets the aggregated average value from the given group name . byte? ShiftLeft(byte? value, int shift) . Shifts the value to the left by the specified number of bits. short? ShiftLeft(short? value, int shift) . Shifts the value to the left by the specified number of bits. int? ShiftLeft(int? value, int shift) . Shifts the value to the left by the specified number of bits. long? ShiftLeft(long? value, int shift) . Shifts the value to the left by the specified number of bits. sbyte? ShiftLeft(sbyte? value, int shift) . Shifts the value to the left by the specified number of bits. ushort? ShiftLeft(ushort? value, int shift) . Shifts the value to the left by the specified number of bits. uint? ShiftLeft(uint? value, int shift) . Shifts the value to the left by the specified number of bits. ulong? ShiftLeft(ulong? value, int shift) . Shifts the value to the left by the specified number of bits. byte? ShiftRight(byte? value, int shift) . Shifts the value to the right by the specified number of bits. short? ShiftRight(short? value, int shift) . Shifts the value to the right by the specified number of bits. int? ShiftRight(int? value, int shift) . Shifts the value to the right by the specified number of bits. long? ShiftRight(long? value, int shift) . Shifts the value to the right by the specified number of bits. sbyte? ShiftRight(sbyte? value, int shift) . Shifts the value to the right by the specified number of bits. ushort? ShiftRight(ushort? value, int shift) . Shifts the value to the right by the specified number of bits. uint? ShiftRight(uint? value, int shift) . Shifts the value to the right by the specified number of bits. ulong? ShiftRight(ulong? value, int shift) . Shifts the value to the right by the specified number of bits. byte? Not(byte? value) . Performs bitwise NOT operation on a given value. short? Not(short? value) . Performs bitwise NOT operation on a given value. int? Not(int? value) . Performs bitwise NOT operation on a given value. long? Not(long? value) . Performs bitwise NOT operation on a given value. sbyte? Not(sbyte? value) . Performs bitwise NOT operation on a given value. ushort? Not(ushort? value) . Performs bitwise NOT operation on a given value. uint? Not(uint? value) . Performs bitwise NOT operation on a given value. ulong? Not(ulong? value) . Performs bitwise NOT operation on a given value. byte? And(byte? left, byte? right) . Performs bitwise AND operation on two given values. int? And(byte? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(byte? left, short? right) . Performs bitwise AND operation on two given values. int? And(byte? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(byte? left, int? right) . Performs bitwise AND operation on two given values. uint? And(byte? left, uint? right) . Performs bitwise AND operation on two given values. long? And(byte? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(byte? left, ulong? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, byte? right) . Performs bitwise AND operation on two given values. sbyte? And(sbyte? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, short? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, int? right) . Performs bitwise AND operation on two given values. uint? And(sbyte? left, uint? right) . Performs bitwise AND operation on two given values. long? And(sbyte? left, long? right) . Performs bitwise AND operation on two given values. int? And(short? left, byte? right) . Performs bitwise AND operation on two given values. int? And(short? left, sbyte? right) . Performs bitwise AND operation on two given values. short? And(short? left, short? right) . Performs bitwise AND operation on two given values. int? And(short? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(short? left, int? right) . Performs bitwise AND operation on two given values. uint? And(short? left, uint? right) . Performs bitwise AND operation on two given values. long? And(short? left, long? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, byte? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, short? right) . Performs bitwise AND operation on two given values. ushort? And(ushort? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, int? right) . Performs bitwise AND operation on two given values. uint? And(ushort? left, uint? right) . Performs bitwise AND operation on two given values. long? And(ushort? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(ushort? left, ulong? right) . Performs bitwise AND operation on two given values. int? And(int? left, byte? right) . Performs bitwise AND operation on two given values. int? And(int? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(int? left, short? right) . Performs bitwise AND operation on two given values. int? And(int? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(int? left, int? right) . Performs bitwise AND operation on two given values. uint? And(int? left, uint? right) . Performs bitwise AND operation on two given values. long? And(int? left, long? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, uint? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, byte? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, sbyte? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, short? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, ushort? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, int? right) . Performs bitwise AND operation on two given values. ulong? And(uint? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(uint? left, ulong? right) . Performs bitwise AND operation on two given values. long? And(long? left, long? right) . Performs bitwise AND operation on two given values. long? And(long? left, byte? right) . Performs bitwise AND operation on two given values. long? And(long? left, sbyte? right) . Performs bitwise AND operation on two given values. long? And(long? left, short? right) . Performs bitwise AND operation on two given values. long? And(long? left, ushort? right) . Performs bitwise AND operation on two given values. long? And(long? left, int? right) . Performs bitwise AND operation on two given values. long? And(long? left, uint? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, byte? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, ushort? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, uint? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, ulong? right) . Performs bitwise AND operation on two given values. byte? Or(byte? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, short? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(byte? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(byte? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(byte? left, ulong? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, byte? right) . Performs bitwise OR operation on two given values. sbyte? Or(sbyte? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, short? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(sbyte? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(sbyte? left, long? right) . Performs bitwise OR operation on two given values. int? Or(short? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(short? left, sbyte? right) . Performs bitwise OR operation on two given values. short? Or(short? left, short? right) . Performs bitwise OR operation on two given values. int? Or(short? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(short? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(short? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(short? left, long? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, short? right) . Performs bitwise OR operation on two given values. ushort? Or(ushort? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(ushort? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(ushort? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(ushort? left, ulong? right) . Performs bitwise OR operation on two given values. int? Or(int? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(int? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(int? left, short? right) . Performs bitwise OR operation on two given values. int? Or(int? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(int? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(int? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(int? left, long? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, uint? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, byte? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, sbyte? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, short? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, ushort? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, int? right) . Performs bitwise OR operation on two given values. ulong? Or(uint? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(uint? left, ulong? right) . Performs bitwise OR operation on two given values. long? Or(long? left, long? right) . Performs bitwise OR operation on two given values. long? Or(long? left, byte? right) . Performs bitwise OR operation on two given values. long? Or(long? left, sbyte? right) . Performs bitwise OR operation on two given values. long? Or(long? left, short? right) . Performs bitwise OR operation on two given values. long? Or(long? left, ushort? right) . Performs bitwise OR operation on two given values. long? Or(long? left, int? right) . Performs bitwise OR operation on two given values. long? Or(long? left, uint? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, byte? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, ushort? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, uint? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, ulong? right) . Performs bitwise OR operation on two given values. byte? Xor(byte? left, byte? right) . Performs bitwise OR operation on two given values. int? Xor(byte? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(byte? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(byte? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(byte? left, ulong? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, byte? right) . Performs bitwise Xor operation on two given values. sbyte? Xor(sbyte? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(sbyte? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(sbyte? left, long? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, sbyte? right) . Performs bitwise Xor operation on two given values. short? Xor(short? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, ushort? right) . Performs bitwise XOR operation on two given values. int? Xor(short? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(short? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(short? left, long? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, short? right) . Performs bitwise Xor operation on two given values. ushort? Xor(ushort? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(ushort? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(ushort? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ushort? left, ulong? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(int? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(int? left, long? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, uint? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, byte? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, sbyte? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, short? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, ushort? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, int? right) . Performs bitwise Xor operation on two given values. ulong? Xor(uint? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(uint? left, ulong? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, long? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, byte? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, sbyte? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, short? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, ushort? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, int? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, uint? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, ulong? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, byte? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, ushort? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, uint? right) . Performs bitwise Xor operation on two given values. byte[] GetBytes(string? content) . Gets the bytes from the given string. byte[] GetBytes(string? content, int length, int offset) . Gets the bytes from the given string within given offset and length. byte?[]? GetBytes(char? character) . Gets the bytes from the given character. byte?[]? GetBytes(bool? bit) . Gets the bytes from the given boolean. byte?[]? GetBytes(long? value) . Gets the bytes from the given long. byte?[]? GetBytes(int? value) . Gets the bytes from the given int. byte?[]? GetBytes(short? value) . Gets the bytes from the given short. byte?[]? GetBytes(ulong? value) . Gets the bytes from the given ulong. byte?[]? GetBytes(ushort? value) . Gets the bytes from the given ushort. byte?[]? GetBytes(uint? value) . Gets the bytes from the given uint. byte?[]? GetBytes(Decimal? value) . Gets the bytes from the given decimal. byte?[]? GetBytes(double? value) . Gets the bytes from the given double. byte?[]? GetBytes(float? value) . Gets the bytes from the given float. string? ToBin(byte?[]? bytes, string delimiter) . Converts given bytes to binary with defined delimiter . string ToBin&lt;T&gt;(T value) . Converts given value to binary . string ToOcta&lt;T&gt;(T value) . Converts given value to octal . string ToDec&lt;T&gt;(T value) . Converts given value to decimal . string ToBase64(byte[] value) . Converts given value to string . string ToBase64(byte[] value, int offset, int length) . Converts given array of bytes to string . byte[] FromBase64(string value) . Converts given string to bytes array . bool FromBytesToBool(byte[] value) . Converts bytes to boolean value. short FromBytesToInt16(byte[] value) . Converts bytes to a 16-bit signed integer. ushort FromBytesToUInt16(byte[] value) . Converts bytes to a 16-bit unsigned integer. int FromBytesToInt32(byte[] value) . Converts bytes to a 32-bit signed integer. uint FromBytesToUInt32(byte[] value) . Converts bytes to a 32-bit unsigned integer. long FromBytesToInt64(byte[] value) . Converts bytes to a 64-bit signed integer. ulong FromBytesToUInt64(byte[] value) . Converts bytes to a 64-bit unsigned integer. float FromBytesToFloat(byte[] value) . Converts bytes to a float value. double FromBytesToDouble(byte[] value) . Converts bytes to a float value. string FromBytesToString(byte[] value) . Converts bytes to a string. byte[] ToBytes(bool value) . Converts boolean value to bytes. byte[] ToBytes(short value) . Converts short value to bytes. byte[] ToBytes(ushort value) . Converts ushort value to bytes. byte[] ToBytes(int value) . Converts int value to bytes. byte[] ToBytes(uint value) . Converts uint value to bytes. byte[] ToBytes(long value) . Converts long value to bytes. byte[] ToBytes(ulong value) . Converts long value to bytes. string? ToHex(byte?[]? bytes, string delimiter) . Converts given bytes to hex with defined delimiter . string? ToHex&lt;T&gt;(T value) . Converts given value to binary . int Count(string name) . Gets the count value of a given group. int Count(string name, int parent) . Gets the count value of a given group. int ExtractFromDate(string? date, string partOfDate) . Extracts part of the date from the date . int ExtractFromDate(string date, string culture, string partOfDate) . Extracts part of the date from the date based on given culture . DateTimeOffset? GetDate() . Gets the current datetime . DateTimeOffset? UtcGetDate() . Gets the current datetime in UTC . int? Month(DateTimeOffset? value) . Gets the month from DateTimeOffset . int? Year(DateTimeOffset? value) . Gets the year from DateTimeOffset . int? Day(DateTimeOffset? value) . Gets the day from DateTimeOffset . int? Hour(DateTimeOffset? value) . Gets the hour from DateTimeOffset . int? Minute(DateTimeOffset? value) . Gets the minute from DateTimeOffset . int? Second(DateTimeOffset? value) . Gets the second from DateTimeOffset . int? Milliseconds(DateTimeOffset? value) . Gets the millisecond from DateTimeOffset . int? DayOfWeek(DateTimeOffset? value) . Gets the day of week from DateTimeOffset . TimeSpan? ExtractTimeSpan(DateTimeOffset? dateTimeOffset) . Extracts time from DateTimeOffset . DateTime? ToDateTimeOffset(string value) . Converts given value to DateTimeOffset . DateTimeOffset? ToDateTimeOffset(string value, string culture) . Converts given value to DateTimeOffset . IEnumerable&lt;T&gt;? Skip&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? skipCount) . Skips elements from the beginning of the sequence. IEnumerable&lt;T&gt;? Take&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? takeCount) . Takes elements from the beginning of the sequence. IEnumerable&lt;T&gt;? SkipAndTake&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? skipCount, int? takeCount) . Skip and takes elements from the beginning of the sequence. T[]? EnumerableToArray&lt;T&gt;(IEnumerable&lt;T&gt;? values) . Turn array arguments of T into a single array. T[]? MergeArrays&lt;T&gt;(T[][]? values) . Turn array arguments of T into a single array. IEnumerable&lt;T&gt;? LongestCommonSequence&lt;T&gt;(IEnumerable&lt;T&gt;? source, IEnumerable&lt;T&gt;? pattern) . Computes longest common sequence of two given sequences . T? GetElementAtOrDefault&lt;T&gt;(IEnumerable&lt;T&gt;? enumerable, int? index) . Gets the element at the specified index in a sequence . int? Length&lt;T&gt;(IEnumerable&lt;T&gt;? enumerable) . Gets the length of the sequence . int? Length&lt;T&gt;(T[]? array) . Gets the length of the array . T? Choose&lt;T&gt;(int? index, T[] values) . Gets the value of an array at the specified index . T If&lt;T&gt;(bool expressionResult, T a, T b) . Chose a or b value based on the expression result . bool? Match(string? regex, string? content) . Determine whether content matches the specified pattern . byte? Coalesce(byte?[] array) . Gets the first non-null value in a list . sbyte? Coalesce(sbyte?[] array) . Gets the first non-null value in a list . short? Coalesce(short?[] array) . Gets the first non-null value in a list . ushort? Coalesce(ushort?[] array) . Gets the first non-null value in a list . int? Coalesce(int?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(uint?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(long?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(ulong?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(Decimal?[] array) . Gets the first non-null value in a list . T? Coalesce&lt;T&gt;(T[] array) . Gets the first non-null value in a list . IEnumerable&lt;T&gt;? Distinct&lt;T&gt;(IEnumerable&lt;T&gt;? values) . Returns distinct elements from a collection. string? Md5(string? content) . Gets the md5 hash of the given string. string? Md5(byte?[]? content) . Gets the md5 hash of the given bytes array. string? Sha1(string? content) . Gets the sha256 hash of the given string. string? Sha1(byte?[]? content) . Gets the sha256 hash of the given bytes array. string? Sha256(string? content) . Gets the sha256 hash of the given string. string? Sha256(byte?[]? content) . Gets the sha256 hash of the given bytes array. string? Sha512(string? content) . Gets the sha256 hash of the given string. string? Sha512(byte?[]? content) . Gets the sha256 hash of the bytes array. string? ToJson&lt;T&gt;(T? obj) . Converts object to json. string[] ExtractFromJsonToArray(string? json, string? path) . Extracts values from json by path. string? ExtractFromJson(string? json, string? path) . Extracts values from json by path and joins them with comma. Decimal? Abs(Decimal? value) . Gets the absolute value . long? Abs(long? value) . Gets the absolute value . int? Abs(int? value) . Gets the absolute value . Decimal? Ceil(Decimal? value) . Gets the ceiling value . Decimal? Floor(Decimal? value) . Gets the floor value . Decimal? Sign(Decimal? value) . Determine whether value is greater, equal or less that zero . long? Sign(long? value) . Determine whether value is greater, equal or less that zero . Decimal? Round(Decimal? value, int precision) . Rounds the value within given precision . Decimal? PercentOf(Decimal? value, Decimal? max) . Gets the percentage of the value . int Rand() . Gets the random integer value . int? Rand(int? min, int? max) . Gets the random integer value . double? Pow(Decimal? x, Decimal? y) . Computes the pow between two values . double? Pow(double? x, double? y) . Computes the pow between two values . double? Sqrt(Decimal? x) . Computes the sqrt of a given value . double? Sqrt(double? x) . Computes the sqrt of a given value . double? Sqrt(long? x) . Computes the sqrt of a given value . double? PercentRank&lt;T&gt;(IEnumerable&lt;T&gt;? window, T? value) . Computes the percent rank of a given window . double? Log(Decimal? base, Decimal? value) . Calculates the logarithm of a value with a specified base. Decimal? Sin(Decimal? value) . Calculates sine of a value. double? Sin(double? value) . Calculates sine of a value. float? Sin(float? value) . Calculates sine of a value. Decimal? Cos(Decimal? value) . Calculates cosine of a value. double? Cos(double? value) . Calculates cosine of a value. float? Cos(float? value) . Calculates cosine of a value. Decimal Max(string name) . Gets the max value of a given group. Decimal Max(string name, int parent) . Gets the max value of a given group. Decimal Min(string name) . Gets the min value of a given group. Decimal Min(string name, int parent) . Gets the min value of a given group. Decimal StDev(string name, int parent) . Gets the StDev value of a given group. string NewId() . Gets the new identifier . string? Trim(string? value) . Removes leading and trailing whitespace from a string. string? TrimStart(string? value) . Removes leading whitespace from a string. string? TrimEnd(string? value) . Removes trailing whitespace from a string. string? Substring(string? value, int? index, int? length) . Gets the substring from the string. string? Substring(string value, int? length) . Gets the substring from the string . string? Concat(string[]? strings) . Concatenates the specified values . string? Concat(char?[]? characters) . Concatenates the specified characters . string? Concat(string? firstString, char?[]? chars) . Concatenates specified string fir characters . string? Concat(char? firstChar, string[]? strings) . Concatenate specific character with strings . string? Concat(object[]? objects) . Concatenates the specified strings . string? Concat&lt;T&gt;(T[]? objects) . Concatenates the specified strings . bool? Contains(string? content, string? what) . Determine whether the string contains the specified value . int? IndexOf(string? value, string? text) . Position of the first occurrence of the specified value . string? Soundex(string? value) . Computes soundex for the specified value . bool HasFuzzyMatchedWord(string text, string word, string separator) . Matches the specified text by splitting it with separator and applying fuzzy comparison . bool HasWordThatHasSmallerLevenshteinDistanceThan(string text, string word, int distance, string separator) . Matches the specified text by splitting it with separator and applying fuzzy comparison with a given distance . bool HasWordThatSoundLike(string text, string word, string separator) . Matches whether the specified word is present after being fuzzified within the specified text . bool HasTextThatSoundLikeSentence(string text, string sentence, string separator) . Matches whether the specified text is present in sentence after being fuzified . string? ToUpper(string value) . Makes the string uppercase . string? ToUpper(string value, string culture) . Makes the string uppercase within specified culture . string? ToUpperInvariant(string value) . Makes the string uppercase . string? ToLower(string value) . Makes the string lowercase . string? ToLower(string value, string culture) . Makes the string lowercase within specified culture . string? ToLowerInvariant(string value) . Makes the string lowercase . string? PadLeft(string? value, string? character, int? totalWidth) . Returns a new string that right-aligns the characters in this instance by padding them on the left with a specified Unicode character, for a specified total lengt . string? PadRight(string? value, string? character, int? totalWidth) . Returns a new string that left-aligns the characters in this instance by padding them on the right with a specified Unicode character, for a specified total length . string? Head(string? value, int? length) . Gets the first N characters of the string . string? Tail(string? value, int? length) . Gets the last N characters of the string . int? LevenshteinDistance(string? firstValue, string? secondValue) . Computes the Levenshtein distance between two strings . char? GetCharacterOf(string value, int index) . Gets the character at specified index . string? Reverse(string? value) . Reverses the string . string[] Split(string value, string[] separators) . Splits the string into an array of substrings based on the specified separators . char[] ToCharArray(string value) . Splits the string into an array of characters . string? LongestCommonSubstring(string source, string pattern) . Computes the longest common subsequence between two source and pattern . string Replicate(string value, int integer) . Clones the value n times . string? Translate(string? value, string? characters, string? translations) . Returns the string from the first argument after the characters specified in the second argument are translated into the characters specified in the third argument. string? Replace(string? text, string lookFor, string? changeTo) . Replaces the first occurrence of a specified string in this instance with another specified string . string? ToTitleCase(string? value) . Capitalizes the first letter of the string . string? GetNthWord(string? text, int? wordIndex, string? separator) . Gets the nth word of the string . string? GetFirstWord(string text, string separator) . Gets the first word of the string . string? GetSecondWord(string text, string separator) . Gets the second word of the string . string? GetThirdWord(string text, string separator) . Gets the third word of the string . string? GetLastWord(string? text, string? separator) . Gets last word of the string . bool? IsNullOrEmpty(string? value) . Determines whether the string is null or empty . bool? IsNullOrWhiteSpace(string? value) . Determines whether the string is null or whitespace . string? UrlEncode(string? value) . Encodes the value . string? UrlDecode(string? value) . Decodes the value . string? UriEncode(string? value) . Encodes the value . string? UriDecode(string? value) . Decodes the value . bool? StartsWith(string? value, string? prefix) . Determines whether the string starts with the specified prefix . bool? StartsWith(string? value, string? prefix, string comparison) . Determines whether the string starts with the specified prefix . bool? EndsWith(string? value, string? suffix) . Determines whether the string ends with the specified suffix . bool? EndsWith(string? value, string? suffix, string comparison) . Determines whether the string ends with the specified suffix . string? RegexReplace(string? value, string? pattern, string? replacement) . Replace the specified value part that matches the pattern with the replacement . string[]? SplitByLinuxNewLines(string? input) . Split string by Linux-style newlines (\\n) . string[]? SplitByWindowsNewLines(string? input) . Split string by Windows-style newlines (\\r\\n) . string[]? SplitByNewLines(string? input) . Smart split that handles both Windows (\\r\\n) and Linux (\\n) newlines . Decimal Sum(string name) . Gets the sum value of a given group. Decimal Sum(string name, int parent) . Gets the sum value of a given group. Decimal SumIncome(string name) . Gets the sum value of a given group. Decimal SumIncome(string name, int parent) . Gets the sum value of a given group. Decimal SumOutcome(string name) . Gets the outcome value of a given group. Decimal SumOutcome(string name, int parent) . Gets the outcome value of a given group. TimeSpan? SumTimeSpan(string name) . Gets the sum value of a given group. TimeSpan? SumTimeSpan(string name, int parent) . Gets the sum value of a given group. TimeSpan? MinTimeSpan(string name) . Gets the min value of a given group. TimeSpan? MinTimeSpan(string name, int parent) . Gets the min value of a given group. TimeSpan? MaxTimeSpan(string name) . Gets the max value of a given group. TimeSpan? MaxTimeSpan(string name, int parent) . Gets the min value of a given group. char? ToChar(string? value) . Converts given value to character . char? ToChar(int? value) . Converts given value to character . char? ToChar(short? value) . Converts given value to character . char? ToChar(byte? value) . Converts given value to character . char? ToChar(object? value) . Converts given value to character . DateTime? ToDateTime(string value) . Converts given value to DateTime . DateTime? ToDateTime(string value, string culture) . Converts given value to DateTime . Decimal? ToDecimal(string? value) . Converts given value to decimal . Decimal? ToDecimal(string value, string culture) . Converts given value to decimal withing given culture . Decimal? ToDecimal(byte? value) . Converts given value to Decimal . Decimal? ToDecimal(sbyte? value) . Converts given value to Decimal . Decimal? ToDecimal(short? value) . Converts given value to Decimal . Decimal? ToDecimal(ushort? value) . Converts given value to Decimal . Decimal? ToDecimal(long? value) . Converts given value to Decimal . Decimal? ToDecimal(ulong? value) . Converts given value to Decimal . Decimal? ToDecimal(float? value) . Converts given value to Decimal . Decimal? ToDecimal(double? value) . Converts given value to Decimal . Decimal? ToDecimal(object? value) . Converts given value to Decimal . double? ToDouble(object? value) . Converts given value to double . double? ToDouble(string? value) . Converts given value to double . double? ToDouble(byte? value) . Converts given value to double . double? ToDouble(sbyte? value) . Converts given value to double . double? ToDouble(short? value) . Converts given value to double . double? ToDouble(ushort? value) . Converts given value to double . double? ToDouble(int? value) . Converts given value to double . double? ToDouble(uint? value) . Converts given value to double . double? ToDouble(long? value) . Converts given value to double . double? ToDouble(ulong? value) . Converts given value to double . double? ToDouble(float? value) . Converts given value to double . double? ToDouble(double? value) . Converts given value to double . double? ToDouble(Decimal? value) . Converts given value to double . float? ToFloat(string? value) . Converts given value to float . float? ToFloat(byte? value) . Converts given value to float . float? ToFloat(sbyte? value) . Converts given value to float . float? ToFloat(short? value) . Converts given value to float . float? ToFloat(ushort? value) . Converts given value to float . float? ToFloat(int? value) . Converts given value to float . float? ToFloat(uint? value) . Converts given value to float . float? ToFloat(long? value) . Converts given value to float . float? ToFloat(ulong? value) . Converts given value to float . float? ToFloat(float? value) . Converts given value to float . float? ToFloat(Decimal? value) . Converts given value to float . int? ToInt32(string value) . Converts given value to int . int? ToInt32(byte? value) . Converts given value to int . int? ToInt32(sbyte? value) . Converts given value to int . int? ToInt32(short? value) . Converts given value to int . int? ToInt32(ushort? value) . Converts given value to int . int? ToInt32(int? value) . Converts given value to int . int? ToInt32(uint? value) . Converts given value to int . int? ToInt32(long? value) . Converts given value to int . int? ToInt32(ulong? value) . Converts given value to int . int? ToInt32(float? value) . Converts given value to int . int? ToInt32(double? value) . Converts given value to int . int? ToInt32(Decimal? value) . Converts given value to int . int? ToInt32(object? value) . Converts given value to int . long? ToInt64(string value) . Converts given value to Int64 . long? ToInt64(byte? value) . Converts given value to long . long? ToInt64(sbyte? value) . Converts given value to long . long? ToInt64(short? value) . Converts given value to long . long? ToInt64(ushort? value) . Converts given value to long . long? ToInt64(int? value) . Converts given value to long . long? ToInt64(uint? value) . Converts given value to long . long? ToInt64(long? value) . Converts given value to long . long? ToInt64(ulong? value) . Converts given value to long . long? ToInt64(float? value) . Converts given value to long . long? ToInt64(double? value) . Converts given value to long . long? ToInt64(Decimal? value) . Converts given value to long . long? ToInt64(object? value) . Converts given value to long . string? ToString(char? value) . Converts given value to string . string? ToString(DateTimeOffset? value) . Converts given value to string . string? ToString(DateTimeOffset? value, string format) . Converts given value to string . string? ToString(byte? value) . Converts given value to string . string? ToString(byte? value, string format) . Converts given value to string . string? ToString(sbyte? value) . Converts given value to string . string? ToString(sbyte? value, string format) . Converts given value to string . string? ToString(int? value) . Converts given value to string . string? ToString(int? value, string format) . Converts given value to string . string? ToString(uint? value) . Converts given value to string . string? ToString(uint? value, string format) . Converts given value to string . string? ToString(long? value) . Converts given value to string . string? ToString(long? value, string format) . Converts given value to string . string? ToString(ulong? value) . Converts given value to string . string? ToString(ulong? value, string format) . Converts given value to string . string? ToString(float? value) . Converts given value to string . string? ToString(float? value, string format) . Converts given value to string . string? ToString(double? value) . Converts given value to string . string? ToString(double? value, string format) . Converts given value to string . string? ToString(Decimal? value) . Converts given value to string . string? ToString(Decimal? value, string format) . Converts given value to string . string? ToString(bool? value) . Converts given value to string . string? ToString(object? value) . Converts given value to string . string? ToString&lt;T&gt;(T? value) . Converts given value to string . string ToString(string[] value) . Converts given value to string . string ToString&lt;T&gt;(T[] value) . Converts given value to string . TimeSpan? ToTimeSpan(string value) . Converts given value to TimeSpan . TimeSpan? ToTimeSpan(string value, string culture) . Converts given value to TimeSpan . IEnumerable&lt;T&gt; Window&lt;T&gt;(string name) . Gets the window . ",
    "url": "/data-sources/Time/macos-x64.html#base-methods",
    
    "relUrl": "/data-sources/Time/macos-x64.html#base-methods"
  },"220": {
    "doc": "MacOs X64",
    "title": "MacOs X64",
    "content": " ",
    "url": "/data-sources/Time/macos-x64.html",
    
    "relUrl": "/data-sources/Time/macos-x64.html"
  },"221": {
    "doc": "MacOs X64",
    "title": "Musoq.DataSources.FlatFile",
    "content": "Provides schema to work with flat files . ",
    "url": "/data-sources/FlatFile/macos-x64.html#musoqdatasourcesflatfile",
    
    "relUrl": "/data-sources/FlatFile/macos-x64.html#musoqdatasourcesflatfile"
  },"222": {
    "doc": "MacOs X64",
    "title": "Tables",
    "content": "Table is a collection of rows and columns that the plugin exposes. Below are the tables that are exposed by this data source. flat.file(string path) . Gives ability to process flat files . | Name | Type | Description | . | LineNumber | int | Line number of a given file | . | Line | string | Line of a given file | . ",
    "url": "/data-sources/FlatFile/macos-x64.html#tables",
    
    "relUrl": "/data-sources/FlatFile/macos-x64.html#tables"
  },"223": {
    "doc": "MacOs X64",
    "title": "Base Methods",
    "content": "Base methods are methods that can be called on the data source specific column. Those methods are automatically inherited and enriches the data source specific methods. Below are those base methods that are exposed by this data source. int RowNumber() . Gets the row number of the current row. string? GetTypeName(object? obj) . Gets the typename of passed object. string AggregateValues(string name) . Aggregates values into a single value. string AggregateValues(string name, int parent) . Aggregates values into a single value. Decimal Avg(string name) . Gets the aggregated average value from the given group name . Decimal Avg(string name, int parent) . Gets the aggregated average value from the given group name . byte? ShiftLeft(byte? value, int shift) . Shifts the value to the left by the specified number of bits. short? ShiftLeft(short? value, int shift) . Shifts the value to the left by the specified number of bits. int? ShiftLeft(int? value, int shift) . Shifts the value to the left by the specified number of bits. long? ShiftLeft(long? value, int shift) . Shifts the value to the left by the specified number of bits. sbyte? ShiftLeft(sbyte? value, int shift) . Shifts the value to the left by the specified number of bits. ushort? ShiftLeft(ushort? value, int shift) . Shifts the value to the left by the specified number of bits. uint? ShiftLeft(uint? value, int shift) . Shifts the value to the left by the specified number of bits. ulong? ShiftLeft(ulong? value, int shift) . Shifts the value to the left by the specified number of bits. byte? ShiftRight(byte? value, int shift) . Shifts the value to the right by the specified number of bits. short? ShiftRight(short? value, int shift) . Shifts the value to the right by the specified number of bits. int? ShiftRight(int? value, int shift) . Shifts the value to the right by the specified number of bits. long? ShiftRight(long? value, int shift) . Shifts the value to the right by the specified number of bits. sbyte? ShiftRight(sbyte? value, int shift) . Shifts the value to the right by the specified number of bits. ushort? ShiftRight(ushort? value, int shift) . Shifts the value to the right by the specified number of bits. uint? ShiftRight(uint? value, int shift) . Shifts the value to the right by the specified number of bits. ulong? ShiftRight(ulong? value, int shift) . Shifts the value to the right by the specified number of bits. byte? Not(byte? value) . Performs bitwise NOT operation on a given value. short? Not(short? value) . Performs bitwise NOT operation on a given value. int? Not(int? value) . Performs bitwise NOT operation on a given value. long? Not(long? value) . Performs bitwise NOT operation on a given value. sbyte? Not(sbyte? value) . Performs bitwise NOT operation on a given value. ushort? Not(ushort? value) . Performs bitwise NOT operation on a given value. uint? Not(uint? value) . Performs bitwise NOT operation on a given value. ulong? Not(ulong? value) . Performs bitwise NOT operation on a given value. byte? And(byte? left, byte? right) . Performs bitwise AND operation on two given values. int? And(byte? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(byte? left, short? right) . Performs bitwise AND operation on two given values. int? And(byte? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(byte? left, int? right) . Performs bitwise AND operation on two given values. uint? And(byte? left, uint? right) . Performs bitwise AND operation on two given values. long? And(byte? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(byte? left, ulong? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, byte? right) . Performs bitwise AND operation on two given values. sbyte? And(sbyte? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, short? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, int? right) . Performs bitwise AND operation on two given values. uint? And(sbyte? left, uint? right) . Performs bitwise AND operation on two given values. long? And(sbyte? left, long? right) . Performs bitwise AND operation on two given values. int? And(short? left, byte? right) . Performs bitwise AND operation on two given values. int? And(short? left, sbyte? right) . Performs bitwise AND operation on two given values. short? And(short? left, short? right) . Performs bitwise AND operation on two given values. int? And(short? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(short? left, int? right) . Performs bitwise AND operation on two given values. uint? And(short? left, uint? right) . Performs bitwise AND operation on two given values. long? And(short? left, long? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, byte? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, short? right) . Performs bitwise AND operation on two given values. ushort? And(ushort? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, int? right) . Performs bitwise AND operation on two given values. uint? And(ushort? left, uint? right) . Performs bitwise AND operation on two given values. long? And(ushort? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(ushort? left, ulong? right) . Performs bitwise AND operation on two given values. int? And(int? left, byte? right) . Performs bitwise AND operation on two given values. int? And(int? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(int? left, short? right) . Performs bitwise AND operation on two given values. int? And(int? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(int? left, int? right) . Performs bitwise AND operation on two given values. uint? And(int? left, uint? right) . Performs bitwise AND operation on two given values. long? And(int? left, long? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, uint? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, byte? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, sbyte? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, short? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, ushort? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, int? right) . Performs bitwise AND operation on two given values. ulong? And(uint? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(uint? left, ulong? right) . Performs bitwise AND operation on two given values. long? And(long? left, long? right) . Performs bitwise AND operation on two given values. long? And(long? left, byte? right) . Performs bitwise AND operation on two given values. long? And(long? left, sbyte? right) . Performs bitwise AND operation on two given values. long? And(long? left, short? right) . Performs bitwise AND operation on two given values. long? And(long? left, ushort? right) . Performs bitwise AND operation on two given values. long? And(long? left, int? right) . Performs bitwise AND operation on two given values. long? And(long? left, uint? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, byte? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, ushort? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, uint? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, ulong? right) . Performs bitwise AND operation on two given values. byte? Or(byte? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, short? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(byte? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(byte? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(byte? left, ulong? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, byte? right) . Performs bitwise OR operation on two given values. sbyte? Or(sbyte? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, short? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(sbyte? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(sbyte? left, long? right) . Performs bitwise OR operation on two given values. int? Or(short? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(short? left, sbyte? right) . Performs bitwise OR operation on two given values. short? Or(short? left, short? right) . Performs bitwise OR operation on two given values. int? Or(short? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(short? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(short? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(short? left, long? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, short? right) . Performs bitwise OR operation on two given values. ushort? Or(ushort? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(ushort? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(ushort? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(ushort? left, ulong? right) . Performs bitwise OR operation on two given values. int? Or(int? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(int? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(int? left, short? right) . Performs bitwise OR operation on two given values. int? Or(int? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(int? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(int? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(int? left, long? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, uint? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, byte? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, sbyte? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, short? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, ushort? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, int? right) . Performs bitwise OR operation on two given values. ulong? Or(uint? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(uint? left, ulong? right) . Performs bitwise OR operation on two given values. long? Or(long? left, long? right) . Performs bitwise OR operation on two given values. long? Or(long? left, byte? right) . Performs bitwise OR operation on two given values. long? Or(long? left, sbyte? right) . Performs bitwise OR operation on two given values. long? Or(long? left, short? right) . Performs bitwise OR operation on two given values. long? Or(long? left, ushort? right) . Performs bitwise OR operation on two given values. long? Or(long? left, int? right) . Performs bitwise OR operation on two given values. long? Or(long? left, uint? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, byte? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, ushort? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, uint? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, ulong? right) . Performs bitwise OR operation on two given values. byte? Xor(byte? left, byte? right) . Performs bitwise OR operation on two given values. int? Xor(byte? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(byte? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(byte? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(byte? left, ulong? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, byte? right) . Performs bitwise Xor operation on two given values. sbyte? Xor(sbyte? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(sbyte? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(sbyte? left, long? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, sbyte? right) . Performs bitwise Xor operation on two given values. short? Xor(short? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, ushort? right) . Performs bitwise XOR operation on two given values. int? Xor(short? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(short? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(short? left, long? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, short? right) . Performs bitwise Xor operation on two given values. ushort? Xor(ushort? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(ushort? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(ushort? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ushort? left, ulong? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(int? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(int? left, long? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, uint? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, byte? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, sbyte? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, short? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, ushort? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, int? right) . Performs bitwise Xor operation on two given values. ulong? Xor(uint? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(uint? left, ulong? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, long? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, byte? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, sbyte? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, short? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, ushort? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, int? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, uint? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, ulong? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, byte? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, ushort? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, uint? right) . Performs bitwise Xor operation on two given values. byte[] GetBytes(string? content) . Gets the bytes from the given string. byte[] GetBytes(string? content, int length, int offset) . Gets the bytes from the given string within given offset and length. byte?[]? GetBytes(char? character) . Gets the bytes from the given character. byte?[]? GetBytes(bool? bit) . Gets the bytes from the given boolean. byte?[]? GetBytes(long? value) . Gets the bytes from the given long. byte?[]? GetBytes(int? value) . Gets the bytes from the given int. byte?[]? GetBytes(short? value) . Gets the bytes from the given short. byte?[]? GetBytes(ulong? value) . Gets the bytes from the given ulong. byte?[]? GetBytes(ushort? value) . Gets the bytes from the given ushort. byte?[]? GetBytes(uint? value) . Gets the bytes from the given uint. byte?[]? GetBytes(Decimal? value) . Gets the bytes from the given decimal. byte?[]? GetBytes(double? value) . Gets the bytes from the given double. byte?[]? GetBytes(float? value) . Gets the bytes from the given float. string? ToBin(byte?[]? bytes, string delimiter) . Converts given bytes to binary with defined delimiter . string ToBin&lt;T&gt;(T value) . Converts given value to binary . string ToOcta&lt;T&gt;(T value) . Converts given value to octal . string ToDec&lt;T&gt;(T value) . Converts given value to decimal . string ToBase64(byte[] value) . Converts given value to string . string ToBase64(byte[] value, int offset, int length) . Converts given array of bytes to string . byte[] FromBase64(string value) . Converts given string to bytes array . bool FromBytesToBool(byte[] value) . Converts bytes to boolean value. short FromBytesToInt16(byte[] value) . Converts bytes to a 16-bit signed integer. ushort FromBytesToUInt16(byte[] value) . Converts bytes to a 16-bit unsigned integer. int FromBytesToInt32(byte[] value) . Converts bytes to a 32-bit signed integer. uint FromBytesToUInt32(byte[] value) . Converts bytes to a 32-bit unsigned integer. long FromBytesToInt64(byte[] value) . Converts bytes to a 64-bit signed integer. ulong FromBytesToUInt64(byte[] value) . Converts bytes to a 64-bit unsigned integer. float FromBytesToFloat(byte[] value) . Converts bytes to a float value. double FromBytesToDouble(byte[] value) . Converts bytes to a float value. string FromBytesToString(byte[] value) . Converts bytes to a string. byte[] ToBytes(bool value) . Converts boolean value to bytes. byte[] ToBytes(short value) . Converts short value to bytes. byte[] ToBytes(ushort value) . Converts ushort value to bytes. byte[] ToBytes(int value) . Converts int value to bytes. byte[] ToBytes(uint value) . Converts uint value to bytes. byte[] ToBytes(long value) . Converts long value to bytes. byte[] ToBytes(ulong value) . Converts long value to bytes. string? ToHex(byte?[]? bytes, string delimiter) . Converts given bytes to hex with defined delimiter . string? ToHex&lt;T&gt;(T value) . Converts given value to binary . int Count(string name) . Gets the count value of a given group. int Count(string name, int parent) . Gets the count value of a given group. int ExtractFromDate(string? date, string partOfDate) . Extracts part of the date from the date . int ExtractFromDate(string date, string culture, string partOfDate) . Extracts part of the date from the date based on given culture . DateTimeOffset? GetDate() . Gets the current datetime . DateTimeOffset? UtcGetDate() . Gets the current datetime in UTC . int? Month(DateTimeOffset? value) . Gets the month from DateTimeOffset . int? Year(DateTimeOffset? value) . Gets the year from DateTimeOffset . int? Day(DateTimeOffset? value) . Gets the day from DateTimeOffset . int? Hour(DateTimeOffset? value) . Gets the hour from DateTimeOffset . int? Minute(DateTimeOffset? value) . Gets the minute from DateTimeOffset . int? Second(DateTimeOffset? value) . Gets the second from DateTimeOffset . int? Milliseconds(DateTimeOffset? value) . Gets the millisecond from DateTimeOffset . int? DayOfWeek(DateTimeOffset? value) . Gets the day of week from DateTimeOffset . TimeSpan? ExtractTimeSpan(DateTimeOffset? dateTimeOffset) . Extracts time from DateTimeOffset . DateTime? ToDateTimeOffset(string value) . Converts given value to DateTimeOffset . DateTimeOffset? ToDateTimeOffset(string value, string culture) . Converts given value to DateTimeOffset . IEnumerable&lt;T&gt;? Skip&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? skipCount) . Skips elements from the beginning of the sequence. IEnumerable&lt;T&gt;? Take&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? takeCount) . Takes elements from the beginning of the sequence. IEnumerable&lt;T&gt;? SkipAndTake&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? skipCount, int? takeCount) . Skip and takes elements from the beginning of the sequence. T[]? EnumerableToArray&lt;T&gt;(IEnumerable&lt;T&gt;? values) . Turn array arguments of T into a single array. T[]? MergeArrays&lt;T&gt;(T[][]? values) . Turn array arguments of T into a single array. IEnumerable&lt;T&gt;? LongestCommonSequence&lt;T&gt;(IEnumerable&lt;T&gt;? source, IEnumerable&lt;T&gt;? pattern) . Computes longest common sequence of two given sequences . T? GetElementAtOrDefault&lt;T&gt;(IEnumerable&lt;T&gt;? enumerable, int? index) . Gets the element at the specified index in a sequence . int? Length&lt;T&gt;(IEnumerable&lt;T&gt;? enumerable) . Gets the length of the sequence . int? Length&lt;T&gt;(T[]? array) . Gets the length of the array . T? Choose&lt;T&gt;(int? index, T[] values) . Gets the value of an array at the specified index . T If&lt;T&gt;(bool expressionResult, T a, T b) . Chose a or b value based on the expression result . bool? Match(string? regex, string? content) . Determine whether content matches the specified pattern . byte? Coalesce(byte?[] array) . Gets the first non-null value in a list . sbyte? Coalesce(sbyte?[] array) . Gets the first non-null value in a list . short? Coalesce(short?[] array) . Gets the first non-null value in a list . ushort? Coalesce(ushort?[] array) . Gets the first non-null value in a list . int? Coalesce(int?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(uint?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(long?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(ulong?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(Decimal?[] array) . Gets the first non-null value in a list . T? Coalesce&lt;T&gt;(T[] array) . Gets the first non-null value in a list . IEnumerable&lt;T&gt;? Distinct&lt;T&gt;(IEnumerable&lt;T&gt;? values) . Returns distinct elements from a collection. string? Md5(string? content) . Gets the md5 hash of the given string. string? Md5(byte?[]? content) . Gets the md5 hash of the given bytes array. string? Sha1(string? content) . Gets the sha256 hash of the given string. string? Sha1(byte?[]? content) . Gets the sha256 hash of the given bytes array. string? Sha256(string? content) . Gets the sha256 hash of the given string. string? Sha256(byte?[]? content) . Gets the sha256 hash of the given bytes array. string? Sha512(string? content) . Gets the sha256 hash of the given string. string? Sha512(byte?[]? content) . Gets the sha256 hash of the bytes array. string? ToJson&lt;T&gt;(T? obj) . Converts object to json. string[] ExtractFromJsonToArray(string? json, string? path) . Extracts values from json by path. string? ExtractFromJson(string? json, string? path) . Extracts values from json by path and joins them with comma. Decimal? Abs(Decimal? value) . Gets the absolute value . long? Abs(long? value) . Gets the absolute value . int? Abs(int? value) . Gets the absolute value . Decimal? Ceil(Decimal? value) . Gets the ceiling value . Decimal? Floor(Decimal? value) . Gets the floor value . Decimal? Sign(Decimal? value) . Determine whether value is greater, equal or less that zero . long? Sign(long? value) . Determine whether value is greater, equal or less that zero . Decimal? Round(Decimal? value, int precision) . Rounds the value within given precision . Decimal? PercentOf(Decimal? value, Decimal? max) . Gets the percentage of the value . int Rand() . Gets the random integer value . int? Rand(int? min, int? max) . Gets the random integer value . double? Pow(Decimal? x, Decimal? y) . Computes the pow between two values . double? Pow(double? x, double? y) . Computes the pow between two values . double? Sqrt(Decimal? x) . Computes the sqrt of a given value . double? Sqrt(double? x) . Computes the sqrt of a given value . double? Sqrt(long? x) . Computes the sqrt of a given value . double? PercentRank&lt;T&gt;(IEnumerable&lt;T&gt;? window, T? value) . Computes the percent rank of a given window . double? Log(Decimal? base, Decimal? value) . Calculates the logarithm of a value with a specified base. Decimal? Sin(Decimal? value) . Calculates sine of a value. double? Sin(double? value) . Calculates sine of a value. float? Sin(float? value) . Calculates sine of a value. Decimal? Cos(Decimal? value) . Calculates cosine of a value. double? Cos(double? value) . Calculates cosine of a value. float? Cos(float? value) . Calculates cosine of a value. Decimal Max(string name) . Gets the max value of a given group. Decimal Max(string name, int parent) . Gets the max value of a given group. Decimal Min(string name) . Gets the min value of a given group. Decimal Min(string name, int parent) . Gets the min value of a given group. Decimal StDev(string name, int parent) . Gets the StDev value of a given group. string NewId() . Gets the new identifier . string? Trim(string? value) . Removes leading and trailing whitespace from a string. string? TrimStart(string? value) . Removes leading whitespace from a string. string? TrimEnd(string? value) . Removes trailing whitespace from a string. string? Substring(string? value, int? index, int? length) . Gets the substring from the string. string? Substring(string value, int? length) . Gets the substring from the string . string? Concat(string[]? strings) . Concatenates the specified values . string? Concat(char?[]? characters) . Concatenates the specified characters . string? Concat(string? firstString, char?[]? chars) . Concatenates specified string fir characters . string? Concat(char? firstChar, string[]? strings) . Concatenate specific character with strings . string? Concat(object[]? objects) . Concatenates the specified strings . string? Concat&lt;T&gt;(T[]? objects) . Concatenates the specified strings . bool? Contains(string? content, string? what) . Determine whether the string contains the specified value . int? IndexOf(string? value, string? text) . Position of the first occurrence of the specified value . string? Soundex(string? value) . Computes soundex for the specified value . bool HasFuzzyMatchedWord(string text, string word, string separator) . Matches the specified text by splitting it with separator and applying fuzzy comparison . bool HasWordThatHasSmallerLevenshteinDistanceThan(string text, string word, int distance, string separator) . Matches the specified text by splitting it with separator and applying fuzzy comparison with a given distance . bool HasWordThatSoundLike(string text, string word, string separator) . Matches whether the specified word is present after being fuzzified within the specified text . bool HasTextThatSoundLikeSentence(string text, string sentence, string separator) . Matches whether the specified text is present in sentence after being fuzified . string? ToUpper(string value) . Makes the string uppercase . string? ToUpper(string value, string culture) . Makes the string uppercase within specified culture . string? ToUpperInvariant(string value) . Makes the string uppercase . string? ToLower(string value) . Makes the string lowercase . string? ToLower(string value, string culture) . Makes the string lowercase within specified culture . string? ToLowerInvariant(string value) . Makes the string lowercase . string? PadLeft(string? value, string? character, int? totalWidth) . Returns a new string that right-aligns the characters in this instance by padding them on the left with a specified Unicode character, for a specified total lengt . string? PadRight(string? value, string? character, int? totalWidth) . Returns a new string that left-aligns the characters in this instance by padding them on the right with a specified Unicode character, for a specified total length . string? Head(string? value, int? length) . Gets the first N characters of the string . string? Tail(string? value, int? length) . Gets the last N characters of the string . int? LevenshteinDistance(string? firstValue, string? secondValue) . Computes the Levenshtein distance between two strings . char? GetCharacterOf(string value, int index) . Gets the character at specified index . string? Reverse(string? value) . Reverses the string . string[] Split(string value, string[] separators) . Splits the string into an array of substrings based on the specified separators . char[] ToCharArray(string value) . Splits the string into an array of characters . string? LongestCommonSubstring(string source, string pattern) . Computes the longest common subsequence between two source and pattern . string Replicate(string value, int integer) . Clones the value n times . string? Translate(string? value, string? characters, string? translations) . Returns the string from the first argument after the characters specified in the second argument are translated into the characters specified in the third argument. string? Replace(string? text, string lookFor, string? changeTo) . Replaces the first occurrence of a specified string in this instance with another specified string . string? ToTitleCase(string? value) . Capitalizes the first letter of the string . string? GetNthWord(string? text, int? wordIndex, string? separator) . Gets the nth word of the string . string? GetFirstWord(string text, string separator) . Gets the first word of the string . string? GetSecondWord(string text, string separator) . Gets the second word of the string . string? GetThirdWord(string text, string separator) . Gets the third word of the string . string? GetLastWord(string? text, string? separator) . Gets last word of the string . bool? IsNullOrEmpty(string? value) . Determines whether the string is null or empty . bool? IsNullOrWhiteSpace(string? value) . Determines whether the string is null or whitespace . string? UrlEncode(string? value) . Encodes the value . string? UrlDecode(string? value) . Decodes the value . string? UriEncode(string? value) . Encodes the value . string? UriDecode(string? value) . Decodes the value . bool? StartsWith(string? value, string? prefix) . Determines whether the string starts with the specified prefix . bool? StartsWith(string? value, string? prefix, string comparison) . Determines whether the string starts with the specified prefix . bool? EndsWith(string? value, string? suffix) . Determines whether the string ends with the specified suffix . bool? EndsWith(string? value, string? suffix, string comparison) . Determines whether the string ends with the specified suffix . string? RegexReplace(string? value, string? pattern, string? replacement) . Replace the specified value part that matches the pattern with the replacement . string[]? SplitByLinuxNewLines(string? input) . Split string by Linux-style newlines (\\n) . string[]? SplitByWindowsNewLines(string? input) . Split string by Windows-style newlines (\\r\\n) . string[]? SplitByNewLines(string? input) . Smart split that handles both Windows (\\r\\n) and Linux (\\n) newlines . Decimal Sum(string name) . Gets the sum value of a given group. Decimal Sum(string name, int parent) . Gets the sum value of a given group. Decimal SumIncome(string name) . Gets the sum value of a given group. Decimal SumIncome(string name, int parent) . Gets the sum value of a given group. Decimal SumOutcome(string name) . Gets the outcome value of a given group. Decimal SumOutcome(string name, int parent) . Gets the outcome value of a given group. TimeSpan? SumTimeSpan(string name) . Gets the sum value of a given group. TimeSpan? SumTimeSpan(string name, int parent) . Gets the sum value of a given group. TimeSpan? MinTimeSpan(string name) . Gets the min value of a given group. TimeSpan? MinTimeSpan(string name, int parent) . Gets the min value of a given group. TimeSpan? MaxTimeSpan(string name) . Gets the max value of a given group. TimeSpan? MaxTimeSpan(string name, int parent) . Gets the min value of a given group. char? ToChar(string? value) . Converts given value to character . char? ToChar(int? value) . Converts given value to character . char? ToChar(short? value) . Converts given value to character . char? ToChar(byte? value) . Converts given value to character . char? ToChar(object? value) . Converts given value to character . DateTime? ToDateTime(string value) . Converts given value to DateTime . DateTime? ToDateTime(string value, string culture) . Converts given value to DateTime . Decimal? ToDecimal(string? value) . Converts given value to decimal . Decimal? ToDecimal(string value, string culture) . Converts given value to decimal withing given culture . Decimal? ToDecimal(byte? value) . Converts given value to Decimal . Decimal? ToDecimal(sbyte? value) . Converts given value to Decimal . Decimal? ToDecimal(short? value) . Converts given value to Decimal . Decimal? ToDecimal(ushort? value) . Converts given value to Decimal . Decimal? ToDecimal(long? value) . Converts given value to Decimal . Decimal? ToDecimal(ulong? value) . Converts given value to Decimal . Decimal? ToDecimal(float? value) . Converts given value to Decimal . Decimal? ToDecimal(double? value) . Converts given value to Decimal . Decimal? ToDecimal(object? value) . Converts given value to Decimal . double? ToDouble(object? value) . Converts given value to double . double? ToDouble(string? value) . Converts given value to double . double? ToDouble(byte? value) . Converts given value to double . double? ToDouble(sbyte? value) . Converts given value to double . double? ToDouble(short? value) . Converts given value to double . double? ToDouble(ushort? value) . Converts given value to double . double? ToDouble(int? value) . Converts given value to double . double? ToDouble(uint? value) . Converts given value to double . double? ToDouble(long? value) . Converts given value to double . double? ToDouble(ulong? value) . Converts given value to double . double? ToDouble(float? value) . Converts given value to double . double? ToDouble(double? value) . Converts given value to double . double? ToDouble(Decimal? value) . Converts given value to double . float? ToFloat(string? value) . Converts given value to float . float? ToFloat(byte? value) . Converts given value to float . float? ToFloat(sbyte? value) . Converts given value to float . float? ToFloat(short? value) . Converts given value to float . float? ToFloat(ushort? value) . Converts given value to float . float? ToFloat(int? value) . Converts given value to float . float? ToFloat(uint? value) . Converts given value to float . float? ToFloat(long? value) . Converts given value to float . float? ToFloat(ulong? value) . Converts given value to float . float? ToFloat(float? value) . Converts given value to float . float? ToFloat(Decimal? value) . Converts given value to float . int? ToInt32(string value) . Converts given value to int . int? ToInt32(byte? value) . Converts given value to int . int? ToInt32(sbyte? value) . Converts given value to int . int? ToInt32(short? value) . Converts given value to int . int? ToInt32(ushort? value) . Converts given value to int . int? ToInt32(int? value) . Converts given value to int . int? ToInt32(uint? value) . Converts given value to int . int? ToInt32(long? value) . Converts given value to int . int? ToInt32(ulong? value) . Converts given value to int . int? ToInt32(float? value) . Converts given value to int . int? ToInt32(double? value) . Converts given value to int . int? ToInt32(Decimal? value) . Converts given value to int . int? ToInt32(object? value) . Converts given value to int . long? ToInt64(string value) . Converts given value to Int64 . long? ToInt64(byte? value) . Converts given value to long . long? ToInt64(sbyte? value) . Converts given value to long . long? ToInt64(short? value) . Converts given value to long . long? ToInt64(ushort? value) . Converts given value to long . long? ToInt64(int? value) . Converts given value to long . long? ToInt64(uint? value) . Converts given value to long . long? ToInt64(long? value) . Converts given value to long . long? ToInt64(ulong? value) . Converts given value to long . long? ToInt64(float? value) . Converts given value to long . long? ToInt64(double? value) . Converts given value to long . long? ToInt64(Decimal? value) . Converts given value to long . long? ToInt64(object? value) . Converts given value to long . string? ToString(char? value) . Converts given value to string . string? ToString(DateTimeOffset? value) . Converts given value to string . string? ToString(DateTimeOffset? value, string format) . Converts given value to string . string? ToString(byte? value) . Converts given value to string . string? ToString(byte? value, string format) . Converts given value to string . string? ToString(sbyte? value) . Converts given value to string . string? ToString(sbyte? value, string format) . Converts given value to string . string? ToString(int? value) . Converts given value to string . string? ToString(int? value, string format) . Converts given value to string . string? ToString(uint? value) . Converts given value to string . string? ToString(uint? value, string format) . Converts given value to string . string? ToString(long? value) . Converts given value to string . string? ToString(long? value, string format) . Converts given value to string . string? ToString(ulong? value) . Converts given value to string . string? ToString(ulong? value, string format) . Converts given value to string . string? ToString(float? value) . Converts given value to string . string? ToString(float? value, string format) . Converts given value to string . string? ToString(double? value) . Converts given value to string . string? ToString(double? value, string format) . Converts given value to string . string? ToString(Decimal? value) . Converts given value to string . string? ToString(Decimal? value, string format) . Converts given value to string . string? ToString(bool? value) . Converts given value to string . string? ToString(object? value) . Converts given value to string . string? ToString&lt;T&gt;(T? value) . Converts given value to string . string ToString(string[] value) . Converts given value to string . string ToString&lt;T&gt;(T[] value) . Converts given value to string . TimeSpan? ToTimeSpan(string value) . Converts given value to TimeSpan . TimeSpan? ToTimeSpan(string value, string culture) . Converts given value to TimeSpan . IEnumerable&lt;T&gt; Window&lt;T&gt;(string name) . Gets the window . ",
    "url": "/data-sources/FlatFile/macos-x64.html#base-methods",
    
    "relUrl": "/data-sources/FlatFile/macos-x64.html#base-methods"
  },"224": {
    "doc": "MacOs X64",
    "title": "MacOs X64",
    "content": " ",
    "url": "/data-sources/FlatFile/macos-x64.html",
    
    "relUrl": "/data-sources/FlatFile/macos-x64.html"
  },"225": {
    "doc": "MacOs X64",
    "title": "Musoq.DataSources.Json",
    "content": "Provides schema to work with json files . ",
    "url": "/data-sources/Json/macos-x64.html#musoqdatasourcesjson",
    
    "relUrl": "/data-sources/Json/macos-x64.html#musoqdatasourcesjson"
  },"226": {
    "doc": "MacOs X64",
    "title": "Tables",
    "content": "Table is a collection of rows and columns that the plugin exposes. Below are the tables that are exposed by this data source. json.file(string jsonFilePath, string jsonSchemaFilePath) . Gives the ability to process json files . This table has a dynamic structure, which means that its columns and other details cannot be determined until runtime. As a result, it is not possible to include a complete description of this table in the documentation. Instead, the actual columns and other details of this table will be determined at runtime. ",
    "url": "/data-sources/Json/macos-x64.html#tables",
    
    "relUrl": "/data-sources/Json/macos-x64.html#tables"
  },"227": {
    "doc": "MacOs X64",
    "title": "Methods",
    "content": "Methods are functions that can be called on the data source specific column. Below are the methods that are exposed by this data source. int Length(List&lt;Dynamic.ExpandoObject&gt; array) . Gets the length of the array . int Length(List&lt;object&gt; array) . Gets the length of the array . string MakeFlat(List&lt;Dynamic.ExpandoObject&gt; array) . Flattening the array . string MakeFlat(List&lt;object&gt; array) . Flattening the array . ",
    "url": "/data-sources/Json/macos-x64.html#methods",
    
    "relUrl": "/data-sources/Json/macos-x64.html#methods"
  },"228": {
    "doc": "MacOs X64",
    "title": "Base Methods",
    "content": "Base methods are methods that can be called on the data source specific column. Those methods are automatically inherited and enriches the data source specific methods. Below are those base methods that are exposed by this data source. int RowNumber() . Gets the row number of the current row. string? GetTypeName(object? obj) . Gets the typename of passed object. string AggregateValues(string name) . Aggregates values into a single value. string AggregateValues(string name, int parent) . Aggregates values into a single value. Decimal Avg(string name) . Gets the aggregated average value from the given group name . Decimal Avg(string name, int parent) . Gets the aggregated average value from the given group name . byte? ShiftLeft(byte? value, int shift) . Shifts the value to the left by the specified number of bits. short? ShiftLeft(short? value, int shift) . Shifts the value to the left by the specified number of bits. int? ShiftLeft(int? value, int shift) . Shifts the value to the left by the specified number of bits. long? ShiftLeft(long? value, int shift) . Shifts the value to the left by the specified number of bits. sbyte? ShiftLeft(sbyte? value, int shift) . Shifts the value to the left by the specified number of bits. ushort? ShiftLeft(ushort? value, int shift) . Shifts the value to the left by the specified number of bits. uint? ShiftLeft(uint? value, int shift) . Shifts the value to the left by the specified number of bits. ulong? ShiftLeft(ulong? value, int shift) . Shifts the value to the left by the specified number of bits. byte? ShiftRight(byte? value, int shift) . Shifts the value to the right by the specified number of bits. short? ShiftRight(short? value, int shift) . Shifts the value to the right by the specified number of bits. int? ShiftRight(int? value, int shift) . Shifts the value to the right by the specified number of bits. long? ShiftRight(long? value, int shift) . Shifts the value to the right by the specified number of bits. sbyte? ShiftRight(sbyte? value, int shift) . Shifts the value to the right by the specified number of bits. ushort? ShiftRight(ushort? value, int shift) . Shifts the value to the right by the specified number of bits. uint? ShiftRight(uint? value, int shift) . Shifts the value to the right by the specified number of bits. ulong? ShiftRight(ulong? value, int shift) . Shifts the value to the right by the specified number of bits. byte? Not(byte? value) . Performs bitwise NOT operation on a given value. short? Not(short? value) . Performs bitwise NOT operation on a given value. int? Not(int? value) . Performs bitwise NOT operation on a given value. long? Not(long? value) . Performs bitwise NOT operation on a given value. sbyte? Not(sbyte? value) . Performs bitwise NOT operation on a given value. ushort? Not(ushort? value) . Performs bitwise NOT operation on a given value. uint? Not(uint? value) . Performs bitwise NOT operation on a given value. ulong? Not(ulong? value) . Performs bitwise NOT operation on a given value. byte? And(byte? left, byte? right) . Performs bitwise AND operation on two given values. int? And(byte? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(byte? left, short? right) . Performs bitwise AND operation on two given values. int? And(byte? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(byte? left, int? right) . Performs bitwise AND operation on two given values. uint? And(byte? left, uint? right) . Performs bitwise AND operation on two given values. long? And(byte? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(byte? left, ulong? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, byte? right) . Performs bitwise AND operation on two given values. sbyte? And(sbyte? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, short? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, int? right) . Performs bitwise AND operation on two given values. uint? And(sbyte? left, uint? right) . Performs bitwise AND operation on two given values. long? And(sbyte? left, long? right) . Performs bitwise AND operation on two given values. int? And(short? left, byte? right) . Performs bitwise AND operation on two given values. int? And(short? left, sbyte? right) . Performs bitwise AND operation on two given values. short? And(short? left, short? right) . Performs bitwise AND operation on two given values. int? And(short? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(short? left, int? right) . Performs bitwise AND operation on two given values. uint? And(short? left, uint? right) . Performs bitwise AND operation on two given values. long? And(short? left, long? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, byte? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, short? right) . Performs bitwise AND operation on two given values. ushort? And(ushort? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, int? right) . Performs bitwise AND operation on two given values. uint? And(ushort? left, uint? right) . Performs bitwise AND operation on two given values. long? And(ushort? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(ushort? left, ulong? right) . Performs bitwise AND operation on two given values. int? And(int? left, byte? right) . Performs bitwise AND operation on two given values. int? And(int? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(int? left, short? right) . Performs bitwise AND operation on two given values. int? And(int? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(int? left, int? right) . Performs bitwise AND operation on two given values. uint? And(int? left, uint? right) . Performs bitwise AND operation on two given values. long? And(int? left, long? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, uint? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, byte? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, sbyte? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, short? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, ushort? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, int? right) . Performs bitwise AND operation on two given values. ulong? And(uint? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(uint? left, ulong? right) . Performs bitwise AND operation on two given values. long? And(long? left, long? right) . Performs bitwise AND operation on two given values. long? And(long? left, byte? right) . Performs bitwise AND operation on two given values. long? And(long? left, sbyte? right) . Performs bitwise AND operation on two given values. long? And(long? left, short? right) . Performs bitwise AND operation on two given values. long? And(long? left, ushort? right) . Performs bitwise AND operation on two given values. long? And(long? left, int? right) . Performs bitwise AND operation on two given values. long? And(long? left, uint? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, byte? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, ushort? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, uint? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, ulong? right) . Performs bitwise AND operation on two given values. byte? Or(byte? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, short? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(byte? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(byte? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(byte? left, ulong? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, byte? right) . Performs bitwise OR operation on two given values. sbyte? Or(sbyte? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, short? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(sbyte? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(sbyte? left, long? right) . Performs bitwise OR operation on two given values. int? Or(short? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(short? left, sbyte? right) . Performs bitwise OR operation on two given values. short? Or(short? left, short? right) . Performs bitwise OR operation on two given values. int? Or(short? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(short? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(short? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(short? left, long? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, short? right) . Performs bitwise OR operation on two given values. ushort? Or(ushort? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(ushort? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(ushort? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(ushort? left, ulong? right) . Performs bitwise OR operation on two given values. int? Or(int? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(int? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(int? left, short? right) . Performs bitwise OR operation on two given values. int? Or(int? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(int? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(int? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(int? left, long? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, uint? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, byte? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, sbyte? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, short? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, ushort? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, int? right) . Performs bitwise OR operation on two given values. ulong? Or(uint? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(uint? left, ulong? right) . Performs bitwise OR operation on two given values. long? Or(long? left, long? right) . Performs bitwise OR operation on two given values. long? Or(long? left, byte? right) . Performs bitwise OR operation on two given values. long? Or(long? left, sbyte? right) . Performs bitwise OR operation on two given values. long? Or(long? left, short? right) . Performs bitwise OR operation on two given values. long? Or(long? left, ushort? right) . Performs bitwise OR operation on two given values. long? Or(long? left, int? right) . Performs bitwise OR operation on two given values. long? Or(long? left, uint? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, byte? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, ushort? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, uint? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, ulong? right) . Performs bitwise OR operation on two given values. byte? Xor(byte? left, byte? right) . Performs bitwise OR operation on two given values. int? Xor(byte? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(byte? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(byte? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(byte? left, ulong? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, byte? right) . Performs bitwise Xor operation on two given values. sbyte? Xor(sbyte? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(sbyte? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(sbyte? left, long? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, sbyte? right) . Performs bitwise Xor operation on two given values. short? Xor(short? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, ushort? right) . Performs bitwise XOR operation on two given values. int? Xor(short? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(short? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(short? left, long? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, short? right) . Performs bitwise Xor operation on two given values. ushort? Xor(ushort? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(ushort? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(ushort? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ushort? left, ulong? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(int? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(int? left, long? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, uint? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, byte? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, sbyte? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, short? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, ushort? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, int? right) . Performs bitwise Xor operation on two given values. ulong? Xor(uint? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(uint? left, ulong? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, long? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, byte? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, sbyte? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, short? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, ushort? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, int? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, uint? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, ulong? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, byte? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, ushort? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, uint? right) . Performs bitwise Xor operation on two given values. byte[] GetBytes(string? content) . Gets the bytes from the given string. byte[] GetBytes(string? content, int length, int offset) . Gets the bytes from the given string within given offset and length. byte?[]? GetBytes(char? character) . Gets the bytes from the given character. byte?[]? GetBytes(bool? bit) . Gets the bytes from the given boolean. byte?[]? GetBytes(long? value) . Gets the bytes from the given long. byte?[]? GetBytes(int? value) . Gets the bytes from the given int. byte?[]? GetBytes(short? value) . Gets the bytes from the given short. byte?[]? GetBytes(ulong? value) . Gets the bytes from the given ulong. byte?[]? GetBytes(ushort? value) . Gets the bytes from the given ushort. byte?[]? GetBytes(uint? value) . Gets the bytes from the given uint. byte?[]? GetBytes(Decimal? value) . Gets the bytes from the given decimal. byte?[]? GetBytes(double? value) . Gets the bytes from the given double. byte?[]? GetBytes(float? value) . Gets the bytes from the given float. string? ToBin(byte?[]? bytes, string delimiter) . Converts given bytes to binary with defined delimiter . string ToBin&lt;T&gt;(T value) . Converts given value to binary . string ToOcta&lt;T&gt;(T value) . Converts given value to octal . string ToDec&lt;T&gt;(T value) . Converts given value to decimal . string ToBase64(byte[] value) . Converts given value to string . string ToBase64(byte[] value, int offset, int length) . Converts given array of bytes to string . byte[] FromBase64(string value) . Converts given string to bytes array . bool FromBytesToBool(byte[] value) . Converts bytes to boolean value. short FromBytesToInt16(byte[] value) . Converts bytes to a 16-bit signed integer. ushort FromBytesToUInt16(byte[] value) . Converts bytes to a 16-bit unsigned integer. int FromBytesToInt32(byte[] value) . Converts bytes to a 32-bit signed integer. uint FromBytesToUInt32(byte[] value) . Converts bytes to a 32-bit unsigned integer. long FromBytesToInt64(byte[] value) . Converts bytes to a 64-bit signed integer. ulong FromBytesToUInt64(byte[] value) . Converts bytes to a 64-bit unsigned integer. float FromBytesToFloat(byte[] value) . Converts bytes to a float value. double FromBytesToDouble(byte[] value) . Converts bytes to a float value. string FromBytesToString(byte[] value) . Converts bytes to a string. byte[] ToBytes(bool value) . Converts boolean value to bytes. byte[] ToBytes(short value) . Converts short value to bytes. byte[] ToBytes(ushort value) . Converts ushort value to bytes. byte[] ToBytes(int value) . Converts int value to bytes. byte[] ToBytes(uint value) . Converts uint value to bytes. byte[] ToBytes(long value) . Converts long value to bytes. byte[] ToBytes(ulong value) . Converts long value to bytes. string? ToHex(byte?[]? bytes, string delimiter) . Converts given bytes to hex with defined delimiter . string? ToHex&lt;T&gt;(T value) . Converts given value to binary . int Count(string name) . Gets the count value of a given group. int Count(string name, int parent) . Gets the count value of a given group. int ExtractFromDate(string? date, string partOfDate) . Extracts part of the date from the date . int ExtractFromDate(string date, string culture, string partOfDate) . Extracts part of the date from the date based on given culture . DateTimeOffset? GetDate() . Gets the current datetime . DateTimeOffset? UtcGetDate() . Gets the current datetime in UTC . int? Month(DateTimeOffset? value) . Gets the month from DateTimeOffset . int? Year(DateTimeOffset? value) . Gets the year from DateTimeOffset . int? Day(DateTimeOffset? value) . Gets the day from DateTimeOffset . int? Hour(DateTimeOffset? value) . Gets the hour from DateTimeOffset . int? Minute(DateTimeOffset? value) . Gets the minute from DateTimeOffset . int? Second(DateTimeOffset? value) . Gets the second from DateTimeOffset . int? Milliseconds(DateTimeOffset? value) . Gets the millisecond from DateTimeOffset . int? DayOfWeek(DateTimeOffset? value) . Gets the day of week from DateTimeOffset . TimeSpan? ExtractTimeSpan(DateTimeOffset? dateTimeOffset) . Extracts time from DateTimeOffset . DateTime? ToDateTimeOffset(string value) . Converts given value to DateTimeOffset . DateTimeOffset? ToDateTimeOffset(string value, string culture) . Converts given value to DateTimeOffset . IEnumerable&lt;T&gt;? Skip&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? skipCount) . Skips elements from the beginning of the sequence. IEnumerable&lt;T&gt;? Take&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? takeCount) . Takes elements from the beginning of the sequence. IEnumerable&lt;T&gt;? SkipAndTake&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? skipCount, int? takeCount) . Skip and takes elements from the beginning of the sequence. T[]? EnumerableToArray&lt;T&gt;(IEnumerable&lt;T&gt;? values) . Turn array arguments of T into a single array. T[]? MergeArrays&lt;T&gt;(T[][]? values) . Turn array arguments of T into a single array. IEnumerable&lt;T&gt;? LongestCommonSequence&lt;T&gt;(IEnumerable&lt;T&gt;? source, IEnumerable&lt;T&gt;? pattern) . Computes longest common sequence of two given sequences . T? GetElementAtOrDefault&lt;T&gt;(IEnumerable&lt;T&gt;? enumerable, int? index) . Gets the element at the specified index in a sequence . int? Length&lt;T&gt;(IEnumerable&lt;T&gt;? enumerable) . Gets the length of the sequence . int? Length&lt;T&gt;(T[]? array) . Gets the length of the array . T? Choose&lt;T&gt;(int? index, T[] values) . Gets the value of an array at the specified index . T If&lt;T&gt;(bool expressionResult, T a, T b) . Chose a or b value based on the expression result . bool? Match(string? regex, string? content) . Determine whether content matches the specified pattern . byte? Coalesce(byte?[] array) . Gets the first non-null value in a list . sbyte? Coalesce(sbyte?[] array) . Gets the first non-null value in a list . short? Coalesce(short?[] array) . Gets the first non-null value in a list . ushort? Coalesce(ushort?[] array) . Gets the first non-null value in a list . int? Coalesce(int?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(uint?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(long?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(ulong?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(Decimal?[] array) . Gets the first non-null value in a list . T? Coalesce&lt;T&gt;(T[] array) . Gets the first non-null value in a list . IEnumerable&lt;T&gt;? Distinct&lt;T&gt;(IEnumerable&lt;T&gt;? values) . Returns distinct elements from a collection. string? Md5(string? content) . Gets the md5 hash of the given string. string? Md5(byte?[]? content) . Gets the md5 hash of the given bytes array. string? Sha1(string? content) . Gets the sha256 hash of the given string. string? Sha1(byte?[]? content) . Gets the sha256 hash of the given bytes array. string? Sha256(string? content) . Gets the sha256 hash of the given string. string? Sha256(byte?[]? content) . Gets the sha256 hash of the given bytes array. string? Sha512(string? content) . Gets the sha256 hash of the given string. string? Sha512(byte?[]? content) . Gets the sha256 hash of the bytes array. string? ToJson&lt;T&gt;(T? obj) . Converts object to json. string[] ExtractFromJsonToArray(string? json, string? path) . Extracts values from json by path. string? ExtractFromJson(string? json, string? path) . Extracts values from json by path and joins them with comma. Decimal? Abs(Decimal? value) . Gets the absolute value . long? Abs(long? value) . Gets the absolute value . int? Abs(int? value) . Gets the absolute value . Decimal? Ceil(Decimal? value) . Gets the ceiling value . Decimal? Floor(Decimal? value) . Gets the floor value . Decimal? Sign(Decimal? value) . Determine whether value is greater, equal or less that zero . long? Sign(long? value) . Determine whether value is greater, equal or less that zero . Decimal? Round(Decimal? value, int precision) . Rounds the value within given precision . Decimal? PercentOf(Decimal? value, Decimal? max) . Gets the percentage of the value . int Rand() . Gets the random integer value . int? Rand(int? min, int? max) . Gets the random integer value . double? Pow(Decimal? x, Decimal? y) . Computes the pow between two values . double? Pow(double? x, double? y) . Computes the pow between two values . double? Sqrt(Decimal? x) . Computes the sqrt of a given value . double? Sqrt(double? x) . Computes the sqrt of a given value . double? Sqrt(long? x) . Computes the sqrt of a given value . double? PercentRank&lt;T&gt;(IEnumerable&lt;T&gt;? window, T? value) . Computes the percent rank of a given window . double? Log(Decimal? base, Decimal? value) . Calculates the logarithm of a value with a specified base. Decimal? Sin(Decimal? value) . Calculates sine of a value. double? Sin(double? value) . Calculates sine of a value. float? Sin(float? value) . Calculates sine of a value. Decimal? Cos(Decimal? value) . Calculates cosine of a value. double? Cos(double? value) . Calculates cosine of a value. float? Cos(float? value) . Calculates cosine of a value. Decimal Max(string name) . Gets the max value of a given group. Decimal Max(string name, int parent) . Gets the max value of a given group. Decimal Min(string name) . Gets the min value of a given group. Decimal Min(string name, int parent) . Gets the min value of a given group. Decimal StDev(string name, int parent) . Gets the StDev value of a given group. string NewId() . Gets the new identifier . string? Trim(string? value) . Removes leading and trailing whitespace from a string. string? TrimStart(string? value) . Removes leading whitespace from a string. string? TrimEnd(string? value) . Removes trailing whitespace from a string. string? Substring(string? value, int? index, int? length) . Gets the substring from the string. string? Substring(string value, int? length) . Gets the substring from the string . string? Concat(string[]? strings) . Concatenates the specified values . string? Concat(char?[]? characters) . Concatenates the specified characters . string? Concat(string? firstString, char?[]? chars) . Concatenates specified string fir characters . string? Concat(char? firstChar, string[]? strings) . Concatenate specific character with strings . string? Concat(object[]? objects) . Concatenates the specified strings . string? Concat&lt;T&gt;(T[]? objects) . Concatenates the specified strings . bool? Contains(string? content, string? what) . Determine whether the string contains the specified value . int? IndexOf(string? value, string? text) . Position of the first occurrence of the specified value . string? Soundex(string? value) . Computes soundex for the specified value . bool HasFuzzyMatchedWord(string text, string word, string separator) . Matches the specified text by splitting it with separator and applying fuzzy comparison . bool HasWordThatHasSmallerLevenshteinDistanceThan(string text, string word, int distance, string separator) . Matches the specified text by splitting it with separator and applying fuzzy comparison with a given distance . bool HasWordThatSoundLike(string text, string word, string separator) . Matches whether the specified word is present after being fuzzified within the specified text . bool HasTextThatSoundLikeSentence(string text, string sentence, string separator) . Matches whether the specified text is present in sentence after being fuzified . string? ToUpper(string value) . Makes the string uppercase . string? ToUpper(string value, string culture) . Makes the string uppercase within specified culture . string? ToUpperInvariant(string value) . Makes the string uppercase . string? ToLower(string value) . Makes the string lowercase . string? ToLower(string value, string culture) . Makes the string lowercase within specified culture . string? ToLowerInvariant(string value) . Makes the string lowercase . string? PadLeft(string? value, string? character, int? totalWidth) . Returns a new string that right-aligns the characters in this instance by padding them on the left with a specified Unicode character, for a specified total lengt . string? PadRight(string? value, string? character, int? totalWidth) . Returns a new string that left-aligns the characters in this instance by padding them on the right with a specified Unicode character, for a specified total length . string? Head(string? value, int? length) . Gets the first N characters of the string . string? Tail(string? value, int? length) . Gets the last N characters of the string . int? LevenshteinDistance(string? firstValue, string? secondValue) . Computes the Levenshtein distance between two strings . char? GetCharacterOf(string value, int index) . Gets the character at specified index . string? Reverse(string? value) . Reverses the string . string[] Split(string value, string[] separators) . Splits the string into an array of substrings based on the specified separators . char[] ToCharArray(string value) . Splits the string into an array of characters . string? LongestCommonSubstring(string source, string pattern) . Computes the longest common subsequence between two source and pattern . string Replicate(string value, int integer) . Clones the value n times . string? Translate(string? value, string? characters, string? translations) . Returns the string from the first argument after the characters specified in the second argument are translated into the characters specified in the third argument. string? Replace(string? text, string lookFor, string? changeTo) . Replaces the first occurrence of a specified string in this instance with another specified string . string? ToTitleCase(string? value) . Capitalizes the first letter of the string . string? GetNthWord(string? text, int? wordIndex, string? separator) . Gets the nth word of the string . string? GetFirstWord(string text, string separator) . Gets the first word of the string . string? GetSecondWord(string text, string separator) . Gets the second word of the string . string? GetThirdWord(string text, string separator) . Gets the third word of the string . string? GetLastWord(string? text, string? separator) . Gets last word of the string . bool? IsNullOrEmpty(string? value) . Determines whether the string is null or empty . bool? IsNullOrWhiteSpace(string? value) . Determines whether the string is null or whitespace . string? UrlEncode(string? value) . Encodes the value . string? UrlDecode(string? value) . Decodes the value . string? UriEncode(string? value) . Encodes the value . string? UriDecode(string? value) . Decodes the value . bool? StartsWith(string? value, string? prefix) . Determines whether the string starts with the specified prefix . bool? StartsWith(string? value, string? prefix, string comparison) . Determines whether the string starts with the specified prefix . bool? EndsWith(string? value, string? suffix) . Determines whether the string ends with the specified suffix . bool? EndsWith(string? value, string? suffix, string comparison) . Determines whether the string ends with the specified suffix . string? RegexReplace(string? value, string? pattern, string? replacement) . Replace the specified value part that matches the pattern with the replacement . string[]? SplitByLinuxNewLines(string? input) . Split string by Linux-style newlines (\\n) . string[]? SplitByWindowsNewLines(string? input) . Split string by Windows-style newlines (\\r\\n) . string[]? SplitByNewLines(string? input) . Smart split that handles both Windows (\\r\\n) and Linux (\\n) newlines . Decimal Sum(string name) . Gets the sum value of a given group. Decimal Sum(string name, int parent) . Gets the sum value of a given group. Decimal SumIncome(string name) . Gets the sum value of a given group. Decimal SumIncome(string name, int parent) . Gets the sum value of a given group. Decimal SumOutcome(string name) . Gets the outcome value of a given group. Decimal SumOutcome(string name, int parent) . Gets the outcome value of a given group. TimeSpan? SumTimeSpan(string name) . Gets the sum value of a given group. TimeSpan? SumTimeSpan(string name, int parent) . Gets the sum value of a given group. TimeSpan? MinTimeSpan(string name) . Gets the min value of a given group. TimeSpan? MinTimeSpan(string name, int parent) . Gets the min value of a given group. TimeSpan? MaxTimeSpan(string name) . Gets the max value of a given group. TimeSpan? MaxTimeSpan(string name, int parent) . Gets the min value of a given group. char? ToChar(string? value) . Converts given value to character . char? ToChar(int? value) . Converts given value to character . char? ToChar(short? value) . Converts given value to character . char? ToChar(byte? value) . Converts given value to character . char? ToChar(object? value) . Converts given value to character . DateTime? ToDateTime(string value) . Converts given value to DateTime . DateTime? ToDateTime(string value, string culture) . Converts given value to DateTime . Decimal? ToDecimal(string? value) . Converts given value to decimal . Decimal? ToDecimal(string value, string culture) . Converts given value to decimal withing given culture . Decimal? ToDecimal(byte? value) . Converts given value to Decimal . Decimal? ToDecimal(sbyte? value) . Converts given value to Decimal . Decimal? ToDecimal(short? value) . Converts given value to Decimal . Decimal? ToDecimal(ushort? value) . Converts given value to Decimal . Decimal? ToDecimal(long? value) . Converts given value to Decimal . Decimal? ToDecimal(ulong? value) . Converts given value to Decimal . Decimal? ToDecimal(float? value) . Converts given value to Decimal . Decimal? ToDecimal(double? value) . Converts given value to Decimal . Decimal? ToDecimal(object? value) . Converts given value to Decimal . double? ToDouble(object? value) . Converts given value to double . double? ToDouble(string? value) . Converts given value to double . double? ToDouble(byte? value) . Converts given value to double . double? ToDouble(sbyte? value) . Converts given value to double . double? ToDouble(short? value) . Converts given value to double . double? ToDouble(ushort? value) . Converts given value to double . double? ToDouble(int? value) . Converts given value to double . double? ToDouble(uint? value) . Converts given value to double . double? ToDouble(long? value) . Converts given value to double . double? ToDouble(ulong? value) . Converts given value to double . double? ToDouble(float? value) . Converts given value to double . double? ToDouble(double? value) . Converts given value to double . double? ToDouble(Decimal? value) . Converts given value to double . float? ToFloat(string? value) . Converts given value to float . float? ToFloat(byte? value) . Converts given value to float . float? ToFloat(sbyte? value) . Converts given value to float . float? ToFloat(short? value) . Converts given value to float . float? ToFloat(ushort? value) . Converts given value to float . float? ToFloat(int? value) . Converts given value to float . float? ToFloat(uint? value) . Converts given value to float . float? ToFloat(long? value) . Converts given value to float . float? ToFloat(ulong? value) . Converts given value to float . float? ToFloat(float? value) . Converts given value to float . float? ToFloat(Decimal? value) . Converts given value to float . int? ToInt32(string value) . Converts given value to int . int? ToInt32(byte? value) . Converts given value to int . int? ToInt32(sbyte? value) . Converts given value to int . int? ToInt32(short? value) . Converts given value to int . int? ToInt32(ushort? value) . Converts given value to int . int? ToInt32(int? value) . Converts given value to int . int? ToInt32(uint? value) . Converts given value to int . int? ToInt32(long? value) . Converts given value to int . int? ToInt32(ulong? value) . Converts given value to int . int? ToInt32(float? value) . Converts given value to int . int? ToInt32(double? value) . Converts given value to int . int? ToInt32(Decimal? value) . Converts given value to int . int? ToInt32(object? value) . Converts given value to int . long? ToInt64(string value) . Converts given value to Int64 . long? ToInt64(byte? value) . Converts given value to long . long? ToInt64(sbyte? value) . Converts given value to long . long? ToInt64(short? value) . Converts given value to long . long? ToInt64(ushort? value) . Converts given value to long . long? ToInt64(int? value) . Converts given value to long . long? ToInt64(uint? value) . Converts given value to long . long? ToInt64(long? value) . Converts given value to long . long? ToInt64(ulong? value) . Converts given value to long . long? ToInt64(float? value) . Converts given value to long . long? ToInt64(double? value) . Converts given value to long . long? ToInt64(Decimal? value) . Converts given value to long . long? ToInt64(object? value) . Converts given value to long . string? ToString(char? value) . Converts given value to string . string? ToString(DateTimeOffset? value) . Converts given value to string . string? ToString(DateTimeOffset? value, string format) . Converts given value to string . string? ToString(byte? value) . Converts given value to string . string? ToString(byte? value, string format) . Converts given value to string . string? ToString(sbyte? value) . Converts given value to string . string? ToString(sbyte? value, string format) . Converts given value to string . string? ToString(int? value) . Converts given value to string . string? ToString(int? value, string format) . Converts given value to string . string? ToString(uint? value) . Converts given value to string . string? ToString(uint? value, string format) . Converts given value to string . string? ToString(long? value) . Converts given value to string . string? ToString(long? value, string format) . Converts given value to string . string? ToString(ulong? value) . Converts given value to string . string? ToString(ulong? value, string format) . Converts given value to string . string? ToString(float? value) . Converts given value to string . string? ToString(float? value, string format) . Converts given value to string . string? ToString(double? value) . Converts given value to string . string? ToString(double? value, string format) . Converts given value to string . string? ToString(Decimal? value) . Converts given value to string . string? ToString(Decimal? value, string format) . Converts given value to string . string? ToString(bool? value) . Converts given value to string . string? ToString(object? value) . Converts given value to string . string? ToString&lt;T&gt;(T? value) . Converts given value to string . string ToString(string[] value) . Converts given value to string . string ToString&lt;T&gt;(T[] value) . Converts given value to string . TimeSpan? ToTimeSpan(string value) . Converts given value to TimeSpan . TimeSpan? ToTimeSpan(string value, string culture) . Converts given value to TimeSpan . IEnumerable&lt;T&gt; Window&lt;T&gt;(string name) . Gets the window . ",
    "url": "/data-sources/Json/macos-x64.html#base-methods",
    
    "relUrl": "/data-sources/Json/macos-x64.html#base-methods"
  },"229": {
    "doc": "MacOs X64",
    "title": "MacOs X64",
    "content": " ",
    "url": "/data-sources/Json/macos-x64.html",
    
    "relUrl": "/data-sources/Json/macos-x64.html"
  },"230": {
    "doc": "MacOs X64",
    "title": "Musoq.DataSources.SeparatedValues",
    "content": "Provides schema to work with separated values like .csv, .tsv, semicolon. ",
    "url": "/data-sources/SeparatedValues/macos-x64.html#musoqdatasourcesseparatedvalues",
    
    "relUrl": "/data-sources/SeparatedValues/macos-x64.html#musoqdatasourcesseparatedvalues"
  },"231": {
    "doc": "MacOs X64",
    "title": "Tables",
    "content": "Table is a collection of rows and columns that the plugin exposes. Below are the tables that are exposed by this data source. separatedvalues.comma(string path, bool hasHeader, int skipLines) . Gives the ability to process .CSV files . This table has a dynamic structure, which means that its columns and other details cannot be determined until runtime. As a result, it is not possible to include a complete description of this table in the documentation. Instead, the actual columns and other details of this table will be determined at runtime. separatedvalues.tab(string path, bool hasHeader, int skipLines) . Gives the ability to process .TSV files . This table has a dynamic structure, which means that its columns and other details cannot be determined until runtime. As a result, it is not possible to include a complete description of this table in the documentation. Instead, the actual columns and other details of this table will be determined at runtime. separatedvalues.semicolon(string path, bool hasHeader, int skipLines) . Gives the ability to process semicolon files . This table has a dynamic structure, which means that its columns and other details cannot be determined until runtime. As a result, it is not possible to include a complete description of this table in the documentation. Instead, the actual columns and other details of this table will be determined at runtime. ",
    "url": "/data-sources/SeparatedValues/macos-x64.html#tables",
    
    "relUrl": "/data-sources/SeparatedValues/macos-x64.html#tables"
  },"232": {
    "doc": "MacOs X64",
    "title": "Methods",
    "content": "Methods are functions that can be called on the data source specific column. Below are the methods that are exposed by this data source. string ClusteredByContainsKey(string dictionaryFilePath, string value) . Categorize values based on provided file . ",
    "url": "/data-sources/SeparatedValues/macos-x64.html#methods",
    
    "relUrl": "/data-sources/SeparatedValues/macos-x64.html#methods"
  },"233": {
    "doc": "MacOs X64",
    "title": "Base Methods",
    "content": "Base methods are methods that can be called on the data source specific column. Those methods are automatically inherited and enriches the data source specific methods. Below are those base methods that are exposed by this data source. int RowNumber() . Gets the row number of the current row. string? GetTypeName(object? obj) . Gets the typename of passed object. string AggregateValues(string name) . Aggregates values into a single value. string AggregateValues(string name, int parent) . Aggregates values into a single value. Decimal Avg(string name) . Gets the aggregated average value from the given group name . Decimal Avg(string name, int parent) . Gets the aggregated average value from the given group name . byte? ShiftLeft(byte? value, int shift) . Shifts the value to the left by the specified number of bits. short? ShiftLeft(short? value, int shift) . Shifts the value to the left by the specified number of bits. int? ShiftLeft(int? value, int shift) . Shifts the value to the left by the specified number of bits. long? ShiftLeft(long? value, int shift) . Shifts the value to the left by the specified number of bits. sbyte? ShiftLeft(sbyte? value, int shift) . Shifts the value to the left by the specified number of bits. ushort? ShiftLeft(ushort? value, int shift) . Shifts the value to the left by the specified number of bits. uint? ShiftLeft(uint? value, int shift) . Shifts the value to the left by the specified number of bits. ulong? ShiftLeft(ulong? value, int shift) . Shifts the value to the left by the specified number of bits. byte? ShiftRight(byte? value, int shift) . Shifts the value to the right by the specified number of bits. short? ShiftRight(short? value, int shift) . Shifts the value to the right by the specified number of bits. int? ShiftRight(int? value, int shift) . Shifts the value to the right by the specified number of bits. long? ShiftRight(long? value, int shift) . Shifts the value to the right by the specified number of bits. sbyte? ShiftRight(sbyte? value, int shift) . Shifts the value to the right by the specified number of bits. ushort? ShiftRight(ushort? value, int shift) . Shifts the value to the right by the specified number of bits. uint? ShiftRight(uint? value, int shift) . Shifts the value to the right by the specified number of bits. ulong? ShiftRight(ulong? value, int shift) . Shifts the value to the right by the specified number of bits. byte? Not(byte? value) . Performs bitwise NOT operation on a given value. short? Not(short? value) . Performs bitwise NOT operation on a given value. int? Not(int? value) . Performs bitwise NOT operation on a given value. long? Not(long? value) . Performs bitwise NOT operation on a given value. sbyte? Not(sbyte? value) . Performs bitwise NOT operation on a given value. ushort? Not(ushort? value) . Performs bitwise NOT operation on a given value. uint? Not(uint? value) . Performs bitwise NOT operation on a given value. ulong? Not(ulong? value) . Performs bitwise NOT operation on a given value. byte? And(byte? left, byte? right) . Performs bitwise AND operation on two given values. int? And(byte? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(byte? left, short? right) . Performs bitwise AND operation on two given values. int? And(byte? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(byte? left, int? right) . Performs bitwise AND operation on two given values. uint? And(byte? left, uint? right) . Performs bitwise AND operation on two given values. long? And(byte? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(byte? left, ulong? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, byte? right) . Performs bitwise AND operation on two given values. sbyte? And(sbyte? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, short? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, int? right) . Performs bitwise AND operation on two given values. uint? And(sbyte? left, uint? right) . Performs bitwise AND operation on two given values. long? And(sbyte? left, long? right) . Performs bitwise AND operation on two given values. int? And(short? left, byte? right) . Performs bitwise AND operation on two given values. int? And(short? left, sbyte? right) . Performs bitwise AND operation on two given values. short? And(short? left, short? right) . Performs bitwise AND operation on two given values. int? And(short? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(short? left, int? right) . Performs bitwise AND operation on two given values. uint? And(short? left, uint? right) . Performs bitwise AND operation on two given values. long? And(short? left, long? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, byte? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, short? right) . Performs bitwise AND operation on two given values. ushort? And(ushort? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, int? right) . Performs bitwise AND operation on two given values. uint? And(ushort? left, uint? right) . Performs bitwise AND operation on two given values. long? And(ushort? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(ushort? left, ulong? right) . Performs bitwise AND operation on two given values. int? And(int? left, byte? right) . Performs bitwise AND operation on two given values. int? And(int? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(int? left, short? right) . Performs bitwise AND operation on two given values. int? And(int? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(int? left, int? right) . Performs bitwise AND operation on two given values. uint? And(int? left, uint? right) . Performs bitwise AND operation on two given values. long? And(int? left, long? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, uint? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, byte? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, sbyte? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, short? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, ushort? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, int? right) . Performs bitwise AND operation on two given values. ulong? And(uint? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(uint? left, ulong? right) . Performs bitwise AND operation on two given values. long? And(long? left, long? right) . Performs bitwise AND operation on two given values. long? And(long? left, byte? right) . Performs bitwise AND operation on two given values. long? And(long? left, sbyte? right) . Performs bitwise AND operation on two given values. long? And(long? left, short? right) . Performs bitwise AND operation on two given values. long? And(long? left, ushort? right) . Performs bitwise AND operation on two given values. long? And(long? left, int? right) . Performs bitwise AND operation on two given values. long? And(long? left, uint? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, byte? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, ushort? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, uint? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, ulong? right) . Performs bitwise AND operation on two given values. byte? Or(byte? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, short? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(byte? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(byte? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(byte? left, ulong? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, byte? right) . Performs bitwise OR operation on two given values. sbyte? Or(sbyte? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, short? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(sbyte? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(sbyte? left, long? right) . Performs bitwise OR operation on two given values. int? Or(short? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(short? left, sbyte? right) . Performs bitwise OR operation on two given values. short? Or(short? left, short? right) . Performs bitwise OR operation on two given values. int? Or(short? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(short? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(short? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(short? left, long? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, short? right) . Performs bitwise OR operation on two given values. ushort? Or(ushort? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(ushort? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(ushort? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(ushort? left, ulong? right) . Performs bitwise OR operation on two given values. int? Or(int? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(int? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(int? left, short? right) . Performs bitwise OR operation on two given values. int? Or(int? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(int? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(int? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(int? left, long? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, uint? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, byte? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, sbyte? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, short? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, ushort? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, int? right) . Performs bitwise OR operation on two given values. ulong? Or(uint? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(uint? left, ulong? right) . Performs bitwise OR operation on two given values. long? Or(long? left, long? right) . Performs bitwise OR operation on two given values. long? Or(long? left, byte? right) . Performs bitwise OR operation on two given values. long? Or(long? left, sbyte? right) . Performs bitwise OR operation on two given values. long? Or(long? left, short? right) . Performs bitwise OR operation on two given values. long? Or(long? left, ushort? right) . Performs bitwise OR operation on two given values. long? Or(long? left, int? right) . Performs bitwise OR operation on two given values. long? Or(long? left, uint? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, byte? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, ushort? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, uint? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, ulong? right) . Performs bitwise OR operation on two given values. byte? Xor(byte? left, byte? right) . Performs bitwise OR operation on two given values. int? Xor(byte? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(byte? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(byte? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(byte? left, ulong? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, byte? right) . Performs bitwise Xor operation on two given values. sbyte? Xor(sbyte? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(sbyte? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(sbyte? left, long? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, sbyte? right) . Performs bitwise Xor operation on two given values. short? Xor(short? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, ushort? right) . Performs bitwise XOR operation on two given values. int? Xor(short? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(short? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(short? left, long? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, short? right) . Performs bitwise Xor operation on two given values. ushort? Xor(ushort? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(ushort? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(ushort? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ushort? left, ulong? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(int? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(int? left, long? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, uint? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, byte? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, sbyte? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, short? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, ushort? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, int? right) . Performs bitwise Xor operation on two given values. ulong? Xor(uint? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(uint? left, ulong? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, long? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, byte? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, sbyte? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, short? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, ushort? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, int? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, uint? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, ulong? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, byte? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, ushort? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, uint? right) . Performs bitwise Xor operation on two given values. byte[] GetBytes(string? content) . Gets the bytes from the given string. byte[] GetBytes(string? content, int length, int offset) . Gets the bytes from the given string within given offset and length. byte?[]? GetBytes(char? character) . Gets the bytes from the given character. byte?[]? GetBytes(bool? bit) . Gets the bytes from the given boolean. byte?[]? GetBytes(long? value) . Gets the bytes from the given long. byte?[]? GetBytes(int? value) . Gets the bytes from the given int. byte?[]? GetBytes(short? value) . Gets the bytes from the given short. byte?[]? GetBytes(ulong? value) . Gets the bytes from the given ulong. byte?[]? GetBytes(ushort? value) . Gets the bytes from the given ushort. byte?[]? GetBytes(uint? value) . Gets the bytes from the given uint. byte?[]? GetBytes(Decimal? value) . Gets the bytes from the given decimal. byte?[]? GetBytes(double? value) . Gets the bytes from the given double. byte?[]? GetBytes(float? value) . Gets the bytes from the given float. string? ToBin(byte?[]? bytes, string delimiter) . Converts given bytes to binary with defined delimiter . string ToBin&lt;T&gt;(T value) . Converts given value to binary . string ToOcta&lt;T&gt;(T value) . Converts given value to octal . string ToDec&lt;T&gt;(T value) . Converts given value to decimal . string ToBase64(byte[] value) . Converts given value to string . string ToBase64(byte[] value, int offset, int length) . Converts given array of bytes to string . byte[] FromBase64(string value) . Converts given string to bytes array . bool FromBytesToBool(byte[] value) . Converts bytes to boolean value. short FromBytesToInt16(byte[] value) . Converts bytes to a 16-bit signed integer. ushort FromBytesToUInt16(byte[] value) . Converts bytes to a 16-bit unsigned integer. int FromBytesToInt32(byte[] value) . Converts bytes to a 32-bit signed integer. uint FromBytesToUInt32(byte[] value) . Converts bytes to a 32-bit unsigned integer. long FromBytesToInt64(byte[] value) . Converts bytes to a 64-bit signed integer. ulong FromBytesToUInt64(byte[] value) . Converts bytes to a 64-bit unsigned integer. float FromBytesToFloat(byte[] value) . Converts bytes to a float value. double FromBytesToDouble(byte[] value) . Converts bytes to a float value. string FromBytesToString(byte[] value) . Converts bytes to a string. byte[] ToBytes(bool value) . Converts boolean value to bytes. byte[] ToBytes(short value) . Converts short value to bytes. byte[] ToBytes(ushort value) . Converts ushort value to bytes. byte[] ToBytes(int value) . Converts int value to bytes. byte[] ToBytes(uint value) . Converts uint value to bytes. byte[] ToBytes(long value) . Converts long value to bytes. byte[] ToBytes(ulong value) . Converts long value to bytes. string? ToHex(byte?[]? bytes, string delimiter) . Converts given bytes to hex with defined delimiter . string? ToHex&lt;T&gt;(T value) . Converts given value to binary . int Count(string name) . Gets the count value of a given group. int Count(string name, int parent) . Gets the count value of a given group. int ExtractFromDate(string? date, string partOfDate) . Extracts part of the date from the date . int ExtractFromDate(string date, string culture, string partOfDate) . Extracts part of the date from the date based on given culture . DateTimeOffset? GetDate() . Gets the current datetime . DateTimeOffset? UtcGetDate() . Gets the current datetime in UTC . int? Month(DateTimeOffset? value) . Gets the month from DateTimeOffset . int? Year(DateTimeOffset? value) . Gets the year from DateTimeOffset . int? Day(DateTimeOffset? value) . Gets the day from DateTimeOffset . int? Hour(DateTimeOffset? value) . Gets the hour from DateTimeOffset . int? Minute(DateTimeOffset? value) . Gets the minute from DateTimeOffset . int? Second(DateTimeOffset? value) . Gets the second from DateTimeOffset . int? Milliseconds(DateTimeOffset? value) . Gets the millisecond from DateTimeOffset . int? DayOfWeek(DateTimeOffset? value) . Gets the day of week from DateTimeOffset . TimeSpan? ExtractTimeSpan(DateTimeOffset? dateTimeOffset) . Extracts time from DateTimeOffset . DateTime? ToDateTimeOffset(string value) . Converts given value to DateTimeOffset . DateTimeOffset? ToDateTimeOffset(string value, string culture) . Converts given value to DateTimeOffset . IEnumerable&lt;T&gt;? Skip&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? skipCount) . Skips elements from the beginning of the sequence. IEnumerable&lt;T&gt;? Take&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? takeCount) . Takes elements from the beginning of the sequence. IEnumerable&lt;T&gt;? SkipAndTake&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? skipCount, int? takeCount) . Skip and takes elements from the beginning of the sequence. T[]? EnumerableToArray&lt;T&gt;(IEnumerable&lt;T&gt;? values) . Turn array arguments of T into a single array. T[]? MergeArrays&lt;T&gt;(T[][]? values) . Turn array arguments of T into a single array. IEnumerable&lt;T&gt;? LongestCommonSequence&lt;T&gt;(IEnumerable&lt;T&gt;? source, IEnumerable&lt;T&gt;? pattern) . Computes longest common sequence of two given sequences . T? GetElementAtOrDefault&lt;T&gt;(IEnumerable&lt;T&gt;? enumerable, int? index) . Gets the element at the specified index in a sequence . int? Length&lt;T&gt;(IEnumerable&lt;T&gt;? enumerable) . Gets the length of the sequence . int? Length&lt;T&gt;(T[]? array) . Gets the length of the array . T? Choose&lt;T&gt;(int? index, T[] values) . Gets the value of an array at the specified index . T If&lt;T&gt;(bool expressionResult, T a, T b) . Chose a or b value based on the expression result . bool? Match(string? regex, string? content) . Determine whether content matches the specified pattern . byte? Coalesce(byte?[] array) . Gets the first non-null value in a list . sbyte? Coalesce(sbyte?[] array) . Gets the first non-null value in a list . short? Coalesce(short?[] array) . Gets the first non-null value in a list . ushort? Coalesce(ushort?[] array) . Gets the first non-null value in a list . int? Coalesce(int?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(uint?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(long?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(ulong?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(Decimal?[] array) . Gets the first non-null value in a list . T? Coalesce&lt;T&gt;(T[] array) . Gets the first non-null value in a list . IEnumerable&lt;T&gt;? Distinct&lt;T&gt;(IEnumerable&lt;T&gt;? values) . Returns distinct elements from a collection. string? Md5(string? content) . Gets the md5 hash of the given string. string? Md5(byte?[]? content) . Gets the md5 hash of the given bytes array. string? Sha1(string? content) . Gets the sha256 hash of the given string. string? Sha1(byte?[]? content) . Gets the sha256 hash of the given bytes array. string? Sha256(string? content) . Gets the sha256 hash of the given string. string? Sha256(byte?[]? content) . Gets the sha256 hash of the given bytes array. string? Sha512(string? content) . Gets the sha256 hash of the given string. string? Sha512(byte?[]? content) . Gets the sha256 hash of the bytes array. string? ToJson&lt;T&gt;(T? obj) . Converts object to json. string[] ExtractFromJsonToArray(string? json, string? path) . Extracts values from json by path. string? ExtractFromJson(string? json, string? path) . Extracts values from json by path and joins them with comma. Decimal? Abs(Decimal? value) . Gets the absolute value . long? Abs(long? value) . Gets the absolute value . int? Abs(int? value) . Gets the absolute value . Decimal? Ceil(Decimal? value) . Gets the ceiling value . Decimal? Floor(Decimal? value) . Gets the floor value . Decimal? Sign(Decimal? value) . Determine whether value is greater, equal or less that zero . long? Sign(long? value) . Determine whether value is greater, equal or less that zero . Decimal? Round(Decimal? value, int precision) . Rounds the value within given precision . Decimal? PercentOf(Decimal? value, Decimal? max) . Gets the percentage of the value . int Rand() . Gets the random integer value . int? Rand(int? min, int? max) . Gets the random integer value . double? Pow(Decimal? x, Decimal? y) . Computes the pow between two values . double? Pow(double? x, double? y) . Computes the pow between two values . double? Sqrt(Decimal? x) . Computes the sqrt of a given value . double? Sqrt(double? x) . Computes the sqrt of a given value . double? Sqrt(long? x) . Computes the sqrt of a given value . double? PercentRank&lt;T&gt;(IEnumerable&lt;T&gt;? window, T? value) . Computes the percent rank of a given window . double? Log(Decimal? base, Decimal? value) . Calculates the logarithm of a value with a specified base. Decimal? Sin(Decimal? value) . Calculates sine of a value. double? Sin(double? value) . Calculates sine of a value. float? Sin(float? value) . Calculates sine of a value. Decimal? Cos(Decimal? value) . Calculates cosine of a value. double? Cos(double? value) . Calculates cosine of a value. float? Cos(float? value) . Calculates cosine of a value. Decimal Max(string name) . Gets the max value of a given group. Decimal Max(string name, int parent) . Gets the max value of a given group. Decimal Min(string name) . Gets the min value of a given group. Decimal Min(string name, int parent) . Gets the min value of a given group. Decimal StDev(string name, int parent) . Gets the StDev value of a given group. string NewId() . Gets the new identifier . string? Trim(string? value) . Removes leading and trailing whitespace from a string. string? TrimStart(string? value) . Removes leading whitespace from a string. string? TrimEnd(string? value) . Removes trailing whitespace from a string. string? Substring(string? value, int? index, int? length) . Gets the substring from the string. string? Substring(string value, int? length) . Gets the substring from the string . string? Concat(string[]? strings) . Concatenates the specified values . string? Concat(char?[]? characters) . Concatenates the specified characters . string? Concat(string? firstString, char?[]? chars) . Concatenates specified string fir characters . string? Concat(char? firstChar, string[]? strings) . Concatenate specific character with strings . string? Concat(object[]? objects) . Concatenates the specified strings . string? Concat&lt;T&gt;(T[]? objects) . Concatenates the specified strings . bool? Contains(string? content, string? what) . Determine whether the string contains the specified value . int? IndexOf(string? value, string? text) . Position of the first occurrence of the specified value . string? Soundex(string? value) . Computes soundex for the specified value . bool HasFuzzyMatchedWord(string text, string word, string separator) . Matches the specified text by splitting it with separator and applying fuzzy comparison . bool HasWordThatHasSmallerLevenshteinDistanceThan(string text, string word, int distance, string separator) . Matches the specified text by splitting it with separator and applying fuzzy comparison with a given distance . bool HasWordThatSoundLike(string text, string word, string separator) . Matches whether the specified word is present after being fuzzified within the specified text . bool HasTextThatSoundLikeSentence(string text, string sentence, string separator) . Matches whether the specified text is present in sentence after being fuzified . string? ToUpper(string value) . Makes the string uppercase . string? ToUpper(string value, string culture) . Makes the string uppercase within specified culture . string? ToUpperInvariant(string value) . Makes the string uppercase . string? ToLower(string value) . Makes the string lowercase . string? ToLower(string value, string culture) . Makes the string lowercase within specified culture . string? ToLowerInvariant(string value) . Makes the string lowercase . string? PadLeft(string? value, string? character, int? totalWidth) . Returns a new string that right-aligns the characters in this instance by padding them on the left with a specified Unicode character, for a specified total lengt . string? PadRight(string? value, string? character, int? totalWidth) . Returns a new string that left-aligns the characters in this instance by padding them on the right with a specified Unicode character, for a specified total length . string? Head(string? value, int? length) . Gets the first N characters of the string . string? Tail(string? value, int? length) . Gets the last N characters of the string . int? LevenshteinDistance(string? firstValue, string? secondValue) . Computes the Levenshtein distance between two strings . char? GetCharacterOf(string value, int index) . Gets the character at specified index . string? Reverse(string? value) . Reverses the string . string[] Split(string value, string[] separators) . Splits the string into an array of substrings based on the specified separators . char[] ToCharArray(string value) . Splits the string into an array of characters . string? LongestCommonSubstring(string source, string pattern) . Computes the longest common subsequence between two source and pattern . string Replicate(string value, int integer) . Clones the value n times . string? Translate(string? value, string? characters, string? translations) . Returns the string from the first argument after the characters specified in the second argument are translated into the characters specified in the third argument. string? Replace(string? text, string lookFor, string? changeTo) . Replaces the first occurrence of a specified string in this instance with another specified string . string? ToTitleCase(string? value) . Capitalizes the first letter of the string . string? GetNthWord(string? text, int? wordIndex, string? separator) . Gets the nth word of the string . string? GetFirstWord(string text, string separator) . Gets the first word of the string . string? GetSecondWord(string text, string separator) . Gets the second word of the string . string? GetThirdWord(string text, string separator) . Gets the third word of the string . string? GetLastWord(string? text, string? separator) . Gets last word of the string . bool? IsNullOrEmpty(string? value) . Determines whether the string is null or empty . bool? IsNullOrWhiteSpace(string? value) . Determines whether the string is null or whitespace . string? UrlEncode(string? value) . Encodes the value . string? UrlDecode(string? value) . Decodes the value . string? UriEncode(string? value) . Encodes the value . string? UriDecode(string? value) . Decodes the value . bool? StartsWith(string? value, string? prefix) . Determines whether the string starts with the specified prefix . bool? StartsWith(string? value, string? prefix, string comparison) . Determines whether the string starts with the specified prefix . bool? EndsWith(string? value, string? suffix) . Determines whether the string ends with the specified suffix . bool? EndsWith(string? value, string? suffix, string comparison) . Determines whether the string ends with the specified suffix . string? RegexReplace(string? value, string? pattern, string? replacement) . Replace the specified value part that matches the pattern with the replacement . string[]? SplitByLinuxNewLines(string? input) . Split string by Linux-style newlines (\\n) . string[]? SplitByWindowsNewLines(string? input) . Split string by Windows-style newlines (\\r\\n) . string[]? SplitByNewLines(string? input) . Smart split that handles both Windows (\\r\\n) and Linux (\\n) newlines . Decimal Sum(string name) . Gets the sum value of a given group. Decimal Sum(string name, int parent) . Gets the sum value of a given group. Decimal SumIncome(string name) . Gets the sum value of a given group. Decimal SumIncome(string name, int parent) . Gets the sum value of a given group. Decimal SumOutcome(string name) . Gets the outcome value of a given group. Decimal SumOutcome(string name, int parent) . Gets the outcome value of a given group. TimeSpan? SumTimeSpan(string name) . Gets the sum value of a given group. TimeSpan? SumTimeSpan(string name, int parent) . Gets the sum value of a given group. TimeSpan? MinTimeSpan(string name) . Gets the min value of a given group. TimeSpan? MinTimeSpan(string name, int parent) . Gets the min value of a given group. TimeSpan? MaxTimeSpan(string name) . Gets the max value of a given group. TimeSpan? MaxTimeSpan(string name, int parent) . Gets the min value of a given group. char? ToChar(string? value) . Converts given value to character . char? ToChar(int? value) . Converts given value to character . char? ToChar(short? value) . Converts given value to character . char? ToChar(byte? value) . Converts given value to character . char? ToChar(object? value) . Converts given value to character . DateTime? ToDateTime(string value) . Converts given value to DateTime . DateTime? ToDateTime(string value, string culture) . Converts given value to DateTime . Decimal? ToDecimal(string? value) . Converts given value to decimal . Decimal? ToDecimal(string value, string culture) . Converts given value to decimal withing given culture . Decimal? ToDecimal(byte? value) . Converts given value to Decimal . Decimal? ToDecimal(sbyte? value) . Converts given value to Decimal . Decimal? ToDecimal(short? value) . Converts given value to Decimal . Decimal? ToDecimal(ushort? value) . Converts given value to Decimal . Decimal? ToDecimal(long? value) . Converts given value to Decimal . Decimal? ToDecimal(ulong? value) . Converts given value to Decimal . Decimal? ToDecimal(float? value) . Converts given value to Decimal . Decimal? ToDecimal(double? value) . Converts given value to Decimal . Decimal? ToDecimal(object? value) . Converts given value to Decimal . double? ToDouble(object? value) . Converts given value to double . double? ToDouble(string? value) . Converts given value to double . double? ToDouble(byte? value) . Converts given value to double . double? ToDouble(sbyte? value) . Converts given value to double . double? ToDouble(short? value) . Converts given value to double . double? ToDouble(ushort? value) . Converts given value to double . double? ToDouble(int? value) . Converts given value to double . double? ToDouble(uint? value) . Converts given value to double . double? ToDouble(long? value) . Converts given value to double . double? ToDouble(ulong? value) . Converts given value to double . double? ToDouble(float? value) . Converts given value to double . double? ToDouble(double? value) . Converts given value to double . double? ToDouble(Decimal? value) . Converts given value to double . float? ToFloat(string? value) . Converts given value to float . float? ToFloat(byte? value) . Converts given value to float . float? ToFloat(sbyte? value) . Converts given value to float . float? ToFloat(short? value) . Converts given value to float . float? ToFloat(ushort? value) . Converts given value to float . float? ToFloat(int? value) . Converts given value to float . float? ToFloat(uint? value) . Converts given value to float . float? ToFloat(long? value) . Converts given value to float . float? ToFloat(ulong? value) . Converts given value to float . float? ToFloat(float? value) . Converts given value to float . float? ToFloat(Decimal? value) . Converts given value to float . int? ToInt32(string value) . Converts given value to int . int? ToInt32(byte? value) . Converts given value to int . int? ToInt32(sbyte? value) . Converts given value to int . int? ToInt32(short? value) . Converts given value to int . int? ToInt32(ushort? value) . Converts given value to int . int? ToInt32(int? value) . Converts given value to int . int? ToInt32(uint? value) . Converts given value to int . int? ToInt32(long? value) . Converts given value to int . int? ToInt32(ulong? value) . Converts given value to int . int? ToInt32(float? value) . Converts given value to int . int? ToInt32(double? value) . Converts given value to int . int? ToInt32(Decimal? value) . Converts given value to int . int? ToInt32(object? value) . Converts given value to int . long? ToInt64(string value) . Converts given value to Int64 . long? ToInt64(byte? value) . Converts given value to long . long? ToInt64(sbyte? value) . Converts given value to long . long? ToInt64(short? value) . Converts given value to long . long? ToInt64(ushort? value) . Converts given value to long . long? ToInt64(int? value) . Converts given value to long . long? ToInt64(uint? value) . Converts given value to long . long? ToInt64(long? value) . Converts given value to long . long? ToInt64(ulong? value) . Converts given value to long . long? ToInt64(float? value) . Converts given value to long . long? ToInt64(double? value) . Converts given value to long . long? ToInt64(Decimal? value) . Converts given value to long . long? ToInt64(object? value) . Converts given value to long . string? ToString(char? value) . Converts given value to string . string? ToString(DateTimeOffset? value) . Converts given value to string . string? ToString(DateTimeOffset? value, string format) . Converts given value to string . string? ToString(byte? value) . Converts given value to string . string? ToString(byte? value, string format) . Converts given value to string . string? ToString(sbyte? value) . Converts given value to string . string? ToString(sbyte? value, string format) . Converts given value to string . string? ToString(int? value) . Converts given value to string . string? ToString(int? value, string format) . Converts given value to string . string? ToString(uint? value) . Converts given value to string . string? ToString(uint? value, string format) . Converts given value to string . string? ToString(long? value) . Converts given value to string . string? ToString(long? value, string format) . Converts given value to string . string? ToString(ulong? value) . Converts given value to string . string? ToString(ulong? value, string format) . Converts given value to string . string? ToString(float? value) . Converts given value to string . string? ToString(float? value, string format) . Converts given value to string . string? ToString(double? value) . Converts given value to string . string? ToString(double? value, string format) . Converts given value to string . string? ToString(Decimal? value) . Converts given value to string . string? ToString(Decimal? value, string format) . Converts given value to string . string? ToString(bool? value) . Converts given value to string . string? ToString(object? value) . Converts given value to string . string? ToString&lt;T&gt;(T? value) . Converts given value to string . string ToString(string[] value) . Converts given value to string . string ToString&lt;T&gt;(T[] value) . Converts given value to string . TimeSpan? ToTimeSpan(string value) . Converts given value to TimeSpan . TimeSpan? ToTimeSpan(string value, string culture) . Converts given value to TimeSpan . IEnumerable&lt;T&gt; Window&lt;T&gt;(string name) . Gets the window . ",
    "url": "/data-sources/SeparatedValues/macos-x64.html#base-methods",
    
    "relUrl": "/data-sources/SeparatedValues/macos-x64.html#base-methods"
  },"234": {
    "doc": "MacOs X64",
    "title": "MacOs X64",
    "content": " ",
    "url": "/data-sources/SeparatedValues/macos-x64.html",
    
    "relUrl": "/data-sources/SeparatedValues/macos-x64.html"
  },"235": {
    "doc": "MacOs X64",
    "title": "Musoq.DataSources.Postgres",
    "content": "Provides schema to work with postgres database . ",
    "url": "/data-sources/Postgres/macos-x64.html#musoqdatasourcespostgres",
    
    "relUrl": "/data-sources/Postgres/macos-x64.html#musoqdatasourcespostgres"
  },"236": {
    "doc": "MacOs X64",
    "title": "Tables",
    "content": "Table is a collection of rows and columns that the plugin exposes. Below are the tables that are exposed by this data source. postgres.tableName(‘schemaName’) . Gives ability to process sqlite table . Environment variables . In order to use the plugin, the user must set any required environment variables as specified in the environments element. Failure to do so may result in the plugin not functioning correctly. | Name | Is required | Description | . | NPGSQL_CONNECTION_STRING | true | Postgres connections string | . Columns . This table has a dynamic structure, which means that its columns and other details cannot be determined until runtime. As a result, it is not possible to include a complete description of this table in the documentation. Instead, the actual columns and other details of this table will be determined at runtime. ",
    "url": "/data-sources/Postgres/macos-x64.html#tables",
    
    "relUrl": "/data-sources/Postgres/macos-x64.html#tables"
  },"237": {
    "doc": "MacOs X64",
    "title": "Base Methods",
    "content": "Base methods are methods that can be called on the data source specific column. Those methods are automatically inherited and enriches the data source specific methods. Below are those base methods that are exposed by this data source. int RowNumber() . Gets the row number of the current row. string? GetTypeName(object? obj) . Gets the typename of passed object. string AggregateValues(string name) . Aggregates values into a single value. string AggregateValues(string name, int parent) . Aggregates values into a single value. Decimal Avg(string name) . Gets the aggregated average value from the given group name . Decimal Avg(string name, int parent) . Gets the aggregated average value from the given group name . byte? ShiftLeft(byte? value, int shift) . Shifts the value to the left by the specified number of bits. short? ShiftLeft(short? value, int shift) . Shifts the value to the left by the specified number of bits. int? ShiftLeft(int? value, int shift) . Shifts the value to the left by the specified number of bits. long? ShiftLeft(long? value, int shift) . Shifts the value to the left by the specified number of bits. sbyte? ShiftLeft(sbyte? value, int shift) . Shifts the value to the left by the specified number of bits. ushort? ShiftLeft(ushort? value, int shift) . Shifts the value to the left by the specified number of bits. uint? ShiftLeft(uint? value, int shift) . Shifts the value to the left by the specified number of bits. ulong? ShiftLeft(ulong? value, int shift) . Shifts the value to the left by the specified number of bits. byte? ShiftRight(byte? value, int shift) . Shifts the value to the right by the specified number of bits. short? ShiftRight(short? value, int shift) . Shifts the value to the right by the specified number of bits. int? ShiftRight(int? value, int shift) . Shifts the value to the right by the specified number of bits. long? ShiftRight(long? value, int shift) . Shifts the value to the right by the specified number of bits. sbyte? ShiftRight(sbyte? value, int shift) . Shifts the value to the right by the specified number of bits. ushort? ShiftRight(ushort? value, int shift) . Shifts the value to the right by the specified number of bits. uint? ShiftRight(uint? value, int shift) . Shifts the value to the right by the specified number of bits. ulong? ShiftRight(ulong? value, int shift) . Shifts the value to the right by the specified number of bits. byte? Not(byte? value) . Performs bitwise NOT operation on a given value. short? Not(short? value) . Performs bitwise NOT operation on a given value. int? Not(int? value) . Performs bitwise NOT operation on a given value. long? Not(long? value) . Performs bitwise NOT operation on a given value. sbyte? Not(sbyte? value) . Performs bitwise NOT operation on a given value. ushort? Not(ushort? value) . Performs bitwise NOT operation on a given value. uint? Not(uint? value) . Performs bitwise NOT operation on a given value. ulong? Not(ulong? value) . Performs bitwise NOT operation on a given value. byte? And(byte? left, byte? right) . Performs bitwise AND operation on two given values. int? And(byte? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(byte? left, short? right) . Performs bitwise AND operation on two given values. int? And(byte? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(byte? left, int? right) . Performs bitwise AND operation on two given values. uint? And(byte? left, uint? right) . Performs bitwise AND operation on two given values. long? And(byte? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(byte? left, ulong? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, byte? right) . Performs bitwise AND operation on two given values. sbyte? And(sbyte? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, short? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, int? right) . Performs bitwise AND operation on two given values. uint? And(sbyte? left, uint? right) . Performs bitwise AND operation on two given values. long? And(sbyte? left, long? right) . Performs bitwise AND operation on two given values. int? And(short? left, byte? right) . Performs bitwise AND operation on two given values. int? And(short? left, sbyte? right) . Performs bitwise AND operation on two given values. short? And(short? left, short? right) . Performs bitwise AND operation on two given values. int? And(short? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(short? left, int? right) . Performs bitwise AND operation on two given values. uint? And(short? left, uint? right) . Performs bitwise AND operation on two given values. long? And(short? left, long? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, byte? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, short? right) . Performs bitwise AND operation on two given values. ushort? And(ushort? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, int? right) . Performs bitwise AND operation on two given values. uint? And(ushort? left, uint? right) . Performs bitwise AND operation on two given values. long? And(ushort? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(ushort? left, ulong? right) . Performs bitwise AND operation on two given values. int? And(int? left, byte? right) . Performs bitwise AND operation on two given values. int? And(int? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(int? left, short? right) . Performs bitwise AND operation on two given values. int? And(int? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(int? left, int? right) . Performs bitwise AND operation on two given values. uint? And(int? left, uint? right) . Performs bitwise AND operation on two given values. long? And(int? left, long? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, uint? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, byte? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, sbyte? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, short? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, ushort? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, int? right) . Performs bitwise AND operation on two given values. ulong? And(uint? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(uint? left, ulong? right) . Performs bitwise AND operation on two given values. long? And(long? left, long? right) . Performs bitwise AND operation on two given values. long? And(long? left, byte? right) . Performs bitwise AND operation on two given values. long? And(long? left, sbyte? right) . Performs bitwise AND operation on two given values. long? And(long? left, short? right) . Performs bitwise AND operation on two given values. long? And(long? left, ushort? right) . Performs bitwise AND operation on two given values. long? And(long? left, int? right) . Performs bitwise AND operation on two given values. long? And(long? left, uint? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, byte? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, ushort? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, uint? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, ulong? right) . Performs bitwise AND operation on two given values. byte? Or(byte? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, short? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(byte? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(byte? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(byte? left, ulong? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, byte? right) . Performs bitwise OR operation on two given values. sbyte? Or(sbyte? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, short? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(sbyte? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(sbyte? left, long? right) . Performs bitwise OR operation on two given values. int? Or(short? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(short? left, sbyte? right) . Performs bitwise OR operation on two given values. short? Or(short? left, short? right) . Performs bitwise OR operation on two given values. int? Or(short? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(short? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(short? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(short? left, long? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, short? right) . Performs bitwise OR operation on two given values. ushort? Or(ushort? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(ushort? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(ushort? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(ushort? left, ulong? right) . Performs bitwise OR operation on two given values. int? Or(int? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(int? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(int? left, short? right) . Performs bitwise OR operation on two given values. int? Or(int? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(int? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(int? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(int? left, long? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, uint? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, byte? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, sbyte? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, short? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, ushort? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, int? right) . Performs bitwise OR operation on two given values. ulong? Or(uint? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(uint? left, ulong? right) . Performs bitwise OR operation on two given values. long? Or(long? left, long? right) . Performs bitwise OR operation on two given values. long? Or(long? left, byte? right) . Performs bitwise OR operation on two given values. long? Or(long? left, sbyte? right) . Performs bitwise OR operation on two given values. long? Or(long? left, short? right) . Performs bitwise OR operation on two given values. long? Or(long? left, ushort? right) . Performs bitwise OR operation on two given values. long? Or(long? left, int? right) . Performs bitwise OR operation on two given values. long? Or(long? left, uint? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, byte? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, ushort? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, uint? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, ulong? right) . Performs bitwise OR operation on two given values. byte? Xor(byte? left, byte? right) . Performs bitwise OR operation on two given values. int? Xor(byte? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(byte? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(byte? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(byte? left, ulong? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, byte? right) . Performs bitwise Xor operation on two given values. sbyte? Xor(sbyte? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(sbyte? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(sbyte? left, long? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, sbyte? right) . Performs bitwise Xor operation on two given values. short? Xor(short? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, ushort? right) . Performs bitwise XOR operation on two given values. int? Xor(short? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(short? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(short? left, long? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, short? right) . Performs bitwise Xor operation on two given values. ushort? Xor(ushort? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(ushort? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(ushort? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ushort? left, ulong? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(int? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(int? left, long? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, uint? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, byte? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, sbyte? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, short? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, ushort? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, int? right) . Performs bitwise Xor operation on two given values. ulong? Xor(uint? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(uint? left, ulong? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, long? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, byte? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, sbyte? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, short? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, ushort? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, int? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, uint? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, ulong? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, byte? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, ushort? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, uint? right) . Performs bitwise Xor operation on two given values. byte[] GetBytes(string? content) . Gets the bytes from the given string. byte[] GetBytes(string? content, int length, int offset) . Gets the bytes from the given string within given offset and length. byte?[]? GetBytes(char? character) . Gets the bytes from the given character. byte?[]? GetBytes(bool? bit) . Gets the bytes from the given boolean. byte?[]? GetBytes(long? value) . Gets the bytes from the given long. byte?[]? GetBytes(int? value) . Gets the bytes from the given int. byte?[]? GetBytes(short? value) . Gets the bytes from the given short. byte?[]? GetBytes(ulong? value) . Gets the bytes from the given ulong. byte?[]? GetBytes(ushort? value) . Gets the bytes from the given ushort. byte?[]? GetBytes(uint? value) . Gets the bytes from the given uint. byte?[]? GetBytes(Decimal? value) . Gets the bytes from the given decimal. byte?[]? GetBytes(double? value) . Gets the bytes from the given double. byte?[]? GetBytes(float? value) . Gets the bytes from the given float. string? ToBin(byte?[]? bytes, string delimiter) . Converts given bytes to binary with defined delimiter . string ToBin&lt;T&gt;(T value) . Converts given value to binary . string ToOcta&lt;T&gt;(T value) . Converts given value to octal . string ToDec&lt;T&gt;(T value) . Converts given value to decimal . string ToBase64(byte[] value) . Converts given value to string . string ToBase64(byte[] value, int offset, int length) . Converts given array of bytes to string . byte[] FromBase64(string value) . Converts given string to bytes array . bool FromBytesToBool(byte[] value) . Converts bytes to boolean value. short FromBytesToInt16(byte[] value) . Converts bytes to a 16-bit signed integer. ushort FromBytesToUInt16(byte[] value) . Converts bytes to a 16-bit unsigned integer. int FromBytesToInt32(byte[] value) . Converts bytes to a 32-bit signed integer. uint FromBytesToUInt32(byte[] value) . Converts bytes to a 32-bit unsigned integer. long FromBytesToInt64(byte[] value) . Converts bytes to a 64-bit signed integer. ulong FromBytesToUInt64(byte[] value) . Converts bytes to a 64-bit unsigned integer. float FromBytesToFloat(byte[] value) . Converts bytes to a float value. double FromBytesToDouble(byte[] value) . Converts bytes to a float value. string FromBytesToString(byte[] value) . Converts bytes to a string. byte[] ToBytes(bool value) . Converts boolean value to bytes. byte[] ToBytes(short value) . Converts short value to bytes. byte[] ToBytes(ushort value) . Converts ushort value to bytes. byte[] ToBytes(int value) . Converts int value to bytes. byte[] ToBytes(uint value) . Converts uint value to bytes. byte[] ToBytes(long value) . Converts long value to bytes. byte[] ToBytes(ulong value) . Converts long value to bytes. string? ToHex(byte?[]? bytes, string delimiter) . Converts given bytes to hex with defined delimiter . string? ToHex&lt;T&gt;(T value) . Converts given value to binary . int Count(string name) . Gets the count value of a given group. int Count(string name, int parent) . Gets the count value of a given group. int ExtractFromDate(string? date, string partOfDate) . Extracts part of the date from the date . int ExtractFromDate(string date, string culture, string partOfDate) . Extracts part of the date from the date based on given culture . DateTimeOffset? GetDate() . Gets the current datetime . DateTimeOffset? UtcGetDate() . Gets the current datetime in UTC . int? Month(DateTimeOffset? value) . Gets the month from DateTimeOffset . int? Year(DateTimeOffset? value) . Gets the year from DateTimeOffset . int? Day(DateTimeOffset? value) . Gets the day from DateTimeOffset . int? Hour(DateTimeOffset? value) . Gets the hour from DateTimeOffset . int? Minute(DateTimeOffset? value) . Gets the minute from DateTimeOffset . int? Second(DateTimeOffset? value) . Gets the second from DateTimeOffset . int? Milliseconds(DateTimeOffset? value) . Gets the millisecond from DateTimeOffset . int? DayOfWeek(DateTimeOffset? value) . Gets the day of week from DateTimeOffset . TimeSpan? ExtractTimeSpan(DateTimeOffset? dateTimeOffset) . Extracts time from DateTimeOffset . DateTime? ToDateTimeOffset(string value) . Converts given value to DateTimeOffset . DateTimeOffset? ToDateTimeOffset(string value, string culture) . Converts given value to DateTimeOffset . IEnumerable&lt;T&gt;? Skip&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? skipCount) . Skips elements from the beginning of the sequence. IEnumerable&lt;T&gt;? Take&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? takeCount) . Takes elements from the beginning of the sequence. IEnumerable&lt;T&gt;? SkipAndTake&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? skipCount, int? takeCount) . Skip and takes elements from the beginning of the sequence. T[]? EnumerableToArray&lt;T&gt;(IEnumerable&lt;T&gt;? values) . Turn array arguments of T into a single array. T[]? MergeArrays&lt;T&gt;(T[][]? values) . Turn array arguments of T into a single array. IEnumerable&lt;T&gt;? LongestCommonSequence&lt;T&gt;(IEnumerable&lt;T&gt;? source, IEnumerable&lt;T&gt;? pattern) . Computes longest common sequence of two given sequences . T? GetElementAtOrDefault&lt;T&gt;(IEnumerable&lt;T&gt;? enumerable, int? index) . Gets the element at the specified index in a sequence . int? Length&lt;T&gt;(IEnumerable&lt;T&gt;? enumerable) . Gets the length of the sequence . int? Length&lt;T&gt;(T[]? array) . Gets the length of the array . T? Choose&lt;T&gt;(int? index, T[] values) . Gets the value of an array at the specified index . T If&lt;T&gt;(bool expressionResult, T a, T b) . Chose a or b value based on the expression result . bool? Match(string? regex, string? content) . Determine whether content matches the specified pattern . byte? Coalesce(byte?[] array) . Gets the first non-null value in a list . sbyte? Coalesce(sbyte?[] array) . Gets the first non-null value in a list . short? Coalesce(short?[] array) . Gets the first non-null value in a list . ushort? Coalesce(ushort?[] array) . Gets the first non-null value in a list . int? Coalesce(int?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(uint?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(long?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(ulong?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(Decimal?[] array) . Gets the first non-null value in a list . T? Coalesce&lt;T&gt;(T[] array) . Gets the first non-null value in a list . IEnumerable&lt;T&gt;? Distinct&lt;T&gt;(IEnumerable&lt;T&gt;? values) . Returns distinct elements from a collection. string? Md5(string? content) . Gets the md5 hash of the given string. string? Md5(byte?[]? content) . Gets the md5 hash of the given bytes array. string? Sha1(string? content) . Gets the sha256 hash of the given string. string? Sha1(byte?[]? content) . Gets the sha256 hash of the given bytes array. string? Sha256(string? content) . Gets the sha256 hash of the given string. string? Sha256(byte?[]? content) . Gets the sha256 hash of the given bytes array. string? Sha512(string? content) . Gets the sha256 hash of the given string. string? Sha512(byte?[]? content) . Gets the sha256 hash of the bytes array. string? ToJson&lt;T&gt;(T? obj) . Converts object to json. string[] ExtractFromJsonToArray(string? json, string? path) . Extracts values from json by path. string? ExtractFromJson(string? json, string? path) . Extracts values from json by path and joins them with comma. Decimal? Abs(Decimal? value) . Gets the absolute value . long? Abs(long? value) . Gets the absolute value . int? Abs(int? value) . Gets the absolute value . Decimal? Ceil(Decimal? value) . Gets the ceiling value . Decimal? Floor(Decimal? value) . Gets the floor value . Decimal? Sign(Decimal? value) . Determine whether value is greater, equal or less that zero . long? Sign(long? value) . Determine whether value is greater, equal or less that zero . Decimal? Round(Decimal? value, int precision) . Rounds the value within given precision . Decimal? PercentOf(Decimal? value, Decimal? max) . Gets the percentage of the value . int Rand() . Gets the random integer value . int? Rand(int? min, int? max) . Gets the random integer value . double? Pow(Decimal? x, Decimal? y) . Computes the pow between two values . double? Pow(double? x, double? y) . Computes the pow between two values . double? Sqrt(Decimal? x) . Computes the sqrt of a given value . double? Sqrt(double? x) . Computes the sqrt of a given value . double? Sqrt(long? x) . Computes the sqrt of a given value . double? PercentRank&lt;T&gt;(IEnumerable&lt;T&gt;? window, T? value) . Computes the percent rank of a given window . double? Log(Decimal? base, Decimal? value) . Calculates the logarithm of a value with a specified base. Decimal? Sin(Decimal? value) . Calculates sine of a value. double? Sin(double? value) . Calculates sine of a value. float? Sin(float? value) . Calculates sine of a value. Decimal? Cos(Decimal? value) . Calculates cosine of a value. double? Cos(double? value) . Calculates cosine of a value. float? Cos(float? value) . Calculates cosine of a value. Decimal Max(string name) . Gets the max value of a given group. Decimal Max(string name, int parent) . Gets the max value of a given group. Decimal Min(string name) . Gets the min value of a given group. Decimal Min(string name, int parent) . Gets the min value of a given group. Decimal StDev(string name, int parent) . Gets the StDev value of a given group. string NewId() . Gets the new identifier . string? Trim(string? value) . Removes leading and trailing whitespace from a string. string? TrimStart(string? value) . Removes leading whitespace from a string. string? TrimEnd(string? value) . Removes trailing whitespace from a string. string? Substring(string? value, int? index, int? length) . Gets the substring from the string. string? Substring(string value, int? length) . Gets the substring from the string . string? Concat(string[]? strings) . Concatenates the specified values . string? Concat(char?[]? characters) . Concatenates the specified characters . string? Concat(string? firstString, char?[]? chars) . Concatenates specified string fir characters . string? Concat(char? firstChar, string[]? strings) . Concatenate specific character with strings . string? Concat(object[]? objects) . Concatenates the specified strings . string? Concat&lt;T&gt;(T[]? objects) . Concatenates the specified strings . bool? Contains(string? content, string? what) . Determine whether the string contains the specified value . int? IndexOf(string? value, string? text) . Position of the first occurrence of the specified value . string? Soundex(string? value) . Computes soundex for the specified value . bool HasFuzzyMatchedWord(string text, string word, string separator) . Matches the specified text by splitting it with separator and applying fuzzy comparison . bool HasWordThatHasSmallerLevenshteinDistanceThan(string text, string word, int distance, string separator) . Matches the specified text by splitting it with separator and applying fuzzy comparison with a given distance . bool HasWordThatSoundLike(string text, string word, string separator) . Matches whether the specified word is present after being fuzzified within the specified text . bool HasTextThatSoundLikeSentence(string text, string sentence, string separator) . Matches whether the specified text is present in sentence after being fuzified . string? ToUpper(string value) . Makes the string uppercase . string? ToUpper(string value, string culture) . Makes the string uppercase within specified culture . string? ToUpperInvariant(string value) . Makes the string uppercase . string? ToLower(string value) . Makes the string lowercase . string? ToLower(string value, string culture) . Makes the string lowercase within specified culture . string? ToLowerInvariant(string value) . Makes the string lowercase . string? PadLeft(string? value, string? character, int? totalWidth) . Returns a new string that right-aligns the characters in this instance by padding them on the left with a specified Unicode character, for a specified total lengt . string? PadRight(string? value, string? character, int? totalWidth) . Returns a new string that left-aligns the characters in this instance by padding them on the right with a specified Unicode character, for a specified total length . string? Head(string? value, int? length) . Gets the first N characters of the string . string? Tail(string? value, int? length) . Gets the last N characters of the string . int? LevenshteinDistance(string? firstValue, string? secondValue) . Computes the Levenshtein distance between two strings . char? GetCharacterOf(string value, int index) . Gets the character at specified index . string? Reverse(string? value) . Reverses the string . string[] Split(string value, string[] separators) . Splits the string into an array of substrings based on the specified separators . char[] ToCharArray(string value) . Splits the string into an array of characters . string? LongestCommonSubstring(string source, string pattern) . Computes the longest common subsequence between two source and pattern . string Replicate(string value, int integer) . Clones the value n times . string? Translate(string? value, string? characters, string? translations) . Returns the string from the first argument after the characters specified in the second argument are translated into the characters specified in the third argument. string? Replace(string? text, string lookFor, string? changeTo) . Replaces the first occurrence of a specified string in this instance with another specified string . string? ToTitleCase(string? value) . Capitalizes the first letter of the string . string? GetNthWord(string? text, int? wordIndex, string? separator) . Gets the nth word of the string . string? GetFirstWord(string text, string separator) . Gets the first word of the string . string? GetSecondWord(string text, string separator) . Gets the second word of the string . string? GetThirdWord(string text, string separator) . Gets the third word of the string . string? GetLastWord(string? text, string? separator) . Gets last word of the string . bool? IsNullOrEmpty(string? value) . Determines whether the string is null or empty . bool? IsNullOrWhiteSpace(string? value) . Determines whether the string is null or whitespace . string? UrlEncode(string? value) . Encodes the value . string? UrlDecode(string? value) . Decodes the value . string? UriEncode(string? value) . Encodes the value . string? UriDecode(string? value) . Decodes the value . bool? StartsWith(string? value, string? prefix) . Determines whether the string starts with the specified prefix . bool? StartsWith(string? value, string? prefix, string comparison) . Determines whether the string starts with the specified prefix . bool? EndsWith(string? value, string? suffix) . Determines whether the string ends with the specified suffix . bool? EndsWith(string? value, string? suffix, string comparison) . Determines whether the string ends with the specified suffix . string? RegexReplace(string? value, string? pattern, string? replacement) . Replace the specified value part that matches the pattern with the replacement . string[]? SplitByLinuxNewLines(string? input) . Split string by Linux-style newlines (\\n) . string[]? SplitByWindowsNewLines(string? input) . Split string by Windows-style newlines (\\r\\n) . string[]? SplitByNewLines(string? input) . Smart split that handles both Windows (\\r\\n) and Linux (\\n) newlines . Decimal Sum(string name) . Gets the sum value of a given group. Decimal Sum(string name, int parent) . Gets the sum value of a given group. Decimal SumIncome(string name) . Gets the sum value of a given group. Decimal SumIncome(string name, int parent) . Gets the sum value of a given group. Decimal SumOutcome(string name) . Gets the outcome value of a given group. Decimal SumOutcome(string name, int parent) . Gets the outcome value of a given group. TimeSpan? SumTimeSpan(string name) . Gets the sum value of a given group. TimeSpan? SumTimeSpan(string name, int parent) . Gets the sum value of a given group. TimeSpan? MinTimeSpan(string name) . Gets the min value of a given group. TimeSpan? MinTimeSpan(string name, int parent) . Gets the min value of a given group. TimeSpan? MaxTimeSpan(string name) . Gets the max value of a given group. TimeSpan? MaxTimeSpan(string name, int parent) . Gets the min value of a given group. char? ToChar(string? value) . Converts given value to character . char? ToChar(int? value) . Converts given value to character . char? ToChar(short? value) . Converts given value to character . char? ToChar(byte? value) . Converts given value to character . char? ToChar(object? value) . Converts given value to character . DateTime? ToDateTime(string value) . Converts given value to DateTime . DateTime? ToDateTime(string value, string culture) . Converts given value to DateTime . Decimal? ToDecimal(string? value) . Converts given value to decimal . Decimal? ToDecimal(string value, string culture) . Converts given value to decimal withing given culture . Decimal? ToDecimal(byte? value) . Converts given value to Decimal . Decimal? ToDecimal(sbyte? value) . Converts given value to Decimal . Decimal? ToDecimal(short? value) . Converts given value to Decimal . Decimal? ToDecimal(ushort? value) . Converts given value to Decimal . Decimal? ToDecimal(long? value) . Converts given value to Decimal . Decimal? ToDecimal(ulong? value) . Converts given value to Decimal . Decimal? ToDecimal(float? value) . Converts given value to Decimal . Decimal? ToDecimal(double? value) . Converts given value to Decimal . Decimal? ToDecimal(object? value) . Converts given value to Decimal . double? ToDouble(object? value) . Converts given value to double . double? ToDouble(string? value) . Converts given value to double . double? ToDouble(byte? value) . Converts given value to double . double? ToDouble(sbyte? value) . Converts given value to double . double? ToDouble(short? value) . Converts given value to double . double? ToDouble(ushort? value) . Converts given value to double . double? ToDouble(int? value) . Converts given value to double . double? ToDouble(uint? value) . Converts given value to double . double? ToDouble(long? value) . Converts given value to double . double? ToDouble(ulong? value) . Converts given value to double . double? ToDouble(float? value) . Converts given value to double . double? ToDouble(double? value) . Converts given value to double . double? ToDouble(Decimal? value) . Converts given value to double . float? ToFloat(string? value) . Converts given value to float . float? ToFloat(byte? value) . Converts given value to float . float? ToFloat(sbyte? value) . Converts given value to float . float? ToFloat(short? value) . Converts given value to float . float? ToFloat(ushort? value) . Converts given value to float . float? ToFloat(int? value) . Converts given value to float . float? ToFloat(uint? value) . Converts given value to float . float? ToFloat(long? value) . Converts given value to float . float? ToFloat(ulong? value) . Converts given value to float . float? ToFloat(float? value) . Converts given value to float . float? ToFloat(Decimal? value) . Converts given value to float . int? ToInt32(string value) . Converts given value to int . int? ToInt32(byte? value) . Converts given value to int . int? ToInt32(sbyte? value) . Converts given value to int . int? ToInt32(short? value) . Converts given value to int . int? ToInt32(ushort? value) . Converts given value to int . int? ToInt32(int? value) . Converts given value to int . int? ToInt32(uint? value) . Converts given value to int . int? ToInt32(long? value) . Converts given value to int . int? ToInt32(ulong? value) . Converts given value to int . int? ToInt32(float? value) . Converts given value to int . int? ToInt32(double? value) . Converts given value to int . int? ToInt32(Decimal? value) . Converts given value to int . int? ToInt32(object? value) . Converts given value to int . long? ToInt64(string value) . Converts given value to Int64 . long? ToInt64(byte? value) . Converts given value to long . long? ToInt64(sbyte? value) . Converts given value to long . long? ToInt64(short? value) . Converts given value to long . long? ToInt64(ushort? value) . Converts given value to long . long? ToInt64(int? value) . Converts given value to long . long? ToInt64(uint? value) . Converts given value to long . long? ToInt64(long? value) . Converts given value to long . long? ToInt64(ulong? value) . Converts given value to long . long? ToInt64(float? value) . Converts given value to long . long? ToInt64(double? value) . Converts given value to long . long? ToInt64(Decimal? value) . Converts given value to long . long? ToInt64(object? value) . Converts given value to long . string? ToString(char? value) . Converts given value to string . string? ToString(DateTimeOffset? value) . Converts given value to string . string? ToString(DateTimeOffset? value, string format) . Converts given value to string . string? ToString(byte? value) . Converts given value to string . string? ToString(byte? value, string format) . Converts given value to string . string? ToString(sbyte? value) . Converts given value to string . string? ToString(sbyte? value, string format) . Converts given value to string . string? ToString(int? value) . Converts given value to string . string? ToString(int? value, string format) . Converts given value to string . string? ToString(uint? value) . Converts given value to string . string? ToString(uint? value, string format) . Converts given value to string . string? ToString(long? value) . Converts given value to string . string? ToString(long? value, string format) . Converts given value to string . string? ToString(ulong? value) . Converts given value to string . string? ToString(ulong? value, string format) . Converts given value to string . string? ToString(float? value) . Converts given value to string . string? ToString(float? value, string format) . Converts given value to string . string? ToString(double? value) . Converts given value to string . string? ToString(double? value, string format) . Converts given value to string . string? ToString(Decimal? value) . Converts given value to string . string? ToString(Decimal? value, string format) . Converts given value to string . string? ToString(bool? value) . Converts given value to string . string? ToString(object? value) . Converts given value to string . string? ToString&lt;T&gt;(T? value) . Converts given value to string . string ToString(string[] value) . Converts given value to string . string ToString&lt;T&gt;(T[] value) . Converts given value to string . TimeSpan? ToTimeSpan(string value) . Converts given value to TimeSpan . TimeSpan? ToTimeSpan(string value, string culture) . Converts given value to TimeSpan . IEnumerable&lt;T&gt; Window&lt;T&gt;(string name) . Gets the window . ",
    "url": "/data-sources/Postgres/macos-x64.html#base-methods",
    
    "relUrl": "/data-sources/Postgres/macos-x64.html#base-methods"
  },"238": {
    "doc": "MacOs X64",
    "title": "MacOs X64",
    "content": " ",
    "url": "/data-sources/Postgres/macos-x64.html",
    
    "relUrl": "/data-sources/Postgres/macos-x64.html"
  },"239": {
    "doc": "MacOs X64",
    "title": "Musoq.DataSources.Airtable",
    "content": "Provides interface to work with Airtable API. ",
    "url": "/data-sources/Airtable/macos-x64.html#musoqdatasourcesairtable",
    
    "relUrl": "/data-sources/Airtable/macos-x64.html#musoqdatasourcesairtable"
  },"240": {
    "doc": "MacOs X64",
    "title": "Tables",
    "content": "Table is a collection of rows and columns that the plugin exposes. Below are the tables that are exposed by this data source. airtable.bases() . Enumerate bases from Airtable API . Environment variables . In order to use the plugin, the user must set any required environment variables as specified in the environments element. Failure to do so may result in the plugin not functioning correctly. | Name | Is required | Description | . | MUSOQ_AIRTABLE_API_KEY | true | Airtable API key | . Columns . | Name | Type | Description | . | Id | string | Base id | . | Name | string | Base name | . | PermissionLevel | string | Base description | . airtable.base() . Enumerate base tables for Airtable API . Environment variables . In order to use the plugin, the user must set any required environment variables as specified in the environments element. Failure to do so may result in the plugin not functioning correctly. | Name | Is required | Description | . | MUSOQ_AIRTABLE_API_KEY | true | Airtable API key | . | MUSOQ_AIRTABLE_BASE_ID | true | Airtable base id | . Columns . | Name | Type | Description | . | Id | string | Base id | . | Name | string | Base name | . | PrimaryFieldId | string | Base description | . airtable.records(string tableName) . Enumerate records for specific table . Environment variables . In order to use the plugin, the user must set any required environment variables as specified in the environments element. Failure to do so may result in the plugin not functioning correctly. | Name | Is required | Description | . | MUSOQ_AIRTABLE_API_KEY | true | Airtable API key | . | MUSOQ_AIRTABLE_BASE_ID | true | Airtable base id | . Columns . This table has a dynamic structure, which means that its columns and other details cannot be determined until runtime. As a result, it is not possible to include a complete description of this table in the documentation. Instead, the actual columns and other details of this table will be determined at runtime. ",
    "url": "/data-sources/Airtable/macos-x64.html#tables",
    
    "relUrl": "/data-sources/Airtable/macos-x64.html#tables"
  },"241": {
    "doc": "MacOs X64",
    "title": "Base Methods",
    "content": "Base methods are methods that can be called on the data source specific column. Those methods are automatically inherited and enriches the data source specific methods. Below are those base methods that are exposed by this data source. int RowNumber() . Gets the row number of the current row. string? GetTypeName(object? obj) . Gets the typename of passed object. string AggregateValues(string name) . Aggregates values into a single value. string AggregateValues(string name, int parent) . Aggregates values into a single value. Decimal Avg(string name) . Gets the aggregated average value from the given group name . Decimal Avg(string name, int parent) . Gets the aggregated average value from the given group name . byte? ShiftLeft(byte? value, int shift) . Shifts the value to the left by the specified number of bits. short? ShiftLeft(short? value, int shift) . Shifts the value to the left by the specified number of bits. int? ShiftLeft(int? value, int shift) . Shifts the value to the left by the specified number of bits. long? ShiftLeft(long? value, int shift) . Shifts the value to the left by the specified number of bits. sbyte? ShiftLeft(sbyte? value, int shift) . Shifts the value to the left by the specified number of bits. ushort? ShiftLeft(ushort? value, int shift) . Shifts the value to the left by the specified number of bits. uint? ShiftLeft(uint? value, int shift) . Shifts the value to the left by the specified number of bits. ulong? ShiftLeft(ulong? value, int shift) . Shifts the value to the left by the specified number of bits. byte? ShiftRight(byte? value, int shift) . Shifts the value to the right by the specified number of bits. short? ShiftRight(short? value, int shift) . Shifts the value to the right by the specified number of bits. int? ShiftRight(int? value, int shift) . Shifts the value to the right by the specified number of bits. long? ShiftRight(long? value, int shift) . Shifts the value to the right by the specified number of bits. sbyte? ShiftRight(sbyte? value, int shift) . Shifts the value to the right by the specified number of bits. ushort? ShiftRight(ushort? value, int shift) . Shifts the value to the right by the specified number of bits. uint? ShiftRight(uint? value, int shift) . Shifts the value to the right by the specified number of bits. ulong? ShiftRight(ulong? value, int shift) . Shifts the value to the right by the specified number of bits. byte? Not(byte? value) . Performs bitwise NOT operation on a given value. short? Not(short? value) . Performs bitwise NOT operation on a given value. int? Not(int? value) . Performs bitwise NOT operation on a given value. long? Not(long? value) . Performs bitwise NOT operation on a given value. sbyte? Not(sbyte? value) . Performs bitwise NOT operation on a given value. ushort? Not(ushort? value) . Performs bitwise NOT operation on a given value. uint? Not(uint? value) . Performs bitwise NOT operation on a given value. ulong? Not(ulong? value) . Performs bitwise NOT operation on a given value. byte? And(byte? left, byte? right) . Performs bitwise AND operation on two given values. int? And(byte? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(byte? left, short? right) . Performs bitwise AND operation on two given values. int? And(byte? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(byte? left, int? right) . Performs bitwise AND operation on two given values. uint? And(byte? left, uint? right) . Performs bitwise AND operation on two given values. long? And(byte? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(byte? left, ulong? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, byte? right) . Performs bitwise AND operation on two given values. sbyte? And(sbyte? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, short? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, int? right) . Performs bitwise AND operation on two given values. uint? And(sbyte? left, uint? right) . Performs bitwise AND operation on two given values. long? And(sbyte? left, long? right) . Performs bitwise AND operation on two given values. int? And(short? left, byte? right) . Performs bitwise AND operation on two given values. int? And(short? left, sbyte? right) . Performs bitwise AND operation on two given values. short? And(short? left, short? right) . Performs bitwise AND operation on two given values. int? And(short? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(short? left, int? right) . Performs bitwise AND operation on two given values. uint? And(short? left, uint? right) . Performs bitwise AND operation on two given values. long? And(short? left, long? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, byte? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, short? right) . Performs bitwise AND operation on two given values. ushort? And(ushort? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, int? right) . Performs bitwise AND operation on two given values. uint? And(ushort? left, uint? right) . Performs bitwise AND operation on two given values. long? And(ushort? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(ushort? left, ulong? right) . Performs bitwise AND operation on two given values. int? And(int? left, byte? right) . Performs bitwise AND operation on two given values. int? And(int? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(int? left, short? right) . Performs bitwise AND operation on two given values. int? And(int? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(int? left, int? right) . Performs bitwise AND operation on two given values. uint? And(int? left, uint? right) . Performs bitwise AND operation on two given values. long? And(int? left, long? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, uint? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, byte? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, sbyte? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, short? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, ushort? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, int? right) . Performs bitwise AND operation on two given values. ulong? And(uint? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(uint? left, ulong? right) . Performs bitwise AND operation on two given values. long? And(long? left, long? right) . Performs bitwise AND operation on two given values. long? And(long? left, byte? right) . Performs bitwise AND operation on two given values. long? And(long? left, sbyte? right) . Performs bitwise AND operation on two given values. long? And(long? left, short? right) . Performs bitwise AND operation on two given values. long? And(long? left, ushort? right) . Performs bitwise AND operation on two given values. long? And(long? left, int? right) . Performs bitwise AND operation on two given values. long? And(long? left, uint? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, byte? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, ushort? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, uint? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, ulong? right) . Performs bitwise AND operation on two given values. byte? Or(byte? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, short? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(byte? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(byte? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(byte? left, ulong? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, byte? right) . Performs bitwise OR operation on two given values. sbyte? Or(sbyte? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, short? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(sbyte? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(sbyte? left, long? right) . Performs bitwise OR operation on two given values. int? Or(short? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(short? left, sbyte? right) . Performs bitwise OR operation on two given values. short? Or(short? left, short? right) . Performs bitwise OR operation on two given values. int? Or(short? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(short? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(short? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(short? left, long? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, short? right) . Performs bitwise OR operation on two given values. ushort? Or(ushort? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(ushort? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(ushort? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(ushort? left, ulong? right) . Performs bitwise OR operation on two given values. int? Or(int? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(int? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(int? left, short? right) . Performs bitwise OR operation on two given values. int? Or(int? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(int? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(int? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(int? left, long? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, uint? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, byte? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, sbyte? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, short? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, ushort? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, int? right) . Performs bitwise OR operation on two given values. ulong? Or(uint? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(uint? left, ulong? right) . Performs bitwise OR operation on two given values. long? Or(long? left, long? right) . Performs bitwise OR operation on two given values. long? Or(long? left, byte? right) . Performs bitwise OR operation on two given values. long? Or(long? left, sbyte? right) . Performs bitwise OR operation on two given values. long? Or(long? left, short? right) . Performs bitwise OR operation on two given values. long? Or(long? left, ushort? right) . Performs bitwise OR operation on two given values. long? Or(long? left, int? right) . Performs bitwise OR operation on two given values. long? Or(long? left, uint? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, byte? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, ushort? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, uint? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, ulong? right) . Performs bitwise OR operation on two given values. byte? Xor(byte? left, byte? right) . Performs bitwise OR operation on two given values. int? Xor(byte? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(byte? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(byte? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(byte? left, ulong? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, byte? right) . Performs bitwise Xor operation on two given values. sbyte? Xor(sbyte? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(sbyte? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(sbyte? left, long? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, sbyte? right) . Performs bitwise Xor operation on two given values. short? Xor(short? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, ushort? right) . Performs bitwise XOR operation on two given values. int? Xor(short? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(short? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(short? left, long? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, short? right) . Performs bitwise Xor operation on two given values. ushort? Xor(ushort? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(ushort? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(ushort? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ushort? left, ulong? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(int? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(int? left, long? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, uint? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, byte? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, sbyte? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, short? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, ushort? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, int? right) . Performs bitwise Xor operation on two given values. ulong? Xor(uint? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(uint? left, ulong? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, long? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, byte? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, sbyte? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, short? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, ushort? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, int? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, uint? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, ulong? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, byte? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, ushort? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, uint? right) . Performs bitwise Xor operation on two given values. byte[] GetBytes(string? content) . Gets the bytes from the given string. byte[] GetBytes(string? content, int length, int offset) . Gets the bytes from the given string within given offset and length. byte?[]? GetBytes(char? character) . Gets the bytes from the given character. byte?[]? GetBytes(bool? bit) . Gets the bytes from the given boolean. byte?[]? GetBytes(long? value) . Gets the bytes from the given long. byte?[]? GetBytes(int? value) . Gets the bytes from the given int. byte?[]? GetBytes(short? value) . Gets the bytes from the given short. byte?[]? GetBytes(ulong? value) . Gets the bytes from the given ulong. byte?[]? GetBytes(ushort? value) . Gets the bytes from the given ushort. byte?[]? GetBytes(uint? value) . Gets the bytes from the given uint. byte?[]? GetBytes(Decimal? value) . Gets the bytes from the given decimal. byte?[]? GetBytes(double? value) . Gets the bytes from the given double. byte?[]? GetBytes(float? value) . Gets the bytes from the given float. string? ToBin(byte?[]? bytes, string delimiter) . Converts given bytes to binary with defined delimiter . string ToBin&lt;T&gt;(T value) . Converts given value to binary . string ToOcta&lt;T&gt;(T value) . Converts given value to octal . string ToDec&lt;T&gt;(T value) . Converts given value to decimal . string ToBase64(byte[] value) . Converts given value to string . string ToBase64(byte[] value, int offset, int length) . Converts given array of bytes to string . byte[] FromBase64(string value) . Converts given string to bytes array . bool FromBytesToBool(byte[] value) . Converts bytes to boolean value. short FromBytesToInt16(byte[] value) . Converts bytes to a 16-bit signed integer. ushort FromBytesToUInt16(byte[] value) . Converts bytes to a 16-bit unsigned integer. int FromBytesToInt32(byte[] value) . Converts bytes to a 32-bit signed integer. uint FromBytesToUInt32(byte[] value) . Converts bytes to a 32-bit unsigned integer. long FromBytesToInt64(byte[] value) . Converts bytes to a 64-bit signed integer. ulong FromBytesToUInt64(byte[] value) . Converts bytes to a 64-bit unsigned integer. float FromBytesToFloat(byte[] value) . Converts bytes to a float value. double FromBytesToDouble(byte[] value) . Converts bytes to a float value. string FromBytesToString(byte[] value) . Converts bytes to a string. byte[] ToBytes(bool value) . Converts boolean value to bytes. byte[] ToBytes(short value) . Converts short value to bytes. byte[] ToBytes(ushort value) . Converts ushort value to bytes. byte[] ToBytes(int value) . Converts int value to bytes. byte[] ToBytes(uint value) . Converts uint value to bytes. byte[] ToBytes(long value) . Converts long value to bytes. byte[] ToBytes(ulong value) . Converts long value to bytes. string? ToHex(byte?[]? bytes, string delimiter) . Converts given bytes to hex with defined delimiter . string? ToHex&lt;T&gt;(T value) . Converts given value to binary . int Count(string name) . Gets the count value of a given group. int Count(string name, int parent) . Gets the count value of a given group. int ExtractFromDate(string? date, string partOfDate) . Extracts part of the date from the date . int ExtractFromDate(string date, string culture, string partOfDate) . Extracts part of the date from the date based on given culture . DateTimeOffset? GetDate() . Gets the current datetime . DateTimeOffset? UtcGetDate() . Gets the current datetime in UTC . int? Month(DateTimeOffset? value) . Gets the month from DateTimeOffset . int? Year(DateTimeOffset? value) . Gets the year from DateTimeOffset . int? Day(DateTimeOffset? value) . Gets the day from DateTimeOffset . int? Hour(DateTimeOffset? value) . Gets the hour from DateTimeOffset . int? Minute(DateTimeOffset? value) . Gets the minute from DateTimeOffset . int? Second(DateTimeOffset? value) . Gets the second from DateTimeOffset . int? Milliseconds(DateTimeOffset? value) . Gets the millisecond from DateTimeOffset . int? DayOfWeek(DateTimeOffset? value) . Gets the day of week from DateTimeOffset . TimeSpan? ExtractTimeSpan(DateTimeOffset? dateTimeOffset) . Extracts time from DateTimeOffset . DateTime? ToDateTimeOffset(string value) . Converts given value to DateTimeOffset . DateTimeOffset? ToDateTimeOffset(string value, string culture) . Converts given value to DateTimeOffset . IEnumerable&lt;T&gt;? Skip&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? skipCount) . Skips elements from the beginning of the sequence. IEnumerable&lt;T&gt;? Take&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? takeCount) . Takes elements from the beginning of the sequence. IEnumerable&lt;T&gt;? SkipAndTake&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? skipCount, int? takeCount) . Skip and takes elements from the beginning of the sequence. T[]? EnumerableToArray&lt;T&gt;(IEnumerable&lt;T&gt;? values) . Turn array arguments of T into a single array. T[]? MergeArrays&lt;T&gt;(T[][]? values) . Turn array arguments of T into a single array. IEnumerable&lt;T&gt;? LongestCommonSequence&lt;T&gt;(IEnumerable&lt;T&gt;? source, IEnumerable&lt;T&gt;? pattern) . Computes longest common sequence of two given sequences . T? GetElementAtOrDefault&lt;T&gt;(IEnumerable&lt;T&gt;? enumerable, int? index) . Gets the element at the specified index in a sequence . int? Length&lt;T&gt;(IEnumerable&lt;T&gt;? enumerable) . Gets the length of the sequence . int? Length&lt;T&gt;(T[]? array) . Gets the length of the array . T? Choose&lt;T&gt;(int? index, T[] values) . Gets the value of an array at the specified index . T If&lt;T&gt;(bool expressionResult, T a, T b) . Chose a or b value based on the expression result . bool? Match(string? regex, string? content) . Determine whether content matches the specified pattern . byte? Coalesce(byte?[] array) . Gets the first non-null value in a list . sbyte? Coalesce(sbyte?[] array) . Gets the first non-null value in a list . short? Coalesce(short?[] array) . Gets the first non-null value in a list . ushort? Coalesce(ushort?[] array) . Gets the first non-null value in a list . int? Coalesce(int?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(uint?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(long?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(ulong?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(Decimal?[] array) . Gets the first non-null value in a list . T? Coalesce&lt;T&gt;(T[] array) . Gets the first non-null value in a list . IEnumerable&lt;T&gt;? Distinct&lt;T&gt;(IEnumerable&lt;T&gt;? values) . Returns distinct elements from a collection. string? Md5(string? content) . Gets the md5 hash of the given string. string? Md5(byte?[]? content) . Gets the md5 hash of the given bytes array. string? Sha1(string? content) . Gets the sha256 hash of the given string. string? Sha1(byte?[]? content) . Gets the sha256 hash of the given bytes array. string? Sha256(string? content) . Gets the sha256 hash of the given string. string? Sha256(byte?[]? content) . Gets the sha256 hash of the given bytes array. string? Sha512(string? content) . Gets the sha256 hash of the given string. string? Sha512(byte?[]? content) . Gets the sha256 hash of the bytes array. string? ToJson&lt;T&gt;(T? obj) . Converts object to json. string[] ExtractFromJsonToArray(string? json, string? path) . Extracts values from json by path. string? ExtractFromJson(string? json, string? path) . Extracts values from json by path and joins them with comma. Decimal? Abs(Decimal? value) . Gets the absolute value . long? Abs(long? value) . Gets the absolute value . int? Abs(int? value) . Gets the absolute value . Decimal? Ceil(Decimal? value) . Gets the ceiling value . Decimal? Floor(Decimal? value) . Gets the floor value . Decimal? Sign(Decimal? value) . Determine whether value is greater, equal or less that zero . long? Sign(long? value) . Determine whether value is greater, equal or less that zero . Decimal? Round(Decimal? value, int precision) . Rounds the value within given precision . Decimal? PercentOf(Decimal? value, Decimal? max) . Gets the percentage of the value . int Rand() . Gets the random integer value . int? Rand(int? min, int? max) . Gets the random integer value . double? Pow(Decimal? x, Decimal? y) . Computes the pow between two values . double? Pow(double? x, double? y) . Computes the pow between two values . double? Sqrt(Decimal? x) . Computes the sqrt of a given value . double? Sqrt(double? x) . Computes the sqrt of a given value . double? Sqrt(long? x) . Computes the sqrt of a given value . double? PercentRank&lt;T&gt;(IEnumerable&lt;T&gt;? window, T? value) . Computes the percent rank of a given window . double? Log(Decimal? base, Decimal? value) . Calculates the logarithm of a value with a specified base. Decimal? Sin(Decimal? value) . Calculates sine of a value. double? Sin(double? value) . Calculates sine of a value. float? Sin(float? value) . Calculates sine of a value. Decimal? Cos(Decimal? value) . Calculates cosine of a value. double? Cos(double? value) . Calculates cosine of a value. float? Cos(float? value) . Calculates cosine of a value. Decimal Max(string name) . Gets the max value of a given group. Decimal Max(string name, int parent) . Gets the max value of a given group. Decimal Min(string name) . Gets the min value of a given group. Decimal Min(string name, int parent) . Gets the min value of a given group. Decimal StDev(string name, int parent) . Gets the StDev value of a given group. string NewId() . Gets the new identifier . string? Trim(string? value) . Removes leading and trailing whitespace from a string. string? TrimStart(string? value) . Removes leading whitespace from a string. string? TrimEnd(string? value) . Removes trailing whitespace from a string. string? Substring(string? value, int? index, int? length) . Gets the substring from the string. string? Substring(string value, int? length) . Gets the substring from the string . string? Concat(string[]? strings) . Concatenates the specified values . string? Concat(char?[]? characters) . Concatenates the specified characters . string? Concat(string? firstString, char?[]? chars) . Concatenates specified string fir characters . string? Concat(char? firstChar, string[]? strings) . Concatenate specific character with strings . string? Concat(object[]? objects) . Concatenates the specified strings . string? Concat&lt;T&gt;(T[]? objects) . Concatenates the specified strings . bool? Contains(string? content, string? what) . Determine whether the string contains the specified value . int? IndexOf(string? value, string? text) . Position of the first occurrence of the specified value . string? Soundex(string? value) . Computes soundex for the specified value . bool HasFuzzyMatchedWord(string text, string word, string separator) . Matches the specified text by splitting it with separator and applying fuzzy comparison . bool HasWordThatHasSmallerLevenshteinDistanceThan(string text, string word, int distance, string separator) . Matches the specified text by splitting it with separator and applying fuzzy comparison with a given distance . bool HasWordThatSoundLike(string text, string word, string separator) . Matches whether the specified word is present after being fuzzified within the specified text . bool HasTextThatSoundLikeSentence(string text, string sentence, string separator) . Matches whether the specified text is present in sentence after being fuzified . string? ToUpper(string value) . Makes the string uppercase . string? ToUpper(string value, string culture) . Makes the string uppercase within specified culture . string? ToUpperInvariant(string value) . Makes the string uppercase . string? ToLower(string value) . Makes the string lowercase . string? ToLower(string value, string culture) . Makes the string lowercase within specified culture . string? ToLowerInvariant(string value) . Makes the string lowercase . string? PadLeft(string? value, string? character, int? totalWidth) . Returns a new string that right-aligns the characters in this instance by padding them on the left with a specified Unicode character, for a specified total lengt . string? PadRight(string? value, string? character, int? totalWidth) . Returns a new string that left-aligns the characters in this instance by padding them on the right with a specified Unicode character, for a specified total length . string? Head(string? value, int? length) . Gets the first N characters of the string . string? Tail(string? value, int? length) . Gets the last N characters of the string . int? LevenshteinDistance(string? firstValue, string? secondValue) . Computes the Levenshtein distance between two strings . char? GetCharacterOf(string value, int index) . Gets the character at specified index . string? Reverse(string? value) . Reverses the string . string[] Split(string value, string[] separators) . Splits the string into an array of substrings based on the specified separators . char[] ToCharArray(string value) . Splits the string into an array of characters . string? LongestCommonSubstring(string source, string pattern) . Computes the longest common subsequence between two source and pattern . string Replicate(string value, int integer) . Clones the value n times . string? Translate(string? value, string? characters, string? translations) . Returns the string from the first argument after the characters specified in the second argument are translated into the characters specified in the third argument. string? Replace(string? text, string lookFor, string? changeTo) . Replaces the first occurrence of a specified string in this instance with another specified string . string? ToTitleCase(string? value) . Capitalizes the first letter of the string . string? GetNthWord(string? text, int? wordIndex, string? separator) . Gets the nth word of the string . string? GetFirstWord(string text, string separator) . Gets the first word of the string . string? GetSecondWord(string text, string separator) . Gets the second word of the string . string? GetThirdWord(string text, string separator) . Gets the third word of the string . string? GetLastWord(string? text, string? separator) . Gets last word of the string . bool? IsNullOrEmpty(string? value) . Determines whether the string is null or empty . bool? IsNullOrWhiteSpace(string? value) . Determines whether the string is null or whitespace . string? UrlEncode(string? value) . Encodes the value . string? UrlDecode(string? value) . Decodes the value . string? UriEncode(string? value) . Encodes the value . string? UriDecode(string? value) . Decodes the value . bool? StartsWith(string? value, string? prefix) . Determines whether the string starts with the specified prefix . bool? StartsWith(string? value, string? prefix, string comparison) . Determines whether the string starts with the specified prefix . bool? EndsWith(string? value, string? suffix) . Determines whether the string ends with the specified suffix . bool? EndsWith(string? value, string? suffix, string comparison) . Determines whether the string ends with the specified suffix . string? RegexReplace(string? value, string? pattern, string? replacement) . Replace the specified value part that matches the pattern with the replacement . string[]? SplitByLinuxNewLines(string? input) . Split string by Linux-style newlines (\\n) . string[]? SplitByWindowsNewLines(string? input) . Split string by Windows-style newlines (\\r\\n) . string[]? SplitByNewLines(string? input) . Smart split that handles both Windows (\\r\\n) and Linux (\\n) newlines . Decimal Sum(string name) . Gets the sum value of a given group. Decimal Sum(string name, int parent) . Gets the sum value of a given group. Decimal SumIncome(string name) . Gets the sum value of a given group. Decimal SumIncome(string name, int parent) . Gets the sum value of a given group. Decimal SumOutcome(string name) . Gets the outcome value of a given group. Decimal SumOutcome(string name, int parent) . Gets the outcome value of a given group. TimeSpan? SumTimeSpan(string name) . Gets the sum value of a given group. TimeSpan? SumTimeSpan(string name, int parent) . Gets the sum value of a given group. TimeSpan? MinTimeSpan(string name) . Gets the min value of a given group. TimeSpan? MinTimeSpan(string name, int parent) . Gets the min value of a given group. TimeSpan? MaxTimeSpan(string name) . Gets the max value of a given group. TimeSpan? MaxTimeSpan(string name, int parent) . Gets the min value of a given group. char? ToChar(string? value) . Converts given value to character . char? ToChar(int? value) . Converts given value to character . char? ToChar(short? value) . Converts given value to character . char? ToChar(byte? value) . Converts given value to character . char? ToChar(object? value) . Converts given value to character . DateTime? ToDateTime(string value) . Converts given value to DateTime . DateTime? ToDateTime(string value, string culture) . Converts given value to DateTime . Decimal? ToDecimal(string? value) . Converts given value to decimal . Decimal? ToDecimal(string value, string culture) . Converts given value to decimal withing given culture . Decimal? ToDecimal(byte? value) . Converts given value to Decimal . Decimal? ToDecimal(sbyte? value) . Converts given value to Decimal . Decimal? ToDecimal(short? value) . Converts given value to Decimal . Decimal? ToDecimal(ushort? value) . Converts given value to Decimal . Decimal? ToDecimal(long? value) . Converts given value to Decimal . Decimal? ToDecimal(ulong? value) . Converts given value to Decimal . Decimal? ToDecimal(float? value) . Converts given value to Decimal . Decimal? ToDecimal(double? value) . Converts given value to Decimal . Decimal? ToDecimal(object? value) . Converts given value to Decimal . double? ToDouble(object? value) . Converts given value to double . double? ToDouble(string? value) . Converts given value to double . double? ToDouble(byte? value) . Converts given value to double . double? ToDouble(sbyte? value) . Converts given value to double . double? ToDouble(short? value) . Converts given value to double . double? ToDouble(ushort? value) . Converts given value to double . double? ToDouble(int? value) . Converts given value to double . double? ToDouble(uint? value) . Converts given value to double . double? ToDouble(long? value) . Converts given value to double . double? ToDouble(ulong? value) . Converts given value to double . double? ToDouble(float? value) . Converts given value to double . double? ToDouble(double? value) . Converts given value to double . double? ToDouble(Decimal? value) . Converts given value to double . float? ToFloat(string? value) . Converts given value to float . float? ToFloat(byte? value) . Converts given value to float . float? ToFloat(sbyte? value) . Converts given value to float . float? ToFloat(short? value) . Converts given value to float . float? ToFloat(ushort? value) . Converts given value to float . float? ToFloat(int? value) . Converts given value to float . float? ToFloat(uint? value) . Converts given value to float . float? ToFloat(long? value) . Converts given value to float . float? ToFloat(ulong? value) . Converts given value to float . float? ToFloat(float? value) . Converts given value to float . float? ToFloat(Decimal? value) . Converts given value to float . int? ToInt32(string value) . Converts given value to int . int? ToInt32(byte? value) . Converts given value to int . int? ToInt32(sbyte? value) . Converts given value to int . int? ToInt32(short? value) . Converts given value to int . int? ToInt32(ushort? value) . Converts given value to int . int? ToInt32(int? value) . Converts given value to int . int? ToInt32(uint? value) . Converts given value to int . int? ToInt32(long? value) . Converts given value to int . int? ToInt32(ulong? value) . Converts given value to int . int? ToInt32(float? value) . Converts given value to int . int? ToInt32(double? value) . Converts given value to int . int? ToInt32(Decimal? value) . Converts given value to int . int? ToInt32(object? value) . Converts given value to int . long? ToInt64(string value) . Converts given value to Int64 . long? ToInt64(byte? value) . Converts given value to long . long? ToInt64(sbyte? value) . Converts given value to long . long? ToInt64(short? value) . Converts given value to long . long? ToInt64(ushort? value) . Converts given value to long . long? ToInt64(int? value) . Converts given value to long . long? ToInt64(uint? value) . Converts given value to long . long? ToInt64(long? value) . Converts given value to long . long? ToInt64(ulong? value) . Converts given value to long . long? ToInt64(float? value) . Converts given value to long . long? ToInt64(double? value) . Converts given value to long . long? ToInt64(Decimal? value) . Converts given value to long . long? ToInt64(object? value) . Converts given value to long . string? ToString(char? value) . Converts given value to string . string? ToString(DateTimeOffset? value) . Converts given value to string . string? ToString(DateTimeOffset? value, string format) . Converts given value to string . string? ToString(byte? value) . Converts given value to string . string? ToString(byte? value, string format) . Converts given value to string . string? ToString(sbyte? value) . Converts given value to string . string? ToString(sbyte? value, string format) . Converts given value to string . string? ToString(int? value) . Converts given value to string . string? ToString(int? value, string format) . Converts given value to string . string? ToString(uint? value) . Converts given value to string . string? ToString(uint? value, string format) . Converts given value to string . string? ToString(long? value) . Converts given value to string . string? ToString(long? value, string format) . Converts given value to string . string? ToString(ulong? value) . Converts given value to string . string? ToString(ulong? value, string format) . Converts given value to string . string? ToString(float? value) . Converts given value to string . string? ToString(float? value, string format) . Converts given value to string . string? ToString(double? value) . Converts given value to string . string? ToString(double? value, string format) . Converts given value to string . string? ToString(Decimal? value) . Converts given value to string . string? ToString(Decimal? value, string format) . Converts given value to string . string? ToString(bool? value) . Converts given value to string . string? ToString(object? value) . Converts given value to string . string? ToString&lt;T&gt;(T? value) . Converts given value to string . string ToString(string[] value) . Converts given value to string . string ToString&lt;T&gt;(T[] value) . Converts given value to string . TimeSpan? ToTimeSpan(string value) . Converts given value to TimeSpan . TimeSpan? ToTimeSpan(string value, string culture) . Converts given value to TimeSpan . IEnumerable&lt;T&gt; Window&lt;T&gt;(string name) . Gets the window . ",
    "url": "/data-sources/Airtable/macos-x64.html#base-methods",
    
    "relUrl": "/data-sources/Airtable/macos-x64.html#base-methods"
  },"242": {
    "doc": "MacOs X64",
    "title": "MacOs X64",
    "content": " ",
    "url": "/data-sources/Airtable/macos-x64.html",
    
    "relUrl": "/data-sources/Airtable/macos-x64.html"
  },"243": {
    "doc": "MacOs X64",
    "title": "Musoq.DataSources.Kubernetes",
    "content": "Provides schema to work with Kubernetes. ",
    "url": "/data-sources/Kubernetes/macos-x64.html#musoqdatasourceskubernetes",
    
    "relUrl": "/data-sources/Kubernetes/macos-x64.html#musoqdatasourceskubernetes"
  },"244": {
    "doc": "MacOs X64",
    "title": "Tables",
    "content": "Table is a collection of rows and columns that the plugin exposes. Below are the tables that are exposed by this data source. kubernetes.deployments() . Enumerate deployments . Environment variables . In order to use the plugin, the user must set any required environment variables as specified in the environments element. Failure to do so may result in the plugin not functioning correctly. | Name | Is required | Description | . | MUSOQ_KUBERNETES_CONFIG_FILE | false | Kubernetes config file | . Columns . | Name | Type | Description | . | Namespace | string | Namespace string | . | Name | string | Name string | . | CreationTimestamp | DateTime? | CreationTimestamp of the DeploymentEntity | . | Generation | long? | Generation of the DeploymentEntity | . | ResourceVersion | string | ResourceVersion string | . | Images | string | Image used within deployment | . | ImagePullPolicies | string | ImagePullPolicies used within deployment | . | RestartPolicy | string | RestartPolicy string | . | ContainersNames | string | Names of containers used within deployment | . | Statuses | string | Statuses of depl | . kubernetes.pods() . Enumerate pods . Environment variables . In order to use the plugin, the user must set any required environment variables as specified in the environments element. Failure to do so may result in the plugin not functioning correctly. | Name | Is required | Description | . | MUSOQ_KUBERNETES_CONFIG_FILE | false | Kubernetes config file | . Columns . | Name | Type | Description | . | Namespace | string | Namespace string | . | Name | string | Name string | . | Type | string | Type string | . | PF | string | PF string | . | Ready | string | Ready string | . | Restarts | string | Restarts string | . | Status | string | Status string | . | Cpu | string | Cpu string | . | Memory | string | Memory string | . | IP | string | IP string | . kubernetes.services() . Enumerates services . Environment variables . In order to use the plugin, the user must set any required environment variables as specified in the environments element. Failure to do so may result in the plugin not functioning correctly. | Name | Is required | Description | . | MUSOQ_KUBERNETES_CONFIG_FILE | false | Kubernetes config file | . Columns . | Name | Type | Description | . | Metadata | V1ObjectMeta | Metadata of the ServiceEntity | . | Spec | V1ServiceSpec | Spec of the ServiceEntity | . | Kind | string | Kind string | . | Status | V1ServiceStatus | Status of the ServiceEntity | . kubernetes.nodes() . Enumerates nodes . Environment variables . In order to use the plugin, the user must set any required environment variables as specified in the environments element. Failure to do so may result in the plugin not functioning correctly. | Name | Is required | Description | . | MUSOQ_KUBERNETES_CONFIG_FILE | false | Kubernetes config file | . Columns . | Name | Type | Description | . | Name | string | Name string | . | Status | string | Status string | . | Roles | string | Roles string | . | Age | DateTime? | Age of the NodeEntity | . | Version | string | Version string | . | Kernel | string | Kernel string | . | OS | string | OS string | . | Architecture | string | Architecture string | . | ContainerRuntime | string | Container Runtime string | . | Cpu | string | CPU string | . | Memory | string | Memory string | . kubernetes.configmaps() . Enumerate configmaps . Environment variables . In order to use the plugin, the user must set any required environment variables as specified in the environments element. Failure to do so may result in the plugin not functioning correctly. | Name | Is required | Description | . | MUSOQ_KUBERNETES_CONFIG_FILE | false | Kubernetes config file | . Columns . | Name | Type | Description | . | Namespace | string | Namespace string | . | Name | string | Name string | . | Age | DateTime? | Age | . kubernetes.cronJobs() . Enumerate cron jobs . Environment variables . In order to use the plugin, the user must set any required environment variables as specified in the environments element. Failure to do so may result in the plugin not functioning correctly. | Name | Is required | Description | . | MUSOQ_KUBERNETES_CONFIG_FILE | false | Kubernetes config file | . Columns . | Name | Type | Description | . | Namespace | string | Namespace string | . | Name | string | Name string | . | Schedule | string | Dictionary of the schedule | . | Active | bool | Flag indicating if the job is active | . | LastScheduleTime | DateTime? | Last schedule time of the job | . kubernetes.daemonSets() . Enumerate daemonsets . Environment variables . In order to use the plugin, the user must set any required environment variables as specified in the environments element. Failure to do so may result in the plugin not functioning correctly. | Name | Is required | Description | . | MUSOQ_KUBERNETES_CONFIG_FILE | false | Kubernetes config file | . Columns . | Name | Type | Description | . | Namespace | string | Namespace string | . | Name | string | Name string | . | Desired | int | Desired number of entities | . | Current | int | Current number of entities | . | Ready | int | Number of ready entities | . | UpToDate | int? | Number of up-to-date entities | . | Available | int? | Number of available entities | . | Age | DateTime? | Age of the entity | . kubernetes.jobs() . Enumerate jobs . Environment variables . In order to use the plugin, the user must set any required environment variables as specified in the environments element. Failure to do so may result in the plugin not functioning correctly. | Name | Is required | Description | . | MUSOQ_KUBERNETES_CONFIG_FILE | false | Kubernetes config file | . Columns . | Name | Type | Description | . | Namespace | string | Namespace string | . | Name | string | Name string | . | Completions | int | Number of completions | . | Duration | TimeSpan? | Duration of job execution | . | Images | string | Images string | . | Age | DateTime? | Age of the job | . kubernetes.persistentVolumeClaims() . Enumerate persistent volume claims . Environment variables . In order to use the plugin, the user must set any required environment variables as specified in the environments element. Failure to do so may result in the plugin not functioning correctly. | Name | Is required | Description | . | MUSOQ_KUBERNETES_CONFIG_FILE | false | Kubernetes config file | . Columns . | Name | Type | Description | . | Namespace | string | Namespace string | . | Name | string | Name string | . | Status | string | Status string | . | Volume | string | Volume string | . | Capacity | string | Capacity string | . | Age | DateTime? | Age of the PersistentVolumeClaimsEntity | . kubernetes.persistentVolumes() . Enumerate persistent volumes . Environment variables . In order to use the plugin, the user must set any required environment variables as specified in the environments element. Failure to do so may result in the plugin not functioning correctly. | Name | Is required | Description | . | MUSOQ_KUBERNETES_CONFIG_FILE | false | Kubernetes config file | . Columns . | Name | Type | Description | . | Name | string | Name string | . | Capacity | IDictionary&lt;string, ResourceQuantity&gt; | Dictionary of capacities | . | AccessModes | string | AccessModes string | . | ReclaimPolicy | string | Reclaim policy string | . | Status | string | Status string | . | Claim | string | Claim string | . | StorageClass | string | StorageClass string | . | Reason | string | Reason string | . | Age | DateTime? | Age of the PersistentVolumeEntity | . kubernetes.replicaSets() . Enumerate replicasets . Environment variables . In order to use the plugin, the user must set any required environment variables as specified in the environments element. Failure to do so may result in the plugin not functioning correctly. | Name | Is required | Description | . | MUSOQ_KUBERNETES_CONFIG_FILE | false | Kubernetes config file | . Columns . | Name | Type | Description | . | Namespace | string | Namespace string | . | Name | string | Name string | . | Desired | int? | Desired number of replicas | . | Current | string | Current string | . | ReadyAge | DateTime? | Age when the ReplicaSetEntity is ready | . kubernetes.secretsData() . Enumerate secrets data . Environment variables . In order to use the plugin, the user must set any required environment variables as specified in the environments element. Failure to do so may result in the plugin not functioning correctly. | Name | Is required | Description | . | MUSOQ_KUBERNETES_CONFIG_FILE | false | Kubernetes config file | . Columns . | Name | Type | Description | . | Namespace | string | Namespace string | . | Name | string | Name string | . | Key | string | Key string | . | Value | byte[] | Value byte array | . kubernetes.secrets() . Enumerate secrets . Environment variables . In order to use the plugin, the user must set any required environment variables as specified in the environments element. Failure to do so may result in the plugin not functioning correctly. | Name | Is required | Description | . | MUSOQ_KUBERNETES_CONFIG_FILE | false | Kubernetes config file | . Columns . | Name | Type | Description | . | Namespace | string | Namespace string | . | Name | string | Name string | . | Type | string | Type string | . | Age | DateTime? | Age of the SecretEntity | . kubernetes.statefulsets() . Enumerate statefulsets . Environment variables . In order to use the plugin, the user must set any required environment variables as specified in the environments element. Failure to do so may result in the plugin not functioning correctly. | Name | Is required | Description | . | MUSOQ_KUBERNETES_CONFIG_FILE | false | Kubernetes config file | . Columns . | Name | Type | Description | . | Namespace | string | Namespace string | . | Name | string | Name string | . | Replicas | int? | Number of replicas | . | Age | DateTime? | Age of the StatefulSetEntity | . kubernetes.podcontainers() . Enumerate pod containers . Environment variables . In order to use the plugin, the user must set any required environment variables as specified in the environments element. Failure to do so may result in the plugin not functioning correctly. | Name | Is required | Description | . | MUSOQ_KUBERNETES_CONFIG_FILE | false | Kubernetes config file | . Columns . | Name | Type | Description | . | Namespace | string | Namespace string | . | Name | string | Name string | . | ContainerName | string | Container name string | . | Image | string | Image string | . | ImagePullPolicy | string | Image pull policy string | . | Age | DateTime? | Container age | . kubernetes.podlogs(string podName, string string containerName, string namespace) . Enumerate pod containers . Environment variables . In order to use the plugin, the user must set any required environment variables as specified in the environments element. Failure to do so may result in the plugin not functioning correctly. | Name | Is required | Description | . | MUSOQ_KUBERNETES_CONFIG_FILE | false | Kubernetes config file | . Columns . | Name | Type | Description | . | Namespace | string | Namespace string | . | Name | string | Name string | . | ContainerName | string | Container name string | . | Line | string | Line string | . kubernetes.events() . Enumerate events . Environment variables . In order to use the plugin, the user must set any required environment variables as specified in the environments element. Failure to do so may result in the plugin not functioning correctly. | Name | Is required | Description | . | MUSOQ_KUBERNETES_CONFIG_FILE | false | Kubernetes config file | . Columns . | Name | Type | Description | . | Action | string | Action string | . | ApiVersion | string | ApiVersion string | . | Count | int? | Count of the event | . | EventTime | DateTime? | EventTime of the event | . | FirstTimestamp | DateTime? | FirstTimestamp of the event | . | InvolvedObject | V1ObjectReference | InvolvedObject of the event | . | Kind | string | Kind string | . | LastTimestamp | DateTime? | LastTimestamp of the event | . | Message | string | Message string | . | Reason | string | Reason string | . | Related | V1ObjectReference | Related of the event | . | ReportingComponent | string | ReportingComponent string | . | ReportingInstance | string | ReportingInstance string | . | Series | Corev1EventSeries | Series of the event | . | Source | V1EventSource | Source of the event | . | Type | string | Type string | . kubernetes.events(string namespace) . Enumerate events . Environment variables . In order to use the plugin, the user must set any required environment variables as specified in the environments element. Failure to do so may result in the plugin not functioning correctly. | Name | Is required | Description | . | MUSOQ_KUBERNETES_CONFIG_FILE | false | Kubernetes config file | . Columns . | Name | Type | Description | . | Action | string | Action string | . | ApiVersion | string | ApiVersion string | . | Count | int? | Count of the event | . | EventTime | DateTime? | EventTime of the event | . | FirstTimestamp | DateTime? | FirstTimestamp of the event | . | InvolvedObject | V1ObjectReference | InvolvedObject of the event | . | Kind | string | Kind string | . | LastTimestamp | DateTime? | LastTimestamp of the event | . | Message | string | Message string | . | Reason | string | Reason string | . | Related | V1ObjectReference | Related of the event | . | ReportingComponent | string | ReportingComponent string | . | ReportingInstance | string | ReportingInstance string | . | Series | Corev1EventSeries | Series of the event | . | Source | V1EventSource | Source of the event | . | Type | string | Type string | . ",
    "url": "/data-sources/Kubernetes/macos-x64.html#tables",
    
    "relUrl": "/data-sources/Kubernetes/macos-x64.html#tables"
  },"245": {
    "doc": "MacOs X64",
    "title": "Methods",
    "content": "Methods are functions that can be called on the data source specific column. Below are the methods that are exposed by this data source. string EncodeSecret(string text) . Encodes the secret. string EncodeSecret(string text, string encoding) . Encodes the secret. string DecodeSecret(string text) . Decodes the secret. string? GetLabelOrDefault(string key) . Gets the pod container label. ",
    "url": "/data-sources/Kubernetes/macos-x64.html#methods",
    
    "relUrl": "/data-sources/Kubernetes/macos-x64.html#methods"
  },"246": {
    "doc": "MacOs X64",
    "title": "Base Methods",
    "content": "Base methods are methods that can be called on the data source specific column. Those methods are automatically inherited and enriches the data source specific methods. Below are those base methods that are exposed by this data source. int RowNumber() . Gets the row number of the current row. string? GetTypeName(object? obj) . Gets the typename of passed object. string AggregateValues(string name) . Aggregates values into a single value. string AggregateValues(string name, int parent) . Aggregates values into a single value. Decimal Avg(string name) . Gets the aggregated average value from the given group name . Decimal Avg(string name, int parent) . Gets the aggregated average value from the given group name . byte? ShiftLeft(byte? value, int shift) . Shifts the value to the left by the specified number of bits. short? ShiftLeft(short? value, int shift) . Shifts the value to the left by the specified number of bits. int? ShiftLeft(int? value, int shift) . Shifts the value to the left by the specified number of bits. long? ShiftLeft(long? value, int shift) . Shifts the value to the left by the specified number of bits. sbyte? ShiftLeft(sbyte? value, int shift) . Shifts the value to the left by the specified number of bits. ushort? ShiftLeft(ushort? value, int shift) . Shifts the value to the left by the specified number of bits. uint? ShiftLeft(uint? value, int shift) . Shifts the value to the left by the specified number of bits. ulong? ShiftLeft(ulong? value, int shift) . Shifts the value to the left by the specified number of bits. byte? ShiftRight(byte? value, int shift) . Shifts the value to the right by the specified number of bits. short? ShiftRight(short? value, int shift) . Shifts the value to the right by the specified number of bits. int? ShiftRight(int? value, int shift) . Shifts the value to the right by the specified number of bits. long? ShiftRight(long? value, int shift) . Shifts the value to the right by the specified number of bits. sbyte? ShiftRight(sbyte? value, int shift) . Shifts the value to the right by the specified number of bits. ushort? ShiftRight(ushort? value, int shift) . Shifts the value to the right by the specified number of bits. uint? ShiftRight(uint? value, int shift) . Shifts the value to the right by the specified number of bits. ulong? ShiftRight(ulong? value, int shift) . Shifts the value to the right by the specified number of bits. byte? Not(byte? value) . Performs bitwise NOT operation on a given value. short? Not(short? value) . Performs bitwise NOT operation on a given value. int? Not(int? value) . Performs bitwise NOT operation on a given value. long? Not(long? value) . Performs bitwise NOT operation on a given value. sbyte? Not(sbyte? value) . Performs bitwise NOT operation on a given value. ushort? Not(ushort? value) . Performs bitwise NOT operation on a given value. uint? Not(uint? value) . Performs bitwise NOT operation on a given value. ulong? Not(ulong? value) . Performs bitwise NOT operation on a given value. byte? And(byte? left, byte? right) . Performs bitwise AND operation on two given values. int? And(byte? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(byte? left, short? right) . Performs bitwise AND operation on two given values. int? And(byte? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(byte? left, int? right) . Performs bitwise AND operation on two given values. uint? And(byte? left, uint? right) . Performs bitwise AND operation on two given values. long? And(byte? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(byte? left, ulong? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, byte? right) . Performs bitwise AND operation on two given values. sbyte? And(sbyte? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, short? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, int? right) . Performs bitwise AND operation on two given values. uint? And(sbyte? left, uint? right) . Performs bitwise AND operation on two given values. long? And(sbyte? left, long? right) . Performs bitwise AND operation on two given values. int? And(short? left, byte? right) . Performs bitwise AND operation on two given values. int? And(short? left, sbyte? right) . Performs bitwise AND operation on two given values. short? And(short? left, short? right) . Performs bitwise AND operation on two given values. int? And(short? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(short? left, int? right) . Performs bitwise AND operation on two given values. uint? And(short? left, uint? right) . Performs bitwise AND operation on two given values. long? And(short? left, long? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, byte? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, short? right) . Performs bitwise AND operation on two given values. ushort? And(ushort? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, int? right) . Performs bitwise AND operation on two given values. uint? And(ushort? left, uint? right) . Performs bitwise AND operation on two given values. long? And(ushort? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(ushort? left, ulong? right) . Performs bitwise AND operation on two given values. int? And(int? left, byte? right) . Performs bitwise AND operation on two given values. int? And(int? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(int? left, short? right) . Performs bitwise AND operation on two given values. int? And(int? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(int? left, int? right) . Performs bitwise AND operation on two given values. uint? And(int? left, uint? right) . Performs bitwise AND operation on two given values. long? And(int? left, long? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, uint? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, byte? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, sbyte? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, short? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, ushort? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, int? right) . Performs bitwise AND operation on two given values. ulong? And(uint? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(uint? left, ulong? right) . Performs bitwise AND operation on two given values. long? And(long? left, long? right) . Performs bitwise AND operation on two given values. long? And(long? left, byte? right) . Performs bitwise AND operation on two given values. long? And(long? left, sbyte? right) . Performs bitwise AND operation on two given values. long? And(long? left, short? right) . Performs bitwise AND operation on two given values. long? And(long? left, ushort? right) . Performs bitwise AND operation on two given values. long? And(long? left, int? right) . Performs bitwise AND operation on two given values. long? And(long? left, uint? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, byte? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, ushort? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, uint? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, ulong? right) . Performs bitwise AND operation on two given values. byte? Or(byte? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, short? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(byte? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(byte? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(byte? left, ulong? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, byte? right) . Performs bitwise OR operation on two given values. sbyte? Or(sbyte? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, short? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(sbyte? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(sbyte? left, long? right) . Performs bitwise OR operation on two given values. int? Or(short? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(short? left, sbyte? right) . Performs bitwise OR operation on two given values. short? Or(short? left, short? right) . Performs bitwise OR operation on two given values. int? Or(short? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(short? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(short? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(short? left, long? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, short? right) . Performs bitwise OR operation on two given values. ushort? Or(ushort? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(ushort? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(ushort? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(ushort? left, ulong? right) . Performs bitwise OR operation on two given values. int? Or(int? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(int? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(int? left, short? right) . Performs bitwise OR operation on two given values. int? Or(int? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(int? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(int? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(int? left, long? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, uint? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, byte? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, sbyte? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, short? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, ushort? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, int? right) . Performs bitwise OR operation on two given values. ulong? Or(uint? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(uint? left, ulong? right) . Performs bitwise OR operation on two given values. long? Or(long? left, long? right) . Performs bitwise OR operation on two given values. long? Or(long? left, byte? right) . Performs bitwise OR operation on two given values. long? Or(long? left, sbyte? right) . Performs bitwise OR operation on two given values. long? Or(long? left, short? right) . Performs bitwise OR operation on two given values. long? Or(long? left, ushort? right) . Performs bitwise OR operation on two given values. long? Or(long? left, int? right) . Performs bitwise OR operation on two given values. long? Or(long? left, uint? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, byte? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, ushort? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, uint? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, ulong? right) . Performs bitwise OR operation on two given values. byte? Xor(byte? left, byte? right) . Performs bitwise OR operation on two given values. int? Xor(byte? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(byte? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(byte? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(byte? left, ulong? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, byte? right) . Performs bitwise Xor operation on two given values. sbyte? Xor(sbyte? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(sbyte? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(sbyte? left, long? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, sbyte? right) . Performs bitwise Xor operation on two given values. short? Xor(short? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, ushort? right) . Performs bitwise XOR operation on two given values. int? Xor(short? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(short? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(short? left, long? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, short? right) . Performs bitwise Xor operation on two given values. ushort? Xor(ushort? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(ushort? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(ushort? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ushort? left, ulong? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(int? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(int? left, long? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, uint? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, byte? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, sbyte? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, short? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, ushort? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, int? right) . Performs bitwise Xor operation on two given values. ulong? Xor(uint? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(uint? left, ulong? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, long? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, byte? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, sbyte? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, short? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, ushort? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, int? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, uint? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, ulong? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, byte? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, ushort? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, uint? right) . Performs bitwise Xor operation on two given values. byte[] GetBytes(string? content) . Gets the bytes from the given string. byte[] GetBytes(string? content, int length, int offset) . Gets the bytes from the given string within given offset and length. byte?[]? GetBytes(char? character) . Gets the bytes from the given character. byte?[]? GetBytes(bool? bit) . Gets the bytes from the given boolean. byte?[]? GetBytes(long? value) . Gets the bytes from the given long. byte?[]? GetBytes(int? value) . Gets the bytes from the given int. byte?[]? GetBytes(short? value) . Gets the bytes from the given short. byte?[]? GetBytes(ulong? value) . Gets the bytes from the given ulong. byte?[]? GetBytes(ushort? value) . Gets the bytes from the given ushort. byte?[]? GetBytes(uint? value) . Gets the bytes from the given uint. byte?[]? GetBytes(Decimal? value) . Gets the bytes from the given decimal. byte?[]? GetBytes(double? value) . Gets the bytes from the given double. byte?[]? GetBytes(float? value) . Gets the bytes from the given float. string? ToBin(byte?[]? bytes, string delimiter) . Converts given bytes to binary with defined delimiter . string ToBin&lt;T&gt;(T value) . Converts given value to binary . string ToOcta&lt;T&gt;(T value) . Converts given value to octal . string ToDec&lt;T&gt;(T value) . Converts given value to decimal . string ToBase64(byte[] value) . Converts given value to string . string ToBase64(byte[] value, int offset, int length) . Converts given array of bytes to string . byte[] FromBase64(string value) . Converts given string to bytes array . bool FromBytesToBool(byte[] value) . Converts bytes to boolean value. short FromBytesToInt16(byte[] value) . Converts bytes to a 16-bit signed integer. ushort FromBytesToUInt16(byte[] value) . Converts bytes to a 16-bit unsigned integer. int FromBytesToInt32(byte[] value) . Converts bytes to a 32-bit signed integer. uint FromBytesToUInt32(byte[] value) . Converts bytes to a 32-bit unsigned integer. long FromBytesToInt64(byte[] value) . Converts bytes to a 64-bit signed integer. ulong FromBytesToUInt64(byte[] value) . Converts bytes to a 64-bit unsigned integer. float FromBytesToFloat(byte[] value) . Converts bytes to a float value. double FromBytesToDouble(byte[] value) . Converts bytes to a float value. string FromBytesToString(byte[] value) . Converts bytes to a string. byte[] ToBytes(bool value) . Converts boolean value to bytes. byte[] ToBytes(short value) . Converts short value to bytes. byte[] ToBytes(ushort value) . Converts ushort value to bytes. byte[] ToBytes(int value) . Converts int value to bytes. byte[] ToBytes(uint value) . Converts uint value to bytes. byte[] ToBytes(long value) . Converts long value to bytes. byte[] ToBytes(ulong value) . Converts long value to bytes. string? ToHex(byte?[]? bytes, string delimiter) . Converts given bytes to hex with defined delimiter . string? ToHex&lt;T&gt;(T value) . Converts given value to binary . int Count(string name) . Gets the count value of a given group. int Count(string name, int parent) . Gets the count value of a given group. int ExtractFromDate(string? date, string partOfDate) . Extracts part of the date from the date . int ExtractFromDate(string date, string culture, string partOfDate) . Extracts part of the date from the date based on given culture . DateTimeOffset? GetDate() . Gets the current datetime . DateTimeOffset? UtcGetDate() . Gets the current datetime in UTC . int? Month(DateTimeOffset? value) . Gets the month from DateTimeOffset . int? Year(DateTimeOffset? value) . Gets the year from DateTimeOffset . int? Day(DateTimeOffset? value) . Gets the day from DateTimeOffset . int? Hour(DateTimeOffset? value) . Gets the hour from DateTimeOffset . int? Minute(DateTimeOffset? value) . Gets the minute from DateTimeOffset . int? Second(DateTimeOffset? value) . Gets the second from DateTimeOffset . int? Milliseconds(DateTimeOffset? value) . Gets the millisecond from DateTimeOffset . int? DayOfWeek(DateTimeOffset? value) . Gets the day of week from DateTimeOffset . TimeSpan? ExtractTimeSpan(DateTimeOffset? dateTimeOffset) . Extracts time from DateTimeOffset . DateTime? ToDateTimeOffset(string value) . Converts given value to DateTimeOffset . DateTimeOffset? ToDateTimeOffset(string value, string culture) . Converts given value to DateTimeOffset . IEnumerable&lt;T&gt;? Skip&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? skipCount) . Skips elements from the beginning of the sequence. IEnumerable&lt;T&gt;? Take&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? takeCount) . Takes elements from the beginning of the sequence. IEnumerable&lt;T&gt;? SkipAndTake&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? skipCount, int? takeCount) . Skip and takes elements from the beginning of the sequence. T[]? EnumerableToArray&lt;T&gt;(IEnumerable&lt;T&gt;? values) . Turn array arguments of T into a single array. T[]? MergeArrays&lt;T&gt;(T[][]? values) . Turn array arguments of T into a single array. IEnumerable&lt;T&gt;? LongestCommonSequence&lt;T&gt;(IEnumerable&lt;T&gt;? source, IEnumerable&lt;T&gt;? pattern) . Computes longest common sequence of two given sequences . T? GetElementAtOrDefault&lt;T&gt;(IEnumerable&lt;T&gt;? enumerable, int? index) . Gets the element at the specified index in a sequence . int? Length&lt;T&gt;(IEnumerable&lt;T&gt;? enumerable) . Gets the length of the sequence . int? Length&lt;T&gt;(T[]? array) . Gets the length of the array . T? Choose&lt;T&gt;(int? index, T[] values) . Gets the value of an array at the specified index . T If&lt;T&gt;(bool expressionResult, T a, T b) . Chose a or b value based on the expression result . bool? Match(string? regex, string? content) . Determine whether content matches the specified pattern . byte? Coalesce(byte?[] array) . Gets the first non-null value in a list . sbyte? Coalesce(sbyte?[] array) . Gets the first non-null value in a list . short? Coalesce(short?[] array) . Gets the first non-null value in a list . ushort? Coalesce(ushort?[] array) . Gets the first non-null value in a list . int? Coalesce(int?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(uint?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(long?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(ulong?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(Decimal?[] array) . Gets the first non-null value in a list . T? Coalesce&lt;T&gt;(T[] array) . Gets the first non-null value in a list . IEnumerable&lt;T&gt;? Distinct&lt;T&gt;(IEnumerable&lt;T&gt;? values) . Returns distinct elements from a collection. string? Md5(string? content) . Gets the md5 hash of the given string. string? Md5(byte?[]? content) . Gets the md5 hash of the given bytes array. string? Sha1(string? content) . Gets the sha256 hash of the given string. string? Sha1(byte?[]? content) . Gets the sha256 hash of the given bytes array. string? Sha256(string? content) . Gets the sha256 hash of the given string. string? Sha256(byte?[]? content) . Gets the sha256 hash of the given bytes array. string? Sha512(string? content) . Gets the sha256 hash of the given string. string? Sha512(byte?[]? content) . Gets the sha256 hash of the bytes array. string? ToJson&lt;T&gt;(T? obj) . Converts object to json. string[] ExtractFromJsonToArray(string? json, string? path) . Extracts values from json by path. string? ExtractFromJson(string? json, string? path) . Extracts values from json by path and joins them with comma. Decimal? Abs(Decimal? value) . Gets the absolute value . long? Abs(long? value) . Gets the absolute value . int? Abs(int? value) . Gets the absolute value . Decimal? Ceil(Decimal? value) . Gets the ceiling value . Decimal? Floor(Decimal? value) . Gets the floor value . Decimal? Sign(Decimal? value) . Determine whether value is greater, equal or less that zero . long? Sign(long? value) . Determine whether value is greater, equal or less that zero . Decimal? Round(Decimal? value, int precision) . Rounds the value within given precision . Decimal? PercentOf(Decimal? value, Decimal? max) . Gets the percentage of the value . int Rand() . Gets the random integer value . int? Rand(int? min, int? max) . Gets the random integer value . double? Pow(Decimal? x, Decimal? y) . Computes the pow between two values . double? Pow(double? x, double? y) . Computes the pow between two values . double? Sqrt(Decimal? x) . Computes the sqrt of a given value . double? Sqrt(double? x) . Computes the sqrt of a given value . double? Sqrt(long? x) . Computes the sqrt of a given value . double? PercentRank&lt;T&gt;(IEnumerable&lt;T&gt;? window, T? value) . Computes the percent rank of a given window . double? Log(Decimal? base, Decimal? value) . Calculates the logarithm of a value with a specified base. Decimal? Sin(Decimal? value) . Calculates sine of a value. double? Sin(double? value) . Calculates sine of a value. float? Sin(float? value) . Calculates sine of a value. Decimal? Cos(Decimal? value) . Calculates cosine of a value. double? Cos(double? value) . Calculates cosine of a value. float? Cos(float? value) . Calculates cosine of a value. Decimal Max(string name) . Gets the max value of a given group. Decimal Max(string name, int parent) . Gets the max value of a given group. Decimal Min(string name) . Gets the min value of a given group. Decimal Min(string name, int parent) . Gets the min value of a given group. Decimal StDev(string name, int parent) . Gets the StDev value of a given group. string NewId() . Gets the new identifier . string? Trim(string? value) . Removes leading and trailing whitespace from a string. string? TrimStart(string? value) . Removes leading whitespace from a string. string? TrimEnd(string? value) . Removes trailing whitespace from a string. string? Substring(string? value, int? index, int? length) . Gets the substring from the string. string? Substring(string value, int? length) . Gets the substring from the string . string? Concat(string[]? strings) . Concatenates the specified values . string? Concat(char?[]? characters) . Concatenates the specified characters . string? Concat(string? firstString, char?[]? chars) . Concatenates specified string fir characters . string? Concat(char? firstChar, string[]? strings) . Concatenate specific character with strings . string? Concat(object[]? objects) . Concatenates the specified strings . string? Concat&lt;T&gt;(T[]? objects) . Concatenates the specified strings . bool? Contains(string? content, string? what) . Determine whether the string contains the specified value . int? IndexOf(string? value, string? text) . Position of the first occurrence of the specified value . string? Soundex(string? value) . Computes soundex for the specified value . bool HasFuzzyMatchedWord(string text, string word, string separator) . Matches the specified text by splitting it with separator and applying fuzzy comparison . bool HasWordThatHasSmallerLevenshteinDistanceThan(string text, string word, int distance, string separator) . Matches the specified text by splitting it with separator and applying fuzzy comparison with a given distance . bool HasWordThatSoundLike(string text, string word, string separator) . Matches whether the specified word is present after being fuzzified within the specified text . bool HasTextThatSoundLikeSentence(string text, string sentence, string separator) . Matches whether the specified text is present in sentence after being fuzified . string? ToUpper(string value) . Makes the string uppercase . string? ToUpper(string value, string culture) . Makes the string uppercase within specified culture . string? ToUpperInvariant(string value) . Makes the string uppercase . string? ToLower(string value) . Makes the string lowercase . string? ToLower(string value, string culture) . Makes the string lowercase within specified culture . string? ToLowerInvariant(string value) . Makes the string lowercase . string? PadLeft(string? value, string? character, int? totalWidth) . Returns a new string that right-aligns the characters in this instance by padding them on the left with a specified Unicode character, for a specified total lengt . string? PadRight(string? value, string? character, int? totalWidth) . Returns a new string that left-aligns the characters in this instance by padding them on the right with a specified Unicode character, for a specified total length . string? Head(string? value, int? length) . Gets the first N characters of the string . string? Tail(string? value, int? length) . Gets the last N characters of the string . int? LevenshteinDistance(string? firstValue, string? secondValue) . Computes the Levenshtein distance between two strings . char? GetCharacterOf(string value, int index) . Gets the character at specified index . string? Reverse(string? value) . Reverses the string . string[] Split(string value, string[] separators) . Splits the string into an array of substrings based on the specified separators . char[] ToCharArray(string value) . Splits the string into an array of characters . string? LongestCommonSubstring(string source, string pattern) . Computes the longest common subsequence between two source and pattern . string Replicate(string value, int integer) . Clones the value n times . string? Translate(string? value, string? characters, string? translations) . Returns the string from the first argument after the characters specified in the second argument are translated into the characters specified in the third argument. string? Replace(string? text, string lookFor, string? changeTo) . Replaces the first occurrence of a specified string in this instance with another specified string . string? ToTitleCase(string? value) . Capitalizes the first letter of the string . string? GetNthWord(string? text, int? wordIndex, string? separator) . Gets the nth word of the string . string? GetFirstWord(string text, string separator) . Gets the first word of the string . string? GetSecondWord(string text, string separator) . Gets the second word of the string . string? GetThirdWord(string text, string separator) . Gets the third word of the string . string? GetLastWord(string? text, string? separator) . Gets last word of the string . bool? IsNullOrEmpty(string? value) . Determines whether the string is null or empty . bool? IsNullOrWhiteSpace(string? value) . Determines whether the string is null or whitespace . string? UrlEncode(string? value) . Encodes the value . string? UrlDecode(string? value) . Decodes the value . string? UriEncode(string? value) . Encodes the value . string? UriDecode(string? value) . Decodes the value . bool? StartsWith(string? value, string? prefix) . Determines whether the string starts with the specified prefix . bool? StartsWith(string? value, string? prefix, string comparison) . Determines whether the string starts with the specified prefix . bool? EndsWith(string? value, string? suffix) . Determines whether the string ends with the specified suffix . bool? EndsWith(string? value, string? suffix, string comparison) . Determines whether the string ends with the specified suffix . string? RegexReplace(string? value, string? pattern, string? replacement) . Replace the specified value part that matches the pattern with the replacement . string[]? SplitByLinuxNewLines(string? input) . Split string by Linux-style newlines (\\n) . string[]? SplitByWindowsNewLines(string? input) . Split string by Windows-style newlines (\\r\\n) . string[]? SplitByNewLines(string? input) . Smart split that handles both Windows (\\r\\n) and Linux (\\n) newlines . Decimal Sum(string name) . Gets the sum value of a given group. Decimal Sum(string name, int parent) . Gets the sum value of a given group. Decimal SumIncome(string name) . Gets the sum value of a given group. Decimal SumIncome(string name, int parent) . Gets the sum value of a given group. Decimal SumOutcome(string name) . Gets the outcome value of a given group. Decimal SumOutcome(string name, int parent) . Gets the outcome value of a given group. TimeSpan? SumTimeSpan(string name) . Gets the sum value of a given group. TimeSpan? SumTimeSpan(string name, int parent) . Gets the sum value of a given group. TimeSpan? MinTimeSpan(string name) . Gets the min value of a given group. TimeSpan? MinTimeSpan(string name, int parent) . Gets the min value of a given group. TimeSpan? MaxTimeSpan(string name) . Gets the max value of a given group. TimeSpan? MaxTimeSpan(string name, int parent) . Gets the min value of a given group. char? ToChar(string? value) . Converts given value to character . char? ToChar(int? value) . Converts given value to character . char? ToChar(short? value) . Converts given value to character . char? ToChar(byte? value) . Converts given value to character . char? ToChar(object? value) . Converts given value to character . DateTime? ToDateTime(string value) . Converts given value to DateTime . DateTime? ToDateTime(string value, string culture) . Converts given value to DateTime . Decimal? ToDecimal(string? value) . Converts given value to decimal . Decimal? ToDecimal(string value, string culture) . Converts given value to decimal withing given culture . Decimal? ToDecimal(byte? value) . Converts given value to Decimal . Decimal? ToDecimal(sbyte? value) . Converts given value to Decimal . Decimal? ToDecimal(short? value) . Converts given value to Decimal . Decimal? ToDecimal(ushort? value) . Converts given value to Decimal . Decimal? ToDecimal(long? value) . Converts given value to Decimal . Decimal? ToDecimal(ulong? value) . Converts given value to Decimal . Decimal? ToDecimal(float? value) . Converts given value to Decimal . Decimal? ToDecimal(double? value) . Converts given value to Decimal . Decimal? ToDecimal(object? value) . Converts given value to Decimal . double? ToDouble(object? value) . Converts given value to double . double? ToDouble(string? value) . Converts given value to double . double? ToDouble(byte? value) . Converts given value to double . double? ToDouble(sbyte? value) . Converts given value to double . double? ToDouble(short? value) . Converts given value to double . double? ToDouble(ushort? value) . Converts given value to double . double? ToDouble(int? value) . Converts given value to double . double? ToDouble(uint? value) . Converts given value to double . double? ToDouble(long? value) . Converts given value to double . double? ToDouble(ulong? value) . Converts given value to double . double? ToDouble(float? value) . Converts given value to double . double? ToDouble(double? value) . Converts given value to double . double? ToDouble(Decimal? value) . Converts given value to double . float? ToFloat(string? value) . Converts given value to float . float? ToFloat(byte? value) . Converts given value to float . float? ToFloat(sbyte? value) . Converts given value to float . float? ToFloat(short? value) . Converts given value to float . float? ToFloat(ushort? value) . Converts given value to float . float? ToFloat(int? value) . Converts given value to float . float? ToFloat(uint? value) . Converts given value to float . float? ToFloat(long? value) . Converts given value to float . float? ToFloat(ulong? value) . Converts given value to float . float? ToFloat(float? value) . Converts given value to float . float? ToFloat(Decimal? value) . Converts given value to float . int? ToInt32(string value) . Converts given value to int . int? ToInt32(byte? value) . Converts given value to int . int? ToInt32(sbyte? value) . Converts given value to int . int? ToInt32(short? value) . Converts given value to int . int? ToInt32(ushort? value) . Converts given value to int . int? ToInt32(int? value) . Converts given value to int . int? ToInt32(uint? value) . Converts given value to int . int? ToInt32(long? value) . Converts given value to int . int? ToInt32(ulong? value) . Converts given value to int . int? ToInt32(float? value) . Converts given value to int . int? ToInt32(double? value) . Converts given value to int . int? ToInt32(Decimal? value) . Converts given value to int . int? ToInt32(object? value) . Converts given value to int . long? ToInt64(string value) . Converts given value to Int64 . long? ToInt64(byte? value) . Converts given value to long . long? ToInt64(sbyte? value) . Converts given value to long . long? ToInt64(short? value) . Converts given value to long . long? ToInt64(ushort? value) . Converts given value to long . long? ToInt64(int? value) . Converts given value to long . long? ToInt64(uint? value) . Converts given value to long . long? ToInt64(long? value) . Converts given value to long . long? ToInt64(ulong? value) . Converts given value to long . long? ToInt64(float? value) . Converts given value to long . long? ToInt64(double? value) . Converts given value to long . long? ToInt64(Decimal? value) . Converts given value to long . long? ToInt64(object? value) . Converts given value to long . string? ToString(char? value) . Converts given value to string . string? ToString(DateTimeOffset? value) . Converts given value to string . string? ToString(DateTimeOffset? value, string format) . Converts given value to string . string? ToString(byte? value) . Converts given value to string . string? ToString(byte? value, string format) . Converts given value to string . string? ToString(sbyte? value) . Converts given value to string . string? ToString(sbyte? value, string format) . Converts given value to string . string? ToString(int? value) . Converts given value to string . string? ToString(int? value, string format) . Converts given value to string . string? ToString(uint? value) . Converts given value to string . string? ToString(uint? value, string format) . Converts given value to string . string? ToString(long? value) . Converts given value to string . string? ToString(long? value, string format) . Converts given value to string . string? ToString(ulong? value) . Converts given value to string . string? ToString(ulong? value, string format) . Converts given value to string . string? ToString(float? value) . Converts given value to string . string? ToString(float? value, string format) . Converts given value to string . string? ToString(double? value) . Converts given value to string . string? ToString(double? value, string format) . Converts given value to string . string? ToString(Decimal? value) . Converts given value to string . string? ToString(Decimal? value, string format) . Converts given value to string . string? ToString(bool? value) . Converts given value to string . string? ToString(object? value) . Converts given value to string . string? ToString&lt;T&gt;(T? value) . Converts given value to string . string ToString(string[] value) . Converts given value to string . string ToString&lt;T&gt;(T[] value) . Converts given value to string . TimeSpan? ToTimeSpan(string value) . Converts given value to TimeSpan . TimeSpan? ToTimeSpan(string value, string culture) . Converts given value to TimeSpan . IEnumerable&lt;T&gt; Window&lt;T&gt;(string name) . Gets the window . ",
    "url": "/data-sources/Kubernetes/macos-x64.html#base-methods",
    
    "relUrl": "/data-sources/Kubernetes/macos-x64.html#base-methods"
  },"247": {
    "doc": "MacOs X64",
    "title": "MacOs X64",
    "content": " ",
    "url": "/data-sources/Kubernetes/macos-x64.html",
    
    "relUrl": "/data-sources/Kubernetes/macos-x64.html"
  },"248": {
    "doc": "MacOs X64",
    "title": "Musoq.DataSources.Os",
    "content": "Provides schema to work with operating system abstractions . ",
    "url": "/data-sources/Os/macos-x64.html#musoqdatasourcesos",
    
    "relUrl": "/data-sources/Os/macos-x64.html#musoqdatasourcesos"
  },"249": {
    "doc": "MacOs X64",
    "title": "Tables",
    "content": "Table is a collection of rows and columns that the plugin exposes. Below are the tables that are exposed by this data source. os.dirscompare(string, string) . Compares two directories . | Name | Type | Description | . | SourceFile | ExtendedFileInfo | Source file | . | DestinationFile | ExtendedFileInfo | Destination file | . | State | string | The Same / Modified / Added / Removed | . | SourceRoot | DirectoryInfo | Source directory | . | DestinationRoot | DirectoryInfo | Destination directory | . | SourceFileRelative | string | Relative path to source file | . | DestinationFileRelative | string | Relative path to destination file | . os.directories(string, boolean) . Gets the directories . | Name | Type | Description | . | FullName | string | Full name of the directory | . | Attributes | FileAttributes | Directory attributes | . | CreationTime | DateTime | Creation time | . | CreationTimeUtc | DateTime | Creation time in UTC | . | LastAccessTime | DateTime | Last access time | . | LastAccessTimeUtc | DateTime | Last access time in UTC | . | LastWriteTime | DateTime | Last write time | . | LastWriteTimeUtc | DateTime | Last write time in UTC | . | Exists | bool | Determine does the directory exists | . | Extension | string | Gets the extension part of the file name | . | LastAccessTime | DateTime | Gets the time the current file or directory was last accessed | . | LastAccessTimeUtc | DateTime | Gets the time, in coordinated universal time (UTC), that the current file or directory was last accessed | . | Name | string | Gets the directory name | . | LastWriteTime | DateTime | Gets the date when the file or directory was written to | . | Parent | DirectoryInfo | Gets the parent directory | . | Root | DirectoryInfo | Gets the root directory | . | DirectoryInfo | DirectoryInfo | Gets raw DirectoryInfo | . os.dlls(string path) . Gets the dlls . | Name | Type | Description | . | FileInfo | FileInfo | Gets the metadata about the DLL file | . | Assembly | Assembly | Gets the Assembly object | . | Version | FileVersionInfo | Gets the assembly version | . os.dlls(string path) . Gets the dlls . | Name | Type | Description | . | FileInfo | FileInfo | Gets the metadata about the DLL file | . | Assembly | Assembly | Gets the Assembly object | . | Version | FileVersionInfo | Gets the assembly version | . os.files(string, boolean) . Gets the files . | Name | Type | Description | . | Name | string | Full name of the directory | . | CreationTime | DateTime | Creation time | . | CreationTimeUtc | DateTime | Creation time in UTC | . | LastAccessTime | DateTime | Last access time | . | LastAccessTimeUtc | DateTime | Last access time in UTC | . | LastWriteTime | DateTime | Last write time | . | LastWriteTimeUtc | DateTime | Last write time in UTC | . | DirectoryName | string | Gets the directory name | . | Extension | string | Gets the extension part of the file name | . | FullName | string | Gets the full path of file | . | Exists | bool | Determine whether file exists or not | . | IsReadOnly | bool | Determine whether the file is readonly | . | Length | long | Gets the length of file | . os.processes() . Gets the processes . | Name | Type | Description | . | BasePriority | int | Gets the base priority of associated process | . | EnableRaisingEvents | bool | Gets whether the exited event should be raised when the process terminates | . | ExitCode | int | Gets the value describing process termination | . | ExitTime | DateTime | Exit time in UTC | . | Handle | IntPtr | Gets the native handle of the associated process | . | HandleCount | int | Gets the number of handles opened by the process | . | HasExited | bool | Gets a value indicating whether the associated process has been terminated | . | Id | int | Gets the unique identifier for the associated process | . | MachineName | string | Gets the name of the computer the associated process is running on | . | MainWindowTitle | string | Gets the caption of the main window of the process | . | PagedMemorySize64 | long | Gets a value indicating whether the user interface of the process is responding | . | ProcessName | string | The name that the system uses to identify the process to the user | . | ProcessorAffinity | IntPtr | Gets the processors on which the threads in this process can be scheduled to run | . | Responding | bool | Gets a value indicating whether the user interface of the process is responding | . | StartTime | DateTime | Gets the time that the associated process was started | . | TotalProcessorTime | TimeSpan | Gets the total processor time for this process | . | UserProcessorTime | TimeSpan | Gets the user processor time for this process | . | Directory | string | Gets the directory of the process | . | FileName | string | Gets the filename of the process | . os.zip(string path) . Gets the zip files . | Name | Type | Description | . | Name | string | Gets the file name of the entry in the zip archive | . | FullName | string | Gets the relative path of the entry in the zip archive | . | CompressedLength | long | Gets the compressed size of the entry in the zip archive | . | LastWriteTime | DateTimeOffset | Gets the last time the entry in the zip archive was changed | . | Length | long | Gets the uncompressed size of the entry in the zip archive | . | IsDirectory | bool | Determine whether the entry is a directory | . | Level | int | Gets the nesting level | . os.metadata(string directoryOrFile) . Gets the metadata for file or for files within the directory . | Name | Type | Description | . | FullName | string | Gets the full path of the file | . | DirectoryName | string | Gets the directory the metadata resides in | . | TagName | string | Gets the tag name | . | Description | string | Gets the description | . os.metadata(string directory, bool useSubdirectories) . Gets the metadata for files within directories . | Name | Type | Description | . | FullName | string | Gets the full path of the file | . | DirectoryName | string | Gets the directory the metadata resides in | . | TagName | string | Gets the tag name | . | Description | string | Gets the description | . ",
    "url": "/data-sources/Os/macos-x64.html#tables",
    
    "relUrl": "/data-sources/Os/macos-x64.html#tables"
  },"250": {
    "doc": "MacOs X64",
    "title": "Methods",
    "content": "Methods are functions that can be called on the data source specific column. Below are the methods that are exposed by this data source. bool IsZipArchive(string extension) . Determines whether the extension is zip archive. bool IsZipArchive() . Determines whether the extension is zip archive. bool IsArchive(string extension) . Determine whether the extension is archive. bool IsArchive() . Determines whether the file is archive. bool IsAudio(string extension) . Determine whether the extension is audio. bool IsAudio() . Determine whether the extension is audio. bool IsBook(string extension) . Determine whether the extension is book. bool IsBook() . Determine whether the extension is book. bool IsDoc(string extension) . Determine whether the extension is document. bool IsDoc() . Determine whether the extension is document. bool IsImage(string extension) . Determine whether the extension is image. bool IsImage() . Determine whether the extension is image. bool IsSource(string extension) . Determine whether the extension is source. bool IsSource() . Determine whether the extension is source. bool IsVideo(string extension) . Determine whether the extension is video. bool IsVideo() . Determine whether the extension is video. string? GetFileContent() . Gets the file content . string GetRelativePath() . Gets the relative path of a file . string GetRelativePath(string basePath) . Gets the relative path of a file . byte[] Head(int length) . Gets head bytes of a file . byte[] Tail(int length) . Gets tail bytes of a file . byte[] GetFileBytes(long bytesCount, long offset) . Gets file bytes of a file . string Sha1File() . Computes Sha1 hash of a file . string Sha256File() . Computes Sha256 hash of a file . string Sha256File(IO.FileInfo file) . Computes Sha256 hash of a file . string Md5File() . Computes Md5 hash of a file . string Base64File() . Turns file into base64 string . bool HasContent(string pattern) . Determine whether file has specific content . bool HasAttribute(long flags) . Determine whether file has attribute . string GetLinesContainingWord(string word) . Gets lines containing word . long GetFileLength(string unit) . Gets the file length . long GetLengthOfFile(string unit) . Gets the file length . string? SubPath(int nesting) . Gets the SubPath from the path . string? SubPath(int nesting) . Gets the SubPath from the path . string? RelativeSubPath(int nesting) . Gets the relative SubPath from the path . string? SubPath(string? directoryPath, int? nesting) . Gets the relative SubPath from the path . long Length(string unit) . Gets the length of the file . Musoq.DataSources.Os.Files.ExtendedFileInfo? GetFileInfo(string fullPath) . Gets the file info . Musoq.DataSources.Os.Files.ExtendedFileInfo GetExtendedFileInfo() . Gets extended file info . long CountOfLines() . Gets the count of lines of a file . long CountOfNotEmptyLines() . Gets the count of non empty lines of a file . string Combine(string path1, string path2) . Combines the paths . string Combine(string path1, string path2, string path3) . Combines the paths . string Combine(string path1, string path2, string path3, string path4) . Combines the paths . string Combine(string path1, string path2, string path3, string path4, string path5) . Combines the paths . string Combine(string[] paths) . Combines the paths . string? GetDirectoryName(string? path) . Gets the directory name . string? GetFileName(string? path) . Gets the file name . string? GetFileNameWithoutExtension(string? path) . Gets the file name without extension . string? GetExtension(string? path) . Gets the extension . string? GetMetadata(string directoryName, string tagName) . Gets the metadata of a file . string? GetMetadata(string tagName) . Gets the metadata of a file . bool HasMetadataDirectory(string directoryName) . Checks whether file has metadata directory . bool HasMetadataTag(string directoryName, string tagName) . Checks whether file has metadata tag . bool HasMetadataTag(string tagName) . Checks whether file has metadata tag . string AllMetadataJson() . Gets all metadata of a file and returns it as json . IReadOnlyList&lt;Musoq.DataSources.Os.Files.ExtendedFileInfo&gt;? AggregateFiles(string name) . Gets the aggregated average value from the given group name . IReadOnlyList&lt;IO.DirectoryInfo&gt;? AggregateDirectories(string name) . Gets the aggregated average value from the given group name . ",
    "url": "/data-sources/Os/macos-x64.html#methods",
    
    "relUrl": "/data-sources/Os/macos-x64.html#methods"
  },"251": {
    "doc": "MacOs X64",
    "title": "Base Methods",
    "content": "Base methods are methods that can be called on the data source specific column. Those methods are automatically inherited and enriches the data source specific methods. Below are those base methods that are exposed by this data source. int RowNumber() . Gets the row number of the current row. string? GetTypeName(object? obj) . Gets the typename of passed object. string AggregateValues(string name) . Aggregates values into a single value. string AggregateValues(string name, int parent) . Aggregates values into a single value. Decimal Avg(string name) . Gets the aggregated average value from the given group name . Decimal Avg(string name, int parent) . Gets the aggregated average value from the given group name . byte? ShiftLeft(byte? value, int shift) . Shifts the value to the left by the specified number of bits. short? ShiftLeft(short? value, int shift) . Shifts the value to the left by the specified number of bits. int? ShiftLeft(int? value, int shift) . Shifts the value to the left by the specified number of bits. long? ShiftLeft(long? value, int shift) . Shifts the value to the left by the specified number of bits. sbyte? ShiftLeft(sbyte? value, int shift) . Shifts the value to the left by the specified number of bits. ushort? ShiftLeft(ushort? value, int shift) . Shifts the value to the left by the specified number of bits. uint? ShiftLeft(uint? value, int shift) . Shifts the value to the left by the specified number of bits. ulong? ShiftLeft(ulong? value, int shift) . Shifts the value to the left by the specified number of bits. byte? ShiftRight(byte? value, int shift) . Shifts the value to the right by the specified number of bits. short? ShiftRight(short? value, int shift) . Shifts the value to the right by the specified number of bits. int? ShiftRight(int? value, int shift) . Shifts the value to the right by the specified number of bits. long? ShiftRight(long? value, int shift) . Shifts the value to the right by the specified number of bits. sbyte? ShiftRight(sbyte? value, int shift) . Shifts the value to the right by the specified number of bits. ushort? ShiftRight(ushort? value, int shift) . Shifts the value to the right by the specified number of bits. uint? ShiftRight(uint? value, int shift) . Shifts the value to the right by the specified number of bits. ulong? ShiftRight(ulong? value, int shift) . Shifts the value to the right by the specified number of bits. byte? Not(byte? value) . Performs bitwise NOT operation on a given value. short? Not(short? value) . Performs bitwise NOT operation on a given value. int? Not(int? value) . Performs bitwise NOT operation on a given value. long? Not(long? value) . Performs bitwise NOT operation on a given value. sbyte? Not(sbyte? value) . Performs bitwise NOT operation on a given value. ushort? Not(ushort? value) . Performs bitwise NOT operation on a given value. uint? Not(uint? value) . Performs bitwise NOT operation on a given value. ulong? Not(ulong? value) . Performs bitwise NOT operation on a given value. byte? And(byte? left, byte? right) . Performs bitwise AND operation on two given values. int? And(byte? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(byte? left, short? right) . Performs bitwise AND operation on two given values. int? And(byte? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(byte? left, int? right) . Performs bitwise AND operation on two given values. uint? And(byte? left, uint? right) . Performs bitwise AND operation on two given values. long? And(byte? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(byte? left, ulong? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, byte? right) . Performs bitwise AND operation on two given values. sbyte? And(sbyte? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, short? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, int? right) . Performs bitwise AND operation on two given values. uint? And(sbyte? left, uint? right) . Performs bitwise AND operation on two given values. long? And(sbyte? left, long? right) . Performs bitwise AND operation on two given values. int? And(short? left, byte? right) . Performs bitwise AND operation on two given values. int? And(short? left, sbyte? right) . Performs bitwise AND operation on two given values. short? And(short? left, short? right) . Performs bitwise AND operation on two given values. int? And(short? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(short? left, int? right) . Performs bitwise AND operation on two given values. uint? And(short? left, uint? right) . Performs bitwise AND operation on two given values. long? And(short? left, long? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, byte? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, short? right) . Performs bitwise AND operation on two given values. ushort? And(ushort? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, int? right) . Performs bitwise AND operation on two given values. uint? And(ushort? left, uint? right) . Performs bitwise AND operation on two given values. long? And(ushort? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(ushort? left, ulong? right) . Performs bitwise AND operation on two given values. int? And(int? left, byte? right) . Performs bitwise AND operation on two given values. int? And(int? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(int? left, short? right) . Performs bitwise AND operation on two given values. int? And(int? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(int? left, int? right) . Performs bitwise AND operation on two given values. uint? And(int? left, uint? right) . Performs bitwise AND operation on two given values. long? And(int? left, long? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, uint? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, byte? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, sbyte? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, short? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, ushort? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, int? right) . Performs bitwise AND operation on two given values. ulong? And(uint? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(uint? left, ulong? right) . Performs bitwise AND operation on two given values. long? And(long? left, long? right) . Performs bitwise AND operation on two given values. long? And(long? left, byte? right) . Performs bitwise AND operation on two given values. long? And(long? left, sbyte? right) . Performs bitwise AND operation on two given values. long? And(long? left, short? right) . Performs bitwise AND operation on two given values. long? And(long? left, ushort? right) . Performs bitwise AND operation on two given values. long? And(long? left, int? right) . Performs bitwise AND operation on two given values. long? And(long? left, uint? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, byte? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, ushort? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, uint? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, ulong? right) . Performs bitwise AND operation on two given values. byte? Or(byte? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, short? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(byte? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(byte? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(byte? left, ulong? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, byte? right) . Performs bitwise OR operation on two given values. sbyte? Or(sbyte? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, short? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(sbyte? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(sbyte? left, long? right) . Performs bitwise OR operation on two given values. int? Or(short? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(short? left, sbyte? right) . Performs bitwise OR operation on two given values. short? Or(short? left, short? right) . Performs bitwise OR operation on two given values. int? Or(short? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(short? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(short? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(short? left, long? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, short? right) . Performs bitwise OR operation on two given values. ushort? Or(ushort? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(ushort? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(ushort? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(ushort? left, ulong? right) . Performs bitwise OR operation on two given values. int? Or(int? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(int? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(int? left, short? right) . Performs bitwise OR operation on two given values. int? Or(int? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(int? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(int? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(int? left, long? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, uint? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, byte? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, sbyte? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, short? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, ushort? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, int? right) . Performs bitwise OR operation on two given values. ulong? Or(uint? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(uint? left, ulong? right) . Performs bitwise OR operation on two given values. long? Or(long? left, long? right) . Performs bitwise OR operation on two given values. long? Or(long? left, byte? right) . Performs bitwise OR operation on two given values. long? Or(long? left, sbyte? right) . Performs bitwise OR operation on two given values. long? Or(long? left, short? right) . Performs bitwise OR operation on two given values. long? Or(long? left, ushort? right) . Performs bitwise OR operation on two given values. long? Or(long? left, int? right) . Performs bitwise OR operation on two given values. long? Or(long? left, uint? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, byte? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, ushort? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, uint? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, ulong? right) . Performs bitwise OR operation on two given values. byte? Xor(byte? left, byte? right) . Performs bitwise OR operation on two given values. int? Xor(byte? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(byte? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(byte? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(byte? left, ulong? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, byte? right) . Performs bitwise Xor operation on two given values. sbyte? Xor(sbyte? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(sbyte? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(sbyte? left, long? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, sbyte? right) . Performs bitwise Xor operation on two given values. short? Xor(short? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, ushort? right) . Performs bitwise XOR operation on two given values. int? Xor(short? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(short? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(short? left, long? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, short? right) . Performs bitwise Xor operation on two given values. ushort? Xor(ushort? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(ushort? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(ushort? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ushort? left, ulong? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(int? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(int? left, long? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, uint? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, byte? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, sbyte? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, short? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, ushort? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, int? right) . Performs bitwise Xor operation on two given values. ulong? Xor(uint? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(uint? left, ulong? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, long? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, byte? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, sbyte? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, short? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, ushort? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, int? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, uint? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, ulong? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, byte? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, ushort? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, uint? right) . Performs bitwise Xor operation on two given values. byte[] GetBytes(string? content) . Gets the bytes from the given string. byte[] GetBytes(string? content, int length, int offset) . Gets the bytes from the given string within given offset and length. byte?[]? GetBytes(char? character) . Gets the bytes from the given character. byte?[]? GetBytes(bool? bit) . Gets the bytes from the given boolean. byte?[]? GetBytes(long? value) . Gets the bytes from the given long. byte?[]? GetBytes(int? value) . Gets the bytes from the given int. byte?[]? GetBytes(short? value) . Gets the bytes from the given short. byte?[]? GetBytes(ulong? value) . Gets the bytes from the given ulong. byte?[]? GetBytes(ushort? value) . Gets the bytes from the given ushort. byte?[]? GetBytes(uint? value) . Gets the bytes from the given uint. byte?[]? GetBytes(Decimal? value) . Gets the bytes from the given decimal. byte?[]? GetBytes(double? value) . Gets the bytes from the given double. byte?[]? GetBytes(float? value) . Gets the bytes from the given float. string? ToBin(byte?[]? bytes, string delimiter) . Converts given bytes to binary with defined delimiter . string ToBin&lt;T&gt;(T value) . Converts given value to binary . string ToOcta&lt;T&gt;(T value) . Converts given value to octal . string ToDec&lt;T&gt;(T value) . Converts given value to decimal . string ToBase64(byte[] value) . Converts given value to string . string ToBase64(byte[] value, int offset, int length) . Converts given array of bytes to string . byte[] FromBase64(string value) . Converts given string to bytes array . bool FromBytesToBool(byte[] value) . Converts bytes to boolean value. short FromBytesToInt16(byte[] value) . Converts bytes to a 16-bit signed integer. ushort FromBytesToUInt16(byte[] value) . Converts bytes to a 16-bit unsigned integer. int FromBytesToInt32(byte[] value) . Converts bytes to a 32-bit signed integer. uint FromBytesToUInt32(byte[] value) . Converts bytes to a 32-bit unsigned integer. long FromBytesToInt64(byte[] value) . Converts bytes to a 64-bit signed integer. ulong FromBytesToUInt64(byte[] value) . Converts bytes to a 64-bit unsigned integer. float FromBytesToFloat(byte[] value) . Converts bytes to a float value. double FromBytesToDouble(byte[] value) . Converts bytes to a float value. string FromBytesToString(byte[] value) . Converts bytes to a string. byte[] ToBytes(bool value) . Converts boolean value to bytes. byte[] ToBytes(short value) . Converts short value to bytes. byte[] ToBytes(ushort value) . Converts ushort value to bytes. byte[] ToBytes(int value) . Converts int value to bytes. byte[] ToBytes(uint value) . Converts uint value to bytes. byte[] ToBytes(long value) . Converts long value to bytes. byte[] ToBytes(ulong value) . Converts long value to bytes. string? ToHex(byte?[]? bytes, string delimiter) . Converts given bytes to hex with defined delimiter . string? ToHex&lt;T&gt;(T value) . Converts given value to binary . int Count(string name) . Gets the count value of a given group. int Count(string name, int parent) . Gets the count value of a given group. int ExtractFromDate(string? date, string partOfDate) . Extracts part of the date from the date . int ExtractFromDate(string date, string culture, string partOfDate) . Extracts part of the date from the date based on given culture . DateTimeOffset? GetDate() . Gets the current datetime . DateTimeOffset? UtcGetDate() . Gets the current datetime in UTC . int? Month(DateTimeOffset? value) . Gets the month from DateTimeOffset . int? Year(DateTimeOffset? value) . Gets the year from DateTimeOffset . int? Day(DateTimeOffset? value) . Gets the day from DateTimeOffset . int? Hour(DateTimeOffset? value) . Gets the hour from DateTimeOffset . int? Minute(DateTimeOffset? value) . Gets the minute from DateTimeOffset . int? Second(DateTimeOffset? value) . Gets the second from DateTimeOffset . int? Milliseconds(DateTimeOffset? value) . Gets the millisecond from DateTimeOffset . int? DayOfWeek(DateTimeOffset? value) . Gets the day of week from DateTimeOffset . TimeSpan? ExtractTimeSpan(DateTimeOffset? dateTimeOffset) . Extracts time from DateTimeOffset . DateTime? ToDateTimeOffset(string value) . Converts given value to DateTimeOffset . DateTimeOffset? ToDateTimeOffset(string value, string culture) . Converts given value to DateTimeOffset . IEnumerable&lt;T&gt;? Skip&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? skipCount) . Skips elements from the beginning of the sequence. IEnumerable&lt;T&gt;? Take&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? takeCount) . Takes elements from the beginning of the sequence. IEnumerable&lt;T&gt;? SkipAndTake&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? skipCount, int? takeCount) . Skip and takes elements from the beginning of the sequence. T[]? EnumerableToArray&lt;T&gt;(IEnumerable&lt;T&gt;? values) . Turn array arguments of T into a single array. T[]? MergeArrays&lt;T&gt;(T[][]? values) . Turn array arguments of T into a single array. IEnumerable&lt;T&gt;? LongestCommonSequence&lt;T&gt;(IEnumerable&lt;T&gt;? source, IEnumerable&lt;T&gt;? pattern) . Computes longest common sequence of two given sequences . T? GetElementAtOrDefault&lt;T&gt;(IEnumerable&lt;T&gt;? enumerable, int? index) . Gets the element at the specified index in a sequence . int? Length&lt;T&gt;(IEnumerable&lt;T&gt;? enumerable) . Gets the length of the sequence . int? Length&lt;T&gt;(T[]? array) . Gets the length of the array . T? Choose&lt;T&gt;(int? index, T[] values) . Gets the value of an array at the specified index . T If&lt;T&gt;(bool expressionResult, T a, T b) . Chose a or b value based on the expression result . bool? Match(string? regex, string? content) . Determine whether content matches the specified pattern . byte? Coalesce(byte?[] array) . Gets the first non-null value in a list . sbyte? Coalesce(sbyte?[] array) . Gets the first non-null value in a list . short? Coalesce(short?[] array) . Gets the first non-null value in a list . ushort? Coalesce(ushort?[] array) . Gets the first non-null value in a list . int? Coalesce(int?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(uint?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(long?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(ulong?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(Decimal?[] array) . Gets the first non-null value in a list . T? Coalesce&lt;T&gt;(T[] array) . Gets the first non-null value in a list . IEnumerable&lt;T&gt;? Distinct&lt;T&gt;(IEnumerable&lt;T&gt;? values) . Returns distinct elements from a collection. string? Md5(string? content) . Gets the md5 hash of the given string. string? Md5(byte?[]? content) . Gets the md5 hash of the given bytes array. string? Sha1(string? content) . Gets the sha256 hash of the given string. string? Sha1(byte?[]? content) . Gets the sha256 hash of the given bytes array. string? Sha256(string? content) . Gets the sha256 hash of the given string. string? Sha256(byte?[]? content) . Gets the sha256 hash of the given bytes array. string? Sha512(string? content) . Gets the sha256 hash of the given string. string? Sha512(byte?[]? content) . Gets the sha256 hash of the bytes array. string? ToJson&lt;T&gt;(T? obj) . Converts object to json. string[] ExtractFromJsonToArray(string? json, string? path) . Extracts values from json by path. string? ExtractFromJson(string? json, string? path) . Extracts values from json by path and joins them with comma. Decimal? Abs(Decimal? value) . Gets the absolute value . long? Abs(long? value) . Gets the absolute value . int? Abs(int? value) . Gets the absolute value . Decimal? Ceil(Decimal? value) . Gets the ceiling value . Decimal? Floor(Decimal? value) . Gets the floor value . Decimal? Sign(Decimal? value) . Determine whether value is greater, equal or less that zero . long? Sign(long? value) . Determine whether value is greater, equal or less that zero . Decimal? Round(Decimal? value, int precision) . Rounds the value within given precision . Decimal? PercentOf(Decimal? value, Decimal? max) . Gets the percentage of the value . int Rand() . Gets the random integer value . int? Rand(int? min, int? max) . Gets the random integer value . double? Pow(Decimal? x, Decimal? y) . Computes the pow between two values . double? Pow(double? x, double? y) . Computes the pow between two values . double? Sqrt(Decimal? x) . Computes the sqrt of a given value . double? Sqrt(double? x) . Computes the sqrt of a given value . double? Sqrt(long? x) . Computes the sqrt of a given value . double? PercentRank&lt;T&gt;(IEnumerable&lt;T&gt;? window, T? value) . Computes the percent rank of a given window . double? Log(Decimal? base, Decimal? value) . Calculates the logarithm of a value with a specified base. Decimal? Sin(Decimal? value) . Calculates sine of a value. double? Sin(double? value) . Calculates sine of a value. float? Sin(float? value) . Calculates sine of a value. Decimal? Cos(Decimal? value) . Calculates cosine of a value. double? Cos(double? value) . Calculates cosine of a value. float? Cos(float? value) . Calculates cosine of a value. Decimal Max(string name) . Gets the max value of a given group. Decimal Max(string name, int parent) . Gets the max value of a given group. Decimal Min(string name) . Gets the min value of a given group. Decimal Min(string name, int parent) . Gets the min value of a given group. Decimal StDev(string name, int parent) . Gets the StDev value of a given group. string NewId() . Gets the new identifier . string? Trim(string? value) . Removes leading and trailing whitespace from a string. string? TrimStart(string? value) . Removes leading whitespace from a string. string? TrimEnd(string? value) . Removes trailing whitespace from a string. string? Substring(string? value, int? index, int? length) . Gets the substring from the string. string? Substring(string value, int? length) . Gets the substring from the string . string? Concat(string[]? strings) . Concatenates the specified values . string? Concat(char?[]? characters) . Concatenates the specified characters . string? Concat(string? firstString, char?[]? chars) . Concatenates specified string fir characters . string? Concat(char? firstChar, string[]? strings) . Concatenate specific character with strings . string? Concat(object[]? objects) . Concatenates the specified strings . string? Concat&lt;T&gt;(T[]? objects) . Concatenates the specified strings . bool? Contains(string? content, string? what) . Determine whether the string contains the specified value . int? IndexOf(string? value, string? text) . Position of the first occurrence of the specified value . string? Soundex(string? value) . Computes soundex for the specified value . bool HasFuzzyMatchedWord(string text, string word, string separator) . Matches the specified text by splitting it with separator and applying fuzzy comparison . bool HasWordThatHasSmallerLevenshteinDistanceThan(string text, string word, int distance, string separator) . Matches the specified text by splitting it with separator and applying fuzzy comparison with a given distance . bool HasWordThatSoundLike(string text, string word, string separator) . Matches whether the specified word is present after being fuzzified within the specified text . bool HasTextThatSoundLikeSentence(string text, string sentence, string separator) . Matches whether the specified text is present in sentence after being fuzified . string? ToUpper(string value) . Makes the string uppercase . string? ToUpper(string value, string culture) . Makes the string uppercase within specified culture . string? ToUpperInvariant(string value) . Makes the string uppercase . string? ToLower(string value) . Makes the string lowercase . string? ToLower(string value, string culture) . Makes the string lowercase within specified culture . string? ToLowerInvariant(string value) . Makes the string lowercase . string? PadLeft(string? value, string? character, int? totalWidth) . Returns a new string that right-aligns the characters in this instance by padding them on the left with a specified Unicode character, for a specified total lengt . string? PadRight(string? value, string? character, int? totalWidth) . Returns a new string that left-aligns the characters in this instance by padding them on the right with a specified Unicode character, for a specified total length . string? Head(string? value, int? length) . Gets the first N characters of the string . string? Tail(string? value, int? length) . Gets the last N characters of the string . int? LevenshteinDistance(string? firstValue, string? secondValue) . Computes the Levenshtein distance between two strings . char? GetCharacterOf(string value, int index) . Gets the character at specified index . string? Reverse(string? value) . Reverses the string . string[] Split(string value, string[] separators) . Splits the string into an array of substrings based on the specified separators . char[] ToCharArray(string value) . Splits the string into an array of characters . string? LongestCommonSubstring(string source, string pattern) . Computes the longest common subsequence between two source and pattern . string Replicate(string value, int integer) . Clones the value n times . string? Translate(string? value, string? characters, string? translations) . Returns the string from the first argument after the characters specified in the second argument are translated into the characters specified in the third argument. string? Replace(string? text, string lookFor, string? changeTo) . Replaces the first occurrence of a specified string in this instance with another specified string . string? ToTitleCase(string? value) . Capitalizes the first letter of the string . string? GetNthWord(string? text, int? wordIndex, string? separator) . Gets the nth word of the string . string? GetFirstWord(string text, string separator) . Gets the first word of the string . string? GetSecondWord(string text, string separator) . Gets the second word of the string . string? GetThirdWord(string text, string separator) . Gets the third word of the string . string? GetLastWord(string? text, string? separator) . Gets last word of the string . bool? IsNullOrEmpty(string? value) . Determines whether the string is null or empty . bool? IsNullOrWhiteSpace(string? value) . Determines whether the string is null or whitespace . string? UrlEncode(string? value) . Encodes the value . string? UrlDecode(string? value) . Decodes the value . string? UriEncode(string? value) . Encodes the value . string? UriDecode(string? value) . Decodes the value . bool? StartsWith(string? value, string? prefix) . Determines whether the string starts with the specified prefix . bool? StartsWith(string? value, string? prefix, string comparison) . Determines whether the string starts with the specified prefix . bool? EndsWith(string? value, string? suffix) . Determines whether the string ends with the specified suffix . bool? EndsWith(string? value, string? suffix, string comparison) . Determines whether the string ends with the specified suffix . string? RegexReplace(string? value, string? pattern, string? replacement) . Replace the specified value part that matches the pattern with the replacement . string[]? SplitByLinuxNewLines(string? input) . Split string by Linux-style newlines (\\n) . string[]? SplitByWindowsNewLines(string? input) . Split string by Windows-style newlines (\\r\\n) . string[]? SplitByNewLines(string? input) . Smart split that handles both Windows (\\r\\n) and Linux (\\n) newlines . Decimal Sum(string name) . Gets the sum value of a given group. Decimal Sum(string name, int parent) . Gets the sum value of a given group. Decimal SumIncome(string name) . Gets the sum value of a given group. Decimal SumIncome(string name, int parent) . Gets the sum value of a given group. Decimal SumOutcome(string name) . Gets the outcome value of a given group. Decimal SumOutcome(string name, int parent) . Gets the outcome value of a given group. TimeSpan? SumTimeSpan(string name) . Gets the sum value of a given group. TimeSpan? SumTimeSpan(string name, int parent) . Gets the sum value of a given group. TimeSpan? MinTimeSpan(string name) . Gets the min value of a given group. TimeSpan? MinTimeSpan(string name, int parent) . Gets the min value of a given group. TimeSpan? MaxTimeSpan(string name) . Gets the max value of a given group. TimeSpan? MaxTimeSpan(string name, int parent) . Gets the min value of a given group. char? ToChar(string? value) . Converts given value to character . char? ToChar(int? value) . Converts given value to character . char? ToChar(short? value) . Converts given value to character . char? ToChar(byte? value) . Converts given value to character . char? ToChar(object? value) . Converts given value to character . DateTime? ToDateTime(string value) . Converts given value to DateTime . DateTime? ToDateTime(string value, string culture) . Converts given value to DateTime . Decimal? ToDecimal(string? value) . Converts given value to decimal . Decimal? ToDecimal(string value, string culture) . Converts given value to decimal withing given culture . Decimal? ToDecimal(byte? value) . Converts given value to Decimal . Decimal? ToDecimal(sbyte? value) . Converts given value to Decimal . Decimal? ToDecimal(short? value) . Converts given value to Decimal . Decimal? ToDecimal(ushort? value) . Converts given value to Decimal . Decimal? ToDecimal(long? value) . Converts given value to Decimal . Decimal? ToDecimal(ulong? value) . Converts given value to Decimal . Decimal? ToDecimal(float? value) . Converts given value to Decimal . Decimal? ToDecimal(double? value) . Converts given value to Decimal . Decimal? ToDecimal(object? value) . Converts given value to Decimal . double? ToDouble(object? value) . Converts given value to double . double? ToDouble(string? value) . Converts given value to double . double? ToDouble(byte? value) . Converts given value to double . double? ToDouble(sbyte? value) . Converts given value to double . double? ToDouble(short? value) . Converts given value to double . double? ToDouble(ushort? value) . Converts given value to double . double? ToDouble(int? value) . Converts given value to double . double? ToDouble(uint? value) . Converts given value to double . double? ToDouble(long? value) . Converts given value to double . double? ToDouble(ulong? value) . Converts given value to double . double? ToDouble(float? value) . Converts given value to double . double? ToDouble(double? value) . Converts given value to double . double? ToDouble(Decimal? value) . Converts given value to double . float? ToFloat(string? value) . Converts given value to float . float? ToFloat(byte? value) . Converts given value to float . float? ToFloat(sbyte? value) . Converts given value to float . float? ToFloat(short? value) . Converts given value to float . float? ToFloat(ushort? value) . Converts given value to float . float? ToFloat(int? value) . Converts given value to float . float? ToFloat(uint? value) . Converts given value to float . float? ToFloat(long? value) . Converts given value to float . float? ToFloat(ulong? value) . Converts given value to float . float? ToFloat(float? value) . Converts given value to float . float? ToFloat(Decimal? value) . Converts given value to float . int? ToInt32(string value) . Converts given value to int . int? ToInt32(byte? value) . Converts given value to int . int? ToInt32(sbyte? value) . Converts given value to int . int? ToInt32(short? value) . Converts given value to int . int? ToInt32(ushort? value) . Converts given value to int . int? ToInt32(int? value) . Converts given value to int . int? ToInt32(uint? value) . Converts given value to int . int? ToInt32(long? value) . Converts given value to int . int? ToInt32(ulong? value) . Converts given value to int . int? ToInt32(float? value) . Converts given value to int . int? ToInt32(double? value) . Converts given value to int . int? ToInt32(Decimal? value) . Converts given value to int . int? ToInt32(object? value) . Converts given value to int . long? ToInt64(string value) . Converts given value to Int64 . long? ToInt64(byte? value) . Converts given value to long . long? ToInt64(sbyte? value) . Converts given value to long . long? ToInt64(short? value) . Converts given value to long . long? ToInt64(ushort? value) . Converts given value to long . long? ToInt64(int? value) . Converts given value to long . long? ToInt64(uint? value) . Converts given value to long . long? ToInt64(long? value) . Converts given value to long . long? ToInt64(ulong? value) . Converts given value to long . long? ToInt64(float? value) . Converts given value to long . long? ToInt64(double? value) . Converts given value to long . long? ToInt64(Decimal? value) . Converts given value to long . long? ToInt64(object? value) . Converts given value to long . string? ToString(char? value) . Converts given value to string . string? ToString(DateTimeOffset? value) . Converts given value to string . string? ToString(DateTimeOffset? value, string format) . Converts given value to string . string? ToString(byte? value) . Converts given value to string . string? ToString(byte? value, string format) . Converts given value to string . string? ToString(sbyte? value) . Converts given value to string . string? ToString(sbyte? value, string format) . Converts given value to string . string? ToString(int? value) . Converts given value to string . string? ToString(int? value, string format) . Converts given value to string . string? ToString(uint? value) . Converts given value to string . string? ToString(uint? value, string format) . Converts given value to string . string? ToString(long? value) . Converts given value to string . string? ToString(long? value, string format) . Converts given value to string . string? ToString(ulong? value) . Converts given value to string . string? ToString(ulong? value, string format) . Converts given value to string . string? ToString(float? value) . Converts given value to string . string? ToString(float? value, string format) . Converts given value to string . string? ToString(double? value) . Converts given value to string . string? ToString(double? value, string format) . Converts given value to string . string? ToString(Decimal? value) . Converts given value to string . string? ToString(Decimal? value, string format) . Converts given value to string . string? ToString(bool? value) . Converts given value to string . string? ToString(object? value) . Converts given value to string . string? ToString&lt;T&gt;(T? value) . Converts given value to string . string ToString(string[] value) . Converts given value to string . string ToString&lt;T&gt;(T[] value) . Converts given value to string . TimeSpan? ToTimeSpan(string value) . Converts given value to TimeSpan . TimeSpan? ToTimeSpan(string value, string culture) . Converts given value to TimeSpan . IEnumerable&lt;T&gt; Window&lt;T&gt;(string name) . Gets the window . ",
    "url": "/data-sources/Os/macos-x64.html#base-methods",
    
    "relUrl": "/data-sources/Os/macos-x64.html#base-methods"
  },"252": {
    "doc": "MacOs X64",
    "title": "MacOs X64",
    "content": " ",
    "url": "/data-sources/Os/macos-x64.html",
    
    "relUrl": "/data-sources/Os/macos-x64.html"
  },"253": {
    "doc": "MacOs X64",
    "title": "Musoq.DataSources.Sqlite",
    "content": "Provides ability to work with sqlite database . ",
    "url": "/data-sources/Sqlite/macos-x64.html#musoqdatasourcessqlite",
    
    "relUrl": "/data-sources/Sqlite/macos-x64.html#musoqdatasourcessqlite"
  },"254": {
    "doc": "MacOs X64",
    "title": "Tables",
    "content": "Table is a collection of rows and columns that the plugin exposes. Below are the tables that are exposed by this data source. sqlite.tableName() . Gives ability to process sqlite table . Environment variables . In order to use the plugin, the user must set any required environment variables as specified in the environments element. Failure to do so may result in the plugin not functioning correctly. | Name | Is required | Description | . | SQLITE_CONNECTION_STRING | true | Sqlite connection string | . Columns . This table has a dynamic structure, which means that its columns and other details cannot be determined until runtime. As a result, it is not possible to include a complete description of this table in the documentation. Instead, the actual columns and other details of this table will be determined at runtime. ",
    "url": "/data-sources/Sqlite/macos-x64.html#tables",
    
    "relUrl": "/data-sources/Sqlite/macos-x64.html#tables"
  },"255": {
    "doc": "MacOs X64",
    "title": "Base Methods",
    "content": "Base methods are methods that can be called on the data source specific column. Those methods are automatically inherited and enriches the data source specific methods. Below are those base methods that are exposed by this data source. int RowNumber() . Gets the row number of the current row. string? GetTypeName(object? obj) . Gets the typename of passed object. string AggregateValues(string name) . Aggregates values into a single value. string AggregateValues(string name, int parent) . Aggregates values into a single value. Decimal Avg(string name) . Gets the aggregated average value from the given group name . Decimal Avg(string name, int parent) . Gets the aggregated average value from the given group name . byte? ShiftLeft(byte? value, int shift) . Shifts the value to the left by the specified number of bits. short? ShiftLeft(short? value, int shift) . Shifts the value to the left by the specified number of bits. int? ShiftLeft(int? value, int shift) . Shifts the value to the left by the specified number of bits. long? ShiftLeft(long? value, int shift) . Shifts the value to the left by the specified number of bits. sbyte? ShiftLeft(sbyte? value, int shift) . Shifts the value to the left by the specified number of bits. ushort? ShiftLeft(ushort? value, int shift) . Shifts the value to the left by the specified number of bits. uint? ShiftLeft(uint? value, int shift) . Shifts the value to the left by the specified number of bits. ulong? ShiftLeft(ulong? value, int shift) . Shifts the value to the left by the specified number of bits. byte? ShiftRight(byte? value, int shift) . Shifts the value to the right by the specified number of bits. short? ShiftRight(short? value, int shift) . Shifts the value to the right by the specified number of bits. int? ShiftRight(int? value, int shift) . Shifts the value to the right by the specified number of bits. long? ShiftRight(long? value, int shift) . Shifts the value to the right by the specified number of bits. sbyte? ShiftRight(sbyte? value, int shift) . Shifts the value to the right by the specified number of bits. ushort? ShiftRight(ushort? value, int shift) . Shifts the value to the right by the specified number of bits. uint? ShiftRight(uint? value, int shift) . Shifts the value to the right by the specified number of bits. ulong? ShiftRight(ulong? value, int shift) . Shifts the value to the right by the specified number of bits. byte? Not(byte? value) . Performs bitwise NOT operation on a given value. short? Not(short? value) . Performs bitwise NOT operation on a given value. int? Not(int? value) . Performs bitwise NOT operation on a given value. long? Not(long? value) . Performs bitwise NOT operation on a given value. sbyte? Not(sbyte? value) . Performs bitwise NOT operation on a given value. ushort? Not(ushort? value) . Performs bitwise NOT operation on a given value. uint? Not(uint? value) . Performs bitwise NOT operation on a given value. ulong? Not(ulong? value) . Performs bitwise NOT operation on a given value. byte? And(byte? left, byte? right) . Performs bitwise AND operation on two given values. int? And(byte? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(byte? left, short? right) . Performs bitwise AND operation on two given values. int? And(byte? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(byte? left, int? right) . Performs bitwise AND operation on two given values. uint? And(byte? left, uint? right) . Performs bitwise AND operation on two given values. long? And(byte? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(byte? left, ulong? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, byte? right) . Performs bitwise AND operation on two given values. sbyte? And(sbyte? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, short? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, int? right) . Performs bitwise AND operation on two given values. uint? And(sbyte? left, uint? right) . Performs bitwise AND operation on two given values. long? And(sbyte? left, long? right) . Performs bitwise AND operation on two given values. int? And(short? left, byte? right) . Performs bitwise AND operation on two given values. int? And(short? left, sbyte? right) . Performs bitwise AND operation on two given values. short? And(short? left, short? right) . Performs bitwise AND operation on two given values. int? And(short? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(short? left, int? right) . Performs bitwise AND operation on two given values. uint? And(short? left, uint? right) . Performs bitwise AND operation on two given values. long? And(short? left, long? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, byte? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, short? right) . Performs bitwise AND operation on two given values. ushort? And(ushort? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, int? right) . Performs bitwise AND operation on two given values. uint? And(ushort? left, uint? right) . Performs bitwise AND operation on two given values. long? And(ushort? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(ushort? left, ulong? right) . Performs bitwise AND operation on two given values. int? And(int? left, byte? right) . Performs bitwise AND operation on two given values. int? And(int? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(int? left, short? right) . Performs bitwise AND operation on two given values. int? And(int? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(int? left, int? right) . Performs bitwise AND operation on two given values. uint? And(int? left, uint? right) . Performs bitwise AND operation on two given values. long? And(int? left, long? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, uint? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, byte? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, sbyte? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, short? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, ushort? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, int? right) . Performs bitwise AND operation on two given values. ulong? And(uint? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(uint? left, ulong? right) . Performs bitwise AND operation on two given values. long? And(long? left, long? right) . Performs bitwise AND operation on two given values. long? And(long? left, byte? right) . Performs bitwise AND operation on two given values. long? And(long? left, sbyte? right) . Performs bitwise AND operation on two given values. long? And(long? left, short? right) . Performs bitwise AND operation on two given values. long? And(long? left, ushort? right) . Performs bitwise AND operation on two given values. long? And(long? left, int? right) . Performs bitwise AND operation on two given values. long? And(long? left, uint? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, byte? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, ushort? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, uint? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, ulong? right) . Performs bitwise AND operation on two given values. byte? Or(byte? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, short? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(byte? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(byte? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(byte? left, ulong? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, byte? right) . Performs bitwise OR operation on two given values. sbyte? Or(sbyte? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, short? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(sbyte? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(sbyte? left, long? right) . Performs bitwise OR operation on two given values. int? Or(short? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(short? left, sbyte? right) . Performs bitwise OR operation on two given values. short? Or(short? left, short? right) . Performs bitwise OR operation on two given values. int? Or(short? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(short? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(short? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(short? left, long? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, short? right) . Performs bitwise OR operation on two given values. ushort? Or(ushort? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(ushort? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(ushort? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(ushort? left, ulong? right) . Performs bitwise OR operation on two given values. int? Or(int? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(int? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(int? left, short? right) . Performs bitwise OR operation on two given values. int? Or(int? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(int? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(int? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(int? left, long? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, uint? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, byte? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, sbyte? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, short? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, ushort? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, int? right) . Performs bitwise OR operation on two given values. ulong? Or(uint? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(uint? left, ulong? right) . Performs bitwise OR operation on two given values. long? Or(long? left, long? right) . Performs bitwise OR operation on two given values. long? Or(long? left, byte? right) . Performs bitwise OR operation on two given values. long? Or(long? left, sbyte? right) . Performs bitwise OR operation on two given values. long? Or(long? left, short? right) . Performs bitwise OR operation on two given values. long? Or(long? left, ushort? right) . Performs bitwise OR operation on two given values. long? Or(long? left, int? right) . Performs bitwise OR operation on two given values. long? Or(long? left, uint? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, byte? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, ushort? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, uint? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, ulong? right) . Performs bitwise OR operation on two given values. byte? Xor(byte? left, byte? right) . Performs bitwise OR operation on two given values. int? Xor(byte? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(byte? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(byte? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(byte? left, ulong? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, byte? right) . Performs bitwise Xor operation on two given values. sbyte? Xor(sbyte? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(sbyte? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(sbyte? left, long? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, sbyte? right) . Performs bitwise Xor operation on two given values. short? Xor(short? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, ushort? right) . Performs bitwise XOR operation on two given values. int? Xor(short? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(short? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(short? left, long? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, short? right) . Performs bitwise Xor operation on two given values. ushort? Xor(ushort? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(ushort? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(ushort? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ushort? left, ulong? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(int? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(int? left, long? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, uint? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, byte? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, sbyte? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, short? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, ushort? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, int? right) . Performs bitwise Xor operation on two given values. ulong? Xor(uint? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(uint? left, ulong? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, long? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, byte? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, sbyte? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, short? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, ushort? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, int? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, uint? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, ulong? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, byte? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, ushort? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, uint? right) . Performs bitwise Xor operation on two given values. byte[] GetBytes(string? content) . Gets the bytes from the given string. byte[] GetBytes(string? content, int length, int offset) . Gets the bytes from the given string within given offset and length. byte?[]? GetBytes(char? character) . Gets the bytes from the given character. byte?[]? GetBytes(bool? bit) . Gets the bytes from the given boolean. byte?[]? GetBytes(long? value) . Gets the bytes from the given long. byte?[]? GetBytes(int? value) . Gets the bytes from the given int. byte?[]? GetBytes(short? value) . Gets the bytes from the given short. byte?[]? GetBytes(ulong? value) . Gets the bytes from the given ulong. byte?[]? GetBytes(ushort? value) . Gets the bytes from the given ushort. byte?[]? GetBytes(uint? value) . Gets the bytes from the given uint. byte?[]? GetBytes(Decimal? value) . Gets the bytes from the given decimal. byte?[]? GetBytes(double? value) . Gets the bytes from the given double. byte?[]? GetBytes(float? value) . Gets the bytes from the given float. string? ToBin(byte?[]? bytes, string delimiter) . Converts given bytes to binary with defined delimiter . string ToBin&lt;T&gt;(T value) . Converts given value to binary . string ToOcta&lt;T&gt;(T value) . Converts given value to octal . string ToDec&lt;T&gt;(T value) . Converts given value to decimal . string ToBase64(byte[] value) . Converts given value to string . string ToBase64(byte[] value, int offset, int length) . Converts given array of bytes to string . byte[] FromBase64(string value) . Converts given string to bytes array . bool FromBytesToBool(byte[] value) . Converts bytes to boolean value. short FromBytesToInt16(byte[] value) . Converts bytes to a 16-bit signed integer. ushort FromBytesToUInt16(byte[] value) . Converts bytes to a 16-bit unsigned integer. int FromBytesToInt32(byte[] value) . Converts bytes to a 32-bit signed integer. uint FromBytesToUInt32(byte[] value) . Converts bytes to a 32-bit unsigned integer. long FromBytesToInt64(byte[] value) . Converts bytes to a 64-bit signed integer. ulong FromBytesToUInt64(byte[] value) . Converts bytes to a 64-bit unsigned integer. float FromBytesToFloat(byte[] value) . Converts bytes to a float value. double FromBytesToDouble(byte[] value) . Converts bytes to a float value. string FromBytesToString(byte[] value) . Converts bytes to a string. byte[] ToBytes(bool value) . Converts boolean value to bytes. byte[] ToBytes(short value) . Converts short value to bytes. byte[] ToBytes(ushort value) . Converts ushort value to bytes. byte[] ToBytes(int value) . Converts int value to bytes. byte[] ToBytes(uint value) . Converts uint value to bytes. byte[] ToBytes(long value) . Converts long value to bytes. byte[] ToBytes(ulong value) . Converts long value to bytes. string? ToHex(byte?[]? bytes, string delimiter) . Converts given bytes to hex with defined delimiter . string? ToHex&lt;T&gt;(T value) . Converts given value to binary . int Count(string name) . Gets the count value of a given group. int Count(string name, int parent) . Gets the count value of a given group. int ExtractFromDate(string? date, string partOfDate) . Extracts part of the date from the date . int ExtractFromDate(string date, string culture, string partOfDate) . Extracts part of the date from the date based on given culture . DateTimeOffset? GetDate() . Gets the current datetime . DateTimeOffset? UtcGetDate() . Gets the current datetime in UTC . int? Month(DateTimeOffset? value) . Gets the month from DateTimeOffset . int? Year(DateTimeOffset? value) . Gets the year from DateTimeOffset . int? Day(DateTimeOffset? value) . Gets the day from DateTimeOffset . int? Hour(DateTimeOffset? value) . Gets the hour from DateTimeOffset . int? Minute(DateTimeOffset? value) . Gets the minute from DateTimeOffset . int? Second(DateTimeOffset? value) . Gets the second from DateTimeOffset . int? Milliseconds(DateTimeOffset? value) . Gets the millisecond from DateTimeOffset . int? DayOfWeek(DateTimeOffset? value) . Gets the day of week from DateTimeOffset . TimeSpan? ExtractTimeSpan(DateTimeOffset? dateTimeOffset) . Extracts time from DateTimeOffset . DateTime? ToDateTimeOffset(string value) . Converts given value to DateTimeOffset . DateTimeOffset? ToDateTimeOffset(string value, string culture) . Converts given value to DateTimeOffset . IEnumerable&lt;T&gt;? Skip&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? skipCount) . Skips elements from the beginning of the sequence. IEnumerable&lt;T&gt;? Take&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? takeCount) . Takes elements from the beginning of the sequence. IEnumerable&lt;T&gt;? SkipAndTake&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? skipCount, int? takeCount) . Skip and takes elements from the beginning of the sequence. T[]? EnumerableToArray&lt;T&gt;(IEnumerable&lt;T&gt;? values) . Turn array arguments of T into a single array. T[]? MergeArrays&lt;T&gt;(T[][]? values) . Turn array arguments of T into a single array. IEnumerable&lt;T&gt;? LongestCommonSequence&lt;T&gt;(IEnumerable&lt;T&gt;? source, IEnumerable&lt;T&gt;? pattern) . Computes longest common sequence of two given sequences . T? GetElementAtOrDefault&lt;T&gt;(IEnumerable&lt;T&gt;? enumerable, int? index) . Gets the element at the specified index in a sequence . int? Length&lt;T&gt;(IEnumerable&lt;T&gt;? enumerable) . Gets the length of the sequence . int? Length&lt;T&gt;(T[]? array) . Gets the length of the array . T? Choose&lt;T&gt;(int? index, T[] values) . Gets the value of an array at the specified index . T If&lt;T&gt;(bool expressionResult, T a, T b) . Chose a or b value based on the expression result . bool? Match(string? regex, string? content) . Determine whether content matches the specified pattern . byte? Coalesce(byte?[] array) . Gets the first non-null value in a list . sbyte? Coalesce(sbyte?[] array) . Gets the first non-null value in a list . short? Coalesce(short?[] array) . Gets the first non-null value in a list . ushort? Coalesce(ushort?[] array) . Gets the first non-null value in a list . int? Coalesce(int?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(uint?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(long?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(ulong?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(Decimal?[] array) . Gets the first non-null value in a list . T? Coalesce&lt;T&gt;(T[] array) . Gets the first non-null value in a list . IEnumerable&lt;T&gt;? Distinct&lt;T&gt;(IEnumerable&lt;T&gt;? values) . Returns distinct elements from a collection. string? Md5(string? content) . Gets the md5 hash of the given string. string? Md5(byte?[]? content) . Gets the md5 hash of the given bytes array. string? Sha1(string? content) . Gets the sha256 hash of the given string. string? Sha1(byte?[]? content) . Gets the sha256 hash of the given bytes array. string? Sha256(string? content) . Gets the sha256 hash of the given string. string? Sha256(byte?[]? content) . Gets the sha256 hash of the given bytes array. string? Sha512(string? content) . Gets the sha256 hash of the given string. string? Sha512(byte?[]? content) . Gets the sha256 hash of the bytes array. string? ToJson&lt;T&gt;(T? obj) . Converts object to json. string[] ExtractFromJsonToArray(string? json, string? path) . Extracts values from json by path. string? ExtractFromJson(string? json, string? path) . Extracts values from json by path and joins them with comma. Decimal? Abs(Decimal? value) . Gets the absolute value . long? Abs(long? value) . Gets the absolute value . int? Abs(int? value) . Gets the absolute value . Decimal? Ceil(Decimal? value) . Gets the ceiling value . Decimal? Floor(Decimal? value) . Gets the floor value . Decimal? Sign(Decimal? value) . Determine whether value is greater, equal or less that zero . long? Sign(long? value) . Determine whether value is greater, equal or less that zero . Decimal? Round(Decimal? value, int precision) . Rounds the value within given precision . Decimal? PercentOf(Decimal? value, Decimal? max) . Gets the percentage of the value . int Rand() . Gets the random integer value . int? Rand(int? min, int? max) . Gets the random integer value . double? Pow(Decimal? x, Decimal? y) . Computes the pow between two values . double? Pow(double? x, double? y) . Computes the pow between two values . double? Sqrt(Decimal? x) . Computes the sqrt of a given value . double? Sqrt(double? x) . Computes the sqrt of a given value . double? Sqrt(long? x) . Computes the sqrt of a given value . double? PercentRank&lt;T&gt;(IEnumerable&lt;T&gt;? window, T? value) . Computes the percent rank of a given window . double? Log(Decimal? base, Decimal? value) . Calculates the logarithm of a value with a specified base. Decimal? Sin(Decimal? value) . Calculates sine of a value. double? Sin(double? value) . Calculates sine of a value. float? Sin(float? value) . Calculates sine of a value. Decimal? Cos(Decimal? value) . Calculates cosine of a value. double? Cos(double? value) . Calculates cosine of a value. float? Cos(float? value) . Calculates cosine of a value. Decimal Max(string name) . Gets the max value of a given group. Decimal Max(string name, int parent) . Gets the max value of a given group. Decimal Min(string name) . Gets the min value of a given group. Decimal Min(string name, int parent) . Gets the min value of a given group. Decimal StDev(string name, int parent) . Gets the StDev value of a given group. string NewId() . Gets the new identifier . string? Trim(string? value) . Removes leading and trailing whitespace from a string. string? TrimStart(string? value) . Removes leading whitespace from a string. string? TrimEnd(string? value) . Removes trailing whitespace from a string. string? Substring(string? value, int? index, int? length) . Gets the substring from the string. string? Substring(string value, int? length) . Gets the substring from the string . string? Concat(string[]? strings) . Concatenates the specified values . string? Concat(char?[]? characters) . Concatenates the specified characters . string? Concat(string? firstString, char?[]? chars) . Concatenates specified string fir characters . string? Concat(char? firstChar, string[]? strings) . Concatenate specific character with strings . string? Concat(object[]? objects) . Concatenates the specified strings . string? Concat&lt;T&gt;(T[]? objects) . Concatenates the specified strings . bool? Contains(string? content, string? what) . Determine whether the string contains the specified value . int? IndexOf(string? value, string? text) . Position of the first occurrence of the specified value . string? Soundex(string? value) . Computes soundex for the specified value . bool HasFuzzyMatchedWord(string text, string word, string separator) . Matches the specified text by splitting it with separator and applying fuzzy comparison . bool HasWordThatHasSmallerLevenshteinDistanceThan(string text, string word, int distance, string separator) . Matches the specified text by splitting it with separator and applying fuzzy comparison with a given distance . bool HasWordThatSoundLike(string text, string word, string separator) . Matches whether the specified word is present after being fuzzified within the specified text . bool HasTextThatSoundLikeSentence(string text, string sentence, string separator) . Matches whether the specified text is present in sentence after being fuzified . string? ToUpper(string value) . Makes the string uppercase . string? ToUpper(string value, string culture) . Makes the string uppercase within specified culture . string? ToUpperInvariant(string value) . Makes the string uppercase . string? ToLower(string value) . Makes the string lowercase . string? ToLower(string value, string culture) . Makes the string lowercase within specified culture . string? ToLowerInvariant(string value) . Makes the string lowercase . string? PadLeft(string? value, string? character, int? totalWidth) . Returns a new string that right-aligns the characters in this instance by padding them on the left with a specified Unicode character, for a specified total lengt . string? PadRight(string? value, string? character, int? totalWidth) . Returns a new string that left-aligns the characters in this instance by padding them on the right with a specified Unicode character, for a specified total length . string? Head(string? value, int? length) . Gets the first N characters of the string . string? Tail(string? value, int? length) . Gets the last N characters of the string . int? LevenshteinDistance(string? firstValue, string? secondValue) . Computes the Levenshtein distance between two strings . char? GetCharacterOf(string value, int index) . Gets the character at specified index . string? Reverse(string? value) . Reverses the string . string[] Split(string value, string[] separators) . Splits the string into an array of substrings based on the specified separators . char[] ToCharArray(string value) . Splits the string into an array of characters . string? LongestCommonSubstring(string source, string pattern) . Computes the longest common subsequence between two source and pattern . string Replicate(string value, int integer) . Clones the value n times . string? Translate(string? value, string? characters, string? translations) . Returns the string from the first argument after the characters specified in the second argument are translated into the characters specified in the third argument. string? Replace(string? text, string lookFor, string? changeTo) . Replaces the first occurrence of a specified string in this instance with another specified string . string? ToTitleCase(string? value) . Capitalizes the first letter of the string . string? GetNthWord(string? text, int? wordIndex, string? separator) . Gets the nth word of the string . string? GetFirstWord(string text, string separator) . Gets the first word of the string . string? GetSecondWord(string text, string separator) . Gets the second word of the string . string? GetThirdWord(string text, string separator) . Gets the third word of the string . string? GetLastWord(string? text, string? separator) . Gets last word of the string . bool? IsNullOrEmpty(string? value) . Determines whether the string is null or empty . bool? IsNullOrWhiteSpace(string? value) . Determines whether the string is null or whitespace . string? UrlEncode(string? value) . Encodes the value . string? UrlDecode(string? value) . Decodes the value . string? UriEncode(string? value) . Encodes the value . string? UriDecode(string? value) . Decodes the value . bool? StartsWith(string? value, string? prefix) . Determines whether the string starts with the specified prefix . bool? StartsWith(string? value, string? prefix, string comparison) . Determines whether the string starts with the specified prefix . bool? EndsWith(string? value, string? suffix) . Determines whether the string ends with the specified suffix . bool? EndsWith(string? value, string? suffix, string comparison) . Determines whether the string ends with the specified suffix . string? RegexReplace(string? value, string? pattern, string? replacement) . Replace the specified value part that matches the pattern with the replacement . string[]? SplitByLinuxNewLines(string? input) . Split string by Linux-style newlines (\\n) . string[]? SplitByWindowsNewLines(string? input) . Split string by Windows-style newlines (\\r\\n) . string[]? SplitByNewLines(string? input) . Smart split that handles both Windows (\\r\\n) and Linux (\\n) newlines . Decimal Sum(string name) . Gets the sum value of a given group. Decimal Sum(string name, int parent) . Gets the sum value of a given group. Decimal SumIncome(string name) . Gets the sum value of a given group. Decimal SumIncome(string name, int parent) . Gets the sum value of a given group. Decimal SumOutcome(string name) . Gets the outcome value of a given group. Decimal SumOutcome(string name, int parent) . Gets the outcome value of a given group. TimeSpan? SumTimeSpan(string name) . Gets the sum value of a given group. TimeSpan? SumTimeSpan(string name, int parent) . Gets the sum value of a given group. TimeSpan? MinTimeSpan(string name) . Gets the min value of a given group. TimeSpan? MinTimeSpan(string name, int parent) . Gets the min value of a given group. TimeSpan? MaxTimeSpan(string name) . Gets the max value of a given group. TimeSpan? MaxTimeSpan(string name, int parent) . Gets the min value of a given group. char? ToChar(string? value) . Converts given value to character . char? ToChar(int? value) . Converts given value to character . char? ToChar(short? value) . Converts given value to character . char? ToChar(byte? value) . Converts given value to character . char? ToChar(object? value) . Converts given value to character . DateTime? ToDateTime(string value) . Converts given value to DateTime . DateTime? ToDateTime(string value, string culture) . Converts given value to DateTime . Decimal? ToDecimal(string? value) . Converts given value to decimal . Decimal? ToDecimal(string value, string culture) . Converts given value to decimal withing given culture . Decimal? ToDecimal(byte? value) . Converts given value to Decimal . Decimal? ToDecimal(sbyte? value) . Converts given value to Decimal . Decimal? ToDecimal(short? value) . Converts given value to Decimal . Decimal? ToDecimal(ushort? value) . Converts given value to Decimal . Decimal? ToDecimal(long? value) . Converts given value to Decimal . Decimal? ToDecimal(ulong? value) . Converts given value to Decimal . Decimal? ToDecimal(float? value) . Converts given value to Decimal . Decimal? ToDecimal(double? value) . Converts given value to Decimal . Decimal? ToDecimal(object? value) . Converts given value to Decimal . double? ToDouble(object? value) . Converts given value to double . double? ToDouble(string? value) . Converts given value to double . double? ToDouble(byte? value) . Converts given value to double . double? ToDouble(sbyte? value) . Converts given value to double . double? ToDouble(short? value) . Converts given value to double . double? ToDouble(ushort? value) . Converts given value to double . double? ToDouble(int? value) . Converts given value to double . double? ToDouble(uint? value) . Converts given value to double . double? ToDouble(long? value) . Converts given value to double . double? ToDouble(ulong? value) . Converts given value to double . double? ToDouble(float? value) . Converts given value to double . double? ToDouble(double? value) . Converts given value to double . double? ToDouble(Decimal? value) . Converts given value to double . float? ToFloat(string? value) . Converts given value to float . float? ToFloat(byte? value) . Converts given value to float . float? ToFloat(sbyte? value) . Converts given value to float . float? ToFloat(short? value) . Converts given value to float . float? ToFloat(ushort? value) . Converts given value to float . float? ToFloat(int? value) . Converts given value to float . float? ToFloat(uint? value) . Converts given value to float . float? ToFloat(long? value) . Converts given value to float . float? ToFloat(ulong? value) . Converts given value to float . float? ToFloat(float? value) . Converts given value to float . float? ToFloat(Decimal? value) . Converts given value to float . int? ToInt32(string value) . Converts given value to int . int? ToInt32(byte? value) . Converts given value to int . int? ToInt32(sbyte? value) . Converts given value to int . int? ToInt32(short? value) . Converts given value to int . int? ToInt32(ushort? value) . Converts given value to int . int? ToInt32(int? value) . Converts given value to int . int? ToInt32(uint? value) . Converts given value to int . int? ToInt32(long? value) . Converts given value to int . int? ToInt32(ulong? value) . Converts given value to int . int? ToInt32(float? value) . Converts given value to int . int? ToInt32(double? value) . Converts given value to int . int? ToInt32(Decimal? value) . Converts given value to int . int? ToInt32(object? value) . Converts given value to int . long? ToInt64(string value) . Converts given value to Int64 . long? ToInt64(byte? value) . Converts given value to long . long? ToInt64(sbyte? value) . Converts given value to long . long? ToInt64(short? value) . Converts given value to long . long? ToInt64(ushort? value) . Converts given value to long . long? ToInt64(int? value) . Converts given value to long . long? ToInt64(uint? value) . Converts given value to long . long? ToInt64(long? value) . Converts given value to long . long? ToInt64(ulong? value) . Converts given value to long . long? ToInt64(float? value) . Converts given value to long . long? ToInt64(double? value) . Converts given value to long . long? ToInt64(Decimal? value) . Converts given value to long . long? ToInt64(object? value) . Converts given value to long . string? ToString(char? value) . Converts given value to string . string? ToString(DateTimeOffset? value) . Converts given value to string . string? ToString(DateTimeOffset? value, string format) . Converts given value to string . string? ToString(byte? value) . Converts given value to string . string? ToString(byte? value, string format) . Converts given value to string . string? ToString(sbyte? value) . Converts given value to string . string? ToString(sbyte? value, string format) . Converts given value to string . string? ToString(int? value) . Converts given value to string . string? ToString(int? value, string format) . Converts given value to string . string? ToString(uint? value) . Converts given value to string . string? ToString(uint? value, string format) . Converts given value to string . string? ToString(long? value) . Converts given value to string . string? ToString(long? value, string format) . Converts given value to string . string? ToString(ulong? value) . Converts given value to string . string? ToString(ulong? value, string format) . Converts given value to string . string? ToString(float? value) . Converts given value to string . string? ToString(float? value, string format) . Converts given value to string . string? ToString(double? value) . Converts given value to string . string? ToString(double? value, string format) . Converts given value to string . string? ToString(Decimal? value) . Converts given value to string . string? ToString(Decimal? value, string format) . Converts given value to string . string? ToString(bool? value) . Converts given value to string . string? ToString(object? value) . Converts given value to string . string? ToString&lt;T&gt;(T? value) . Converts given value to string . string ToString(string[] value) . Converts given value to string . string ToString&lt;T&gt;(T[] value) . Converts given value to string . TimeSpan? ToTimeSpan(string value) . Converts given value to TimeSpan . TimeSpan? ToTimeSpan(string value, string culture) . Converts given value to TimeSpan . IEnumerable&lt;T&gt; Window&lt;T&gt;(string name) . Gets the window . ",
    "url": "/data-sources/Sqlite/macos-x64.html#base-methods",
    
    "relUrl": "/data-sources/Sqlite/macos-x64.html#base-methods"
  },"256": {
    "doc": "MacOs X64",
    "title": "MacOs X64",
    "content": " ",
    "url": "/data-sources/Sqlite/macos-x64.html",
    
    "relUrl": "/data-sources/Sqlite/macos-x64.html"
  },"257": {
    "doc": "MacOs X64",
    "title": "Musoq.DataSources.Docker",
    "content": "Provides schema to work with docker containers, images, networks and volumes. ",
    "url": "/data-sources/Docker/macos-x64.html#musoqdatasourcesdocker",
    
    "relUrl": "/data-sources/Docker/macos-x64.html#musoqdatasourcesdocker"
  },"258": {
    "doc": "MacOs X64",
    "title": "Tables",
    "content": "Table is a collection of rows and columns that the plugin exposes. Below are the tables that are exposed by this data source. docker.containers() . Gets containers of local docker . | Name | Type | Description | . | ID | string | Container ID | . | Names | IList&lt;string&gt; | Container names | . | Image | string | Image name | . | ImageID | string | Image ID | . | Command | string | Command the container run on with | . | Created | string | Container created datetime | . | Ports | IList&lt;string&gt; | Mapped ports | . | SizeRw | long | Size of the created or changed files | . | SizeRootFs | long | Total size of all files in the container | . | Labels | IDictionary&lt;string, string&gt; | Assigned labels to specific container | . | Status | string | Status of the container | . | NetworkSettings | SummaryNetworkSettings | Network settings | . | Mounts | IList&lt;MountPoint&gt; | Mounted points | . | FlattenPorts | string | Mapped ports as a string with comma delimiter | . docker.images() . Gets images of local docker . | Name | Type | Description | . | Containers | long | Number of containers | . | Created | DateTime | Creation time | . | ID | string | Unique identifier | . | Labels | IDictionary&lt;string, string&gt; | Set of labels | . | ParentID | string | Parent’s unique identifier | . | RepoDigests | IList&lt;string&gt; | List of repository digests | . | RepoTags | IList&lt;string&gt; | List of repository tags | . | SharedSize | long | Shared size in bytes | . | Size | long | Size in bytes | . | VirtualSize | long | Virtual size in bytes | . docker.volumes() . Gets volumes of local docker . | Name | Type | Description | . | CreatedAt | string | Creation time of the volume | . | Driver | string | Driver used for the volume | . | Labels | IDictionary&lt;string, string&gt; | Set of labels for the volume | . | Mountpoint | string | Mount point for the volume | . | Name | string | Name of the volume | . | Options | IDictionary&lt;string, string&gt; | Set of options for the volume | . | Scope | string | Scope of the volume | . | Status | IDictionary&lt;string, string&gt; | Status information for the volume | . | UsageData | VolumeUsageData | Usage data for the volume | . docker.networks() . Gets networks of local docker . | Name | Type | Description | . | Name | string | Name of the network | . | ID | string | Unique identifier of the network | . | Created | DateTime | Creation time of the network | . | Scope | string | Scope of the network | . | Driver | string | Driver used for the network | . | EnableIPv6 | bool | Flag indicating if IPv6 is enabled | . | IPAM | IPAM | IP Address Management specification | . | Internal | bool | Flag indicating if the network is internal | . | Attachable | bool | Flag indicating if the network is attachable | . | Ingress | bool | Flag indicating if the network is ingress | . | ConfigFrom | ConfigReference | Network configuration source | . | ConfigOnly | bool | Flag indicating if the network is configuration only | . | Containers | IDictionary&lt;string, EndpointResource&gt; | Dictionary of connected containers | . | Options | IDictionary&lt;string, string&gt; | Set of options for the network | . | Labels | IDictionary&lt;string, string&gt; | Set of labels for the network | . | Peers | IList&lt;PeerInfo&gt; | List of network peers | . | Services | IDictionary&lt;string, ServiceInfo&gt; | Dictionary of network services | . ",
    "url": "/data-sources/Docker/macos-x64.html#tables",
    
    "relUrl": "/data-sources/Docker/macos-x64.html#tables"
  },"259": {
    "doc": "MacOs X64",
    "title": "Base Methods",
    "content": "Base methods are methods that can be called on the data source specific column. Those methods are automatically inherited and enriches the data source specific methods. Below are those base methods that are exposed by this data source. int RowNumber() . Gets the row number of the current row. string? GetTypeName(object? obj) . Gets the typename of passed object. string AggregateValues(string name) . Aggregates values into a single value. string AggregateValues(string name, int parent) . Aggregates values into a single value. Decimal Avg(string name) . Gets the aggregated average value from the given group name . Decimal Avg(string name, int parent) . Gets the aggregated average value from the given group name . byte? ShiftLeft(byte? value, int shift) . Shifts the value to the left by the specified number of bits. short? ShiftLeft(short? value, int shift) . Shifts the value to the left by the specified number of bits. int? ShiftLeft(int? value, int shift) . Shifts the value to the left by the specified number of bits. long? ShiftLeft(long? value, int shift) . Shifts the value to the left by the specified number of bits. sbyte? ShiftLeft(sbyte? value, int shift) . Shifts the value to the left by the specified number of bits. ushort? ShiftLeft(ushort? value, int shift) . Shifts the value to the left by the specified number of bits. uint? ShiftLeft(uint? value, int shift) . Shifts the value to the left by the specified number of bits. ulong? ShiftLeft(ulong? value, int shift) . Shifts the value to the left by the specified number of bits. byte? ShiftRight(byte? value, int shift) . Shifts the value to the right by the specified number of bits. short? ShiftRight(short? value, int shift) . Shifts the value to the right by the specified number of bits. int? ShiftRight(int? value, int shift) . Shifts the value to the right by the specified number of bits. long? ShiftRight(long? value, int shift) . Shifts the value to the right by the specified number of bits. sbyte? ShiftRight(sbyte? value, int shift) . Shifts the value to the right by the specified number of bits. ushort? ShiftRight(ushort? value, int shift) . Shifts the value to the right by the specified number of bits. uint? ShiftRight(uint? value, int shift) . Shifts the value to the right by the specified number of bits. ulong? ShiftRight(ulong? value, int shift) . Shifts the value to the right by the specified number of bits. byte? Not(byte? value) . Performs bitwise NOT operation on a given value. short? Not(short? value) . Performs bitwise NOT operation on a given value. int? Not(int? value) . Performs bitwise NOT operation on a given value. long? Not(long? value) . Performs bitwise NOT operation on a given value. sbyte? Not(sbyte? value) . Performs bitwise NOT operation on a given value. ushort? Not(ushort? value) . Performs bitwise NOT operation on a given value. uint? Not(uint? value) . Performs bitwise NOT operation on a given value. ulong? Not(ulong? value) . Performs bitwise NOT operation on a given value. byte? And(byte? left, byte? right) . Performs bitwise AND operation on two given values. int? And(byte? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(byte? left, short? right) . Performs bitwise AND operation on two given values. int? And(byte? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(byte? left, int? right) . Performs bitwise AND operation on two given values. uint? And(byte? left, uint? right) . Performs bitwise AND operation on two given values. long? And(byte? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(byte? left, ulong? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, byte? right) . Performs bitwise AND operation on two given values. sbyte? And(sbyte? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, short? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, int? right) . Performs bitwise AND operation on two given values. uint? And(sbyte? left, uint? right) . Performs bitwise AND operation on two given values. long? And(sbyte? left, long? right) . Performs bitwise AND operation on two given values. int? And(short? left, byte? right) . Performs bitwise AND operation on two given values. int? And(short? left, sbyte? right) . Performs bitwise AND operation on two given values. short? And(short? left, short? right) . Performs bitwise AND operation on two given values. int? And(short? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(short? left, int? right) . Performs bitwise AND operation on two given values. uint? And(short? left, uint? right) . Performs bitwise AND operation on two given values. long? And(short? left, long? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, byte? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, short? right) . Performs bitwise AND operation on two given values. ushort? And(ushort? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, int? right) . Performs bitwise AND operation on two given values. uint? And(ushort? left, uint? right) . Performs bitwise AND operation on two given values. long? And(ushort? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(ushort? left, ulong? right) . Performs bitwise AND operation on two given values. int? And(int? left, byte? right) . Performs bitwise AND operation on two given values. int? And(int? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(int? left, short? right) . Performs bitwise AND operation on two given values. int? And(int? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(int? left, int? right) . Performs bitwise AND operation on two given values. uint? And(int? left, uint? right) . Performs bitwise AND operation on two given values. long? And(int? left, long? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, uint? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, byte? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, sbyte? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, short? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, ushort? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, int? right) . Performs bitwise AND operation on two given values. ulong? And(uint? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(uint? left, ulong? right) . Performs bitwise AND operation on two given values. long? And(long? left, long? right) . Performs bitwise AND operation on two given values. long? And(long? left, byte? right) . Performs bitwise AND operation on two given values. long? And(long? left, sbyte? right) . Performs bitwise AND operation on two given values. long? And(long? left, short? right) . Performs bitwise AND operation on two given values. long? And(long? left, ushort? right) . Performs bitwise AND operation on two given values. long? And(long? left, int? right) . Performs bitwise AND operation on two given values. long? And(long? left, uint? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, byte? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, ushort? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, uint? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, ulong? right) . Performs bitwise AND operation on two given values. byte? Or(byte? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, short? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(byte? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(byte? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(byte? left, ulong? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, byte? right) . Performs bitwise OR operation on two given values. sbyte? Or(sbyte? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, short? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(sbyte? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(sbyte? left, long? right) . Performs bitwise OR operation on two given values. int? Or(short? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(short? left, sbyte? right) . Performs bitwise OR operation on two given values. short? Or(short? left, short? right) . Performs bitwise OR operation on two given values. int? Or(short? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(short? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(short? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(short? left, long? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, short? right) . Performs bitwise OR operation on two given values. ushort? Or(ushort? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(ushort? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(ushort? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(ushort? left, ulong? right) . Performs bitwise OR operation on two given values. int? Or(int? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(int? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(int? left, short? right) . Performs bitwise OR operation on two given values. int? Or(int? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(int? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(int? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(int? left, long? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, uint? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, byte? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, sbyte? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, short? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, ushort? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, int? right) . Performs bitwise OR operation on two given values. ulong? Or(uint? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(uint? left, ulong? right) . Performs bitwise OR operation on two given values. long? Or(long? left, long? right) . Performs bitwise OR operation on two given values. long? Or(long? left, byte? right) . Performs bitwise OR operation on two given values. long? Or(long? left, sbyte? right) . Performs bitwise OR operation on two given values. long? Or(long? left, short? right) . Performs bitwise OR operation on two given values. long? Or(long? left, ushort? right) . Performs bitwise OR operation on two given values. long? Or(long? left, int? right) . Performs bitwise OR operation on two given values. long? Or(long? left, uint? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, byte? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, ushort? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, uint? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, ulong? right) . Performs bitwise OR operation on two given values. byte? Xor(byte? left, byte? right) . Performs bitwise OR operation on two given values. int? Xor(byte? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(byte? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(byte? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(byte? left, ulong? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, byte? right) . Performs bitwise Xor operation on two given values. sbyte? Xor(sbyte? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(sbyte? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(sbyte? left, long? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, sbyte? right) . Performs bitwise Xor operation on two given values. short? Xor(short? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, ushort? right) . Performs bitwise XOR operation on two given values. int? Xor(short? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(short? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(short? left, long? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, short? right) . Performs bitwise Xor operation on two given values. ushort? Xor(ushort? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(ushort? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(ushort? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ushort? left, ulong? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(int? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(int? left, long? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, uint? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, byte? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, sbyte? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, short? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, ushort? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, int? right) . Performs bitwise Xor operation on two given values. ulong? Xor(uint? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(uint? left, ulong? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, long? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, byte? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, sbyte? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, short? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, ushort? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, int? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, uint? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, ulong? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, byte? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, ushort? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, uint? right) . Performs bitwise Xor operation on two given values. byte[] GetBytes(string? content) . Gets the bytes from the given string. byte[] GetBytes(string? content, int length, int offset) . Gets the bytes from the given string within given offset and length. byte?[]? GetBytes(char? character) . Gets the bytes from the given character. byte?[]? GetBytes(bool? bit) . Gets the bytes from the given boolean. byte?[]? GetBytes(long? value) . Gets the bytes from the given long. byte?[]? GetBytes(int? value) . Gets the bytes from the given int. byte?[]? GetBytes(short? value) . Gets the bytes from the given short. byte?[]? GetBytes(ulong? value) . Gets the bytes from the given ulong. byte?[]? GetBytes(ushort? value) . Gets the bytes from the given ushort. byte?[]? GetBytes(uint? value) . Gets the bytes from the given uint. byte?[]? GetBytes(Decimal? value) . Gets the bytes from the given decimal. byte?[]? GetBytes(double? value) . Gets the bytes from the given double. byte?[]? GetBytes(float? value) . Gets the bytes from the given float. string? ToBin(byte?[]? bytes, string delimiter) . Converts given bytes to binary with defined delimiter . string ToBin&lt;T&gt;(T value) . Converts given value to binary . string ToOcta&lt;T&gt;(T value) . Converts given value to octal . string ToDec&lt;T&gt;(T value) . Converts given value to decimal . string ToBase64(byte[] value) . Converts given value to string . string ToBase64(byte[] value, int offset, int length) . Converts given array of bytes to string . byte[] FromBase64(string value) . Converts given string to bytes array . bool FromBytesToBool(byte[] value) . Converts bytes to boolean value. short FromBytesToInt16(byte[] value) . Converts bytes to a 16-bit signed integer. ushort FromBytesToUInt16(byte[] value) . Converts bytes to a 16-bit unsigned integer. int FromBytesToInt32(byte[] value) . Converts bytes to a 32-bit signed integer. uint FromBytesToUInt32(byte[] value) . Converts bytes to a 32-bit unsigned integer. long FromBytesToInt64(byte[] value) . Converts bytes to a 64-bit signed integer. ulong FromBytesToUInt64(byte[] value) . Converts bytes to a 64-bit unsigned integer. float FromBytesToFloat(byte[] value) . Converts bytes to a float value. double FromBytesToDouble(byte[] value) . Converts bytes to a float value. string FromBytesToString(byte[] value) . Converts bytes to a string. byte[] ToBytes(bool value) . Converts boolean value to bytes. byte[] ToBytes(short value) . Converts short value to bytes. byte[] ToBytes(ushort value) . Converts ushort value to bytes. byte[] ToBytes(int value) . Converts int value to bytes. byte[] ToBytes(uint value) . Converts uint value to bytes. byte[] ToBytes(long value) . Converts long value to bytes. byte[] ToBytes(ulong value) . Converts long value to bytes. string? ToHex(byte?[]? bytes, string delimiter) . Converts given bytes to hex with defined delimiter . string? ToHex&lt;T&gt;(T value) . Converts given value to binary . int Count(string name) . Gets the count value of a given group. int Count(string name, int parent) . Gets the count value of a given group. int ExtractFromDate(string? date, string partOfDate) . Extracts part of the date from the date . int ExtractFromDate(string date, string culture, string partOfDate) . Extracts part of the date from the date based on given culture . DateTimeOffset? GetDate() . Gets the current datetime . DateTimeOffset? UtcGetDate() . Gets the current datetime in UTC . int? Month(DateTimeOffset? value) . Gets the month from DateTimeOffset . int? Year(DateTimeOffset? value) . Gets the year from DateTimeOffset . int? Day(DateTimeOffset? value) . Gets the day from DateTimeOffset . int? Hour(DateTimeOffset? value) . Gets the hour from DateTimeOffset . int? Minute(DateTimeOffset? value) . Gets the minute from DateTimeOffset . int? Second(DateTimeOffset? value) . Gets the second from DateTimeOffset . int? Milliseconds(DateTimeOffset? value) . Gets the millisecond from DateTimeOffset . int? DayOfWeek(DateTimeOffset? value) . Gets the day of week from DateTimeOffset . TimeSpan? ExtractTimeSpan(DateTimeOffset? dateTimeOffset) . Extracts time from DateTimeOffset . DateTime? ToDateTimeOffset(string value) . Converts given value to DateTimeOffset . DateTimeOffset? ToDateTimeOffset(string value, string culture) . Converts given value to DateTimeOffset . IEnumerable&lt;T&gt;? Skip&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? skipCount) . Skips elements from the beginning of the sequence. IEnumerable&lt;T&gt;? Take&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? takeCount) . Takes elements from the beginning of the sequence. IEnumerable&lt;T&gt;? SkipAndTake&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? skipCount, int? takeCount) . Skip and takes elements from the beginning of the sequence. T[]? EnumerableToArray&lt;T&gt;(IEnumerable&lt;T&gt;? values) . Turn array arguments of T into a single array. T[]? MergeArrays&lt;T&gt;(T[][]? values) . Turn array arguments of T into a single array. IEnumerable&lt;T&gt;? LongestCommonSequence&lt;T&gt;(IEnumerable&lt;T&gt;? source, IEnumerable&lt;T&gt;? pattern) . Computes longest common sequence of two given sequences . T? GetElementAtOrDefault&lt;T&gt;(IEnumerable&lt;T&gt;? enumerable, int? index) . Gets the element at the specified index in a sequence . int? Length&lt;T&gt;(IEnumerable&lt;T&gt;? enumerable) . Gets the length of the sequence . int? Length&lt;T&gt;(T[]? array) . Gets the length of the array . T? Choose&lt;T&gt;(int? index, T[] values) . Gets the value of an array at the specified index . T If&lt;T&gt;(bool expressionResult, T a, T b) . Chose a or b value based on the expression result . bool? Match(string? regex, string? content) . Determine whether content matches the specified pattern . byte? Coalesce(byte?[] array) . Gets the first non-null value in a list . sbyte? Coalesce(sbyte?[] array) . Gets the first non-null value in a list . short? Coalesce(short?[] array) . Gets the first non-null value in a list . ushort? Coalesce(ushort?[] array) . Gets the first non-null value in a list . int? Coalesce(int?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(uint?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(long?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(ulong?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(Decimal?[] array) . Gets the first non-null value in a list . T? Coalesce&lt;T&gt;(T[] array) . Gets the first non-null value in a list . IEnumerable&lt;T&gt;? Distinct&lt;T&gt;(IEnumerable&lt;T&gt;? values) . Returns distinct elements from a collection. string? Md5(string? content) . Gets the md5 hash of the given string. string? Md5(byte?[]? content) . Gets the md5 hash of the given bytes array. string? Sha1(string? content) . Gets the sha256 hash of the given string. string? Sha1(byte?[]? content) . Gets the sha256 hash of the given bytes array. string? Sha256(string? content) . Gets the sha256 hash of the given string. string? Sha256(byte?[]? content) . Gets the sha256 hash of the given bytes array. string? Sha512(string? content) . Gets the sha256 hash of the given string. string? Sha512(byte?[]? content) . Gets the sha256 hash of the bytes array. string? ToJson&lt;T&gt;(T? obj) . Converts object to json. string[] ExtractFromJsonToArray(string? json, string? path) . Extracts values from json by path. string? ExtractFromJson(string? json, string? path) . Extracts values from json by path and joins them with comma. Decimal? Abs(Decimal? value) . Gets the absolute value . long? Abs(long? value) . Gets the absolute value . int? Abs(int? value) . Gets the absolute value . Decimal? Ceil(Decimal? value) . Gets the ceiling value . Decimal? Floor(Decimal? value) . Gets the floor value . Decimal? Sign(Decimal? value) . Determine whether value is greater, equal or less that zero . long? Sign(long? value) . Determine whether value is greater, equal or less that zero . Decimal? Round(Decimal? value, int precision) . Rounds the value within given precision . Decimal? PercentOf(Decimal? value, Decimal? max) . Gets the percentage of the value . int Rand() . Gets the random integer value . int? Rand(int? min, int? max) . Gets the random integer value . double? Pow(Decimal? x, Decimal? y) . Computes the pow between two values . double? Pow(double? x, double? y) . Computes the pow between two values . double? Sqrt(Decimal? x) . Computes the sqrt of a given value . double? Sqrt(double? x) . Computes the sqrt of a given value . double? Sqrt(long? x) . Computes the sqrt of a given value . double? PercentRank&lt;T&gt;(IEnumerable&lt;T&gt;? window, T? value) . Computes the percent rank of a given window . double? Log(Decimal? base, Decimal? value) . Calculates the logarithm of a value with a specified base. Decimal? Sin(Decimal? value) . Calculates sine of a value. double? Sin(double? value) . Calculates sine of a value. float? Sin(float? value) . Calculates sine of a value. Decimal? Cos(Decimal? value) . Calculates cosine of a value. double? Cos(double? value) . Calculates cosine of a value. float? Cos(float? value) . Calculates cosine of a value. Decimal Max(string name) . Gets the max value of a given group. Decimal Max(string name, int parent) . Gets the max value of a given group. Decimal Min(string name) . Gets the min value of a given group. Decimal Min(string name, int parent) . Gets the min value of a given group. Decimal StDev(string name, int parent) . Gets the StDev value of a given group. string NewId() . Gets the new identifier . string? Trim(string? value) . Removes leading and trailing whitespace from a string. string? TrimStart(string? value) . Removes leading whitespace from a string. string? TrimEnd(string? value) . Removes trailing whitespace from a string. string? Substring(string? value, int? index, int? length) . Gets the substring from the string. string? Substring(string value, int? length) . Gets the substring from the string . string? Concat(string[]? strings) . Concatenates the specified values . string? Concat(char?[]? characters) . Concatenates the specified characters . string? Concat(string? firstString, char?[]? chars) . Concatenates specified string fir characters . string? Concat(char? firstChar, string[]? strings) . Concatenate specific character with strings . string? Concat(object[]? objects) . Concatenates the specified strings . string? Concat&lt;T&gt;(T[]? objects) . Concatenates the specified strings . bool? Contains(string? content, string? what) . Determine whether the string contains the specified value . int? IndexOf(string? value, string? text) . Position of the first occurrence of the specified value . string? Soundex(string? value) . Computes soundex for the specified value . bool HasFuzzyMatchedWord(string text, string word, string separator) . Matches the specified text by splitting it with separator and applying fuzzy comparison . bool HasWordThatHasSmallerLevenshteinDistanceThan(string text, string word, int distance, string separator) . Matches the specified text by splitting it with separator and applying fuzzy comparison with a given distance . bool HasWordThatSoundLike(string text, string word, string separator) . Matches whether the specified word is present after being fuzzified within the specified text . bool HasTextThatSoundLikeSentence(string text, string sentence, string separator) . Matches whether the specified text is present in sentence after being fuzified . string? ToUpper(string value) . Makes the string uppercase . string? ToUpper(string value, string culture) . Makes the string uppercase within specified culture . string? ToUpperInvariant(string value) . Makes the string uppercase . string? ToLower(string value) . Makes the string lowercase . string? ToLower(string value, string culture) . Makes the string lowercase within specified culture . string? ToLowerInvariant(string value) . Makes the string lowercase . string? PadLeft(string? value, string? character, int? totalWidth) . Returns a new string that right-aligns the characters in this instance by padding them on the left with a specified Unicode character, for a specified total lengt . string? PadRight(string? value, string? character, int? totalWidth) . Returns a new string that left-aligns the characters in this instance by padding them on the right with a specified Unicode character, for a specified total length . string? Head(string? value, int? length) . Gets the first N characters of the string . string? Tail(string? value, int? length) . Gets the last N characters of the string . int? LevenshteinDistance(string? firstValue, string? secondValue) . Computes the Levenshtein distance between two strings . char? GetCharacterOf(string value, int index) . Gets the character at specified index . string? Reverse(string? value) . Reverses the string . string[] Split(string value, string[] separators) . Splits the string into an array of substrings based on the specified separators . char[] ToCharArray(string value) . Splits the string into an array of characters . string? LongestCommonSubstring(string source, string pattern) . Computes the longest common subsequence between two source and pattern . string Replicate(string value, int integer) . Clones the value n times . string? Translate(string? value, string? characters, string? translations) . Returns the string from the first argument after the characters specified in the second argument are translated into the characters specified in the third argument. string? Replace(string? text, string lookFor, string? changeTo) . Replaces the first occurrence of a specified string in this instance with another specified string . string? ToTitleCase(string? value) . Capitalizes the first letter of the string . string? GetNthWord(string? text, int? wordIndex, string? separator) . Gets the nth word of the string . string? GetFirstWord(string text, string separator) . Gets the first word of the string . string? GetSecondWord(string text, string separator) . Gets the second word of the string . string? GetThirdWord(string text, string separator) . Gets the third word of the string . string? GetLastWord(string? text, string? separator) . Gets last word of the string . bool? IsNullOrEmpty(string? value) . Determines whether the string is null or empty . bool? IsNullOrWhiteSpace(string? value) . Determines whether the string is null or whitespace . string? UrlEncode(string? value) . Encodes the value . string? UrlDecode(string? value) . Decodes the value . string? UriEncode(string? value) . Encodes the value . string? UriDecode(string? value) . Decodes the value . bool? StartsWith(string? value, string? prefix) . Determines whether the string starts with the specified prefix . bool? StartsWith(string? value, string? prefix, string comparison) . Determines whether the string starts with the specified prefix . bool? EndsWith(string? value, string? suffix) . Determines whether the string ends with the specified suffix . bool? EndsWith(string? value, string? suffix, string comparison) . Determines whether the string ends with the specified suffix . string? RegexReplace(string? value, string? pattern, string? replacement) . Replace the specified value part that matches the pattern with the replacement . string[]? SplitByLinuxNewLines(string? input) . Split string by Linux-style newlines (\\n) . string[]? SplitByWindowsNewLines(string? input) . Split string by Windows-style newlines (\\r\\n) . string[]? SplitByNewLines(string? input) . Smart split that handles both Windows (\\r\\n) and Linux (\\n) newlines . Decimal Sum(string name) . Gets the sum value of a given group. Decimal Sum(string name, int parent) . Gets the sum value of a given group. Decimal SumIncome(string name) . Gets the sum value of a given group. Decimal SumIncome(string name, int parent) . Gets the sum value of a given group. Decimal SumOutcome(string name) . Gets the outcome value of a given group. Decimal SumOutcome(string name, int parent) . Gets the outcome value of a given group. TimeSpan? SumTimeSpan(string name) . Gets the sum value of a given group. TimeSpan? SumTimeSpan(string name, int parent) . Gets the sum value of a given group. TimeSpan? MinTimeSpan(string name) . Gets the min value of a given group. TimeSpan? MinTimeSpan(string name, int parent) . Gets the min value of a given group. TimeSpan? MaxTimeSpan(string name) . Gets the max value of a given group. TimeSpan? MaxTimeSpan(string name, int parent) . Gets the min value of a given group. char? ToChar(string? value) . Converts given value to character . char? ToChar(int? value) . Converts given value to character . char? ToChar(short? value) . Converts given value to character . char? ToChar(byte? value) . Converts given value to character . char? ToChar(object? value) . Converts given value to character . DateTime? ToDateTime(string value) . Converts given value to DateTime . DateTime? ToDateTime(string value, string culture) . Converts given value to DateTime . Decimal? ToDecimal(string? value) . Converts given value to decimal . Decimal? ToDecimal(string value, string culture) . Converts given value to decimal withing given culture . Decimal? ToDecimal(byte? value) . Converts given value to Decimal . Decimal? ToDecimal(sbyte? value) . Converts given value to Decimal . Decimal? ToDecimal(short? value) . Converts given value to Decimal . Decimal? ToDecimal(ushort? value) . Converts given value to Decimal . Decimal? ToDecimal(long? value) . Converts given value to Decimal . Decimal? ToDecimal(ulong? value) . Converts given value to Decimal . Decimal? ToDecimal(float? value) . Converts given value to Decimal . Decimal? ToDecimal(double? value) . Converts given value to Decimal . Decimal? ToDecimal(object? value) . Converts given value to Decimal . double? ToDouble(object? value) . Converts given value to double . double? ToDouble(string? value) . Converts given value to double . double? ToDouble(byte? value) . Converts given value to double . double? ToDouble(sbyte? value) . Converts given value to double . double? ToDouble(short? value) . Converts given value to double . double? ToDouble(ushort? value) . Converts given value to double . double? ToDouble(int? value) . Converts given value to double . double? ToDouble(uint? value) . Converts given value to double . double? ToDouble(long? value) . Converts given value to double . double? ToDouble(ulong? value) . Converts given value to double . double? ToDouble(float? value) . Converts given value to double . double? ToDouble(double? value) . Converts given value to double . double? ToDouble(Decimal? value) . Converts given value to double . float? ToFloat(string? value) . Converts given value to float . float? ToFloat(byte? value) . Converts given value to float . float? ToFloat(sbyte? value) . Converts given value to float . float? ToFloat(short? value) . Converts given value to float . float? ToFloat(ushort? value) . Converts given value to float . float? ToFloat(int? value) . Converts given value to float . float? ToFloat(uint? value) . Converts given value to float . float? ToFloat(long? value) . Converts given value to float . float? ToFloat(ulong? value) . Converts given value to float . float? ToFloat(float? value) . Converts given value to float . float? ToFloat(Decimal? value) . Converts given value to float . int? ToInt32(string value) . Converts given value to int . int? ToInt32(byte? value) . Converts given value to int . int? ToInt32(sbyte? value) . Converts given value to int . int? ToInt32(short? value) . Converts given value to int . int? ToInt32(ushort? value) . Converts given value to int . int? ToInt32(int? value) . Converts given value to int . int? ToInt32(uint? value) . Converts given value to int . int? ToInt32(long? value) . Converts given value to int . int? ToInt32(ulong? value) . Converts given value to int . int? ToInt32(float? value) . Converts given value to int . int? ToInt32(double? value) . Converts given value to int . int? ToInt32(Decimal? value) . Converts given value to int . int? ToInt32(object? value) . Converts given value to int . long? ToInt64(string value) . Converts given value to Int64 . long? ToInt64(byte? value) . Converts given value to long . long? ToInt64(sbyte? value) . Converts given value to long . long? ToInt64(short? value) . Converts given value to long . long? ToInt64(ushort? value) . Converts given value to long . long? ToInt64(int? value) . Converts given value to long . long? ToInt64(uint? value) . Converts given value to long . long? ToInt64(long? value) . Converts given value to long . long? ToInt64(ulong? value) . Converts given value to long . long? ToInt64(float? value) . Converts given value to long . long? ToInt64(double? value) . Converts given value to long . long? ToInt64(Decimal? value) . Converts given value to long . long? ToInt64(object? value) . Converts given value to long . string? ToString(char? value) . Converts given value to string . string? ToString(DateTimeOffset? value) . Converts given value to string . string? ToString(DateTimeOffset? value, string format) . Converts given value to string . string? ToString(byte? value) . Converts given value to string . string? ToString(byte? value, string format) . Converts given value to string . string? ToString(sbyte? value) . Converts given value to string . string? ToString(sbyte? value, string format) . Converts given value to string . string? ToString(int? value) . Converts given value to string . string? ToString(int? value, string format) . Converts given value to string . string? ToString(uint? value) . Converts given value to string . string? ToString(uint? value, string format) . Converts given value to string . string? ToString(long? value) . Converts given value to string . string? ToString(long? value, string format) . Converts given value to string . string? ToString(ulong? value) . Converts given value to string . string? ToString(ulong? value, string format) . Converts given value to string . string? ToString(float? value) . Converts given value to string . string? ToString(float? value, string format) . Converts given value to string . string? ToString(double? value) . Converts given value to string . string? ToString(double? value, string format) . Converts given value to string . string? ToString(Decimal? value) . Converts given value to string . string? ToString(Decimal? value, string format) . Converts given value to string . string? ToString(bool? value) . Converts given value to string . string? ToString(object? value) . Converts given value to string . string? ToString&lt;T&gt;(T? value) . Converts given value to string . string ToString(string[] value) . Converts given value to string . string ToString&lt;T&gt;(T[] value) . Converts given value to string . TimeSpan? ToTimeSpan(string value) . Converts given value to TimeSpan . TimeSpan? ToTimeSpan(string value, string culture) . Converts given value to TimeSpan . IEnumerable&lt;T&gt; Window&lt;T&gt;(string name) . Gets the window . ",
    "url": "/data-sources/Docker/macos-x64.html#base-methods",
    
    "relUrl": "/data-sources/Docker/macos-x64.html#base-methods"
  },"260": {
    "doc": "MacOs X64",
    "title": "MacOs X64",
    "content": " ",
    "url": "/data-sources/Docker/macos-x64.html",
    
    "relUrl": "/data-sources/Docker/macos-x64.html"
  },"261": {
    "doc": "MacOs X64",
    "title": "Musoq.DataSources.Ollama",
    "content": "Provides interface to work with Ollama API. ",
    "url": "/data-sources/Ollama/macos-x64.html#musoqdatasourcesollama",
    
    "relUrl": "/data-sources/Ollama/macos-x64.html#musoqdatasourcesollama"
  },"262": {
    "doc": "MacOs X64",
    "title": "Tables",
    "content": "Table is a collection of rows and columns that the plugin exposes. Below are the tables that are exposed by this data source. ollama.llm(string model) . Gives the access to Ollama api . Environment variables . In order to use the plugin, the user must set any required environment variables as specified in the environments element. Failure to do so may result in the plugin not functioning correctly. | Name | Is required | Description | . | OLLAMA_BASE_URL | false | Ollama base url, default http://localhost:11434 | . Columns . This table has a dynamic structure, which means that its columns and other details cannot be determined until runtime. As a result, it is not possible to include a complete description of this table in the documentation. Instead, the actual columns and other details of this table will be determined at runtime. ollama.llm(string model, float temperature) . Gives the access to Ollama api . Environment variables . In order to use the plugin, the user must set any required environment variables as specified in the environments element. Failure to do so may result in the plugin not functioning correctly. | Name | Is required | Description | . | OLLAMA_BASE_URL | false | Ollama base url, default http://localhost:11434 | . Columns . This table has a dynamic structure, which means that its columns and other details cannot be determined until runtime. As a result, it is not possible to include a complete description of this table in the documentation. Instead, the actual columns and other details of this table will be determined at runtime. ",
    "url": "/data-sources/Ollama/macos-x64.html#tables",
    
    "relUrl": "/data-sources/Ollama/macos-x64.html#tables"
  },"263": {
    "doc": "MacOs X64",
    "title": "Methods",
    "content": "Methods are functions that can be called on the data source specific column. Below are the methods that are exposed by this data source. bool IsContentAbout(string content, string question) . Determines whether the provided content is related to the given question. Returns true if the content is related, otherwise returns false. string Sentiment(string content, bool throwOnUnknown) . Performs sentiment analysis on the provided content and returns the sentiment as one of the following strings: “POSITIVE”, “NEGATIVE”, “NEUTRAL”, or “UNKNOWN”. string SummarizeContent(string content) . Summarizes the provided content using the OpenAI API and returns the summarized text. string TranslateContent(string content, string from, string to) . Translates the provided content from the source language to the destination language using the OpenAI API. string[] Entities(string content, bool throwOnException) . Extracts entities from the provided content using the OpenAI API and returns an array of entity strings. string DescribeImage(string imageBase64) . Describes the provided image using the Ollama API and returns the description. string AskImage(string question, string imageBase64) . Ask the provided image using the Ollama API and returns the response. bool IsQuestionApplicableToImage(string question, string imageBase64) . Ask the provided image using the Ollama API and returns the response. string LlmPerform&lt;TColumnType&gt;(string whatToDo, TColumnType column) . Ask the provided image using the Ollama API and returns the response. int CountTokens(string content) . Counts the number of tokens in the provided content using the specified model. int CountTokens(string content) . Counts the number of tokens in the provided content using the specified model. ",
    "url": "/data-sources/Ollama/macos-x64.html#methods",
    
    "relUrl": "/data-sources/Ollama/macos-x64.html#methods"
  },"264": {
    "doc": "MacOs X64",
    "title": "Base Methods",
    "content": "Base methods are methods that can be called on the data source specific column. Those methods are automatically inherited and enriches the data source specific methods. Below are those base methods that are exposed by this data source. int RowNumber() . Gets the row number of the current row. string? GetTypeName(object? obj) . Gets the typename of passed object. string AggregateValues(string name) . Aggregates values into a single value. string AggregateValues(string name, int parent) . Aggregates values into a single value. Decimal Avg(string name) . Gets the aggregated average value from the given group name . Decimal Avg(string name, int parent) . Gets the aggregated average value from the given group name . byte? ShiftLeft(byte? value, int shift) . Shifts the value to the left by the specified number of bits. short? ShiftLeft(short? value, int shift) . Shifts the value to the left by the specified number of bits. int? ShiftLeft(int? value, int shift) . Shifts the value to the left by the specified number of bits. long? ShiftLeft(long? value, int shift) . Shifts the value to the left by the specified number of bits. sbyte? ShiftLeft(sbyte? value, int shift) . Shifts the value to the left by the specified number of bits. ushort? ShiftLeft(ushort? value, int shift) . Shifts the value to the left by the specified number of bits. uint? ShiftLeft(uint? value, int shift) . Shifts the value to the left by the specified number of bits. ulong? ShiftLeft(ulong? value, int shift) . Shifts the value to the left by the specified number of bits. byte? ShiftRight(byte? value, int shift) . Shifts the value to the right by the specified number of bits. short? ShiftRight(short? value, int shift) . Shifts the value to the right by the specified number of bits. int? ShiftRight(int? value, int shift) . Shifts the value to the right by the specified number of bits. long? ShiftRight(long? value, int shift) . Shifts the value to the right by the specified number of bits. sbyte? ShiftRight(sbyte? value, int shift) . Shifts the value to the right by the specified number of bits. ushort? ShiftRight(ushort? value, int shift) . Shifts the value to the right by the specified number of bits. uint? ShiftRight(uint? value, int shift) . Shifts the value to the right by the specified number of bits. ulong? ShiftRight(ulong? value, int shift) . Shifts the value to the right by the specified number of bits. byte? Not(byte? value) . Performs bitwise NOT operation on a given value. short? Not(short? value) . Performs bitwise NOT operation on a given value. int? Not(int? value) . Performs bitwise NOT operation on a given value. long? Not(long? value) . Performs bitwise NOT operation on a given value. sbyte? Not(sbyte? value) . Performs bitwise NOT operation on a given value. ushort? Not(ushort? value) . Performs bitwise NOT operation on a given value. uint? Not(uint? value) . Performs bitwise NOT operation on a given value. ulong? Not(ulong? value) . Performs bitwise NOT operation on a given value. byte? And(byte? left, byte? right) . Performs bitwise AND operation on two given values. int? And(byte? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(byte? left, short? right) . Performs bitwise AND operation on two given values. int? And(byte? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(byte? left, int? right) . Performs bitwise AND operation on two given values. uint? And(byte? left, uint? right) . Performs bitwise AND operation on two given values. long? And(byte? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(byte? left, ulong? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, byte? right) . Performs bitwise AND operation on two given values. sbyte? And(sbyte? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, short? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, int? right) . Performs bitwise AND operation on two given values. uint? And(sbyte? left, uint? right) . Performs bitwise AND operation on two given values. long? And(sbyte? left, long? right) . Performs bitwise AND operation on two given values. int? And(short? left, byte? right) . Performs bitwise AND operation on two given values. int? And(short? left, sbyte? right) . Performs bitwise AND operation on two given values. short? And(short? left, short? right) . Performs bitwise AND operation on two given values. int? And(short? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(short? left, int? right) . Performs bitwise AND operation on two given values. uint? And(short? left, uint? right) . Performs bitwise AND operation on two given values. long? And(short? left, long? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, byte? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, short? right) . Performs bitwise AND operation on two given values. ushort? And(ushort? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, int? right) . Performs bitwise AND operation on two given values. uint? And(ushort? left, uint? right) . Performs bitwise AND operation on two given values. long? And(ushort? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(ushort? left, ulong? right) . Performs bitwise AND operation on two given values. int? And(int? left, byte? right) . Performs bitwise AND operation on two given values. int? And(int? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(int? left, short? right) . Performs bitwise AND operation on two given values. int? And(int? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(int? left, int? right) . Performs bitwise AND operation on two given values. uint? And(int? left, uint? right) . Performs bitwise AND operation on two given values. long? And(int? left, long? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, uint? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, byte? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, sbyte? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, short? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, ushort? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, int? right) . Performs bitwise AND operation on two given values. ulong? And(uint? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(uint? left, ulong? right) . Performs bitwise AND operation on two given values. long? And(long? left, long? right) . Performs bitwise AND operation on two given values. long? And(long? left, byte? right) . Performs bitwise AND operation on two given values. long? And(long? left, sbyte? right) . Performs bitwise AND operation on two given values. long? And(long? left, short? right) . Performs bitwise AND operation on two given values. long? And(long? left, ushort? right) . Performs bitwise AND operation on two given values. long? And(long? left, int? right) . Performs bitwise AND operation on two given values. long? And(long? left, uint? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, byte? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, ushort? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, uint? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, ulong? right) . Performs bitwise AND operation on two given values. byte? Or(byte? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, short? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(byte? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(byte? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(byte? left, ulong? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, byte? right) . Performs bitwise OR operation on two given values. sbyte? Or(sbyte? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, short? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(sbyte? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(sbyte? left, long? right) . Performs bitwise OR operation on two given values. int? Or(short? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(short? left, sbyte? right) . Performs bitwise OR operation on two given values. short? Or(short? left, short? right) . Performs bitwise OR operation on two given values. int? Or(short? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(short? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(short? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(short? left, long? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, short? right) . Performs bitwise OR operation on two given values. ushort? Or(ushort? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(ushort? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(ushort? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(ushort? left, ulong? right) . Performs bitwise OR operation on two given values. int? Or(int? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(int? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(int? left, short? right) . Performs bitwise OR operation on two given values. int? Or(int? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(int? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(int? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(int? left, long? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, uint? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, byte? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, sbyte? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, short? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, ushort? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, int? right) . Performs bitwise OR operation on two given values. ulong? Or(uint? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(uint? left, ulong? right) . Performs bitwise OR operation on two given values. long? Or(long? left, long? right) . Performs bitwise OR operation on two given values. long? Or(long? left, byte? right) . Performs bitwise OR operation on two given values. long? Or(long? left, sbyte? right) . Performs bitwise OR operation on two given values. long? Or(long? left, short? right) . Performs bitwise OR operation on two given values. long? Or(long? left, ushort? right) . Performs bitwise OR operation on two given values. long? Or(long? left, int? right) . Performs bitwise OR operation on two given values. long? Or(long? left, uint? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, byte? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, ushort? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, uint? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, ulong? right) . Performs bitwise OR operation on two given values. byte? Xor(byte? left, byte? right) . Performs bitwise OR operation on two given values. int? Xor(byte? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(byte? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(byte? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(byte? left, ulong? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, byte? right) . Performs bitwise Xor operation on two given values. sbyte? Xor(sbyte? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(sbyte? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(sbyte? left, long? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, sbyte? right) . Performs bitwise Xor operation on two given values. short? Xor(short? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, ushort? right) . Performs bitwise XOR operation on two given values. int? Xor(short? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(short? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(short? left, long? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, short? right) . Performs bitwise Xor operation on two given values. ushort? Xor(ushort? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(ushort? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(ushort? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ushort? left, ulong? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(int? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(int? left, long? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, uint? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, byte? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, sbyte? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, short? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, ushort? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, int? right) . Performs bitwise Xor operation on two given values. ulong? Xor(uint? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(uint? left, ulong? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, long? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, byte? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, sbyte? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, short? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, ushort? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, int? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, uint? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, ulong? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, byte? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, ushort? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, uint? right) . Performs bitwise Xor operation on two given values. byte[] GetBytes(string? content) . Gets the bytes from the given string. byte[] GetBytes(string? content, int length, int offset) . Gets the bytes from the given string within given offset and length. byte?[]? GetBytes(char? character) . Gets the bytes from the given character. byte?[]? GetBytes(bool? bit) . Gets the bytes from the given boolean. byte?[]? GetBytes(long? value) . Gets the bytes from the given long. byte?[]? GetBytes(int? value) . Gets the bytes from the given int. byte?[]? GetBytes(short? value) . Gets the bytes from the given short. byte?[]? GetBytes(ulong? value) . Gets the bytes from the given ulong. byte?[]? GetBytes(ushort? value) . Gets the bytes from the given ushort. byte?[]? GetBytes(uint? value) . Gets the bytes from the given uint. byte?[]? GetBytes(Decimal? value) . Gets the bytes from the given decimal. byte?[]? GetBytes(double? value) . Gets the bytes from the given double. byte?[]? GetBytes(float? value) . Gets the bytes from the given float. string? ToBin(byte?[]? bytes, string delimiter) . Converts given bytes to binary with defined delimiter . string ToBin&lt;T&gt;(T value) . Converts given value to binary . string ToOcta&lt;T&gt;(T value) . Converts given value to octal . string ToDec&lt;T&gt;(T value) . Converts given value to decimal . string ToBase64(byte[] value) . Converts given value to string . string ToBase64(byte[] value, int offset, int length) . Converts given array of bytes to string . byte[] FromBase64(string value) . Converts given string to bytes array . bool FromBytesToBool(byte[] value) . Converts bytes to boolean value. short FromBytesToInt16(byte[] value) . Converts bytes to a 16-bit signed integer. ushort FromBytesToUInt16(byte[] value) . Converts bytes to a 16-bit unsigned integer. int FromBytesToInt32(byte[] value) . Converts bytes to a 32-bit signed integer. uint FromBytesToUInt32(byte[] value) . Converts bytes to a 32-bit unsigned integer. long FromBytesToInt64(byte[] value) . Converts bytes to a 64-bit signed integer. ulong FromBytesToUInt64(byte[] value) . Converts bytes to a 64-bit unsigned integer. float FromBytesToFloat(byte[] value) . Converts bytes to a float value. double FromBytesToDouble(byte[] value) . Converts bytes to a float value. string FromBytesToString(byte[] value) . Converts bytes to a string. byte[] ToBytes(bool value) . Converts boolean value to bytes. byte[] ToBytes(short value) . Converts short value to bytes. byte[] ToBytes(ushort value) . Converts ushort value to bytes. byte[] ToBytes(int value) . Converts int value to bytes. byte[] ToBytes(uint value) . Converts uint value to bytes. byte[] ToBytes(long value) . Converts long value to bytes. byte[] ToBytes(ulong value) . Converts long value to bytes. string? ToHex(byte?[]? bytes, string delimiter) . Converts given bytes to hex with defined delimiter . string? ToHex&lt;T&gt;(T value) . Converts given value to binary . int Count(string name) . Gets the count value of a given group. int Count(string name, int parent) . Gets the count value of a given group. int ExtractFromDate(string? date, string partOfDate) . Extracts part of the date from the date . int ExtractFromDate(string date, string culture, string partOfDate) . Extracts part of the date from the date based on given culture . DateTimeOffset? GetDate() . Gets the current datetime . DateTimeOffset? UtcGetDate() . Gets the current datetime in UTC . int? Month(DateTimeOffset? value) . Gets the month from DateTimeOffset . int? Year(DateTimeOffset? value) . Gets the year from DateTimeOffset . int? Day(DateTimeOffset? value) . Gets the day from DateTimeOffset . int? Hour(DateTimeOffset? value) . Gets the hour from DateTimeOffset . int? Minute(DateTimeOffset? value) . Gets the minute from DateTimeOffset . int? Second(DateTimeOffset? value) . Gets the second from DateTimeOffset . int? Milliseconds(DateTimeOffset? value) . Gets the millisecond from DateTimeOffset . int? DayOfWeek(DateTimeOffset? value) . Gets the day of week from DateTimeOffset . TimeSpan? ExtractTimeSpan(DateTimeOffset? dateTimeOffset) . Extracts time from DateTimeOffset . DateTime? ToDateTimeOffset(string value) . Converts given value to DateTimeOffset . DateTimeOffset? ToDateTimeOffset(string value, string culture) . Converts given value to DateTimeOffset . IEnumerable&lt;T&gt;? Skip&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? skipCount) . Skips elements from the beginning of the sequence. IEnumerable&lt;T&gt;? Take&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? takeCount) . Takes elements from the beginning of the sequence. IEnumerable&lt;T&gt;? SkipAndTake&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? skipCount, int? takeCount) . Skip and takes elements from the beginning of the sequence. T[]? EnumerableToArray&lt;T&gt;(IEnumerable&lt;T&gt;? values) . Turn array arguments of T into a single array. T[]? MergeArrays&lt;T&gt;(T[][]? values) . Turn array arguments of T into a single array. IEnumerable&lt;T&gt;? LongestCommonSequence&lt;T&gt;(IEnumerable&lt;T&gt;? source, IEnumerable&lt;T&gt;? pattern) . Computes longest common sequence of two given sequences . T? GetElementAtOrDefault&lt;T&gt;(IEnumerable&lt;T&gt;? enumerable, int? index) . Gets the element at the specified index in a sequence . int? Length&lt;T&gt;(IEnumerable&lt;T&gt;? enumerable) . Gets the length of the sequence . int? Length&lt;T&gt;(T[]? array) . Gets the length of the array . T? Choose&lt;T&gt;(int? index, T[] values) . Gets the value of an array at the specified index . T If&lt;T&gt;(bool expressionResult, T a, T b) . Chose a or b value based on the expression result . bool? Match(string? regex, string? content) . Determine whether content matches the specified pattern . byte? Coalesce(byte?[] array) . Gets the first non-null value in a list . sbyte? Coalesce(sbyte?[] array) . Gets the first non-null value in a list . short? Coalesce(short?[] array) . Gets the first non-null value in a list . ushort? Coalesce(ushort?[] array) . Gets the first non-null value in a list . int? Coalesce(int?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(uint?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(long?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(ulong?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(Decimal?[] array) . Gets the first non-null value in a list . T? Coalesce&lt;T&gt;(T[] array) . Gets the first non-null value in a list . IEnumerable&lt;T&gt;? Distinct&lt;T&gt;(IEnumerable&lt;T&gt;? values) . Returns distinct elements from a collection. string? Md5(string? content) . Gets the md5 hash of the given string. string? Md5(byte?[]? content) . Gets the md5 hash of the given bytes array. string? Sha1(string? content) . Gets the sha256 hash of the given string. string? Sha1(byte?[]? content) . Gets the sha256 hash of the given bytes array. string? Sha256(string? content) . Gets the sha256 hash of the given string. string? Sha256(byte?[]? content) . Gets the sha256 hash of the given bytes array. string? Sha512(string? content) . Gets the sha256 hash of the given string. string? Sha512(byte?[]? content) . Gets the sha256 hash of the bytes array. string? ToJson&lt;T&gt;(T? obj) . Converts object to json. string[] ExtractFromJsonToArray(string? json, string? path) . Extracts values from json by path. string? ExtractFromJson(string? json, string? path) . Extracts values from json by path and joins them with comma. Decimal? Abs(Decimal? value) . Gets the absolute value . long? Abs(long? value) . Gets the absolute value . int? Abs(int? value) . Gets the absolute value . Decimal? Ceil(Decimal? value) . Gets the ceiling value . Decimal? Floor(Decimal? value) . Gets the floor value . Decimal? Sign(Decimal? value) . Determine whether value is greater, equal or less that zero . long? Sign(long? value) . Determine whether value is greater, equal or less that zero . Decimal? Round(Decimal? value, int precision) . Rounds the value within given precision . Decimal? PercentOf(Decimal? value, Decimal? max) . Gets the percentage of the value . int Rand() . Gets the random integer value . int? Rand(int? min, int? max) . Gets the random integer value . double? Pow(Decimal? x, Decimal? y) . Computes the pow between two values . double? Pow(double? x, double? y) . Computes the pow between two values . double? Sqrt(Decimal? x) . Computes the sqrt of a given value . double? Sqrt(double? x) . Computes the sqrt of a given value . double? Sqrt(long? x) . Computes the sqrt of a given value . double? PercentRank&lt;T&gt;(IEnumerable&lt;T&gt;? window, T? value) . Computes the percent rank of a given window . double? Log(Decimal? base, Decimal? value) . Calculates the logarithm of a value with a specified base. Decimal? Sin(Decimal? value) . Calculates sine of a value. double? Sin(double? value) . Calculates sine of a value. float? Sin(float? value) . Calculates sine of a value. Decimal? Cos(Decimal? value) . Calculates cosine of a value. double? Cos(double? value) . Calculates cosine of a value. float? Cos(float? value) . Calculates cosine of a value. Decimal Max(string name) . Gets the max value of a given group. Decimal Max(string name, int parent) . Gets the max value of a given group. Decimal Min(string name) . Gets the min value of a given group. Decimal Min(string name, int parent) . Gets the min value of a given group. Decimal StDev(string name, int parent) . Gets the StDev value of a given group. string NewId() . Gets the new identifier . string? Trim(string? value) . Removes leading and trailing whitespace from a string. string? TrimStart(string? value) . Removes leading whitespace from a string. string? TrimEnd(string? value) . Removes trailing whitespace from a string. string? Substring(string? value, int? index, int? length) . Gets the substring from the string. string? Substring(string value, int? length) . Gets the substring from the string . string? Concat(string[]? strings) . Concatenates the specified values . string? Concat(char?[]? characters) . Concatenates the specified characters . string? Concat(string? firstString, char?[]? chars) . Concatenates specified string fir characters . string? Concat(char? firstChar, string[]? strings) . Concatenate specific character with strings . string? Concat(object[]? objects) . Concatenates the specified strings . string? Concat&lt;T&gt;(T[]? objects) . Concatenates the specified strings . bool? Contains(string? content, string? what) . Determine whether the string contains the specified value . int? IndexOf(string? value, string? text) . Position of the first occurrence of the specified value . string? Soundex(string? value) . Computes soundex for the specified value . bool HasFuzzyMatchedWord(string text, string word, string separator) . Matches the specified text by splitting it with separator and applying fuzzy comparison . bool HasWordThatHasSmallerLevenshteinDistanceThan(string text, string word, int distance, string separator) . Matches the specified text by splitting it with separator and applying fuzzy comparison with a given distance . bool HasWordThatSoundLike(string text, string word, string separator) . Matches whether the specified word is present after being fuzzified within the specified text . bool HasTextThatSoundLikeSentence(string text, string sentence, string separator) . Matches whether the specified text is present in sentence after being fuzified . string? ToUpper(string value) . Makes the string uppercase . string? ToUpper(string value, string culture) . Makes the string uppercase within specified culture . string? ToUpperInvariant(string value) . Makes the string uppercase . string? ToLower(string value) . Makes the string lowercase . string? ToLower(string value, string culture) . Makes the string lowercase within specified culture . string? ToLowerInvariant(string value) . Makes the string lowercase . string? PadLeft(string? value, string? character, int? totalWidth) . Returns a new string that right-aligns the characters in this instance by padding them on the left with a specified Unicode character, for a specified total lengt . string? PadRight(string? value, string? character, int? totalWidth) . Returns a new string that left-aligns the characters in this instance by padding them on the right with a specified Unicode character, for a specified total length . string? Head(string? value, int? length) . Gets the first N characters of the string . string? Tail(string? value, int? length) . Gets the last N characters of the string . int? LevenshteinDistance(string? firstValue, string? secondValue) . Computes the Levenshtein distance between two strings . char? GetCharacterOf(string value, int index) . Gets the character at specified index . string? Reverse(string? value) . Reverses the string . string[] Split(string value, string[] separators) . Splits the string into an array of substrings based on the specified separators . char[] ToCharArray(string value) . Splits the string into an array of characters . string? LongestCommonSubstring(string source, string pattern) . Computes the longest common subsequence between two source and pattern . string Replicate(string value, int integer) . Clones the value n times . string? Translate(string? value, string? characters, string? translations) . Returns the string from the first argument after the characters specified in the second argument are translated into the characters specified in the third argument. string? Replace(string? text, string lookFor, string? changeTo) . Replaces the first occurrence of a specified string in this instance with another specified string . string? ToTitleCase(string? value) . Capitalizes the first letter of the string . string? GetNthWord(string? text, int? wordIndex, string? separator) . Gets the nth word of the string . string? GetFirstWord(string text, string separator) . Gets the first word of the string . string? GetSecondWord(string text, string separator) . Gets the second word of the string . string? GetThirdWord(string text, string separator) . Gets the third word of the string . string? GetLastWord(string? text, string? separator) . Gets last word of the string . bool? IsNullOrEmpty(string? value) . Determines whether the string is null or empty . bool? IsNullOrWhiteSpace(string? value) . Determines whether the string is null or whitespace . string? UrlEncode(string? value) . Encodes the value . string? UrlDecode(string? value) . Decodes the value . string? UriEncode(string? value) . Encodes the value . string? UriDecode(string? value) . Decodes the value . bool? StartsWith(string? value, string? prefix) . Determines whether the string starts with the specified prefix . bool? StartsWith(string? value, string? prefix, string comparison) . Determines whether the string starts with the specified prefix . bool? EndsWith(string? value, string? suffix) . Determines whether the string ends with the specified suffix . bool? EndsWith(string? value, string? suffix, string comparison) . Determines whether the string ends with the specified suffix . string? RegexReplace(string? value, string? pattern, string? replacement) . Replace the specified value part that matches the pattern with the replacement . string[]? SplitByLinuxNewLines(string? input) . Split string by Linux-style newlines (\\n) . string[]? SplitByWindowsNewLines(string? input) . Split string by Windows-style newlines (\\r\\n) . string[]? SplitByNewLines(string? input) . Smart split that handles both Windows (\\r\\n) and Linux (\\n) newlines . Decimal Sum(string name) . Gets the sum value of a given group. Decimal Sum(string name, int parent) . Gets the sum value of a given group. Decimal SumIncome(string name) . Gets the sum value of a given group. Decimal SumIncome(string name, int parent) . Gets the sum value of a given group. Decimal SumOutcome(string name) . Gets the outcome value of a given group. Decimal SumOutcome(string name, int parent) . Gets the outcome value of a given group. TimeSpan? SumTimeSpan(string name) . Gets the sum value of a given group. TimeSpan? SumTimeSpan(string name, int parent) . Gets the sum value of a given group. TimeSpan? MinTimeSpan(string name) . Gets the min value of a given group. TimeSpan? MinTimeSpan(string name, int parent) . Gets the min value of a given group. TimeSpan? MaxTimeSpan(string name) . Gets the max value of a given group. TimeSpan? MaxTimeSpan(string name, int parent) . Gets the min value of a given group. char? ToChar(string? value) . Converts given value to character . char? ToChar(int? value) . Converts given value to character . char? ToChar(short? value) . Converts given value to character . char? ToChar(byte? value) . Converts given value to character . char? ToChar(object? value) . Converts given value to character . DateTime? ToDateTime(string value) . Converts given value to DateTime . DateTime? ToDateTime(string value, string culture) . Converts given value to DateTime . Decimal? ToDecimal(string? value) . Converts given value to decimal . Decimal? ToDecimal(string value, string culture) . Converts given value to decimal withing given culture . Decimal? ToDecimal(byte? value) . Converts given value to Decimal . Decimal? ToDecimal(sbyte? value) . Converts given value to Decimal . Decimal? ToDecimal(short? value) . Converts given value to Decimal . Decimal? ToDecimal(ushort? value) . Converts given value to Decimal . Decimal? ToDecimal(long? value) . Converts given value to Decimal . Decimal? ToDecimal(ulong? value) . Converts given value to Decimal . Decimal? ToDecimal(float? value) . Converts given value to Decimal . Decimal? ToDecimal(double? value) . Converts given value to Decimal . Decimal? ToDecimal(object? value) . Converts given value to Decimal . double? ToDouble(object? value) . Converts given value to double . double? ToDouble(string? value) . Converts given value to double . double? ToDouble(byte? value) . Converts given value to double . double? ToDouble(sbyte? value) . Converts given value to double . double? ToDouble(short? value) . Converts given value to double . double? ToDouble(ushort? value) . Converts given value to double . double? ToDouble(int? value) . Converts given value to double . double? ToDouble(uint? value) . Converts given value to double . double? ToDouble(long? value) . Converts given value to double . double? ToDouble(ulong? value) . Converts given value to double . double? ToDouble(float? value) . Converts given value to double . double? ToDouble(double? value) . Converts given value to double . double? ToDouble(Decimal? value) . Converts given value to double . float? ToFloat(string? value) . Converts given value to float . float? ToFloat(byte? value) . Converts given value to float . float? ToFloat(sbyte? value) . Converts given value to float . float? ToFloat(short? value) . Converts given value to float . float? ToFloat(ushort? value) . Converts given value to float . float? ToFloat(int? value) . Converts given value to float . float? ToFloat(uint? value) . Converts given value to float . float? ToFloat(long? value) . Converts given value to float . float? ToFloat(ulong? value) . Converts given value to float . float? ToFloat(float? value) . Converts given value to float . float? ToFloat(Decimal? value) . Converts given value to float . int? ToInt32(string value) . Converts given value to int . int? ToInt32(byte? value) . Converts given value to int . int? ToInt32(sbyte? value) . Converts given value to int . int? ToInt32(short? value) . Converts given value to int . int? ToInt32(ushort? value) . Converts given value to int . int? ToInt32(int? value) . Converts given value to int . int? ToInt32(uint? value) . Converts given value to int . int? ToInt32(long? value) . Converts given value to int . int? ToInt32(ulong? value) . Converts given value to int . int? ToInt32(float? value) . Converts given value to int . int? ToInt32(double? value) . Converts given value to int . int? ToInt32(Decimal? value) . Converts given value to int . int? ToInt32(object? value) . Converts given value to int . long? ToInt64(string value) . Converts given value to Int64 . long? ToInt64(byte? value) . Converts given value to long . long? ToInt64(sbyte? value) . Converts given value to long . long? ToInt64(short? value) . Converts given value to long . long? ToInt64(ushort? value) . Converts given value to long . long? ToInt64(int? value) . Converts given value to long . long? ToInt64(uint? value) . Converts given value to long . long? ToInt64(long? value) . Converts given value to long . long? ToInt64(ulong? value) . Converts given value to long . long? ToInt64(float? value) . Converts given value to long . long? ToInt64(double? value) . Converts given value to long . long? ToInt64(Decimal? value) . Converts given value to long . long? ToInt64(object? value) . Converts given value to long . string? ToString(char? value) . Converts given value to string . string? ToString(DateTimeOffset? value) . Converts given value to string . string? ToString(DateTimeOffset? value, string format) . Converts given value to string . string? ToString(byte? value) . Converts given value to string . string? ToString(byte? value, string format) . Converts given value to string . string? ToString(sbyte? value) . Converts given value to string . string? ToString(sbyte? value, string format) . Converts given value to string . string? ToString(int? value) . Converts given value to string . string? ToString(int? value, string format) . Converts given value to string . string? ToString(uint? value) . Converts given value to string . string? ToString(uint? value, string format) . Converts given value to string . string? ToString(long? value) . Converts given value to string . string? ToString(long? value, string format) . Converts given value to string . string? ToString(ulong? value) . Converts given value to string . string? ToString(ulong? value, string format) . Converts given value to string . string? ToString(float? value) . Converts given value to string . string? ToString(float? value, string format) . Converts given value to string . string? ToString(double? value) . Converts given value to string . string? ToString(double? value, string format) . Converts given value to string . string? ToString(Decimal? value) . Converts given value to string . string? ToString(Decimal? value, string format) . Converts given value to string . string? ToString(bool? value) . Converts given value to string . string? ToString(object? value) . Converts given value to string . string? ToString&lt;T&gt;(T? value) . Converts given value to string . string ToString(string[] value) . Converts given value to string . string ToString&lt;T&gt;(T[] value) . Converts given value to string . TimeSpan? ToTimeSpan(string value) . Converts given value to TimeSpan . TimeSpan? ToTimeSpan(string value, string culture) . Converts given value to TimeSpan . IEnumerable&lt;T&gt; Window&lt;T&gt;(string name) . Gets the window . ",
    "url": "/data-sources/Ollama/macos-x64.html#base-methods",
    
    "relUrl": "/data-sources/Ollama/macos-x64.html#base-methods"
  },"265": {
    "doc": "MacOs X64",
    "title": "MacOs X64",
    "content": " ",
    "url": "/data-sources/Ollama/macos-x64.html",
    
    "relUrl": "/data-sources/Ollama/macos-x64.html"
  },"266": {
    "doc": "MacOs X64",
    "title": "Musoq.DataSources.Roslyn",
    "content": "Provides schema to work with Roslyn data source. ",
    "url": "/data-sources/roslyn/macos-x64.html#musoqdatasourcesroslyn",
    
    "relUrl": "/data-sources/roslyn/macos-x64.html#musoqdatasourcesroslyn"
  },"267": {
    "doc": "MacOs X64",
    "title": "Tables",
    "content": "Table is a collection of rows and columns that the plugin exposes. Below are the tables that are exposed by this data source. csharp.solution(string path) . Allows to perform queries on the given solution file. | Name | Type | Description | . | Id | string | Solution id | . | Projects | ProjectEntity[] | Projects within the solution | . ",
    "url": "/data-sources/roslyn/macos-x64.html#tables",
    
    "relUrl": "/data-sources/roslyn/macos-x64.html#tables"
  },"268": {
    "doc": "MacOs X64",
    "title": "Private Tables",
    "content": "Private tables are tables that are not exposed by the plugin, but are available for use in queries when using CROSS / OUTER APPLY operator. ProjectEntity . Represent project of solution . | Name | Type | Description | . | Id | string | Project id | . | FilePath | string | File path | . | OutputFilePath | string | Output file path | . | OutputRefFilePath | string | Output reference file path | . | DefaultNamespace | string | Default namespace | . | Language | string | Language | . | AssemblyName | string | Assembly name | . | Name | string | Name | . | IsSubmission | bool | Is submission | . | Version | string | Version | . | Documents | DocumentEntity[] | Documents | . DocumentEntity . Represent document of project . | Name | Type | Description | . | Name | string | Name | . | Text | string | Text | . | ClassCount | int | Class count | . | InterfaceCount | int | Interface count | . | EnumCount | int | Enum count | . | Classes | ClassEntity[] | Struct count | . | Interfaces | InterfaceEntity[] | Interfaces | . | Enums | EnumEntity[] | Enums | . ReferencedDocumentEntity . Represent referenced document of project . | Name | Type | Description | . | Name | string | Name | . | Text | string | Text | . | ClassCount | int | Class count | . | InterfaceCount | int | Interface count | . | EnumCount | int | Enum count | . | Classes | ClassEntity[] | Struct count | . | Interfaces | InterfaceEntity[] | Interfaces | . | Enums | EnumEntity[] | Enums | . | StartLine | int | Start line | . | StartColumn | int | Start column | . | EndLine | int | End line | . | EndColumn | int | End column | . ClassEntity . Represent class of document . | Name | Type | Description | . | Document | DocumentEntity | Document | . | Text | string | Text | . | IsAbstract | bool | Is abstract | . | IsSealed | bool | Is sealed | . | IsStatic | bool | Is static | . | BaseTypes | string[] | Base types | . | Interfaces | string[] | Interfaces | . | TypeParameters | string[] | Type parameters | . | MemberNames | string[] | Member names | . | Attributes | string[] | Attributes | . | Name | string | Name | . | FullName | string | Full name | . | Namespace | string | Namespace | . | Modifiers | string[] | Modifiers | . | Methods | MethodEntity[] | Methods | . | Properties | PropertyEntity[] | Properties | . | MethodsCount | int | Methods count | . | PropertiesCount | int | Properties count | . | FieldsCount | int | Fields count | . | InheritanceDepth | int | Inheritance depth | . | ConstructorsCount | int | Constructors count | . | NestedClassesCount | int | Nested classes count | . | NestedInterfacesCount | int | Nested interfaces count | . | InterfacesCount | int | Interfaces count | . | LackOfCohesion | int | Lack of cohesion | . | LinesOfCode | int | Lines of code | . EnumEntity . Represent enum of document . | Name | Type | Description | . | Document | DocumentEntity | Document | . | Members | string[] | Members | . | Name | string | Name | . | FullName | string | Full name | . | Namespace | string | Namespace | . | Modifiers | string[] | Modifiers | . | Methods | MethodEntity[] | Methods | . | Properties | PropertyEntity[] | Properties | . InterfaceEntity . Represent interface of document . | Name | Type | Description | . | Document | DocumentEntity | Document | . | BaseInterfaces | string[] | Base interfaces | . | Name | string | Name | . | FullName | string | Full name | . | Namespace | string | Namespace | . | Modifiers | string[] | Modifiers | . | Methods | MethodEntity[] | Methods | . | Properties | PropertyEntity[] | Properties | . MethodEntity . Represent method of class . | Name | Type | Description | . | Name | string | Name | . | ReturnType | string | Return type | . | Parameters | ParameterEntity[] | Parameters | . | Modifiers | string[] | Modifiers | . | Text | string | Text | . | Attributes | AttributeEntity[] | Attributes | . | CyclomaticComplexity | int | Cyclomatic complexity | . PropertyEntity . Represent property of class . | Name | Type | Description | . | Name | string | Name | . | Type | string | Type | . | IsIndexer | bool | Is indexer | . | IsReadOnly | bool | Is read only | . | IsWriteOnly | bool | Is write only | . | IsRequired | bool | Is required | . | IsWithEvents | bool | Is with events | . | IsVirtual | bool | Is virtual | . | IsOverride | bool | Is override | . | IsAbstract | bool | Is abstract | . | IsSealed | bool | Is sealed | . | IsStatic | bool | Is static | . | Modifiers | string[] | Modifiers | . ParameterEntity . Represent parameter of method . | Name | Type | Description | . | Name | string | Name | . | Type | string | Type | . | IsOptional | bool | Is optional | . | IsParams | bool | Is params | . | IsThis | bool | Is this | . | IsDiscard | bool | Is discard | . | IsIn | bool | Is in | . | IsOut | bool | Is out | . | IsRef | bool | Is ref | . | IsByRef | bool | Is by ref | . | IsByValue | bool | Is by value | . ProjectReferenceEntity . Represent project reference . | Name | Type | Description | . | Name | string | Name | . LibraryReferenceEntity . Represent library reference . | Name | Type | Description | . | Name | string | Name | . | Version | string | Version | . | Culture | string | Culture | . | Location | string | Location | . ",
    "url": "/data-sources/roslyn/macos-x64.html#private-tables",
    
    "relUrl": "/data-sources/roslyn/macos-x64.html#private-tables"
  },"269": {
    "doc": "MacOs X64",
    "title": "Methods",
    "content": "Methods are functions that can be called on the data source specific column. Below are the methods that are exposed by this data source. IEnumerable&lt;Musoq.DataSources.Roslyn.Entities.ProjectEntity&gt; GetProjectsByNames(string[] names) . Gets projects by names. IEnumerable&lt;Musoq.DataSources.Roslyn.Entities.ClassEntity&gt; GetClassesByNames(string[] names) . Gets classes by names. IEnumerable&lt;Musoq.DataSources.Roslyn.Entities.InterfaceEntity&gt; GetInterfacesByNames(string[] names) . Gets classes by names. IEnumerable&lt;Musoq.DataSources.Roslyn.Entities.EnumEntity&gt; GetEnumsByNames(string[] names) . Gets classes by names. IEnumerable&lt;Musoq.DataSources.Roslyn.Entities.ReferencedDocumentEntity&gt; FindReferences(Musoq.DataSources.Roslyn.Entities.ClassEntity entity) . Finds references of the specified class entity. IEnumerable&lt;Musoq.DataSources.Roslyn.Entities.ReferencedDocumentEntity&gt; FindReferences(Musoq.DataSources.Roslyn.Entities.InterfaceEntity entity) . Finds references of the specified interface entity. IEnumerable&lt;Musoq.DataSources.Roslyn.Entities.ReferencedDocumentEntity&gt; FindReferences(Musoq.DataSources.Roslyn.Entities.EnumEntity entity) . Finds references of the specified interface entity. ",
    "url": "/data-sources/roslyn/macos-x64.html#methods",
    
    "relUrl": "/data-sources/roslyn/macos-x64.html#methods"
  },"270": {
    "doc": "MacOs X64",
    "title": "Base Methods",
    "content": "Base methods are methods that can be called on the data source specific column. Those methods are automatically inherited and enriches the data source specific methods. Below are those base methods that are exposed by this data source. int RowNumber() . Gets the row number of the current row. string? GetTypeName(object? obj) . Gets the typename of passed object. string AggregateValues(string name) . Aggregates values into a single value. string AggregateValues(string name, int parent) . Aggregates values into a single value. Decimal Avg(string name) . Gets the aggregated average value from the given group name . Decimal Avg(string name, int parent) . Gets the aggregated average value from the given group name . byte? ShiftLeft(byte? value, int shift) . Shifts the value to the left by the specified number of bits. short? ShiftLeft(short? value, int shift) . Shifts the value to the left by the specified number of bits. int? ShiftLeft(int? value, int shift) . Shifts the value to the left by the specified number of bits. long? ShiftLeft(long? value, int shift) . Shifts the value to the left by the specified number of bits. sbyte? ShiftLeft(sbyte? value, int shift) . Shifts the value to the left by the specified number of bits. ushort? ShiftLeft(ushort? value, int shift) . Shifts the value to the left by the specified number of bits. uint? ShiftLeft(uint? value, int shift) . Shifts the value to the left by the specified number of bits. ulong? ShiftLeft(ulong? value, int shift) . Shifts the value to the left by the specified number of bits. byte? ShiftRight(byte? value, int shift) . Shifts the value to the right by the specified number of bits. short? ShiftRight(short? value, int shift) . Shifts the value to the right by the specified number of bits. int? ShiftRight(int? value, int shift) . Shifts the value to the right by the specified number of bits. long? ShiftRight(long? value, int shift) . Shifts the value to the right by the specified number of bits. sbyte? ShiftRight(sbyte? value, int shift) . Shifts the value to the right by the specified number of bits. ushort? ShiftRight(ushort? value, int shift) . Shifts the value to the right by the specified number of bits. uint? ShiftRight(uint? value, int shift) . Shifts the value to the right by the specified number of bits. ulong? ShiftRight(ulong? value, int shift) . Shifts the value to the right by the specified number of bits. byte? Not(byte? value) . Performs bitwise NOT operation on a given value. short? Not(short? value) . Performs bitwise NOT operation on a given value. int? Not(int? value) . Performs bitwise NOT operation on a given value. long? Not(long? value) . Performs bitwise NOT operation on a given value. sbyte? Not(sbyte? value) . Performs bitwise NOT operation on a given value. ushort? Not(ushort? value) . Performs bitwise NOT operation on a given value. uint? Not(uint? value) . Performs bitwise NOT operation on a given value. ulong? Not(ulong? value) . Performs bitwise NOT operation on a given value. byte? And(byte? left, byte? right) . Performs bitwise AND operation on two given values. int? And(byte? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(byte? left, short? right) . Performs bitwise AND operation on two given values. int? And(byte? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(byte? left, int? right) . Performs bitwise AND operation on two given values. uint? And(byte? left, uint? right) . Performs bitwise AND operation on two given values. long? And(byte? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(byte? left, ulong? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, byte? right) . Performs bitwise AND operation on two given values. sbyte? And(sbyte? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, short? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, int? right) . Performs bitwise AND operation on two given values. uint? And(sbyte? left, uint? right) . Performs bitwise AND operation on two given values. long? And(sbyte? left, long? right) . Performs bitwise AND operation on two given values. int? And(short? left, byte? right) . Performs bitwise AND operation on two given values. int? And(short? left, sbyte? right) . Performs bitwise AND operation on two given values. short? And(short? left, short? right) . Performs bitwise AND operation on two given values. int? And(short? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(short? left, int? right) . Performs bitwise AND operation on two given values. uint? And(short? left, uint? right) . Performs bitwise AND operation on two given values. long? And(short? left, long? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, byte? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, short? right) . Performs bitwise AND operation on two given values. ushort? And(ushort? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, int? right) . Performs bitwise AND operation on two given values. uint? And(ushort? left, uint? right) . Performs bitwise AND operation on two given values. long? And(ushort? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(ushort? left, ulong? right) . Performs bitwise AND operation on two given values. int? And(int? left, byte? right) . Performs bitwise AND operation on two given values. int? And(int? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(int? left, short? right) . Performs bitwise AND operation on two given values. int? And(int? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(int? left, int? right) . Performs bitwise AND operation on two given values. uint? And(int? left, uint? right) . Performs bitwise AND operation on two given values. long? And(int? left, long? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, uint? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, byte? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, sbyte? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, short? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, ushort? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, int? right) . Performs bitwise AND operation on two given values. ulong? And(uint? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(uint? left, ulong? right) . Performs bitwise AND operation on two given values. long? And(long? left, long? right) . Performs bitwise AND operation on two given values. long? And(long? left, byte? right) . Performs bitwise AND operation on two given values. long? And(long? left, sbyte? right) . Performs bitwise AND operation on two given values. long? And(long? left, short? right) . Performs bitwise AND operation on two given values. long? And(long? left, ushort? right) . Performs bitwise AND operation on two given values. long? And(long? left, int? right) . Performs bitwise AND operation on two given values. long? And(long? left, uint? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, byte? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, ushort? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, uint? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, ulong? right) . Performs bitwise AND operation on two given values. byte? Or(byte? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, short? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(byte? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(byte? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(byte? left, ulong? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, byte? right) . Performs bitwise OR operation on two given values. sbyte? Or(sbyte? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, short? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(sbyte? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(sbyte? left, long? right) . Performs bitwise OR operation on two given values. int? Or(short? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(short? left, sbyte? right) . Performs bitwise OR operation on two given values. short? Or(short? left, short? right) . Performs bitwise OR operation on two given values. int? Or(short? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(short? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(short? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(short? left, long? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, short? right) . Performs bitwise OR operation on two given values. ushort? Or(ushort? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(ushort? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(ushort? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(ushort? left, ulong? right) . Performs bitwise OR operation on two given values. int? Or(int? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(int? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(int? left, short? right) . Performs bitwise OR operation on two given values. int? Or(int? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(int? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(int? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(int? left, long? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, uint? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, byte? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, sbyte? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, short? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, ushort? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, int? right) . Performs bitwise OR operation on two given values. ulong? Or(uint? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(uint? left, ulong? right) . Performs bitwise OR operation on two given values. long? Or(long? left, long? right) . Performs bitwise OR operation on two given values. long? Or(long? left, byte? right) . Performs bitwise OR operation on two given values. long? Or(long? left, sbyte? right) . Performs bitwise OR operation on two given values. long? Or(long? left, short? right) . Performs bitwise OR operation on two given values. long? Or(long? left, ushort? right) . Performs bitwise OR operation on two given values. long? Or(long? left, int? right) . Performs bitwise OR operation on two given values. long? Or(long? left, uint? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, byte? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, ushort? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, uint? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, ulong? right) . Performs bitwise OR operation on two given values. byte? Xor(byte? left, byte? right) . Performs bitwise OR operation on two given values. int? Xor(byte? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(byte? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(byte? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(byte? left, ulong? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, byte? right) . Performs bitwise Xor operation on two given values. sbyte? Xor(sbyte? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(sbyte? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(sbyte? left, long? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, sbyte? right) . Performs bitwise Xor operation on two given values. short? Xor(short? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, ushort? right) . Performs bitwise XOR operation on two given values. int? Xor(short? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(short? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(short? left, long? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, short? right) . Performs bitwise Xor operation on two given values. ushort? Xor(ushort? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(ushort? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(ushort? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ushort? left, ulong? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(int? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(int? left, long? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, uint? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, byte? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, sbyte? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, short? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, ushort? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, int? right) . Performs bitwise Xor operation on two given values. ulong? Xor(uint? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(uint? left, ulong? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, long? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, byte? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, sbyte? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, short? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, ushort? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, int? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, uint? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, ulong? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, byte? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, ushort? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, uint? right) . Performs bitwise Xor operation on two given values. byte[] GetBytes(string? content) . Gets the bytes from the given string. byte[] GetBytes(string? content, int length, int offset) . Gets the bytes from the given string within given offset and length. byte?[]? GetBytes(char? character) . Gets the bytes from the given character. byte?[]? GetBytes(bool? bit) . Gets the bytes from the given boolean. byte?[]? GetBytes(long? value) . Gets the bytes from the given long. byte?[]? GetBytes(int? value) . Gets the bytes from the given int. byte?[]? GetBytes(short? value) . Gets the bytes from the given short. byte?[]? GetBytes(ulong? value) . Gets the bytes from the given ulong. byte?[]? GetBytes(ushort? value) . Gets the bytes from the given ushort. byte?[]? GetBytes(uint? value) . Gets the bytes from the given uint. byte?[]? GetBytes(Decimal? value) . Gets the bytes from the given decimal. byte?[]? GetBytes(double? value) . Gets the bytes from the given double. byte?[]? GetBytes(float? value) . Gets the bytes from the given float. string? ToBin(byte?[]? bytes, string delimiter) . Converts given bytes to binary with defined delimiter . string ToBin&lt;T&gt;(T value) . Converts given value to binary . string ToOcta&lt;T&gt;(T value) . Converts given value to octal . string ToDec&lt;T&gt;(T value) . Converts given value to decimal . string ToBase64(byte[] value) . Converts given value to string . string ToBase64(byte[] value, int offset, int length) . Converts given array of bytes to string . byte[] FromBase64(string value) . Converts given string to bytes array . bool FromBytesToBool(byte[] value) . Converts bytes to boolean value. short FromBytesToInt16(byte[] value) . Converts bytes to a 16-bit signed integer. ushort FromBytesToUInt16(byte[] value) . Converts bytes to a 16-bit unsigned integer. int FromBytesToInt32(byte[] value) . Converts bytes to a 32-bit signed integer. uint FromBytesToUInt32(byte[] value) . Converts bytes to a 32-bit unsigned integer. long FromBytesToInt64(byte[] value) . Converts bytes to a 64-bit signed integer. ulong FromBytesToUInt64(byte[] value) . Converts bytes to a 64-bit unsigned integer. float FromBytesToFloat(byte[] value) . Converts bytes to a float value. double FromBytesToDouble(byte[] value) . Converts bytes to a float value. string FromBytesToString(byte[] value) . Converts bytes to a string. byte[] ToBytes(bool value) . Converts boolean value to bytes. byte[] ToBytes(short value) . Converts short value to bytes. byte[] ToBytes(ushort value) . Converts ushort value to bytes. byte[] ToBytes(int value) . Converts int value to bytes. byte[] ToBytes(uint value) . Converts uint value to bytes. byte[] ToBytes(long value) . Converts long value to bytes. byte[] ToBytes(ulong value) . Converts long value to bytes. string? ToHex(byte?[]? bytes, string delimiter) . Converts given bytes to hex with defined delimiter . string? ToHex&lt;T&gt;(T value) . Converts given value to binary . int Count(string name) . Gets the count value of a given group. int Count(string name, int parent) . Gets the count value of a given group. int ExtractFromDate(string? date, string partOfDate) . Extracts part of the date from the date . int ExtractFromDate(string date, string culture, string partOfDate) . Extracts part of the date from the date based on given culture . DateTimeOffset? GetDate() . Gets the current datetime . DateTimeOffset? UtcGetDate() . Gets the current datetime in UTC . int? Month(DateTimeOffset? value) . Gets the month from DateTimeOffset . int? Year(DateTimeOffset? value) . Gets the year from DateTimeOffset . int? Day(DateTimeOffset? value) . Gets the day from DateTimeOffset . int? Hour(DateTimeOffset? value) . Gets the hour from DateTimeOffset . int? Minute(DateTimeOffset? value) . Gets the minute from DateTimeOffset . int? Second(DateTimeOffset? value) . Gets the second from DateTimeOffset . int? Milliseconds(DateTimeOffset? value) . Gets the millisecond from DateTimeOffset . int? DayOfWeek(DateTimeOffset? value) . Gets the day of week from DateTimeOffset . TimeSpan? ExtractTimeSpan(DateTimeOffset? dateTimeOffset) . Extracts time from DateTimeOffset . DateTime? ToDateTimeOffset(string value) . Converts given value to DateTimeOffset . DateTimeOffset? ToDateTimeOffset(string value, string culture) . Converts given value to DateTimeOffset . IEnumerable&lt;T&gt;? Skip&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? skipCount) . Skips elements from the beginning of the sequence. IEnumerable&lt;T&gt;? Take&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? takeCount) . Takes elements from the beginning of the sequence. IEnumerable&lt;T&gt;? SkipAndTake&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? skipCount, int? takeCount) . Skip and takes elements from the beginning of the sequence. T[]? EnumerableToArray&lt;T&gt;(IEnumerable&lt;T&gt;? values) . Turn array arguments of T into a single array. T[]? MergeArrays&lt;T&gt;(T[][]? values) . Turn array arguments of T into a single array. IEnumerable&lt;T&gt;? LongestCommonSequence&lt;T&gt;(IEnumerable&lt;T&gt;? source, IEnumerable&lt;T&gt;? pattern) . Computes longest common sequence of two given sequences . T? GetElementAtOrDefault&lt;T&gt;(IEnumerable&lt;T&gt;? enumerable, int? index) . Gets the element at the specified index in a sequence . int? Length&lt;T&gt;(IEnumerable&lt;T&gt;? enumerable) . Gets the length of the sequence . int? Length&lt;T&gt;(T[]? array) . Gets the length of the array . T? Choose&lt;T&gt;(int? index, T[] values) . Gets the value of an array at the specified index . T If&lt;T&gt;(bool expressionResult, T a, T b) . Chose a or b value based on the expression result . bool? Match(string? regex, string? content) . Determine whether content matches the specified pattern . byte? Coalesce(byte?[] array) . Gets the first non-null value in a list . sbyte? Coalesce(sbyte?[] array) . Gets the first non-null value in a list . short? Coalesce(short?[] array) . Gets the first non-null value in a list . ushort? Coalesce(ushort?[] array) . Gets the first non-null value in a list . int? Coalesce(int?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(uint?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(long?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(ulong?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(Decimal?[] array) . Gets the first non-null value in a list . T? Coalesce&lt;T&gt;(T[] array) . Gets the first non-null value in a list . IEnumerable&lt;T&gt;? Distinct&lt;T&gt;(IEnumerable&lt;T&gt;? values) . Returns distinct elements from a collection. string? Md5(string? content) . Gets the md5 hash of the given string. string? Md5(byte?[]? content) . Gets the md5 hash of the given bytes array. string? Sha1(string? content) . Gets the sha256 hash of the given string. string? Sha1(byte?[]? content) . Gets the sha256 hash of the given bytes array. string? Sha256(string? content) . Gets the sha256 hash of the given string. string? Sha256(byte?[]? content) . Gets the sha256 hash of the given bytes array. string? Sha512(string? content) . Gets the sha256 hash of the given string. string? Sha512(byte?[]? content) . Gets the sha256 hash of the bytes array. string? ToJson&lt;T&gt;(T? obj) . Converts object to json. string[] ExtractFromJsonToArray(string? json, string? path) . Extracts values from json by path. string? ExtractFromJson(string? json, string? path) . Extracts values from json by path and joins them with comma. Decimal? Abs(Decimal? value) . Gets the absolute value . long? Abs(long? value) . Gets the absolute value . int? Abs(int? value) . Gets the absolute value . Decimal? Ceil(Decimal? value) . Gets the ceiling value . Decimal? Floor(Decimal? value) . Gets the floor value . Decimal? Sign(Decimal? value) . Determine whether value is greater, equal or less that zero . long? Sign(long? value) . Determine whether value is greater, equal or less that zero . Decimal? Round(Decimal? value, int precision) . Rounds the value within given precision . Decimal? PercentOf(Decimal? value, Decimal? max) . Gets the percentage of the value . int Rand() . Gets the random integer value . int? Rand(int? min, int? max) . Gets the random integer value . double? Pow(Decimal? x, Decimal? y) . Computes the pow between two values . double? Pow(double? x, double? y) . Computes the pow between two values . double? Sqrt(Decimal? x) . Computes the sqrt of a given value . double? Sqrt(double? x) . Computes the sqrt of a given value . double? Sqrt(long? x) . Computes the sqrt of a given value . double? PercentRank&lt;T&gt;(IEnumerable&lt;T&gt;? window, T? value) . Computes the percent rank of a given window . double? Log(Decimal? base, Decimal? value) . Calculates the logarithm of a value with a specified base. Decimal? Sin(Decimal? value) . Calculates sine of a value. double? Sin(double? value) . Calculates sine of a value. float? Sin(float? value) . Calculates sine of a value. Decimal? Cos(Decimal? value) . Calculates cosine of a value. double? Cos(double? value) . Calculates cosine of a value. float? Cos(float? value) . Calculates cosine of a value. Decimal Max(string name) . Gets the max value of a given group. Decimal Max(string name, int parent) . Gets the max value of a given group. Decimal Min(string name) . Gets the min value of a given group. Decimal Min(string name, int parent) . Gets the min value of a given group. Decimal StDev(string name, int parent) . Gets the StDev value of a given group. string NewId() . Gets the new identifier . string? Trim(string? value) . Removes leading and trailing whitespace from a string. string? TrimStart(string? value) . Removes leading whitespace from a string. string? TrimEnd(string? value) . Removes trailing whitespace from a string. string? Substring(string? value, int? index, int? length) . Gets the substring from the string. string? Substring(string value, int? length) . Gets the substring from the string . string? Concat(string[]? strings) . Concatenates the specified values . string? Concat(char?[]? characters) . Concatenates the specified characters . string? Concat(string? firstString, char?[]? chars) . Concatenates specified string fir characters . string? Concat(char? firstChar, string[]? strings) . Concatenate specific character with strings . string? Concat(object[]? objects) . Concatenates the specified strings . string? Concat&lt;T&gt;(T[]? objects) . Concatenates the specified strings . bool? Contains(string? content, string? what) . Determine whether the string contains the specified value . int? IndexOf(string? value, string? text) . Position of the first occurrence of the specified value . string? Soundex(string? value) . Computes soundex for the specified value . bool HasFuzzyMatchedWord(string text, string word, string separator) . Matches the specified text by splitting it with separator and applying fuzzy comparison . bool HasWordThatHasSmallerLevenshteinDistanceThan(string text, string word, int distance, string separator) . Matches the specified text by splitting it with separator and applying fuzzy comparison with a given distance . bool HasWordThatSoundLike(string text, string word, string separator) . Matches whether the specified word is present after being fuzzified within the specified text . bool HasTextThatSoundLikeSentence(string text, string sentence, string separator) . Matches whether the specified text is present in sentence after being fuzified . string? ToUpper(string value) . Makes the string uppercase . string? ToUpper(string value, string culture) . Makes the string uppercase within specified culture . string? ToUpperInvariant(string value) . Makes the string uppercase . string? ToLower(string value) . Makes the string lowercase . string? ToLower(string value, string culture) . Makes the string lowercase within specified culture . string? ToLowerInvariant(string value) . Makes the string lowercase . string? PadLeft(string? value, string? character, int? totalWidth) . Returns a new string that right-aligns the characters in this instance by padding them on the left with a specified Unicode character, for a specified total lengt . string? PadRight(string? value, string? character, int? totalWidth) . Returns a new string that left-aligns the characters in this instance by padding them on the right with a specified Unicode character, for a specified total length . string? Head(string? value, int? length) . Gets the first N characters of the string . string? Tail(string? value, int? length) . Gets the last N characters of the string . int? LevenshteinDistance(string? firstValue, string? secondValue) . Computes the Levenshtein distance between two strings . char? GetCharacterOf(string value, int index) . Gets the character at specified index . string? Reverse(string? value) . Reverses the string . string[] Split(string value, string[] separators) . Splits the string into an array of substrings based on the specified separators . char[] ToCharArray(string value) . Splits the string into an array of characters . string? LongestCommonSubstring(string source, string pattern) . Computes the longest common subsequence between two source and pattern . string Replicate(string value, int integer) . Clones the value n times . string? Translate(string? value, string? characters, string? translations) . Returns the string from the first argument after the characters specified in the second argument are translated into the characters specified in the third argument. string? Replace(string? text, string lookFor, string? changeTo) . Replaces the first occurrence of a specified string in this instance with another specified string . string? ToTitleCase(string? value) . Capitalizes the first letter of the string . string? GetNthWord(string? text, int? wordIndex, string? separator) . Gets the nth word of the string . string? GetFirstWord(string text, string separator) . Gets the first word of the string . string? GetSecondWord(string text, string separator) . Gets the second word of the string . string? GetThirdWord(string text, string separator) . Gets the third word of the string . string? GetLastWord(string? text, string? separator) . Gets last word of the string . bool? IsNullOrEmpty(string? value) . Determines whether the string is null or empty . bool? IsNullOrWhiteSpace(string? value) . Determines whether the string is null or whitespace . string? UrlEncode(string? value) . Encodes the value . string? UrlDecode(string? value) . Decodes the value . string? UriEncode(string? value) . Encodes the value . string? UriDecode(string? value) . Decodes the value . bool? StartsWith(string? value, string? prefix) . Determines whether the string starts with the specified prefix . bool? StartsWith(string? value, string? prefix, string comparison) . Determines whether the string starts with the specified prefix . bool? EndsWith(string? value, string? suffix) . Determines whether the string ends with the specified suffix . bool? EndsWith(string? value, string? suffix, string comparison) . Determines whether the string ends with the specified suffix . string? RegexReplace(string? value, string? pattern, string? replacement) . Replace the specified value part that matches the pattern with the replacement . string[]? SplitByLinuxNewLines(string? input) . Split string by Linux-style newlines (\\n) . string[]? SplitByWindowsNewLines(string? input) . Split string by Windows-style newlines (\\r\\n) . string[]? SplitByNewLines(string? input) . Smart split that handles both Windows (\\r\\n) and Linux (\\n) newlines . Decimal Sum(string name) . Gets the sum value of a given group. Decimal Sum(string name, int parent) . Gets the sum value of a given group. Decimal SumIncome(string name) . Gets the sum value of a given group. Decimal SumIncome(string name, int parent) . Gets the sum value of a given group. Decimal SumOutcome(string name) . Gets the outcome value of a given group. Decimal SumOutcome(string name, int parent) . Gets the outcome value of a given group. TimeSpan? SumTimeSpan(string name) . Gets the sum value of a given group. TimeSpan? SumTimeSpan(string name, int parent) . Gets the sum value of a given group. TimeSpan? MinTimeSpan(string name) . Gets the min value of a given group. TimeSpan? MinTimeSpan(string name, int parent) . Gets the min value of a given group. TimeSpan? MaxTimeSpan(string name) . Gets the max value of a given group. TimeSpan? MaxTimeSpan(string name, int parent) . Gets the min value of a given group. char? ToChar(string? value) . Converts given value to character . char? ToChar(int? value) . Converts given value to character . char? ToChar(short? value) . Converts given value to character . char? ToChar(byte? value) . Converts given value to character . char? ToChar(object? value) . Converts given value to character . DateTime? ToDateTime(string value) . Converts given value to DateTime . DateTime? ToDateTime(string value, string culture) . Converts given value to DateTime . Decimal? ToDecimal(string? value) . Converts given value to decimal . Decimal? ToDecimal(string value, string culture) . Converts given value to decimal withing given culture . Decimal? ToDecimal(byte? value) . Converts given value to Decimal . Decimal? ToDecimal(sbyte? value) . Converts given value to Decimal . Decimal? ToDecimal(short? value) . Converts given value to Decimal . Decimal? ToDecimal(ushort? value) . Converts given value to Decimal . Decimal? ToDecimal(long? value) . Converts given value to Decimal . Decimal? ToDecimal(ulong? value) . Converts given value to Decimal . Decimal? ToDecimal(float? value) . Converts given value to Decimal . Decimal? ToDecimal(double? value) . Converts given value to Decimal . Decimal? ToDecimal(object? value) . Converts given value to Decimal . double? ToDouble(object? value) . Converts given value to double . double? ToDouble(string? value) . Converts given value to double . double? ToDouble(byte? value) . Converts given value to double . double? ToDouble(sbyte? value) . Converts given value to double . double? ToDouble(short? value) . Converts given value to double . double? ToDouble(ushort? value) . Converts given value to double . double? ToDouble(int? value) . Converts given value to double . double? ToDouble(uint? value) . Converts given value to double . double? ToDouble(long? value) . Converts given value to double . double? ToDouble(ulong? value) . Converts given value to double . double? ToDouble(float? value) . Converts given value to double . double? ToDouble(double? value) . Converts given value to double . double? ToDouble(Decimal? value) . Converts given value to double . float? ToFloat(string? value) . Converts given value to float . float? ToFloat(byte? value) . Converts given value to float . float? ToFloat(sbyte? value) . Converts given value to float . float? ToFloat(short? value) . Converts given value to float . float? ToFloat(ushort? value) . Converts given value to float . float? ToFloat(int? value) . Converts given value to float . float? ToFloat(uint? value) . Converts given value to float . float? ToFloat(long? value) . Converts given value to float . float? ToFloat(ulong? value) . Converts given value to float . float? ToFloat(float? value) . Converts given value to float . float? ToFloat(Decimal? value) . Converts given value to float . int? ToInt32(string value) . Converts given value to int . int? ToInt32(byte? value) . Converts given value to int . int? ToInt32(sbyte? value) . Converts given value to int . int? ToInt32(short? value) . Converts given value to int . int? ToInt32(ushort? value) . Converts given value to int . int? ToInt32(int? value) . Converts given value to int . int? ToInt32(uint? value) . Converts given value to int . int? ToInt32(long? value) . Converts given value to int . int? ToInt32(ulong? value) . Converts given value to int . int? ToInt32(float? value) . Converts given value to int . int? ToInt32(double? value) . Converts given value to int . int? ToInt32(Decimal? value) . Converts given value to int . int? ToInt32(object? value) . Converts given value to int . long? ToInt64(string value) . Converts given value to Int64 . long? ToInt64(byte? value) . Converts given value to long . long? ToInt64(sbyte? value) . Converts given value to long . long? ToInt64(short? value) . Converts given value to long . long? ToInt64(ushort? value) . Converts given value to long . long? ToInt64(int? value) . Converts given value to long . long? ToInt64(uint? value) . Converts given value to long . long? ToInt64(long? value) . Converts given value to long . long? ToInt64(ulong? value) . Converts given value to long . long? ToInt64(float? value) . Converts given value to long . long? ToInt64(double? value) . Converts given value to long . long? ToInt64(Decimal? value) . Converts given value to long . long? ToInt64(object? value) . Converts given value to long . string? ToString(char? value) . Converts given value to string . string? ToString(DateTimeOffset? value) . Converts given value to string . string? ToString(DateTimeOffset? value, string format) . Converts given value to string . string? ToString(byte? value) . Converts given value to string . string? ToString(byte? value, string format) . Converts given value to string . string? ToString(sbyte? value) . Converts given value to string . string? ToString(sbyte? value, string format) . Converts given value to string . string? ToString(int? value) . Converts given value to string . string? ToString(int? value, string format) . Converts given value to string . string? ToString(uint? value) . Converts given value to string . string? ToString(uint? value, string format) . Converts given value to string . string? ToString(long? value) . Converts given value to string . string? ToString(long? value, string format) . Converts given value to string . string? ToString(ulong? value) . Converts given value to string . string? ToString(ulong? value, string format) . Converts given value to string . string? ToString(float? value) . Converts given value to string . string? ToString(float? value, string format) . Converts given value to string . string? ToString(double? value) . Converts given value to string . string? ToString(double? value, string format) . Converts given value to string . string? ToString(Decimal? value) . Converts given value to string . string? ToString(Decimal? value, string format) . Converts given value to string . string? ToString(bool? value) . Converts given value to string . string? ToString(object? value) . Converts given value to string . string? ToString&lt;T&gt;(T? value) . Converts given value to string . string ToString(string[] value) . Converts given value to string . string ToString&lt;T&gt;(T[] value) . Converts given value to string . TimeSpan? ToTimeSpan(string value) . Converts given value to TimeSpan . TimeSpan? ToTimeSpan(string value, string culture) . Converts given value to TimeSpan . IEnumerable&lt;T&gt; Window&lt;T&gt;(string name) . Gets the window . ",
    "url": "/data-sources/roslyn/macos-x64.html#base-methods",
    
    "relUrl": "/data-sources/roslyn/macos-x64.html#base-methods"
  },"271": {
    "doc": "MacOs X64",
    "title": "MacOs X64",
    "content": " ",
    "url": "/data-sources/roslyn/macos-x64.html",
    
    "relUrl": "/data-sources/roslyn/macos-x64.html"
  },"272": {
    "doc": "MacOs X64",
    "title": "Musoq.DataSources.OpenAI",
    "content": "Provides interface to work with OpenAI API. ",
    "url": "/data-sources/OpenAI/macos-x64.html#musoqdatasourcesopenai",
    
    "relUrl": "/data-sources/OpenAI/macos-x64.html#musoqdatasourcesopenai"
  },"273": {
    "doc": "MacOs X64",
    "title": "Tables",
    "content": "Table is a collection of rows and columns that the plugin exposes. Below are the tables that are exposed by this data source. openai.gpt() . Gives the access to OpenAI api . Environment variables . In order to use the plugin, the user must set any required environment variables as specified in the environments element. Failure to do so may result in the plugin not functioning correctly. | Name | Is required | Description | . | OPENAI_API_KEY | true | Open AI api key | . Columns . This table has a dynamic structure, which means that its columns and other details cannot be determined until runtime. As a result, it is not possible to include a complete description of this table in the documentation. Instead, the actual columns and other details of this table will be determined at runtime. openai.gpt(string model) . Gives the access to OpenAI api . Environment variables . In order to use the plugin, the user must set any required environment variables as specified in the environments element. Failure to do so may result in the plugin not functioning correctly. | Name | Is required | Description | . | OPENAI_API_KEY | true | Open AI api key | . Columns . This table has a dynamic structure, which means that its columns and other details cannot be determined until runtime. As a result, it is not possible to include a complete description of this table in the documentation. Instead, the actual columns and other details of this table will be determined at runtime. openai.gpt(string model, int maxTokens) . Gives the access to OpenAI api . Environment variables . In order to use the plugin, the user must set any required environment variables as specified in the environments element. Failure to do so may result in the plugin not functioning correctly. | Name | Is required | Description | . | OPENAI_API_KEY | true | Open AI api key | . Columns . This table has a dynamic structure, which means that its columns and other details cannot be determined until runtime. As a result, it is not possible to include a complete description of this table in the documentation. Instead, the actual columns and other details of this table will be determined at runtime. openai.gpt(string model, int maxTokens, double temperature) . Gives the access to OpenAI api . Environment variables . In order to use the plugin, the user must set any required environment variables as specified in the environments element. Failure to do so may result in the plugin not functioning correctly. | Name | Is required | Description | . | OPENAI_API_KEY | true | Open AI api key | . Columns . This table has a dynamic structure, which means that its columns and other details cannot be determined until runtime. As a result, it is not possible to include a complete description of this table in the documentation. Instead, the actual columns and other details of this table will be determined at runtime. openai.gpt(string model, int maxTokens, double temperature, double frequencyPenalty) . Gives the access to OpenAI api . Environment variables . In order to use the plugin, the user must set any required environment variables as specified in the environments element. Failure to do so may result in the plugin not functioning correctly. | Name | Is required | Description | . | OPENAI_API_KEY | true | Open AI api key | . Columns . This table has a dynamic structure, which means that its columns and other details cannot be determined until runtime. As a result, it is not possible to include a complete description of this table in the documentation. Instead, the actual columns and other details of this table will be determined at runtime. openai.gpt(string model, int maxTokens, double temperature, double frequencyPenalty, double presencePenalty) . Gives the access to OpenAI api . Environment variables . In order to use the plugin, the user must set any required environment variables as specified in the environments element. Failure to do so may result in the plugin not functioning correctly. | Name | Is required | Description | . | OPENAI_API_KEY | true | Open AI api key | . Columns . This table has a dynamic structure, which means that its columns and other details cannot be determined until runtime. As a result, it is not possible to include a complete description of this table in the documentation. Instead, the actual columns and other details of this table will be determined at runtime. ",
    "url": "/data-sources/OpenAI/macos-x64.html#tables",
    
    "relUrl": "/data-sources/OpenAI/macos-x64.html#tables"
  },"274": {
    "doc": "MacOs X64",
    "title": "Methods",
    "content": "Methods are functions that can be called on the data source specific column. Below are the methods that are exposed by this data source. bool IsContentAbout(string content, string question) . Determines whether the provided content is related to the given question. Returns true if the content is related, otherwise returns false. string Sentiment(string content, bool throwOnUnknown) . Performs sentiment analysis on the provided content and returns the sentiment as one of the following strings: “POSITIVE”, “NEGATIVE”, “NEUTRAL”, or “UNKNOWN”. string SummarizeContent(string content) . Summarizes the provided content using the OpenAI API and returns the summarized text. string TranslateContent(string content, string from, string to) . Translates the provided content from the source language to the destination language using the OpenAI API. string[] Entities(string content, bool throwOnException) . Extracts entities from the provided content using the OpenAI API and returns an array of entity strings. string LlmPerform&lt;TColumnType&gt;(string whatToDo, TColumnType column) . Performs the specified action on the provided entity using the OpenAI API and returns the result. string DescribeImage(string imageBase64) . Describes the provided image using the OpenAI API and returns a description of the image. string AskImage(string question, string imageBase64) . Asks a question about the provided image using the OpenAI API and returns the answer to the question. bool IsQuestionApplicableToImage(string question, string imageBase64) . Asks a question about the provided image using the OpenAI API and returns a boolean result. int CountTokens(string content) . Counts the number of tokens in the provided content using the specified model. int CountTokens(string content) . Counts the number of tokens in the provided content using the specified model. int CountTokens(string encodingName, string content) . Counts the number of tokens in the provided content using the specified model. ",
    "url": "/data-sources/OpenAI/macos-x64.html#methods",
    
    "relUrl": "/data-sources/OpenAI/macos-x64.html#methods"
  },"275": {
    "doc": "MacOs X64",
    "title": "Base Methods",
    "content": "Base methods are methods that can be called on the data source specific column. Those methods are automatically inherited and enriches the data source specific methods. Below are those base methods that are exposed by this data source. int RowNumber() . Gets the row number of the current row. string? GetTypeName(object? obj) . Gets the typename of passed object. string AggregateValues(string name) . Aggregates values into a single value. string AggregateValues(string name, int parent) . Aggregates values into a single value. Decimal Avg(string name) . Gets the aggregated average value from the given group name . Decimal Avg(string name, int parent) . Gets the aggregated average value from the given group name . byte? ShiftLeft(byte? value, int shift) . Shifts the value to the left by the specified number of bits. short? ShiftLeft(short? value, int shift) . Shifts the value to the left by the specified number of bits. int? ShiftLeft(int? value, int shift) . Shifts the value to the left by the specified number of bits. long? ShiftLeft(long? value, int shift) . Shifts the value to the left by the specified number of bits. sbyte? ShiftLeft(sbyte? value, int shift) . Shifts the value to the left by the specified number of bits. ushort? ShiftLeft(ushort? value, int shift) . Shifts the value to the left by the specified number of bits. uint? ShiftLeft(uint? value, int shift) . Shifts the value to the left by the specified number of bits. ulong? ShiftLeft(ulong? value, int shift) . Shifts the value to the left by the specified number of bits. byte? ShiftRight(byte? value, int shift) . Shifts the value to the right by the specified number of bits. short? ShiftRight(short? value, int shift) . Shifts the value to the right by the specified number of bits. int? ShiftRight(int? value, int shift) . Shifts the value to the right by the specified number of bits. long? ShiftRight(long? value, int shift) . Shifts the value to the right by the specified number of bits. sbyte? ShiftRight(sbyte? value, int shift) . Shifts the value to the right by the specified number of bits. ushort? ShiftRight(ushort? value, int shift) . Shifts the value to the right by the specified number of bits. uint? ShiftRight(uint? value, int shift) . Shifts the value to the right by the specified number of bits. ulong? ShiftRight(ulong? value, int shift) . Shifts the value to the right by the specified number of bits. byte? Not(byte? value) . Performs bitwise NOT operation on a given value. short? Not(short? value) . Performs bitwise NOT operation on a given value. int? Not(int? value) . Performs bitwise NOT operation on a given value. long? Not(long? value) . Performs bitwise NOT operation on a given value. sbyte? Not(sbyte? value) . Performs bitwise NOT operation on a given value. ushort? Not(ushort? value) . Performs bitwise NOT operation on a given value. uint? Not(uint? value) . Performs bitwise NOT operation on a given value. ulong? Not(ulong? value) . Performs bitwise NOT operation on a given value. byte? And(byte? left, byte? right) . Performs bitwise AND operation on two given values. int? And(byte? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(byte? left, short? right) . Performs bitwise AND operation on two given values. int? And(byte? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(byte? left, int? right) . Performs bitwise AND operation on two given values. uint? And(byte? left, uint? right) . Performs bitwise AND operation on two given values. long? And(byte? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(byte? left, ulong? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, byte? right) . Performs bitwise AND operation on two given values. sbyte? And(sbyte? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, short? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, int? right) . Performs bitwise AND operation on two given values. uint? And(sbyte? left, uint? right) . Performs bitwise AND operation on two given values. long? And(sbyte? left, long? right) . Performs bitwise AND operation on two given values. int? And(short? left, byte? right) . Performs bitwise AND operation on two given values. int? And(short? left, sbyte? right) . Performs bitwise AND operation on two given values. short? And(short? left, short? right) . Performs bitwise AND operation on two given values. int? And(short? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(short? left, int? right) . Performs bitwise AND operation on two given values. uint? And(short? left, uint? right) . Performs bitwise AND operation on two given values. long? And(short? left, long? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, byte? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, short? right) . Performs bitwise AND operation on two given values. ushort? And(ushort? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, int? right) . Performs bitwise AND operation on two given values. uint? And(ushort? left, uint? right) . Performs bitwise AND operation on two given values. long? And(ushort? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(ushort? left, ulong? right) . Performs bitwise AND operation on two given values. int? And(int? left, byte? right) . Performs bitwise AND operation on two given values. int? And(int? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(int? left, short? right) . Performs bitwise AND operation on two given values. int? And(int? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(int? left, int? right) . Performs bitwise AND operation on two given values. uint? And(int? left, uint? right) . Performs bitwise AND operation on two given values. long? And(int? left, long? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, uint? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, byte? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, sbyte? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, short? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, ushort? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, int? right) . Performs bitwise AND operation on two given values. ulong? And(uint? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(uint? left, ulong? right) . Performs bitwise AND operation on two given values. long? And(long? left, long? right) . Performs bitwise AND operation on two given values. long? And(long? left, byte? right) . Performs bitwise AND operation on two given values. long? And(long? left, sbyte? right) . Performs bitwise AND operation on two given values. long? And(long? left, short? right) . Performs bitwise AND operation on two given values. long? And(long? left, ushort? right) . Performs bitwise AND operation on two given values. long? And(long? left, int? right) . Performs bitwise AND operation on two given values. long? And(long? left, uint? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, byte? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, ushort? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, uint? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, ulong? right) . Performs bitwise AND operation on two given values. byte? Or(byte? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, short? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(byte? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(byte? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(byte? left, ulong? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, byte? right) . Performs bitwise OR operation on two given values. sbyte? Or(sbyte? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, short? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(sbyte? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(sbyte? left, long? right) . Performs bitwise OR operation on two given values. int? Or(short? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(short? left, sbyte? right) . Performs bitwise OR operation on two given values. short? Or(short? left, short? right) . Performs bitwise OR operation on two given values. int? Or(short? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(short? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(short? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(short? left, long? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, short? right) . Performs bitwise OR operation on two given values. ushort? Or(ushort? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(ushort? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(ushort? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(ushort? left, ulong? right) . Performs bitwise OR operation on two given values. int? Or(int? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(int? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(int? left, short? right) . Performs bitwise OR operation on two given values. int? Or(int? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(int? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(int? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(int? left, long? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, uint? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, byte? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, sbyte? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, short? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, ushort? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, int? right) . Performs bitwise OR operation on two given values. ulong? Or(uint? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(uint? left, ulong? right) . Performs bitwise OR operation on two given values. long? Or(long? left, long? right) . Performs bitwise OR operation on two given values. long? Or(long? left, byte? right) . Performs bitwise OR operation on two given values. long? Or(long? left, sbyte? right) . Performs bitwise OR operation on two given values. long? Or(long? left, short? right) . Performs bitwise OR operation on two given values. long? Or(long? left, ushort? right) . Performs bitwise OR operation on two given values. long? Or(long? left, int? right) . Performs bitwise OR operation on two given values. long? Or(long? left, uint? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, byte? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, ushort? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, uint? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, ulong? right) . Performs bitwise OR operation on two given values. byte? Xor(byte? left, byte? right) . Performs bitwise OR operation on two given values. int? Xor(byte? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(byte? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(byte? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(byte? left, ulong? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, byte? right) . Performs bitwise Xor operation on two given values. sbyte? Xor(sbyte? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(sbyte? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(sbyte? left, long? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, sbyte? right) . Performs bitwise Xor operation on two given values. short? Xor(short? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, ushort? right) . Performs bitwise XOR operation on two given values. int? Xor(short? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(short? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(short? left, long? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, short? right) . Performs bitwise Xor operation on two given values. ushort? Xor(ushort? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(ushort? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(ushort? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ushort? left, ulong? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(int? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(int? left, long? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, uint? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, byte? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, sbyte? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, short? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, ushort? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, int? right) . Performs bitwise Xor operation on two given values. ulong? Xor(uint? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(uint? left, ulong? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, long? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, byte? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, sbyte? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, short? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, ushort? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, int? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, uint? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, ulong? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, byte? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, ushort? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, uint? right) . Performs bitwise Xor operation on two given values. byte[] GetBytes(string? content) . Gets the bytes from the given string. byte[] GetBytes(string? content, int length, int offset) . Gets the bytes from the given string within given offset and length. byte?[]? GetBytes(char? character) . Gets the bytes from the given character. byte?[]? GetBytes(bool? bit) . Gets the bytes from the given boolean. byte?[]? GetBytes(long? value) . Gets the bytes from the given long. byte?[]? GetBytes(int? value) . Gets the bytes from the given int. byte?[]? GetBytes(short? value) . Gets the bytes from the given short. byte?[]? GetBytes(ulong? value) . Gets the bytes from the given ulong. byte?[]? GetBytes(ushort? value) . Gets the bytes from the given ushort. byte?[]? GetBytes(uint? value) . Gets the bytes from the given uint. byte?[]? GetBytes(Decimal? value) . Gets the bytes from the given decimal. byte?[]? GetBytes(double? value) . Gets the bytes from the given double. byte?[]? GetBytes(float? value) . Gets the bytes from the given float. string? ToBin(byte?[]? bytes, string delimiter) . Converts given bytes to binary with defined delimiter . string ToBin&lt;T&gt;(T value) . Converts given value to binary . string ToOcta&lt;T&gt;(T value) . Converts given value to octal . string ToDec&lt;T&gt;(T value) . Converts given value to decimal . string ToBase64(byte[] value) . Converts given value to string . string ToBase64(byte[] value, int offset, int length) . Converts given array of bytes to string . byte[] FromBase64(string value) . Converts given string to bytes array . bool FromBytesToBool(byte[] value) . Converts bytes to boolean value. short FromBytesToInt16(byte[] value) . Converts bytes to a 16-bit signed integer. ushort FromBytesToUInt16(byte[] value) . Converts bytes to a 16-bit unsigned integer. int FromBytesToInt32(byte[] value) . Converts bytes to a 32-bit signed integer. uint FromBytesToUInt32(byte[] value) . Converts bytes to a 32-bit unsigned integer. long FromBytesToInt64(byte[] value) . Converts bytes to a 64-bit signed integer. ulong FromBytesToUInt64(byte[] value) . Converts bytes to a 64-bit unsigned integer. float FromBytesToFloat(byte[] value) . Converts bytes to a float value. double FromBytesToDouble(byte[] value) . Converts bytes to a float value. string FromBytesToString(byte[] value) . Converts bytes to a string. byte[] ToBytes(bool value) . Converts boolean value to bytes. byte[] ToBytes(short value) . Converts short value to bytes. byte[] ToBytes(ushort value) . Converts ushort value to bytes. byte[] ToBytes(int value) . Converts int value to bytes. byte[] ToBytes(uint value) . Converts uint value to bytes. byte[] ToBytes(long value) . Converts long value to bytes. byte[] ToBytes(ulong value) . Converts long value to bytes. string? ToHex(byte?[]? bytes, string delimiter) . Converts given bytes to hex with defined delimiter . string? ToHex&lt;T&gt;(T value) . Converts given value to binary . int Count(string name) . Gets the count value of a given group. int Count(string name, int parent) . Gets the count value of a given group. int ExtractFromDate(string? date, string partOfDate) . Extracts part of the date from the date . int ExtractFromDate(string date, string culture, string partOfDate) . Extracts part of the date from the date based on given culture . DateTimeOffset? GetDate() . Gets the current datetime . DateTimeOffset? UtcGetDate() . Gets the current datetime in UTC . int? Month(DateTimeOffset? value) . Gets the month from DateTimeOffset . int? Year(DateTimeOffset? value) . Gets the year from DateTimeOffset . int? Day(DateTimeOffset? value) . Gets the day from DateTimeOffset . int? Hour(DateTimeOffset? value) . Gets the hour from DateTimeOffset . int? Minute(DateTimeOffset? value) . Gets the minute from DateTimeOffset . int? Second(DateTimeOffset? value) . Gets the second from DateTimeOffset . int? Milliseconds(DateTimeOffset? value) . Gets the millisecond from DateTimeOffset . int? DayOfWeek(DateTimeOffset? value) . Gets the day of week from DateTimeOffset . TimeSpan? ExtractTimeSpan(DateTimeOffset? dateTimeOffset) . Extracts time from DateTimeOffset . DateTime? ToDateTimeOffset(string value) . Converts given value to DateTimeOffset . DateTimeOffset? ToDateTimeOffset(string value, string culture) . Converts given value to DateTimeOffset . IEnumerable&lt;T&gt;? Skip&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? skipCount) . Skips elements from the beginning of the sequence. IEnumerable&lt;T&gt;? Take&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? takeCount) . Takes elements from the beginning of the sequence. IEnumerable&lt;T&gt;? SkipAndTake&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? skipCount, int? takeCount) . Skip and takes elements from the beginning of the sequence. T[]? EnumerableToArray&lt;T&gt;(IEnumerable&lt;T&gt;? values) . Turn array arguments of T into a single array. T[]? MergeArrays&lt;T&gt;(T[][]? values) . Turn array arguments of T into a single array. IEnumerable&lt;T&gt;? LongestCommonSequence&lt;T&gt;(IEnumerable&lt;T&gt;? source, IEnumerable&lt;T&gt;? pattern) . Computes longest common sequence of two given sequences . T? GetElementAtOrDefault&lt;T&gt;(IEnumerable&lt;T&gt;? enumerable, int? index) . Gets the element at the specified index in a sequence . int? Length&lt;T&gt;(IEnumerable&lt;T&gt;? enumerable) . Gets the length of the sequence . int? Length&lt;T&gt;(T[]? array) . Gets the length of the array . T? Choose&lt;T&gt;(int? index, T[] values) . Gets the value of an array at the specified index . T If&lt;T&gt;(bool expressionResult, T a, T b) . Chose a or b value based on the expression result . bool? Match(string? regex, string? content) . Determine whether content matches the specified pattern . byte? Coalesce(byte?[] array) . Gets the first non-null value in a list . sbyte? Coalesce(sbyte?[] array) . Gets the first non-null value in a list . short? Coalesce(short?[] array) . Gets the first non-null value in a list . ushort? Coalesce(ushort?[] array) . Gets the first non-null value in a list . int? Coalesce(int?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(uint?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(long?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(ulong?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(Decimal?[] array) . Gets the first non-null value in a list . T? Coalesce&lt;T&gt;(T[] array) . Gets the first non-null value in a list . IEnumerable&lt;T&gt;? Distinct&lt;T&gt;(IEnumerable&lt;T&gt;? values) . Returns distinct elements from a collection. string? Md5(string? content) . Gets the md5 hash of the given string. string? Md5(byte?[]? content) . Gets the md5 hash of the given bytes array. string? Sha1(string? content) . Gets the sha256 hash of the given string. string? Sha1(byte?[]? content) . Gets the sha256 hash of the given bytes array. string? Sha256(string? content) . Gets the sha256 hash of the given string. string? Sha256(byte?[]? content) . Gets the sha256 hash of the given bytes array. string? Sha512(string? content) . Gets the sha256 hash of the given string. string? Sha512(byte?[]? content) . Gets the sha256 hash of the bytes array. string? ToJson&lt;T&gt;(T? obj) . Converts object to json. string[] ExtractFromJsonToArray(string? json, string? path) . Extracts values from json by path. string? ExtractFromJson(string? json, string? path) . Extracts values from json by path and joins them with comma. Decimal? Abs(Decimal? value) . Gets the absolute value . long? Abs(long? value) . Gets the absolute value . int? Abs(int? value) . Gets the absolute value . Decimal? Ceil(Decimal? value) . Gets the ceiling value . Decimal? Floor(Decimal? value) . Gets the floor value . Decimal? Sign(Decimal? value) . Determine whether value is greater, equal or less that zero . long? Sign(long? value) . Determine whether value is greater, equal or less that zero . Decimal? Round(Decimal? value, int precision) . Rounds the value within given precision . Decimal? PercentOf(Decimal? value, Decimal? max) . Gets the percentage of the value . int Rand() . Gets the random integer value . int? Rand(int? min, int? max) . Gets the random integer value . double? Pow(Decimal? x, Decimal? y) . Computes the pow between two values . double? Pow(double? x, double? y) . Computes the pow between two values . double? Sqrt(Decimal? x) . Computes the sqrt of a given value . double? Sqrt(double? x) . Computes the sqrt of a given value . double? Sqrt(long? x) . Computes the sqrt of a given value . double? PercentRank&lt;T&gt;(IEnumerable&lt;T&gt;? window, T? value) . Computes the percent rank of a given window . double? Log(Decimal? base, Decimal? value) . Calculates the logarithm of a value with a specified base. Decimal? Sin(Decimal? value) . Calculates sine of a value. double? Sin(double? value) . Calculates sine of a value. float? Sin(float? value) . Calculates sine of a value. Decimal? Cos(Decimal? value) . Calculates cosine of a value. double? Cos(double? value) . Calculates cosine of a value. float? Cos(float? value) . Calculates cosine of a value. Decimal Max(string name) . Gets the max value of a given group. Decimal Max(string name, int parent) . Gets the max value of a given group. Decimal Min(string name) . Gets the min value of a given group. Decimal Min(string name, int parent) . Gets the min value of a given group. Decimal StDev(string name, int parent) . Gets the StDev value of a given group. string NewId() . Gets the new identifier . string? Trim(string? value) . Removes leading and trailing whitespace from a string. string? TrimStart(string? value) . Removes leading whitespace from a string. string? TrimEnd(string? value) . Removes trailing whitespace from a string. string? Substring(string? value, int? index, int? length) . Gets the substring from the string. string? Substring(string value, int? length) . Gets the substring from the string . string? Concat(string[]? strings) . Concatenates the specified values . string? Concat(char?[]? characters) . Concatenates the specified characters . string? Concat(string? firstString, char?[]? chars) . Concatenates specified string fir characters . string? Concat(char? firstChar, string[]? strings) . Concatenate specific character with strings . string? Concat(object[]? objects) . Concatenates the specified strings . string? Concat&lt;T&gt;(T[]? objects) . Concatenates the specified strings . bool? Contains(string? content, string? what) . Determine whether the string contains the specified value . int? IndexOf(string? value, string? text) . Position of the first occurrence of the specified value . string? Soundex(string? value) . Computes soundex for the specified value . bool HasFuzzyMatchedWord(string text, string word, string separator) . Matches the specified text by splitting it with separator and applying fuzzy comparison . bool HasWordThatHasSmallerLevenshteinDistanceThan(string text, string word, int distance, string separator) . Matches the specified text by splitting it with separator and applying fuzzy comparison with a given distance . bool HasWordThatSoundLike(string text, string word, string separator) . Matches whether the specified word is present after being fuzzified within the specified text . bool HasTextThatSoundLikeSentence(string text, string sentence, string separator) . Matches whether the specified text is present in sentence after being fuzified . string? ToUpper(string value) . Makes the string uppercase . string? ToUpper(string value, string culture) . Makes the string uppercase within specified culture . string? ToUpperInvariant(string value) . Makes the string uppercase . string? ToLower(string value) . Makes the string lowercase . string? ToLower(string value, string culture) . Makes the string lowercase within specified culture . string? ToLowerInvariant(string value) . Makes the string lowercase . string? PadLeft(string? value, string? character, int? totalWidth) . Returns a new string that right-aligns the characters in this instance by padding them on the left with a specified Unicode character, for a specified total lengt . string? PadRight(string? value, string? character, int? totalWidth) . Returns a new string that left-aligns the characters in this instance by padding them on the right with a specified Unicode character, for a specified total length . string? Head(string? value, int? length) . Gets the first N characters of the string . string? Tail(string? value, int? length) . Gets the last N characters of the string . int? LevenshteinDistance(string? firstValue, string? secondValue) . Computes the Levenshtein distance between two strings . char? GetCharacterOf(string value, int index) . Gets the character at specified index . string? Reverse(string? value) . Reverses the string . string[] Split(string value, string[] separators) . Splits the string into an array of substrings based on the specified separators . char[] ToCharArray(string value) . Splits the string into an array of characters . string? LongestCommonSubstring(string source, string pattern) . Computes the longest common subsequence between two source and pattern . string Replicate(string value, int integer) . Clones the value n times . string? Translate(string? value, string? characters, string? translations) . Returns the string from the first argument after the characters specified in the second argument are translated into the characters specified in the third argument. string? Replace(string? text, string lookFor, string? changeTo) . Replaces the first occurrence of a specified string in this instance with another specified string . string? ToTitleCase(string? value) . Capitalizes the first letter of the string . string? GetNthWord(string? text, int? wordIndex, string? separator) . Gets the nth word of the string . string? GetFirstWord(string text, string separator) . Gets the first word of the string . string? GetSecondWord(string text, string separator) . Gets the second word of the string . string? GetThirdWord(string text, string separator) . Gets the third word of the string . string? GetLastWord(string? text, string? separator) . Gets last word of the string . bool? IsNullOrEmpty(string? value) . Determines whether the string is null or empty . bool? IsNullOrWhiteSpace(string? value) . Determines whether the string is null or whitespace . string? UrlEncode(string? value) . Encodes the value . string? UrlDecode(string? value) . Decodes the value . string? UriEncode(string? value) . Encodes the value . string? UriDecode(string? value) . Decodes the value . bool? StartsWith(string? value, string? prefix) . Determines whether the string starts with the specified prefix . bool? StartsWith(string? value, string? prefix, string comparison) . Determines whether the string starts with the specified prefix . bool? EndsWith(string? value, string? suffix) . Determines whether the string ends with the specified suffix . bool? EndsWith(string? value, string? suffix, string comparison) . Determines whether the string ends with the specified suffix . string? RegexReplace(string? value, string? pattern, string? replacement) . Replace the specified value part that matches the pattern with the replacement . string[]? SplitByLinuxNewLines(string? input) . Split string by Linux-style newlines (\\n) . string[]? SplitByWindowsNewLines(string? input) . Split string by Windows-style newlines (\\r\\n) . string[]? SplitByNewLines(string? input) . Smart split that handles both Windows (\\r\\n) and Linux (\\n) newlines . Decimal Sum(string name) . Gets the sum value of a given group. Decimal Sum(string name, int parent) . Gets the sum value of a given group. Decimal SumIncome(string name) . Gets the sum value of a given group. Decimal SumIncome(string name, int parent) . Gets the sum value of a given group. Decimal SumOutcome(string name) . Gets the outcome value of a given group. Decimal SumOutcome(string name, int parent) . Gets the outcome value of a given group. TimeSpan? SumTimeSpan(string name) . Gets the sum value of a given group. TimeSpan? SumTimeSpan(string name, int parent) . Gets the sum value of a given group. TimeSpan? MinTimeSpan(string name) . Gets the min value of a given group. TimeSpan? MinTimeSpan(string name, int parent) . Gets the min value of a given group. TimeSpan? MaxTimeSpan(string name) . Gets the max value of a given group. TimeSpan? MaxTimeSpan(string name, int parent) . Gets the min value of a given group. char? ToChar(string? value) . Converts given value to character . char? ToChar(int? value) . Converts given value to character . char? ToChar(short? value) . Converts given value to character . char? ToChar(byte? value) . Converts given value to character . char? ToChar(object? value) . Converts given value to character . DateTime? ToDateTime(string value) . Converts given value to DateTime . DateTime? ToDateTime(string value, string culture) . Converts given value to DateTime . Decimal? ToDecimal(string? value) . Converts given value to decimal . Decimal? ToDecimal(string value, string culture) . Converts given value to decimal withing given culture . Decimal? ToDecimal(byte? value) . Converts given value to Decimal . Decimal? ToDecimal(sbyte? value) . Converts given value to Decimal . Decimal? ToDecimal(short? value) . Converts given value to Decimal . Decimal? ToDecimal(ushort? value) . Converts given value to Decimal . Decimal? ToDecimal(long? value) . Converts given value to Decimal . Decimal? ToDecimal(ulong? value) . Converts given value to Decimal . Decimal? ToDecimal(float? value) . Converts given value to Decimal . Decimal? ToDecimal(double? value) . Converts given value to Decimal . Decimal? ToDecimal(object? value) . Converts given value to Decimal . double? ToDouble(object? value) . Converts given value to double . double? ToDouble(string? value) . Converts given value to double . double? ToDouble(byte? value) . Converts given value to double . double? ToDouble(sbyte? value) . Converts given value to double . double? ToDouble(short? value) . Converts given value to double . double? ToDouble(ushort? value) . Converts given value to double . double? ToDouble(int? value) . Converts given value to double . double? ToDouble(uint? value) . Converts given value to double . double? ToDouble(long? value) . Converts given value to double . double? ToDouble(ulong? value) . Converts given value to double . double? ToDouble(float? value) . Converts given value to double . double? ToDouble(double? value) . Converts given value to double . double? ToDouble(Decimal? value) . Converts given value to double . float? ToFloat(string? value) . Converts given value to float . float? ToFloat(byte? value) . Converts given value to float . float? ToFloat(sbyte? value) . Converts given value to float . float? ToFloat(short? value) . Converts given value to float . float? ToFloat(ushort? value) . Converts given value to float . float? ToFloat(int? value) . Converts given value to float . float? ToFloat(uint? value) . Converts given value to float . float? ToFloat(long? value) . Converts given value to float . float? ToFloat(ulong? value) . Converts given value to float . float? ToFloat(float? value) . Converts given value to float . float? ToFloat(Decimal? value) . Converts given value to float . int? ToInt32(string value) . Converts given value to int . int? ToInt32(byte? value) . Converts given value to int . int? ToInt32(sbyte? value) . Converts given value to int . int? ToInt32(short? value) . Converts given value to int . int? ToInt32(ushort? value) . Converts given value to int . int? ToInt32(int? value) . Converts given value to int . int? ToInt32(uint? value) . Converts given value to int . int? ToInt32(long? value) . Converts given value to int . int? ToInt32(ulong? value) . Converts given value to int . int? ToInt32(float? value) . Converts given value to int . int? ToInt32(double? value) . Converts given value to int . int? ToInt32(Decimal? value) . Converts given value to int . int? ToInt32(object? value) . Converts given value to int . long? ToInt64(string value) . Converts given value to Int64 . long? ToInt64(byte? value) . Converts given value to long . long? ToInt64(sbyte? value) . Converts given value to long . long? ToInt64(short? value) . Converts given value to long . long? ToInt64(ushort? value) . Converts given value to long . long? ToInt64(int? value) . Converts given value to long . long? ToInt64(uint? value) . Converts given value to long . long? ToInt64(long? value) . Converts given value to long . long? ToInt64(ulong? value) . Converts given value to long . long? ToInt64(float? value) . Converts given value to long . long? ToInt64(double? value) . Converts given value to long . long? ToInt64(Decimal? value) . Converts given value to long . long? ToInt64(object? value) . Converts given value to long . string? ToString(char? value) . Converts given value to string . string? ToString(DateTimeOffset? value) . Converts given value to string . string? ToString(DateTimeOffset? value, string format) . Converts given value to string . string? ToString(byte? value) . Converts given value to string . string? ToString(byte? value, string format) . Converts given value to string . string? ToString(sbyte? value) . Converts given value to string . string? ToString(sbyte? value, string format) . Converts given value to string . string? ToString(int? value) . Converts given value to string . string? ToString(int? value, string format) . Converts given value to string . string? ToString(uint? value) . Converts given value to string . string? ToString(uint? value, string format) . Converts given value to string . string? ToString(long? value) . Converts given value to string . string? ToString(long? value, string format) . Converts given value to string . string? ToString(ulong? value) . Converts given value to string . string? ToString(ulong? value, string format) . Converts given value to string . string? ToString(float? value) . Converts given value to string . string? ToString(float? value, string format) . Converts given value to string . string? ToString(double? value) . Converts given value to string . string? ToString(double? value, string format) . Converts given value to string . string? ToString(Decimal? value) . Converts given value to string . string? ToString(Decimal? value, string format) . Converts given value to string . string? ToString(bool? value) . Converts given value to string . string? ToString(object? value) . Converts given value to string . string? ToString&lt;T&gt;(T? value) . Converts given value to string . string ToString(string[] value) . Converts given value to string . string ToString&lt;T&gt;(T[] value) . Converts given value to string . TimeSpan? ToTimeSpan(string value) . Converts given value to TimeSpan . TimeSpan? ToTimeSpan(string value, string culture) . Converts given value to TimeSpan . IEnumerable&lt;T&gt; Window&lt;T&gt;(string name) . Gets the window . ",
    "url": "/data-sources/OpenAI/macos-x64.html#base-methods",
    
    "relUrl": "/data-sources/OpenAI/macos-x64.html#base-methods"
  },"276": {
    "doc": "MacOs X64",
    "title": "MacOs X64",
    "content": " ",
    "url": "/data-sources/OpenAI/macos-x64.html",
    
    "relUrl": "/data-sources/OpenAI/macos-x64.html"
  },"277": {
    "doc": "MacOs X64",
    "title": "Musoq.DataSources.System",
    "content": "System schema helper methods . ",
    "url": "/data-sources/System/macos-x64.html#musoqdatasourcessystem",
    
    "relUrl": "/data-sources/System/macos-x64.html#musoqdatasourcessystem"
  },"278": {
    "doc": "MacOs X64",
    "title": "Tables",
    "content": "Table is a collection of rows and columns that the plugin exposes. Below are the tables that are exposed by this data source. system.dual() . The dummy table . | Name | Type | Description | . | Dummy | string | Just empty string | . system.range(long min, long max) . Gives the ability to generate ranged values . | Name | Type | Description | . | Value | long | Enumerated value | . system.range(int min, int max) . Gives the ability to generate ranged values . | Name | Type | Description | . | Value | long | Enumerated value | . system.range(long max) . Gives the ability to generate ranged values . | Name | Type | Description | . | Value | long | Enumerated value | . ",
    "url": "/data-sources/System/macos-x64.html#tables",
    
    "relUrl": "/data-sources/System/macos-x64.html#tables"
  },"279": {
    "doc": "MacOs X64",
    "title": "Base Methods",
    "content": "Base methods are methods that can be called on the data source specific column. Those methods are automatically inherited and enriches the data source specific methods. Below are those base methods that are exposed by this data source. int RowNumber() . Gets the row number of the current row. string? GetTypeName(object? obj) . Gets the typename of passed object. string AggregateValues(string name) . Aggregates values into a single value. string AggregateValues(string name, int parent) . Aggregates values into a single value. Decimal Avg(string name) . Gets the aggregated average value from the given group name . Decimal Avg(string name, int parent) . Gets the aggregated average value from the given group name . byte? ShiftLeft(byte? value, int shift) . Shifts the value to the left by the specified number of bits. short? ShiftLeft(short? value, int shift) . Shifts the value to the left by the specified number of bits. int? ShiftLeft(int? value, int shift) . Shifts the value to the left by the specified number of bits. long? ShiftLeft(long? value, int shift) . Shifts the value to the left by the specified number of bits. sbyte? ShiftLeft(sbyte? value, int shift) . Shifts the value to the left by the specified number of bits. ushort? ShiftLeft(ushort? value, int shift) . Shifts the value to the left by the specified number of bits. uint? ShiftLeft(uint? value, int shift) . Shifts the value to the left by the specified number of bits. ulong? ShiftLeft(ulong? value, int shift) . Shifts the value to the left by the specified number of bits. byte? ShiftRight(byte? value, int shift) . Shifts the value to the right by the specified number of bits. short? ShiftRight(short? value, int shift) . Shifts the value to the right by the specified number of bits. int? ShiftRight(int? value, int shift) . Shifts the value to the right by the specified number of bits. long? ShiftRight(long? value, int shift) . Shifts the value to the right by the specified number of bits. sbyte? ShiftRight(sbyte? value, int shift) . Shifts the value to the right by the specified number of bits. ushort? ShiftRight(ushort? value, int shift) . Shifts the value to the right by the specified number of bits. uint? ShiftRight(uint? value, int shift) . Shifts the value to the right by the specified number of bits. ulong? ShiftRight(ulong? value, int shift) . Shifts the value to the right by the specified number of bits. byte? Not(byte? value) . Performs bitwise NOT operation on a given value. short? Not(short? value) . Performs bitwise NOT operation on a given value. int? Not(int? value) . Performs bitwise NOT operation on a given value. long? Not(long? value) . Performs bitwise NOT operation on a given value. sbyte? Not(sbyte? value) . Performs bitwise NOT operation on a given value. ushort? Not(ushort? value) . Performs bitwise NOT operation on a given value. uint? Not(uint? value) . Performs bitwise NOT operation on a given value. ulong? Not(ulong? value) . Performs bitwise NOT operation on a given value. byte? And(byte? left, byte? right) . Performs bitwise AND operation on two given values. int? And(byte? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(byte? left, short? right) . Performs bitwise AND operation on two given values. int? And(byte? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(byte? left, int? right) . Performs bitwise AND operation on two given values. uint? And(byte? left, uint? right) . Performs bitwise AND operation on two given values. long? And(byte? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(byte? left, ulong? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, byte? right) . Performs bitwise AND operation on two given values. sbyte? And(sbyte? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, short? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, int? right) . Performs bitwise AND operation on two given values. uint? And(sbyte? left, uint? right) . Performs bitwise AND operation on two given values. long? And(sbyte? left, long? right) . Performs bitwise AND operation on two given values. int? And(short? left, byte? right) . Performs bitwise AND operation on two given values. int? And(short? left, sbyte? right) . Performs bitwise AND operation on two given values. short? And(short? left, short? right) . Performs bitwise AND operation on two given values. int? And(short? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(short? left, int? right) . Performs bitwise AND operation on two given values. uint? And(short? left, uint? right) . Performs bitwise AND operation on two given values. long? And(short? left, long? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, byte? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, short? right) . Performs bitwise AND operation on two given values. ushort? And(ushort? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, int? right) . Performs bitwise AND operation on two given values. uint? And(ushort? left, uint? right) . Performs bitwise AND operation on two given values. long? And(ushort? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(ushort? left, ulong? right) . Performs bitwise AND operation on two given values. int? And(int? left, byte? right) . Performs bitwise AND operation on two given values. int? And(int? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(int? left, short? right) . Performs bitwise AND operation on two given values. int? And(int? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(int? left, int? right) . Performs bitwise AND operation on two given values. uint? And(int? left, uint? right) . Performs bitwise AND operation on two given values. long? And(int? left, long? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, uint? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, byte? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, sbyte? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, short? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, ushort? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, int? right) . Performs bitwise AND operation on two given values. ulong? And(uint? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(uint? left, ulong? right) . Performs bitwise AND operation on two given values. long? And(long? left, long? right) . Performs bitwise AND operation on two given values. long? And(long? left, byte? right) . Performs bitwise AND operation on two given values. long? And(long? left, sbyte? right) . Performs bitwise AND operation on two given values. long? And(long? left, short? right) . Performs bitwise AND operation on two given values. long? And(long? left, ushort? right) . Performs bitwise AND operation on two given values. long? And(long? left, int? right) . Performs bitwise AND operation on two given values. long? And(long? left, uint? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, byte? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, ushort? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, uint? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, ulong? right) . Performs bitwise AND operation on two given values. byte? Or(byte? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, short? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(byte? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(byte? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(byte? left, ulong? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, byte? right) . Performs bitwise OR operation on two given values. sbyte? Or(sbyte? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, short? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(sbyte? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(sbyte? left, long? right) . Performs bitwise OR operation on two given values. int? Or(short? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(short? left, sbyte? right) . Performs bitwise OR operation on two given values. short? Or(short? left, short? right) . Performs bitwise OR operation on two given values. int? Or(short? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(short? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(short? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(short? left, long? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, short? right) . Performs bitwise OR operation on two given values. ushort? Or(ushort? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(ushort? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(ushort? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(ushort? left, ulong? right) . Performs bitwise OR operation on two given values. int? Or(int? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(int? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(int? left, short? right) . Performs bitwise OR operation on two given values. int? Or(int? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(int? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(int? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(int? left, long? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, uint? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, byte? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, sbyte? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, short? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, ushort? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, int? right) . Performs bitwise OR operation on two given values. ulong? Or(uint? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(uint? left, ulong? right) . Performs bitwise OR operation on two given values. long? Or(long? left, long? right) . Performs bitwise OR operation on two given values. long? Or(long? left, byte? right) . Performs bitwise OR operation on two given values. long? Or(long? left, sbyte? right) . Performs bitwise OR operation on two given values. long? Or(long? left, short? right) . Performs bitwise OR operation on two given values. long? Or(long? left, ushort? right) . Performs bitwise OR operation on two given values. long? Or(long? left, int? right) . Performs bitwise OR operation on two given values. long? Or(long? left, uint? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, byte? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, ushort? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, uint? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, ulong? right) . Performs bitwise OR operation on two given values. byte? Xor(byte? left, byte? right) . Performs bitwise OR operation on two given values. int? Xor(byte? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(byte? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(byte? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(byte? left, ulong? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, byte? right) . Performs bitwise Xor operation on two given values. sbyte? Xor(sbyte? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(sbyte? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(sbyte? left, long? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, sbyte? right) . Performs bitwise Xor operation on two given values. short? Xor(short? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, ushort? right) . Performs bitwise XOR operation on two given values. int? Xor(short? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(short? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(short? left, long? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, short? right) . Performs bitwise Xor operation on two given values. ushort? Xor(ushort? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(ushort? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(ushort? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ushort? left, ulong? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(int? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(int? left, long? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, uint? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, byte? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, sbyte? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, short? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, ushort? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, int? right) . Performs bitwise Xor operation on two given values. ulong? Xor(uint? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(uint? left, ulong? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, long? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, byte? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, sbyte? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, short? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, ushort? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, int? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, uint? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, ulong? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, byte? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, ushort? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, uint? right) . Performs bitwise Xor operation on two given values. byte[] GetBytes(string? content) . Gets the bytes from the given string. byte[] GetBytes(string? content, int length, int offset) . Gets the bytes from the given string within given offset and length. byte?[]? GetBytes(char? character) . Gets the bytes from the given character. byte?[]? GetBytes(bool? bit) . Gets the bytes from the given boolean. byte?[]? GetBytes(long? value) . Gets the bytes from the given long. byte?[]? GetBytes(int? value) . Gets the bytes from the given int. byte?[]? GetBytes(short? value) . Gets the bytes from the given short. byte?[]? GetBytes(ulong? value) . Gets the bytes from the given ulong. byte?[]? GetBytes(ushort? value) . Gets the bytes from the given ushort. byte?[]? GetBytes(uint? value) . Gets the bytes from the given uint. byte?[]? GetBytes(Decimal? value) . Gets the bytes from the given decimal. byte?[]? GetBytes(double? value) . Gets the bytes from the given double. byte?[]? GetBytes(float? value) . Gets the bytes from the given float. string? ToBin(byte?[]? bytes, string delimiter) . Converts given bytes to binary with defined delimiter . string ToBin&lt;T&gt;(T value) . Converts given value to binary . string ToOcta&lt;T&gt;(T value) . Converts given value to octal . string ToDec&lt;T&gt;(T value) . Converts given value to decimal . string ToBase64(byte[] value) . Converts given value to string . string ToBase64(byte[] value, int offset, int length) . Converts given array of bytes to string . byte[] FromBase64(string value) . Converts given string to bytes array . bool FromBytesToBool(byte[] value) . Converts bytes to boolean value. short FromBytesToInt16(byte[] value) . Converts bytes to a 16-bit signed integer. ushort FromBytesToUInt16(byte[] value) . Converts bytes to a 16-bit unsigned integer. int FromBytesToInt32(byte[] value) . Converts bytes to a 32-bit signed integer. uint FromBytesToUInt32(byte[] value) . Converts bytes to a 32-bit unsigned integer. long FromBytesToInt64(byte[] value) . Converts bytes to a 64-bit signed integer. ulong FromBytesToUInt64(byte[] value) . Converts bytes to a 64-bit unsigned integer. float FromBytesToFloat(byte[] value) . Converts bytes to a float value. double FromBytesToDouble(byte[] value) . Converts bytes to a float value. string FromBytesToString(byte[] value) . Converts bytes to a string. byte[] ToBytes(bool value) . Converts boolean value to bytes. byte[] ToBytes(short value) . Converts short value to bytes. byte[] ToBytes(ushort value) . Converts ushort value to bytes. byte[] ToBytes(int value) . Converts int value to bytes. byte[] ToBytes(uint value) . Converts uint value to bytes. byte[] ToBytes(long value) . Converts long value to bytes. byte[] ToBytes(ulong value) . Converts long value to bytes. string? ToHex(byte?[]? bytes, string delimiter) . Converts given bytes to hex with defined delimiter . string? ToHex&lt;T&gt;(T value) . Converts given value to binary . int Count(string name) . Gets the count value of a given group. int Count(string name, int parent) . Gets the count value of a given group. int ExtractFromDate(string? date, string partOfDate) . Extracts part of the date from the date . int ExtractFromDate(string date, string culture, string partOfDate) . Extracts part of the date from the date based on given culture . DateTimeOffset? GetDate() . Gets the current datetime . DateTimeOffset? UtcGetDate() . Gets the current datetime in UTC . int? Month(DateTimeOffset? value) . Gets the month from DateTimeOffset . int? Year(DateTimeOffset? value) . Gets the year from DateTimeOffset . int? Day(DateTimeOffset? value) . Gets the day from DateTimeOffset . int? Hour(DateTimeOffset? value) . Gets the hour from DateTimeOffset . int? Minute(DateTimeOffset? value) . Gets the minute from DateTimeOffset . int? Second(DateTimeOffset? value) . Gets the second from DateTimeOffset . int? Milliseconds(DateTimeOffset? value) . Gets the millisecond from DateTimeOffset . int? DayOfWeek(DateTimeOffset? value) . Gets the day of week from DateTimeOffset . TimeSpan? ExtractTimeSpan(DateTimeOffset? dateTimeOffset) . Extracts time from DateTimeOffset . DateTime? ToDateTimeOffset(string value) . Converts given value to DateTimeOffset . DateTimeOffset? ToDateTimeOffset(string value, string culture) . Converts given value to DateTimeOffset . IEnumerable&lt;T&gt;? Skip&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? skipCount) . Skips elements from the beginning of the sequence. IEnumerable&lt;T&gt;? Take&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? takeCount) . Takes elements from the beginning of the sequence. IEnumerable&lt;T&gt;? SkipAndTake&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? skipCount, int? takeCount) . Skip and takes elements from the beginning of the sequence. T[]? EnumerableToArray&lt;T&gt;(IEnumerable&lt;T&gt;? values) . Turn array arguments of T into a single array. T[]? MergeArrays&lt;T&gt;(T[][]? values) . Turn array arguments of T into a single array. IEnumerable&lt;T&gt;? LongestCommonSequence&lt;T&gt;(IEnumerable&lt;T&gt;? source, IEnumerable&lt;T&gt;? pattern) . Computes longest common sequence of two given sequences . T? GetElementAtOrDefault&lt;T&gt;(IEnumerable&lt;T&gt;? enumerable, int? index) . Gets the element at the specified index in a sequence . int? Length&lt;T&gt;(IEnumerable&lt;T&gt;? enumerable) . Gets the length of the sequence . int? Length&lt;T&gt;(T[]? array) . Gets the length of the array . T? Choose&lt;T&gt;(int? index, T[] values) . Gets the value of an array at the specified index . T If&lt;T&gt;(bool expressionResult, T a, T b) . Chose a or b value based on the expression result . bool? Match(string? regex, string? content) . Determine whether content matches the specified pattern . byte? Coalesce(byte?[] array) . Gets the first non-null value in a list . sbyte? Coalesce(sbyte?[] array) . Gets the first non-null value in a list . short? Coalesce(short?[] array) . Gets the first non-null value in a list . ushort? Coalesce(ushort?[] array) . Gets the first non-null value in a list . int? Coalesce(int?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(uint?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(long?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(ulong?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(Decimal?[] array) . Gets the first non-null value in a list . T? Coalesce&lt;T&gt;(T[] array) . Gets the first non-null value in a list . IEnumerable&lt;T&gt;? Distinct&lt;T&gt;(IEnumerable&lt;T&gt;? values) . Returns distinct elements from a collection. string? Md5(string? content) . Gets the md5 hash of the given string. string? Md5(byte?[]? content) . Gets the md5 hash of the given bytes array. string? Sha1(string? content) . Gets the sha256 hash of the given string. string? Sha1(byte?[]? content) . Gets the sha256 hash of the given bytes array. string? Sha256(string? content) . Gets the sha256 hash of the given string. string? Sha256(byte?[]? content) . Gets the sha256 hash of the given bytes array. string? Sha512(string? content) . Gets the sha256 hash of the given string. string? Sha512(byte?[]? content) . Gets the sha256 hash of the bytes array. string? ToJson&lt;T&gt;(T? obj) . Converts object to json. string[] ExtractFromJsonToArray(string? json, string? path) . Extracts values from json by path. string? ExtractFromJson(string? json, string? path) . Extracts values from json by path and joins them with comma. Decimal? Abs(Decimal? value) . Gets the absolute value . long? Abs(long? value) . Gets the absolute value . int? Abs(int? value) . Gets the absolute value . Decimal? Ceil(Decimal? value) . Gets the ceiling value . Decimal? Floor(Decimal? value) . Gets the floor value . Decimal? Sign(Decimal? value) . Determine whether value is greater, equal or less that zero . long? Sign(long? value) . Determine whether value is greater, equal or less that zero . Decimal? Round(Decimal? value, int precision) . Rounds the value within given precision . Decimal? PercentOf(Decimal? value, Decimal? max) . Gets the percentage of the value . int Rand() . Gets the random integer value . int? Rand(int? min, int? max) . Gets the random integer value . double? Pow(Decimal? x, Decimal? y) . Computes the pow between two values . double? Pow(double? x, double? y) . Computes the pow between two values . double? Sqrt(Decimal? x) . Computes the sqrt of a given value . double? Sqrt(double? x) . Computes the sqrt of a given value . double? Sqrt(long? x) . Computes the sqrt of a given value . double? PercentRank&lt;T&gt;(IEnumerable&lt;T&gt;? window, T? value) . Computes the percent rank of a given window . double? Log(Decimal? base, Decimal? value) . Calculates the logarithm of a value with a specified base. Decimal? Sin(Decimal? value) . Calculates sine of a value. double? Sin(double? value) . Calculates sine of a value. float? Sin(float? value) . Calculates sine of a value. Decimal? Cos(Decimal? value) . Calculates cosine of a value. double? Cos(double? value) . Calculates cosine of a value. float? Cos(float? value) . Calculates cosine of a value. Decimal Max(string name) . Gets the max value of a given group. Decimal Max(string name, int parent) . Gets the max value of a given group. Decimal Min(string name) . Gets the min value of a given group. Decimal Min(string name, int parent) . Gets the min value of a given group. Decimal StDev(string name, int parent) . Gets the StDev value of a given group. string NewId() . Gets the new identifier . string? Trim(string? value) . Removes leading and trailing whitespace from a string. string? TrimStart(string? value) . Removes leading whitespace from a string. string? TrimEnd(string? value) . Removes trailing whitespace from a string. string? Substring(string? value, int? index, int? length) . Gets the substring from the string. string? Substring(string value, int? length) . Gets the substring from the string . string? Concat(string[]? strings) . Concatenates the specified values . string? Concat(char?[]? characters) . Concatenates the specified characters . string? Concat(string? firstString, char?[]? chars) . Concatenates specified string fir characters . string? Concat(char? firstChar, string[]? strings) . Concatenate specific character with strings . string? Concat(object[]? objects) . Concatenates the specified strings . string? Concat&lt;T&gt;(T[]? objects) . Concatenates the specified strings . bool? Contains(string? content, string? what) . Determine whether the string contains the specified value . int? IndexOf(string? value, string? text) . Position of the first occurrence of the specified value . string? Soundex(string? value) . Computes soundex for the specified value . bool HasFuzzyMatchedWord(string text, string word, string separator) . Matches the specified text by splitting it with separator and applying fuzzy comparison . bool HasWordThatHasSmallerLevenshteinDistanceThan(string text, string word, int distance, string separator) . Matches the specified text by splitting it with separator and applying fuzzy comparison with a given distance . bool HasWordThatSoundLike(string text, string word, string separator) . Matches whether the specified word is present after being fuzzified within the specified text . bool HasTextThatSoundLikeSentence(string text, string sentence, string separator) . Matches whether the specified text is present in sentence after being fuzified . string? ToUpper(string value) . Makes the string uppercase . string? ToUpper(string value, string culture) . Makes the string uppercase within specified culture . string? ToUpperInvariant(string value) . Makes the string uppercase . string? ToLower(string value) . Makes the string lowercase . string? ToLower(string value, string culture) . Makes the string lowercase within specified culture . string? ToLowerInvariant(string value) . Makes the string lowercase . string? PadLeft(string? value, string? character, int? totalWidth) . Returns a new string that right-aligns the characters in this instance by padding them on the left with a specified Unicode character, for a specified total lengt . string? PadRight(string? value, string? character, int? totalWidth) . Returns a new string that left-aligns the characters in this instance by padding them on the right with a specified Unicode character, for a specified total length . string? Head(string? value, int? length) . Gets the first N characters of the string . string? Tail(string? value, int? length) . Gets the last N characters of the string . int? LevenshteinDistance(string? firstValue, string? secondValue) . Computes the Levenshtein distance between two strings . char? GetCharacterOf(string value, int index) . Gets the character at specified index . string? Reverse(string? value) . Reverses the string . string[] Split(string value, string[] separators) . Splits the string into an array of substrings based on the specified separators . char[] ToCharArray(string value) . Splits the string into an array of characters . string? LongestCommonSubstring(string source, string pattern) . Computes the longest common subsequence between two source and pattern . string Replicate(string value, int integer) . Clones the value n times . string? Translate(string? value, string? characters, string? translations) . Returns the string from the first argument after the characters specified in the second argument are translated into the characters specified in the third argument. string? Replace(string? text, string lookFor, string? changeTo) . Replaces the first occurrence of a specified string in this instance with another specified string . string? ToTitleCase(string? value) . Capitalizes the first letter of the string . string? GetNthWord(string? text, int? wordIndex, string? separator) . Gets the nth word of the string . string? GetFirstWord(string text, string separator) . Gets the first word of the string . string? GetSecondWord(string text, string separator) . Gets the second word of the string . string? GetThirdWord(string text, string separator) . Gets the third word of the string . string? GetLastWord(string? text, string? separator) . Gets last word of the string . bool? IsNullOrEmpty(string? value) . Determines whether the string is null or empty . bool? IsNullOrWhiteSpace(string? value) . Determines whether the string is null or whitespace . string? UrlEncode(string? value) . Encodes the value . string? UrlDecode(string? value) . Decodes the value . string? UriEncode(string? value) . Encodes the value . string? UriDecode(string? value) . Decodes the value . bool? StartsWith(string? value, string? prefix) . Determines whether the string starts with the specified prefix . bool? StartsWith(string? value, string? prefix, string comparison) . Determines whether the string starts with the specified prefix . bool? EndsWith(string? value, string? suffix) . Determines whether the string ends with the specified suffix . bool? EndsWith(string? value, string? suffix, string comparison) . Determines whether the string ends with the specified suffix . string? RegexReplace(string? value, string? pattern, string? replacement) . Replace the specified value part that matches the pattern with the replacement . string[]? SplitByLinuxNewLines(string? input) . Split string by Linux-style newlines (\\n) . string[]? SplitByWindowsNewLines(string? input) . Split string by Windows-style newlines (\\r\\n) . string[]? SplitByNewLines(string? input) . Smart split that handles both Windows (\\r\\n) and Linux (\\n) newlines . Decimal Sum(string name) . Gets the sum value of a given group. Decimal Sum(string name, int parent) . Gets the sum value of a given group. Decimal SumIncome(string name) . Gets the sum value of a given group. Decimal SumIncome(string name, int parent) . Gets the sum value of a given group. Decimal SumOutcome(string name) . Gets the outcome value of a given group. Decimal SumOutcome(string name, int parent) . Gets the outcome value of a given group. TimeSpan? SumTimeSpan(string name) . Gets the sum value of a given group. TimeSpan? SumTimeSpan(string name, int parent) . Gets the sum value of a given group. TimeSpan? MinTimeSpan(string name) . Gets the min value of a given group. TimeSpan? MinTimeSpan(string name, int parent) . Gets the min value of a given group. TimeSpan? MaxTimeSpan(string name) . Gets the max value of a given group. TimeSpan? MaxTimeSpan(string name, int parent) . Gets the min value of a given group. char? ToChar(string? value) . Converts given value to character . char? ToChar(int? value) . Converts given value to character . char? ToChar(short? value) . Converts given value to character . char? ToChar(byte? value) . Converts given value to character . char? ToChar(object? value) . Converts given value to character . DateTime? ToDateTime(string value) . Converts given value to DateTime . DateTime? ToDateTime(string value, string culture) . Converts given value to DateTime . Decimal? ToDecimal(string? value) . Converts given value to decimal . Decimal? ToDecimal(string value, string culture) . Converts given value to decimal withing given culture . Decimal? ToDecimal(byte? value) . Converts given value to Decimal . Decimal? ToDecimal(sbyte? value) . Converts given value to Decimal . Decimal? ToDecimal(short? value) . Converts given value to Decimal . Decimal? ToDecimal(ushort? value) . Converts given value to Decimal . Decimal? ToDecimal(long? value) . Converts given value to Decimal . Decimal? ToDecimal(ulong? value) . Converts given value to Decimal . Decimal? ToDecimal(float? value) . Converts given value to Decimal . Decimal? ToDecimal(double? value) . Converts given value to Decimal . Decimal? ToDecimal(object? value) . Converts given value to Decimal . double? ToDouble(object? value) . Converts given value to double . double? ToDouble(string? value) . Converts given value to double . double? ToDouble(byte? value) . Converts given value to double . double? ToDouble(sbyte? value) . Converts given value to double . double? ToDouble(short? value) . Converts given value to double . double? ToDouble(ushort? value) . Converts given value to double . double? ToDouble(int? value) . Converts given value to double . double? ToDouble(uint? value) . Converts given value to double . double? ToDouble(long? value) . Converts given value to double . double? ToDouble(ulong? value) . Converts given value to double . double? ToDouble(float? value) . Converts given value to double . double? ToDouble(double? value) . Converts given value to double . double? ToDouble(Decimal? value) . Converts given value to double . float? ToFloat(string? value) . Converts given value to float . float? ToFloat(byte? value) . Converts given value to float . float? ToFloat(sbyte? value) . Converts given value to float . float? ToFloat(short? value) . Converts given value to float . float? ToFloat(ushort? value) . Converts given value to float . float? ToFloat(int? value) . Converts given value to float . float? ToFloat(uint? value) . Converts given value to float . float? ToFloat(long? value) . Converts given value to float . float? ToFloat(ulong? value) . Converts given value to float . float? ToFloat(float? value) . Converts given value to float . float? ToFloat(Decimal? value) . Converts given value to float . int? ToInt32(string value) . Converts given value to int . int? ToInt32(byte? value) . Converts given value to int . int? ToInt32(sbyte? value) . Converts given value to int . int? ToInt32(short? value) . Converts given value to int . int? ToInt32(ushort? value) . Converts given value to int . int? ToInt32(int? value) . Converts given value to int . int? ToInt32(uint? value) . Converts given value to int . int? ToInt32(long? value) . Converts given value to int . int? ToInt32(ulong? value) . Converts given value to int . int? ToInt32(float? value) . Converts given value to int . int? ToInt32(double? value) . Converts given value to int . int? ToInt32(Decimal? value) . Converts given value to int . int? ToInt32(object? value) . Converts given value to int . long? ToInt64(string value) . Converts given value to Int64 . long? ToInt64(byte? value) . Converts given value to long . long? ToInt64(sbyte? value) . Converts given value to long . long? ToInt64(short? value) . Converts given value to long . long? ToInt64(ushort? value) . Converts given value to long . long? ToInt64(int? value) . Converts given value to long . long? ToInt64(uint? value) . Converts given value to long . long? ToInt64(long? value) . Converts given value to long . long? ToInt64(ulong? value) . Converts given value to long . long? ToInt64(float? value) . Converts given value to long . long? ToInt64(double? value) . Converts given value to long . long? ToInt64(Decimal? value) . Converts given value to long . long? ToInt64(object? value) . Converts given value to long . string? ToString(char? value) . Converts given value to string . string? ToString(DateTimeOffset? value) . Converts given value to string . string? ToString(DateTimeOffset? value, string format) . Converts given value to string . string? ToString(byte? value) . Converts given value to string . string? ToString(byte? value, string format) . Converts given value to string . string? ToString(sbyte? value) . Converts given value to string . string? ToString(sbyte? value, string format) . Converts given value to string . string? ToString(int? value) . Converts given value to string . string? ToString(int? value, string format) . Converts given value to string . string? ToString(uint? value) . Converts given value to string . string? ToString(uint? value, string format) . Converts given value to string . string? ToString(long? value) . Converts given value to string . string? ToString(long? value, string format) . Converts given value to string . string? ToString(ulong? value) . Converts given value to string . string? ToString(ulong? value, string format) . Converts given value to string . string? ToString(float? value) . Converts given value to string . string? ToString(float? value, string format) . Converts given value to string . string? ToString(double? value) . Converts given value to string . string? ToString(double? value, string format) . Converts given value to string . string? ToString(Decimal? value) . Converts given value to string . string? ToString(Decimal? value, string format) . Converts given value to string . string? ToString(bool? value) . Converts given value to string . string? ToString(object? value) . Converts given value to string . string? ToString&lt;T&gt;(T? value) . Converts given value to string . string ToString(string[] value) . Converts given value to string . string ToString&lt;T&gt;(T[] value) . Converts given value to string . TimeSpan? ToTimeSpan(string value) . Converts given value to TimeSpan . TimeSpan? ToTimeSpan(string value, string culture) . Converts given value to TimeSpan . IEnumerable&lt;T&gt; Window&lt;T&gt;(string name) . Gets the window . ",
    "url": "/data-sources/System/macos-x64.html#base-methods",
    
    "relUrl": "/data-sources/System/macos-x64.html#base-methods"
  },"280": {
    "doc": "MacOs X64",
    "title": "MacOs X64",
    "content": " ",
    "url": "/data-sources/System/macos-x64.html",
    
    "relUrl": "/data-sources/System/macos-x64.html"
  },"281": {
    "doc": "MacOs X64",
    "title": "Musoq.DataSources.Archives",
    "content": "Provides schema to work with archives files . ",
    "url": "/data-sources/Archives/macos-x64.html#musoqdatasourcesarchives",
    
    "relUrl": "/data-sources/Archives/macos-x64.html#musoqdatasourcesarchives"
  },"282": {
    "doc": "MacOs X64",
    "title": "Tables",
    "content": "Table is a collection of rows and columns that the plugin exposes. Below are the tables that are exposed by this data source. archives.file(string path) . Enumerate archive files like they were regular files . | Name | Type | Description | . | CompressionType | CompressionType | Compression type | . | ArchivedTime | DateTime? | When the file or directory were archived | . | CompressedSize | long | Compressed size of the file or directory | . | Crc | long | CRC of the file or directory | . | CreatedTime | DateTime? | When the file or directory were created | . | Key | string | Path to file or directory | . | LinkTarget | string | Link target | . | IsDirectory | bool | Is directory | . | IsEncrypted | bool | Is encrypted | . | IsSplitAfter | bool | Is split after | . | IsSolid | bool | Is solid | . | VolumeIndexFirst | int | Volume index first | . | VolumeIndexLast | int | Volume index last | . | LastAccessTime | DateTime? | When the file or directory were last accessed | . | LastModifiedTime | DateTime? | When the file or directory were last modified | . | Size | long | Size of the file or directory | . | Attrib | long? | Attributes of the file or directory | . | TextContent | string | Text content of a file | . ",
    "url": "/data-sources/Archives/macos-x64.html#tables",
    
    "relUrl": "/data-sources/Archives/macos-x64.html#tables"
  },"283": {
    "doc": "MacOs X64",
    "title": "Methods",
    "content": "Methods are functions that can be called on the data source specific column. Below are the methods that are exposed by this data source. byte[] GetContent() . Gets the content of the entry as byte array. string GetTextContent() . Gets the content of the entry as string. IO.Stream GetStreamContent() . Gets the content of the entry as stream. ",
    "url": "/data-sources/Archives/macos-x64.html#methods",
    
    "relUrl": "/data-sources/Archives/macos-x64.html#methods"
  },"284": {
    "doc": "MacOs X64",
    "title": "Base Methods",
    "content": "Base methods are methods that can be called on the data source specific column. Those methods are automatically inherited and enriches the data source specific methods. Below are those base methods that are exposed by this data source. int RowNumber() . Gets the row number of the current row. string? GetTypeName(object? obj) . Gets the typename of passed object. string AggregateValues(string name) . Aggregates values into a single value. string AggregateValues(string name, int parent) . Aggregates values into a single value. Decimal Avg(string name) . Gets the aggregated average value from the given group name . Decimal Avg(string name, int parent) . Gets the aggregated average value from the given group name . byte? ShiftLeft(byte? value, int shift) . Shifts the value to the left by the specified number of bits. short? ShiftLeft(short? value, int shift) . Shifts the value to the left by the specified number of bits. int? ShiftLeft(int? value, int shift) . Shifts the value to the left by the specified number of bits. long? ShiftLeft(long? value, int shift) . Shifts the value to the left by the specified number of bits. sbyte? ShiftLeft(sbyte? value, int shift) . Shifts the value to the left by the specified number of bits. ushort? ShiftLeft(ushort? value, int shift) . Shifts the value to the left by the specified number of bits. uint? ShiftLeft(uint? value, int shift) . Shifts the value to the left by the specified number of bits. ulong? ShiftLeft(ulong? value, int shift) . Shifts the value to the left by the specified number of bits. byte? ShiftRight(byte? value, int shift) . Shifts the value to the right by the specified number of bits. short? ShiftRight(short? value, int shift) . Shifts the value to the right by the specified number of bits. int? ShiftRight(int? value, int shift) . Shifts the value to the right by the specified number of bits. long? ShiftRight(long? value, int shift) . Shifts the value to the right by the specified number of bits. sbyte? ShiftRight(sbyte? value, int shift) . Shifts the value to the right by the specified number of bits. ushort? ShiftRight(ushort? value, int shift) . Shifts the value to the right by the specified number of bits. uint? ShiftRight(uint? value, int shift) . Shifts the value to the right by the specified number of bits. ulong? ShiftRight(ulong? value, int shift) . Shifts the value to the right by the specified number of bits. byte? Not(byte? value) . Performs bitwise NOT operation on a given value. short? Not(short? value) . Performs bitwise NOT operation on a given value. int? Not(int? value) . Performs bitwise NOT operation on a given value. long? Not(long? value) . Performs bitwise NOT operation on a given value. sbyte? Not(sbyte? value) . Performs bitwise NOT operation on a given value. ushort? Not(ushort? value) . Performs bitwise NOT operation on a given value. uint? Not(uint? value) . Performs bitwise NOT operation on a given value. ulong? Not(ulong? value) . Performs bitwise NOT operation on a given value. byte? And(byte? left, byte? right) . Performs bitwise AND operation on two given values. int? And(byte? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(byte? left, short? right) . Performs bitwise AND operation on two given values. int? And(byte? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(byte? left, int? right) . Performs bitwise AND operation on two given values. uint? And(byte? left, uint? right) . Performs bitwise AND operation on two given values. long? And(byte? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(byte? left, ulong? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, byte? right) . Performs bitwise AND operation on two given values. sbyte? And(sbyte? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, short? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, int? right) . Performs bitwise AND operation on two given values. uint? And(sbyte? left, uint? right) . Performs bitwise AND operation on two given values. long? And(sbyte? left, long? right) . Performs bitwise AND operation on two given values. int? And(short? left, byte? right) . Performs bitwise AND operation on two given values. int? And(short? left, sbyte? right) . Performs bitwise AND operation on two given values. short? And(short? left, short? right) . Performs bitwise AND operation on two given values. int? And(short? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(short? left, int? right) . Performs bitwise AND operation on two given values. uint? And(short? left, uint? right) . Performs bitwise AND operation on two given values. long? And(short? left, long? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, byte? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, short? right) . Performs bitwise AND operation on two given values. ushort? And(ushort? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, int? right) . Performs bitwise AND operation on two given values. uint? And(ushort? left, uint? right) . Performs bitwise AND operation on two given values. long? And(ushort? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(ushort? left, ulong? right) . Performs bitwise AND operation on two given values. int? And(int? left, byte? right) . Performs bitwise AND operation on two given values. int? And(int? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(int? left, short? right) . Performs bitwise AND operation on two given values. int? And(int? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(int? left, int? right) . Performs bitwise AND operation on two given values. uint? And(int? left, uint? right) . Performs bitwise AND operation on two given values. long? And(int? left, long? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, uint? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, byte? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, sbyte? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, short? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, ushort? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, int? right) . Performs bitwise AND operation on two given values. ulong? And(uint? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(uint? left, ulong? right) . Performs bitwise AND operation on two given values. long? And(long? left, long? right) . Performs bitwise AND operation on two given values. long? And(long? left, byte? right) . Performs bitwise AND operation on two given values. long? And(long? left, sbyte? right) . Performs bitwise AND operation on two given values. long? And(long? left, short? right) . Performs bitwise AND operation on two given values. long? And(long? left, ushort? right) . Performs bitwise AND operation on two given values. long? And(long? left, int? right) . Performs bitwise AND operation on two given values. long? And(long? left, uint? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, byte? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, ushort? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, uint? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, ulong? right) . Performs bitwise AND operation on two given values. byte? Or(byte? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, short? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(byte? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(byte? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(byte? left, ulong? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, byte? right) . Performs bitwise OR operation on two given values. sbyte? Or(sbyte? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, short? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(sbyte? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(sbyte? left, long? right) . Performs bitwise OR operation on two given values. int? Or(short? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(short? left, sbyte? right) . Performs bitwise OR operation on two given values. short? Or(short? left, short? right) . Performs bitwise OR operation on two given values. int? Or(short? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(short? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(short? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(short? left, long? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, short? right) . Performs bitwise OR operation on two given values. ushort? Or(ushort? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(ushort? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(ushort? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(ushort? left, ulong? right) . Performs bitwise OR operation on two given values. int? Or(int? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(int? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(int? left, short? right) . Performs bitwise OR operation on two given values. int? Or(int? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(int? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(int? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(int? left, long? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, uint? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, byte? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, sbyte? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, short? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, ushort? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, int? right) . Performs bitwise OR operation on two given values. ulong? Or(uint? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(uint? left, ulong? right) . Performs bitwise OR operation on two given values. long? Or(long? left, long? right) . Performs bitwise OR operation on two given values. long? Or(long? left, byte? right) . Performs bitwise OR operation on two given values. long? Or(long? left, sbyte? right) . Performs bitwise OR operation on two given values. long? Or(long? left, short? right) . Performs bitwise OR operation on two given values. long? Or(long? left, ushort? right) . Performs bitwise OR operation on two given values. long? Or(long? left, int? right) . Performs bitwise OR operation on two given values. long? Or(long? left, uint? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, byte? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, ushort? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, uint? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, ulong? right) . Performs bitwise OR operation on two given values. byte? Xor(byte? left, byte? right) . Performs bitwise OR operation on two given values. int? Xor(byte? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(byte? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(byte? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(byte? left, ulong? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, byte? right) . Performs bitwise Xor operation on two given values. sbyte? Xor(sbyte? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(sbyte? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(sbyte? left, long? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, sbyte? right) . Performs bitwise Xor operation on two given values. short? Xor(short? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, ushort? right) . Performs bitwise XOR operation on two given values. int? Xor(short? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(short? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(short? left, long? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, short? right) . Performs bitwise Xor operation on two given values. ushort? Xor(ushort? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(ushort? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(ushort? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ushort? left, ulong? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(int? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(int? left, long? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, uint? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, byte? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, sbyte? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, short? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, ushort? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, int? right) . Performs bitwise Xor operation on two given values. ulong? Xor(uint? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(uint? left, ulong? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, long? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, byte? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, sbyte? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, short? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, ushort? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, int? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, uint? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, ulong? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, byte? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, ushort? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, uint? right) . Performs bitwise Xor operation on two given values. byte[] GetBytes(string? content) . Gets the bytes from the given string. byte[] GetBytes(string? content, int length, int offset) . Gets the bytes from the given string within given offset and length. byte?[]? GetBytes(char? character) . Gets the bytes from the given character. byte?[]? GetBytes(bool? bit) . Gets the bytes from the given boolean. byte?[]? GetBytes(long? value) . Gets the bytes from the given long. byte?[]? GetBytes(int? value) . Gets the bytes from the given int. byte?[]? GetBytes(short? value) . Gets the bytes from the given short. byte?[]? GetBytes(ulong? value) . Gets the bytes from the given ulong. byte?[]? GetBytes(ushort? value) . Gets the bytes from the given ushort. byte?[]? GetBytes(uint? value) . Gets the bytes from the given uint. byte?[]? GetBytes(Decimal? value) . Gets the bytes from the given decimal. byte?[]? GetBytes(double? value) . Gets the bytes from the given double. byte?[]? GetBytes(float? value) . Gets the bytes from the given float. string? ToBin(byte?[]? bytes, string delimiter) . Converts given bytes to binary with defined delimiter . string ToBin&lt;T&gt;(T value) . Converts given value to binary . string ToOcta&lt;T&gt;(T value) . Converts given value to octal . string ToDec&lt;T&gt;(T value) . Converts given value to decimal . string ToBase64(byte[] value) . Converts given value to string . string ToBase64(byte[] value, int offset, int length) . Converts given array of bytes to string . byte[] FromBase64(string value) . Converts given string to bytes array . bool FromBytesToBool(byte[] value) . Converts bytes to boolean value. short FromBytesToInt16(byte[] value) . Converts bytes to a 16-bit signed integer. ushort FromBytesToUInt16(byte[] value) . Converts bytes to a 16-bit unsigned integer. int FromBytesToInt32(byte[] value) . Converts bytes to a 32-bit signed integer. uint FromBytesToUInt32(byte[] value) . Converts bytes to a 32-bit unsigned integer. long FromBytesToInt64(byte[] value) . Converts bytes to a 64-bit signed integer. ulong FromBytesToUInt64(byte[] value) . Converts bytes to a 64-bit unsigned integer. float FromBytesToFloat(byte[] value) . Converts bytes to a float value. double FromBytesToDouble(byte[] value) . Converts bytes to a float value. string FromBytesToString(byte[] value) . Converts bytes to a string. byte[] ToBytes(bool value) . Converts boolean value to bytes. byte[] ToBytes(short value) . Converts short value to bytes. byte[] ToBytes(ushort value) . Converts ushort value to bytes. byte[] ToBytes(int value) . Converts int value to bytes. byte[] ToBytes(uint value) . Converts uint value to bytes. byte[] ToBytes(long value) . Converts long value to bytes. byte[] ToBytes(ulong value) . Converts long value to bytes. string? ToHex(byte?[]? bytes, string delimiter) . Converts given bytes to hex with defined delimiter . string? ToHex&lt;T&gt;(T value) . Converts given value to binary . int Count(string name) . Gets the count value of a given group. int Count(string name, int parent) . Gets the count value of a given group. int ExtractFromDate(string? date, string partOfDate) . Extracts part of the date from the date . int ExtractFromDate(string date, string culture, string partOfDate) . Extracts part of the date from the date based on given culture . DateTimeOffset? GetDate() . Gets the current datetime . DateTimeOffset? UtcGetDate() . Gets the current datetime in UTC . int? Month(DateTimeOffset? value) . Gets the month from DateTimeOffset . int? Year(DateTimeOffset? value) . Gets the year from DateTimeOffset . int? Day(DateTimeOffset? value) . Gets the day from DateTimeOffset . int? Hour(DateTimeOffset? value) . Gets the hour from DateTimeOffset . int? Minute(DateTimeOffset? value) . Gets the minute from DateTimeOffset . int? Second(DateTimeOffset? value) . Gets the second from DateTimeOffset . int? Milliseconds(DateTimeOffset? value) . Gets the millisecond from DateTimeOffset . int? DayOfWeek(DateTimeOffset? value) . Gets the day of week from DateTimeOffset . TimeSpan? ExtractTimeSpan(DateTimeOffset? dateTimeOffset) . Extracts time from DateTimeOffset . DateTime? ToDateTimeOffset(string value) . Converts given value to DateTimeOffset . DateTimeOffset? ToDateTimeOffset(string value, string culture) . Converts given value to DateTimeOffset . IEnumerable&lt;T&gt;? Skip&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? skipCount) . Skips elements from the beginning of the sequence. IEnumerable&lt;T&gt;? Take&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? takeCount) . Takes elements from the beginning of the sequence. IEnumerable&lt;T&gt;? SkipAndTake&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? skipCount, int? takeCount) . Skip and takes elements from the beginning of the sequence. T[]? EnumerableToArray&lt;T&gt;(IEnumerable&lt;T&gt;? values) . Turn array arguments of T into a single array. T[]? MergeArrays&lt;T&gt;(T[][]? values) . Turn array arguments of T into a single array. IEnumerable&lt;T&gt;? LongestCommonSequence&lt;T&gt;(IEnumerable&lt;T&gt;? source, IEnumerable&lt;T&gt;? pattern) . Computes longest common sequence of two given sequences . T? GetElementAtOrDefault&lt;T&gt;(IEnumerable&lt;T&gt;? enumerable, int? index) . Gets the element at the specified index in a sequence . int? Length&lt;T&gt;(IEnumerable&lt;T&gt;? enumerable) . Gets the length of the sequence . int? Length&lt;T&gt;(T[]? array) . Gets the length of the array . T? Choose&lt;T&gt;(int? index, T[] values) . Gets the value of an array at the specified index . T If&lt;T&gt;(bool expressionResult, T a, T b) . Chose a or b value based on the expression result . bool? Match(string? regex, string? content) . Determine whether content matches the specified pattern . byte? Coalesce(byte?[] array) . Gets the first non-null value in a list . sbyte? Coalesce(sbyte?[] array) . Gets the first non-null value in a list . short? Coalesce(short?[] array) . Gets the first non-null value in a list . ushort? Coalesce(ushort?[] array) . Gets the first non-null value in a list . int? Coalesce(int?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(uint?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(long?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(ulong?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(Decimal?[] array) . Gets the first non-null value in a list . T? Coalesce&lt;T&gt;(T[] array) . Gets the first non-null value in a list . IEnumerable&lt;T&gt;? Distinct&lt;T&gt;(IEnumerable&lt;T&gt;? values) . Returns distinct elements from a collection. string? Md5(string? content) . Gets the md5 hash of the given string. string? Md5(byte?[]? content) . Gets the md5 hash of the given bytes array. string? Sha1(string? content) . Gets the sha256 hash of the given string. string? Sha1(byte?[]? content) . Gets the sha256 hash of the given bytes array. string? Sha256(string? content) . Gets the sha256 hash of the given string. string? Sha256(byte?[]? content) . Gets the sha256 hash of the given bytes array. string? Sha512(string? content) . Gets the sha256 hash of the given string. string? Sha512(byte?[]? content) . Gets the sha256 hash of the bytes array. string? ToJson&lt;T&gt;(T? obj) . Converts object to json. string[] ExtractFromJsonToArray(string? json, string? path) . Extracts values from json by path. string? ExtractFromJson(string? json, string? path) . Extracts values from json by path and joins them with comma. Decimal? Abs(Decimal? value) . Gets the absolute value . long? Abs(long? value) . Gets the absolute value . int? Abs(int? value) . Gets the absolute value . Decimal? Ceil(Decimal? value) . Gets the ceiling value . Decimal? Floor(Decimal? value) . Gets the floor value . Decimal? Sign(Decimal? value) . Determine whether value is greater, equal or less that zero . long? Sign(long? value) . Determine whether value is greater, equal or less that zero . Decimal? Round(Decimal? value, int precision) . Rounds the value within given precision . Decimal? PercentOf(Decimal? value, Decimal? max) . Gets the percentage of the value . int Rand() . Gets the random integer value . int? Rand(int? min, int? max) . Gets the random integer value . double? Pow(Decimal? x, Decimal? y) . Computes the pow between two values . double? Pow(double? x, double? y) . Computes the pow between two values . double? Sqrt(Decimal? x) . Computes the sqrt of a given value . double? Sqrt(double? x) . Computes the sqrt of a given value . double? Sqrt(long? x) . Computes the sqrt of a given value . double? PercentRank&lt;T&gt;(IEnumerable&lt;T&gt;? window, T? value) . Computes the percent rank of a given window . double? Log(Decimal? base, Decimal? value) . Calculates the logarithm of a value with a specified base. Decimal? Sin(Decimal? value) . Calculates sine of a value. double? Sin(double? value) . Calculates sine of a value. float? Sin(float? value) . Calculates sine of a value. Decimal? Cos(Decimal? value) . Calculates cosine of a value. double? Cos(double? value) . Calculates cosine of a value. float? Cos(float? value) . Calculates cosine of a value. Decimal Max(string name) . Gets the max value of a given group. Decimal Max(string name, int parent) . Gets the max value of a given group. Decimal Min(string name) . Gets the min value of a given group. Decimal Min(string name, int parent) . Gets the min value of a given group. Decimal StDev(string name, int parent) . Gets the StDev value of a given group. string NewId() . Gets the new identifier . string? Trim(string? value) . Removes leading and trailing whitespace from a string. string? TrimStart(string? value) . Removes leading whitespace from a string. string? TrimEnd(string? value) . Removes trailing whitespace from a string. string? Substring(string? value, int? index, int? length) . Gets the substring from the string. string? Substring(string value, int? length) . Gets the substring from the string . string? Concat(string[]? strings) . Concatenates the specified values . string? Concat(char?[]? characters) . Concatenates the specified characters . string? Concat(string? firstString, char?[]? chars) . Concatenates specified string fir characters . string? Concat(char? firstChar, string[]? strings) . Concatenate specific character with strings . string? Concat(object[]? objects) . Concatenates the specified strings . string? Concat&lt;T&gt;(T[]? objects) . Concatenates the specified strings . bool? Contains(string? content, string? what) . Determine whether the string contains the specified value . int? IndexOf(string? value, string? text) . Position of the first occurrence of the specified value . string? Soundex(string? value) . Computes soundex for the specified value . bool HasFuzzyMatchedWord(string text, string word, string separator) . Matches the specified text by splitting it with separator and applying fuzzy comparison . bool HasWordThatHasSmallerLevenshteinDistanceThan(string text, string word, int distance, string separator) . Matches the specified text by splitting it with separator and applying fuzzy comparison with a given distance . bool HasWordThatSoundLike(string text, string word, string separator) . Matches whether the specified word is present after being fuzzified within the specified text . bool HasTextThatSoundLikeSentence(string text, string sentence, string separator) . Matches whether the specified text is present in sentence after being fuzified . string? ToUpper(string value) . Makes the string uppercase . string? ToUpper(string value, string culture) . Makes the string uppercase within specified culture . string? ToUpperInvariant(string value) . Makes the string uppercase . string? ToLower(string value) . Makes the string lowercase . string? ToLower(string value, string culture) . Makes the string lowercase within specified culture . string? ToLowerInvariant(string value) . Makes the string lowercase . string? PadLeft(string? value, string? character, int? totalWidth) . Returns a new string that right-aligns the characters in this instance by padding them on the left with a specified Unicode character, for a specified total lengt . string? PadRight(string? value, string? character, int? totalWidth) . Returns a new string that left-aligns the characters in this instance by padding them on the right with a specified Unicode character, for a specified total length . string? Head(string? value, int? length) . Gets the first N characters of the string . string? Tail(string? value, int? length) . Gets the last N characters of the string . int? LevenshteinDistance(string? firstValue, string? secondValue) . Computes the Levenshtein distance between two strings . char? GetCharacterOf(string value, int index) . Gets the character at specified index . string? Reverse(string? value) . Reverses the string . string[] Split(string value, string[] separators) . Splits the string into an array of substrings based on the specified separators . char[] ToCharArray(string value) . Splits the string into an array of characters . string? LongestCommonSubstring(string source, string pattern) . Computes the longest common subsequence between two source and pattern . string Replicate(string value, int integer) . Clones the value n times . string? Translate(string? value, string? characters, string? translations) . Returns the string from the first argument after the characters specified in the second argument are translated into the characters specified in the third argument. string? Replace(string? text, string lookFor, string? changeTo) . Replaces the first occurrence of a specified string in this instance with another specified string . string? ToTitleCase(string? value) . Capitalizes the first letter of the string . string? GetNthWord(string? text, int? wordIndex, string? separator) . Gets the nth word of the string . string? GetFirstWord(string text, string separator) . Gets the first word of the string . string? GetSecondWord(string text, string separator) . Gets the second word of the string . string? GetThirdWord(string text, string separator) . Gets the third word of the string . string? GetLastWord(string? text, string? separator) . Gets last word of the string . bool? IsNullOrEmpty(string? value) . Determines whether the string is null or empty . bool? IsNullOrWhiteSpace(string? value) . Determines whether the string is null or whitespace . string? UrlEncode(string? value) . Encodes the value . string? UrlDecode(string? value) . Decodes the value . string? UriEncode(string? value) . Encodes the value . string? UriDecode(string? value) . Decodes the value . bool? StartsWith(string? value, string? prefix) . Determines whether the string starts with the specified prefix . bool? StartsWith(string? value, string? prefix, string comparison) . Determines whether the string starts with the specified prefix . bool? EndsWith(string? value, string? suffix) . Determines whether the string ends with the specified suffix . bool? EndsWith(string? value, string? suffix, string comparison) . Determines whether the string ends with the specified suffix . string? RegexReplace(string? value, string? pattern, string? replacement) . Replace the specified value part that matches the pattern with the replacement . string[]? SplitByLinuxNewLines(string? input) . Split string by Linux-style newlines (\\n) . string[]? SplitByWindowsNewLines(string? input) . Split string by Windows-style newlines (\\r\\n) . string[]? SplitByNewLines(string? input) . Smart split that handles both Windows (\\r\\n) and Linux (\\n) newlines . Decimal Sum(string name) . Gets the sum value of a given group. Decimal Sum(string name, int parent) . Gets the sum value of a given group. Decimal SumIncome(string name) . Gets the sum value of a given group. Decimal SumIncome(string name, int parent) . Gets the sum value of a given group. Decimal SumOutcome(string name) . Gets the outcome value of a given group. Decimal SumOutcome(string name, int parent) . Gets the outcome value of a given group. TimeSpan? SumTimeSpan(string name) . Gets the sum value of a given group. TimeSpan? SumTimeSpan(string name, int parent) . Gets the sum value of a given group. TimeSpan? MinTimeSpan(string name) . Gets the min value of a given group. TimeSpan? MinTimeSpan(string name, int parent) . Gets the min value of a given group. TimeSpan? MaxTimeSpan(string name) . Gets the max value of a given group. TimeSpan? MaxTimeSpan(string name, int parent) . Gets the min value of a given group. char? ToChar(string? value) . Converts given value to character . char? ToChar(int? value) . Converts given value to character . char? ToChar(short? value) . Converts given value to character . char? ToChar(byte? value) . Converts given value to character . char? ToChar(object? value) . Converts given value to character . DateTime? ToDateTime(string value) . Converts given value to DateTime . DateTime? ToDateTime(string value, string culture) . Converts given value to DateTime . Decimal? ToDecimal(string? value) . Converts given value to decimal . Decimal? ToDecimal(string value, string culture) . Converts given value to decimal withing given culture . Decimal? ToDecimal(byte? value) . Converts given value to Decimal . Decimal? ToDecimal(sbyte? value) . Converts given value to Decimal . Decimal? ToDecimal(short? value) . Converts given value to Decimal . Decimal? ToDecimal(ushort? value) . Converts given value to Decimal . Decimal? ToDecimal(long? value) . Converts given value to Decimal . Decimal? ToDecimal(ulong? value) . Converts given value to Decimal . Decimal? ToDecimal(float? value) . Converts given value to Decimal . Decimal? ToDecimal(double? value) . Converts given value to Decimal . Decimal? ToDecimal(object? value) . Converts given value to Decimal . double? ToDouble(object? value) . Converts given value to double . double? ToDouble(string? value) . Converts given value to double . double? ToDouble(byte? value) . Converts given value to double . double? ToDouble(sbyte? value) . Converts given value to double . double? ToDouble(short? value) . Converts given value to double . double? ToDouble(ushort? value) . Converts given value to double . double? ToDouble(int? value) . Converts given value to double . double? ToDouble(uint? value) . Converts given value to double . double? ToDouble(long? value) . Converts given value to double . double? ToDouble(ulong? value) . Converts given value to double . double? ToDouble(float? value) . Converts given value to double . double? ToDouble(double? value) . Converts given value to double . double? ToDouble(Decimal? value) . Converts given value to double . float? ToFloat(string? value) . Converts given value to float . float? ToFloat(byte? value) . Converts given value to float . float? ToFloat(sbyte? value) . Converts given value to float . float? ToFloat(short? value) . Converts given value to float . float? ToFloat(ushort? value) . Converts given value to float . float? ToFloat(int? value) . Converts given value to float . float? ToFloat(uint? value) . Converts given value to float . float? ToFloat(long? value) . Converts given value to float . float? ToFloat(ulong? value) . Converts given value to float . float? ToFloat(float? value) . Converts given value to float . float? ToFloat(Decimal? value) . Converts given value to float . int? ToInt32(string value) . Converts given value to int . int? ToInt32(byte? value) . Converts given value to int . int? ToInt32(sbyte? value) . Converts given value to int . int? ToInt32(short? value) . Converts given value to int . int? ToInt32(ushort? value) . Converts given value to int . int? ToInt32(int? value) . Converts given value to int . int? ToInt32(uint? value) . Converts given value to int . int? ToInt32(long? value) . Converts given value to int . int? ToInt32(ulong? value) . Converts given value to int . int? ToInt32(float? value) . Converts given value to int . int? ToInt32(double? value) . Converts given value to int . int? ToInt32(Decimal? value) . Converts given value to int . int? ToInt32(object? value) . Converts given value to int . long? ToInt64(string value) . Converts given value to Int64 . long? ToInt64(byte? value) . Converts given value to long . long? ToInt64(sbyte? value) . Converts given value to long . long? ToInt64(short? value) . Converts given value to long . long? ToInt64(ushort? value) . Converts given value to long . long? ToInt64(int? value) . Converts given value to long . long? ToInt64(uint? value) . Converts given value to long . long? ToInt64(long? value) . Converts given value to long . long? ToInt64(ulong? value) . Converts given value to long . long? ToInt64(float? value) . Converts given value to long . long? ToInt64(double? value) . Converts given value to long . long? ToInt64(Decimal? value) . Converts given value to long . long? ToInt64(object? value) . Converts given value to long . string? ToString(char? value) . Converts given value to string . string? ToString(DateTimeOffset? value) . Converts given value to string . string? ToString(DateTimeOffset? value, string format) . Converts given value to string . string? ToString(byte? value) . Converts given value to string . string? ToString(byte? value, string format) . Converts given value to string . string? ToString(sbyte? value) . Converts given value to string . string? ToString(sbyte? value, string format) . Converts given value to string . string? ToString(int? value) . Converts given value to string . string? ToString(int? value, string format) . Converts given value to string . string? ToString(uint? value) . Converts given value to string . string? ToString(uint? value, string format) . Converts given value to string . string? ToString(long? value) . Converts given value to string . string? ToString(long? value, string format) . Converts given value to string . string? ToString(ulong? value) . Converts given value to string . string? ToString(ulong? value, string format) . Converts given value to string . string? ToString(float? value) . Converts given value to string . string? ToString(float? value, string format) . Converts given value to string . string? ToString(double? value) . Converts given value to string . string? ToString(double? value, string format) . Converts given value to string . string? ToString(Decimal? value) . Converts given value to string . string? ToString(Decimal? value, string format) . Converts given value to string . string? ToString(bool? value) . Converts given value to string . string? ToString(object? value) . Converts given value to string . string? ToString&lt;T&gt;(T? value) . Converts given value to string . string ToString(string[] value) . Converts given value to string . string ToString&lt;T&gt;(T[] value) . Converts given value to string . TimeSpan? ToTimeSpan(string value) . Converts given value to TimeSpan . TimeSpan? ToTimeSpan(string value, string culture) . Converts given value to TimeSpan . IEnumerable&lt;T&gt; Window&lt;T&gt;(string name) . Gets the window . ",
    "url": "/data-sources/Archives/macos-x64.html#base-methods",
    
    "relUrl": "/data-sources/Archives/macos-x64.html#base-methods"
  },"285": {
    "doc": "MacOs X64",
    "title": "MacOs X64",
    "content": " ",
    "url": "/data-sources/Archives/macos-x64.html",
    
    "relUrl": "/data-sources/Archives/macos-x64.html"
  },"286": {
    "doc": "Operating System as a Data Source",
    "title": "Operating System as a Data Source",
    "content": "The operating system can be a source of numerous data whose processing can benefit us. This data source allows us to work with constructs that are managed by the operating system, such as processes, files, or directories. In the future, there will also be the possibility of using various operating system tools (e.g., ping). ",
    "url": "/practical-examples-and-applications/operating-system-as-a-data-source.html",
    
    "relUrl": "/practical-examples-and-applications/operating-system-as-a-data-source.html"
  },"287": {
    "doc": "Operating System as a Data Source",
    "title": "Filtering Processes by Name",
    "content": "Although access to many properties of the process object requires elevated privileges, we can still take advantage of this and take a look at the processes that concern us, for example: . SELECT Id, ProcessName, Directory, FileName FROM #os.processes() where ProcessName like '%Musoq%' . ",
    "url": "/practical-examples-and-applications/operating-system-as-a-data-source.html#filtering-processes-by-name",
    
    "relUrl": "/practical-examples-and-applications/operating-system-as-a-data-source.html#filtering-processes-by-name"
  },"288": {
    "doc": "Operating System as a Data Source",
    "title": "Finding .cfg and .tmp Files in Downloads",
    "content": "This query retrieves the file size (Length) and the full path (FullName) of all files located in the Downloads directory of the user {USER} that have either a .cfg or .tmp extension. It searches through all the subdirectories (true parameter indicates recursive search) within the specified path for files matching the criteria. SELECT Length, FullName FROM #os.files('C:\\Users\\{USER}\\Downloads', true) WHERE FullName LIKE '%.cfg' OR FullName LIKE '%.tmp' . ",
    "url": "/practical-examples-and-applications/operating-system-as-a-data-source.html#finding-cfg-and-tmp-files-in-downloads",
    
    "relUrl": "/practical-examples-and-applications/operating-system-as-a-data-source.html#finding-cfg-and-tmp-files-in-downloads"
  },"289": {
    "doc": "Operating System as a Data Source",
    "title": "Listing Non-empty Files",
    "content": "This query lists the names (Name) of all non-empty files located in the Downloads directory of the user {USER}. It includes files from all subdirectories (the true parameter enables recursive search) within the specified path, filtering out any files with a length of 0 (empty files). SELECT Name FROM #os.files('C:\\Users\\{USER}\\Downloads', true) WHERE Length &gt; 0 . ",
    "url": "/practical-examples-and-applications/operating-system-as-a-data-source.html#listing-non-empty-files",
    
    "relUrl": "/practical-examples-and-applications/operating-system-as-a-data-source.html#listing-non-empty-files"
  },"290": {
    "doc": "Operating System as a Data Source",
    "title": "Counting File Types",
    "content": "This query calculates the number of files for each file type (extension) located in the Downloads directory of the user {USER}. By grouping the results by the file extension (Extension), it provides a count of files for each unique extension. The search includes all subdirectories within the specified path due to the true parameter, enabling a comprehensive overview of file types present in the Downloads folder. SELECT Extension, Count(Extension) FROM #os.files('C:\\Users\\{USER}\\Downloads', true) GROUP BY Extension . ",
    "url": "/practical-examples-and-applications/operating-system-as-a-data-source.html#counting-file-types",
    
    "relUrl": "/practical-examples-and-applications/operating-system-as-a-data-source.html#counting-file-types"
  },"291": {
    "doc": "Operating System as a Data Source",
    "title": "Paginating Files in Downloads",
    "content": "This query displays the names (Name) of files located in the Downloads directory of user {USER}, implementing pagination by skipping the first 5 files and then taking the next 5 files. It searches through all subdirectories within the specified path (true parameter for recursive search), effectively listing files in a segmented manner, which is particularly useful for processing large sets of files in manageable chunks. SELECT Name FROM #os.files('C:\\Users\\{USER}\\Downloads', true) skip 5 take 5 . ",
    "url": "/practical-examples-and-applications/operating-system-as-a-data-source.html#paginating-files-in-downloads",
    
    "relUrl": "/practical-examples-and-applications/operating-system-as-a-data-source.html#paginating-files-in-downloads"
  },"292": {
    "doc": "Operating System as a Data Source",
    "title": "Finding CSV Files Containing ‘Frames’ Word in File Name",
    "content": "This query searches for .csv files that contain the word ‘Frames’ within their full path (FullName) in the Downloads directory of the user {USER}. It leverages the rlike operator for regex pattern matching to filter files. The true parameter ensures that the search is conducted recursively through all subdirectories within the specified path, targeting only those .csv files whose names include ‘Frames’. SELECT Name FROM #os.files('C:\\Users\\{USER}\\Downloads', true) WHERE FullName rlike '.*Frames.*.csv' . ",
    "url": "/practical-examples-and-applications/operating-system-as-a-data-source.html#finding-csv-files-containing-frames-word-in-file-name",
    
    "relUrl": "/practical-examples-and-applications/operating-system-as-a-data-source.html#finding-csv-files-containing-frames-word-in-file-name"
  },"293": {
    "doc": "Operating System as a Data Source",
    "title": "Filtering .tmp and .cfg Files by Size",
    "content": "This query selects the names (Name) of files within the Downloads directory of the user {USER} that meet specific criteria based on their extension and size. It filters for .tmp files that are empty (Length = 0) and .cfg files larger than 1MB (Length &gt; 1000000). The search is performed recursively in all subdirectories within the specified path (true parameter), allowing for a comprehensive filtering across the Downloads folder. ",
    "url": "/practical-examples-and-applications/operating-system-as-a-data-source.html#filtering-tmp-and-cfg-files-by-size",
    
    "relUrl": "/practical-examples-and-applications/operating-system-as-a-data-source.html#filtering-tmp-and-cfg-files-by-size"
  },"294": {
    "doc": "Operating System as a Data Source",
    "title": "Combining JPG Files from Two Folders",
    "content": "This query aggregates the full paths (FullName) of .jpg files from two specific locations: Folder1 and Folder2 within the user {USER}’s directory. It uses the UNION ALL operation to combine the results from both folders into a single list, including duplicates if they exist. The true parameter for each #os.files function call ensures that the search includes all subdirectories within both specified paths, targeting .jpg files exclusively. SELECT FullName FROM #os.files('C:\\Users\\{USER}\\Folder1', true) WHERE Name LIKE '%.jpg' UNION ALL (FullName) SELECT FullName FROM #os.files('C:\\Users\\{USER}\\Folder2', true) WHERE Name LIKE '%.jpg' . ",
    "url": "/practical-examples-and-applications/operating-system-as-a-data-source.html#combining-jpg-files-from-two-folders",
    
    "relUrl": "/practical-examples-and-applications/operating-system-as-a-data-source.html#combining-jpg-files-from-two-folders"
  },"295": {
    "doc": "Practical Examples and Applications",
    "title": "Practical Examples and Applications",
    "content": " ",
    "url": "/practical-examples-and-applications.html",
    
    "relUrl": "/practical-examples-and-applications.html"
  },"296": {
    "doc": "Processing .CSV, .TSV Files",
    "title": "Processing Structured Files",
    "content": ".csv, .tsv are simple text files in which columns are separated by special separators (e.g., comma or tab), and the end of a row is marked by an end-of-line character. Such files may, but don’t have to, have a header describing what each column is. The header is always the first row in the file. Below is a sample table generated that we will use to perform transformations and calculations for our queries. | Category | Product | Quantity | UnitPrice | —- | —- | —- | —- | Home Appliances | Vacuum Cleaner | 82 | 163.77 | Books | Science | 5 | 47.56 | Computer Accessories | Webcam | 1 | 113.5 | Fashion | T-shirt | 74 | 181.97 | Fashion | Jeans | 8 | 159.87 | Fashion | Hat | 53 | 136.61 | Home Appliances | Refrigerator | 22 | 130.62 | Computer Accessories | Speaker | 98 | 103.57 | Home Appliances | Refrigerator | 17 | 121.75 | Books | Biography | 23 | 10.07 | Computer Accessories | Speaker | 6 | 109.77 | Fashion | Jeans | 21 | 195.95 | Fashion | Sneakers | 69 | 34.7 | Electronics | Smartwatch | 86 | 151.0 | Electronics | Laptop | 7 | 189.76 | Electronics | Tablet | 20 | 115.77 | Computer Accessories | Mouse | 44 | 178.51 | Home Appliances | Blender | 62 | 85.69 | Home Appliances | Vacuum Cleaner | 48 | 14.64 | Electronics | Headphones | 49 | 185.01 | Electronics | Laptop | 15 | 101.91 | Fashion | Jeans | 90 | 67.94 | Computer Accessories | Keyboard | 74 | 12.86 | Fashion | Hat | 34 | 120.21 | Books | History | 1 | 98.95 | Computer Accessories | Speaker | 32 | 135.16 | Electronics | Tablet | 32 | 86.54 | Electronics | Laptop | 42 | 54.91 | Electronics | Headphones | 12 | 192.94 | Electronics | Smartwatch | 40 | 83.4 | Home Appliances | Blender | 65 | 50.17 | Fashion | Hat | 28 | 82.16 | Home Appliances | Washing Machine | 50 | 77.21 | Electronics | Smartphone | 47 | 185.91 | Books | Biography | 42 | 24.57 | Fashion | Jeans | 13 | 73.85 | Computer Accessories | Speaker | 34 | 69.99 | Electronics | Laptop | 66 | 198.1 | Books | Science | 18 | 188.15 | Fashion | Sneakers | 60 | 131.19 | Books | Mystery | 81 | 73.11 | Fashion | Jeans | 51 | 30.24 | Home Appliances | Refrigerator | 14 | 161.9 | Computer Accessories | Keyboard | 50 | 121.49 | Fashion | Jacket | 54 | 146.29 | Computer Accessories | Webcam | 12 | 133.3 | Computer Accessories | Monitor | 30 | 5.32 | Home Appliances | Blender | 43 | 157.01 | Books | Mystery | 59 | 58.53 | Computer Accessories | Speaker | 8 | 156.03 | Computer Accessories | Mouse | 17 | 132.75 | Fashion | Jeans | 33 | 43.96 | Electronics | Laptop | 43 | 132.83 | Computer Accessories | Webcam | 96 | 68.64 | Electronics | Laptop | 30 | 125.86 | Fashion | T-shirt | 67 | 198.49 | Books | Science | 9 | 135.57 | Books | Science | 31 | 8.89 | Fashion | T-shirt | 89 | 197.07 | Electronics | Smartwatch | 17 | 107.64 | Computer Accessories | Monitor | 9 | 171.51 | Fashion | Sneakers | 79 | 168.12 | Fashion | T-shirt | 65 | 78.55 | Fashion | Hat | 22 | 73.59 | Computer Accessories | Webcam | 31 | 164.67 | Fashion | Jeans | 83 | 20.63 | Books | History | 50 | 186.23 | Electronics | Camera | 18 | 183.47 | Computer Accessories | Speaker | 44 | 136.75 | Books | Novel | 23 | 183.86 | Home Appliances | Refrigerator | 26 | 155.14 | Books | Science | 87 | 120.53 | Electronics | Smartphone | 26 | 91.9 | Computer Accessories | Speaker | 12 | 27.0 | Fashion | Hat | 48 | 112.67 | Fashion | Hat | 78 | 23.1 | Books | History | 10 | 91.04 | Electronics | Laptop | 78 | 168.49 | Books | Mystery | 58 | 65.09 | Home Appliances | Microwave | 78 | 115.89 | Books | Biography | 1 | 155.56 | Books | History | 18 | 174.27 | Computer Accessories | Mouse | 23 | 130.46 | Home Appliances | Blender | 19 | 70.96 | Books | Novel | 92 | 118.97 | Home Appliances | Washing Machine | 17 | 147.19 | Books | History | 32 | 194.87 | Home Appliances | Vacuum Cleaner | 42 | 140.49 | Fashion | Jacket | 34 | 134.91 | Electronics | Smartphone | 82 | 167.1 | Home Appliances | Vacuum Cleaner | 96 | 191.72 | Fashion | Hat | 78 | 58.36 | Books | Mystery | 27 | 96.87 | Electronics | Camera | 5 | 158.05 | Books | Novel | 74 | 170.65 | Fashion | Jacket | 13 | 199.69 | Computer Accessories | Mouse | 66 | 93.49 | Home Appliances | Vacuum Cleaner | 88 | 155.43 | Home Appliances | Microwave | 10 | 71.59 | Computer Accessories | Mouse | 3 | 26.24 | . ",
    "url": "/practical-examples-and-applications/processing-.csv,-.tsv-files.html#processing-structured-files",
    
    "relUrl": "/practical-examples-and-applications/processing-.csv,-.tsv-files.html#processing-structured-files"
  },"297": {
    "doc": "Processing .CSV, .TSV Files",
    "title": "Enriching the Table with Calculations",
    "content": "First, we will enrich our calculations by determining the total price UnitPrice * Quantity. select *, ToInt32(Quantity) * ToDecimal(UnitPrice) as TotalPrice from #separatedvalues.csv('@qfs/category_product_data.csv', true, 0) . We begin by reading the file from the query space named category_product_data.csv which has a header true and we are supposed to start reading from row zero 0. Because our data source reads all columns as string types, we have to convert them to numbers. With each row read, a transformation will be performed on the relevant columns followed by multiplication. Table after our transformations: . | Category | Product | Quantity | UnitPrice | TotalPrice | . | Home Appliances | Vacuum Cleaner | 82 | 163.77 | 13429.14 | . | Books | Science | 5 | 47.56 | 237.8 | . | Computer Accessories | Webcam | 1 | 113.5 | 113.5 | . | …. | … | … | … | … | . | Computer Accessories | Mouse | 3 | 26.24 | 78.72 | . ",
    "url": "/practical-examples-and-applications/processing-.csv,-.tsv-files.html#enriching-the-table-with-calculations",
    
    "relUrl": "/practical-examples-and-applications/processing-.csv,-.tsv-files.html#enriching-the-table-with-calculations"
  },"298": {
    "doc": "Processing .CSV, .TSV Files",
    "title": "When the File Has No Header",
    "content": "If our file doesn’t have a header or the names are very irregular, we can simply skip the header row, indicating that the file doesn’t have a header. This will result in automatically assigned column names Column1, Column2, … ColumnN. select *, ToInt32(Column3) * ToDecimal(Column4) as Column5 from #separatedvalues.csv('@qfs/category_product_data.csv', false, 1) . Table after our transformations: . | Column1 | Column2 | Column3 | Column4 | Column5 | . | Home Appliances | Vacuum Cleaner | 82 | 163.77 | 13429.14 | . | Books | Science | 5 | 47.56 | 237.8 | . | Computer Accessories | Webcam | 1 | 113.5 | 113.5 | . | …. | … | … | … | … | . | Computer Accessories | Mouse | 3 | 26.24 | 78.72 | . ",
    "url": "/practical-examples-and-applications/processing-.csv,-.tsv-files.html#when-the-file-has-no-header",
    
    "relUrl": "/practical-examples-and-applications/processing-.csv,-.tsv-files.html#when-the-file-has-no-header"
  },"299": {
    "doc": "Processing .CSV, .TSV Files",
    "title": "Let’s Now Calculate the Total Price for Products in a Given Category and the Total Price for a Product in a Given Category",
    "content": "To get the desired effect in one query, we will use grouping, aggregate methods in the parent group (TotalPriceForCategory), and the current group’s aggregate method (TotalPriceForProduct). select Category, Product, Sum(ToInt32(Quantity) * ToDecimal(UnitPrice), 1) as TotalPriceForCategory, Sum(ToInt32(Quantity) * ToDecimal(UnitPrice)) as TotalPriceForProduct from #separatedvalues.csv('@qfs/category_product_data.csv', true, 0) group by Category, Product . This query works by creating subgroups of categories, then creating further subgroups of products within each of these. The expression Sum(ToInt32(Quantity) * ToDecimal(UnitPrice)) accesses the innermost subgroup (products), while Sum(ToInt32(Quantity) * ToDecimal(UnitPrice), 1) accesses the parent subgroup, the subgroup of the given category, and performs its calculations there. The results of this query are the aggregated calculations: . | Category | Product | TotalPriceForCategory | TotalPriceForProduct | . | Home Appliances | Vacuum Cleaner | 96150.58 | 52115.4 | . | Books | Science | 80287 | 15606.33 | . | … | … | … | … | . These calculations can be verified using an auxiliary Python script: . df['TotalPrice'] = df['Quantity'] * df['UnitPrice'] total_price_per_category = df.groupby('Category')['TotalPrice'].sum().reset_index() total_price_per_product_in_category = df.groupby(['Category', 'Product'])['TotalPrice'].sum().reset_index() total_price_per_category, total_price_per_product_in_category . ",
    "url": "/practical-examples-and-applications/processing-.csv,-.tsv-files.html#lets-now-calculate-the-total-price-for-products-in-a-given-category-and-the-total-price-for-a-product-in-a-given-category",
    
    "relUrl": "/practical-examples-and-applications/processing-.csv,-.tsv-files.html#lets-now-calculate-the-total-price-for-products-in-a-given-category-and-the-total-price-for-a-product-in-a-given-category"
  },"300": {
    "doc": "Processing .CSV, .TSV Files",
    "title": "Sentiment Analysis of Posts Using GPT",
    "content": "Suppose we received the following data: . | PostId | Comment | Date | . | 1 | This product is amazing! Highly recommend. | 2023-01-01 | . | 2 | Absolutely terrible service, I’m very disappointed. | 2023-01-02 | . | 3 | The product is okay, nothing special. | 2023-01-03 | . | … | … | … | . | 6 | It’s a decent product, but I had higher expectations. | 2023-01-06 | . We need to determine the sentiment with which the posts were written, and to this end, we can use a data source such as the GPT model from OpenAI. The query in a simple way will return whether a given post has a positive, negative, or neutral sentiment. select csv.PostId, csv.Comment, gpt.Sentiment(csv.Comment) as Sentiment, csv.Date from #separatedvalues.csv('@qfs/comments_sample.csv', true, 0) csv inner join #openai.gpt('gpt-4-1106-preview') gpt on 1 = 1 . In this query, we use an inner join because we want to use a method that belongs to the calculated gpt table. This table always returns a single row; we are not specifically interested in the row value but want it to be available for each message. When initializing, we use the exact model name which is supposed to respond to our sentiment query. The data source #openai.gpt has more interesting methods with which I encourage you to become familiar in the source documentation. ",
    "url": "/practical-examples-and-applications/processing-.csv,-.tsv-files.html#sentiment-analysis-of-posts-using-gpt",
    
    "relUrl": "/practical-examples-and-applications/processing-.csv,-.tsv-files.html#sentiment-analysis-of-posts-using-gpt"
  },"301": {
    "doc": "Processing .CSV, .TSV Files",
    "title": "Processing .CSV, .TSV Files",
    "content": " ",
    "url": "/practical-examples-and-applications/processing-.csv,-.tsv-files.html",
    
    "relUrl": "/practical-examples-and-applications/processing-.csv,-.tsv-files.html"
  },"302": {
    "doc": "SELECT Clause",
    "title": "Select Clause",
    "content": "The Select command retrieves data from a specified source. As part of the select query, you can use the column name ColumnName, the properties of a complex object ComplexColumn.Property, and the method SomeMethod(...). Returned columns or expressions must be aliased when they are used with set operators or as part of common table expressions. For example: . with Dummy as ( select 1 + 2 as 'EvaluatedExpression', SomeMethod(SomeColumn) as 'MyMethod', SomeColumn from #dummy.source() ) select EvaluatedExpression, SomeColumn, MyMethod from Dummmy . in this particular case, SomeMethod(SomeColumn) and 1 + 2 need to be aliased because they represent a complex expression within the CTE expression. Another example here involves set operators, which require that the columns match on both sides. select ColumnName, 1 + 2 as 'EvaluatedExpression', SomeMethod(SomeColumn) as 'MyMethod' from #dummy.source() union select OtherMethod(ColumnName) as ColumnName, 3 + 4 as 'EvaluatedExpression', SomeMethod2(SomeColumn) as 'MyMethod' from #dummy.source() . As you can see, both operators require the same name. What is not visible here, but is also very important, is that expressions on both sides must return the same types. ",
    "url": "/sql-syntax-of-the-tool/select-clause.html#select-clause",
    
    "relUrl": "/sql-syntax-of-the-tool/select-clause.html#select-clause"
  },"303": {
    "doc": "SELECT Clause",
    "title": "SELECT Clause",
    "content": " ",
    "url": "/sql-syntax-of-the-tool/select-clause.html",
    
    "relUrl": "/sql-syntax-of-the-tool/select-clause.html"
  },"304": {
    "doc": "Set Operators",
    "title": "Set Operators",
    "content": "Set operators in Musoq differ slightly from the operators used in traditional SQL. They compare individual rows and calculate the result for the entire query. In Musoq, you must specify which columns will participate in the comparison, which looks like this: query1 union all (Column1, Column2, ...) query2. Columns must have the same names and order. If you want to use different columns for comparison, you need to give such a column an alias in order to match its name. Here’s how it should look: . select Column from #schema.method() union all (Column) select Column2 as Column from #schema.method() . You cannot mix the return types of the columns, and the number of values returned for both columns must be the same. | Union all - Combines result sets without eliminating any potential duplicates. | Union - Combines result sets and removes duplicated rows, selecting the first occurrence. | Except - Returns differing rows from the left query that do not appear in the right query. | Intersect - Returns only those rows that are present in both the left and right queries. | . ",
    "url": "/sql-syntax-of-the-tool/set-operators.html",
    
    "relUrl": "/sql-syntax-of-the-tool/set-operators.html"
  },"305": {
    "doc": "Specific Syntactic Constructions",
    "title": "Useful Language-Specific Features",
    "content": ". | Accessing Object Properties - When a column is of a composite type, you can use the query syntax ColumnName.SomeProperty to obtain the value of SomeProperty from the ColumnName object. The type of ColumnName must include the SomeProperty. If it has the appropriate property, the column becomes the type that SomeProperty is. You can use the chaining call syntax like ColumnName.SomeProperty.DifferentProperty. It is also permissible to obtain values from arrays using the syntax ColumnName.Prop[0] as well as obtaining values from dictionaries with ColumnName.Prop['test']. | Like / not like Operators - These operators can be used to search for specific patterns in a query. Both the % and _ syntax are supported to find values matching the pattern. | Rlike / not rlike Operators - This is the same operator as like, but instead of using a wildcard symbol, here we specify a regular expression. | Contains Operator - this operator checks whether the column contains a given string of characters. | In Operator - this operator is useful when you need to access a column, and multiple values are considered valid. The expression looks like this: ColumnName in ('abc', 'cda') | Is null / is not null Operators - This operator is used to check whether a column is empty. You can use it for both values and columns expressed by reference. It should be noted that using it for values does not make sense and in fact, the evaluator will discard such a check. Usage looks like ColumnName is null or ColumnName is not null | . ",
    "url": "/sql-syntax-of-the-tool/specific-syntactic-constructions.html#useful-language-specific-features",
    
    "relUrl": "/sql-syntax-of-the-tool/specific-syntactic-constructions.html#useful-language-specific-features"
  },"306": {
    "doc": "Specific Syntactic Constructions",
    "title": "Specific Syntactic Constructions",
    "content": " ",
    "url": "/sql-syntax-of-the-tool/specific-syntactic-constructions.html",
    
    "relUrl": "/sql-syntax-of-the-tool/specific-syntactic-constructions.html"
  },"307": {
    "doc": "SQL Syntax of the Tool",
    "title": "SQL Syntax of the Tool",
    "content": " ",
    "url": "/sql-syntax-of-the-tool.html",
    
    "relUrl": "/sql-syntax-of-the-tool.html"
  },"308": {
    "doc": "Time Utilization",
    "title": "Calculating Startup Time",
    "content": "Sometimes it’s necessary to perform some action periodically. To specify when our script should run, we can use a CRON expression or alternatively express it more descriptively in SQL language. Let’s assume that we need to run a task at midnight on the first Wednesday of every month. The pattern corresponding to this requirement is 0 0 1-7 * 3. To achieve the same pattern using Musoq, the query looks like this: . SELECT DateTime, DayOfWeek FROM #time.interval('01/01/2024', '01/01/2025', 'days') WHERE Day &gt;= 1 AND Day &lt;= 7 AND DayOfWeek = 3 . ",
    "url": "/practical-examples-and-applications/time-utilization.html#calculating-startup-time",
    
    "relUrl": "/practical-examples-and-applications/time-utilization.html#calculating-startup-time"
  },"309": {
    "doc": "Time Utilization",
    "title": "Time Utilization",
    "content": " ",
    "url": "/practical-examples-and-applications/time-utilization.html",
    
    "relUrl": "/practical-examples-and-applications/time-utilization.html"
  },"310": {
    "doc": "Utilities",
    "title": "Utilities",
    "content": " ",
    "url": "/utilities.html",
    
    "relUrl": "/utilities.html"
  },"311": {
    "doc": "WHERE Clause",
    "title": "Where Clause",
    "content": "This clause allows you to filter expressions to retrieve only the rows that meet certain conditions. Here you can use ColumnName columns, their properties ColumnName.Property, methods SomeMethod(...) as well as expressions like 3 + 1 + SomeMethod(..). The result of a method can be used as a parameter for another method, as long as the return type from the method call matches the definition of the external method. To combine conditions, you can use the syntax and and or... where ColumnName = 'something' and SomeMethod(DifferentColumnName) &gt; 7 ... ",
    "url": "/sql-syntax-of-the-tool/where-clause.html#where-clause",
    
    "relUrl": "/sql-syntax-of-the-tool/where-clause.html#where-clause"
  },"312": {
    "doc": "WHERE Clause",
    "title": "WHERE Clause",
    "content": " ",
    "url": "/sql-syntax-of-the-tool/where-clause.html",
    
    "relUrl": "/sql-syntax-of-the-tool/where-clause.html"
  },"313": {
    "doc": "Windows X64",
    "title": "Musoq.DataSources.Os",
    "content": "Provides schema to work with operating system abstractions . ",
    "url": "/data-sources/Os/windows-x64.html#musoqdatasourcesos",
    
    "relUrl": "/data-sources/Os/windows-x64.html#musoqdatasourcesos"
  },"314": {
    "doc": "Windows X64",
    "title": "Tables",
    "content": "Table is a collection of rows and columns that the plugin exposes. Below are the tables that are exposed by this data source. os.dirscompare(string, string) . Compares two directories . | Name | Type | Description | . | SourceFile | ExtendedFileInfo | Source file | . | DestinationFile | ExtendedFileInfo | Destination file | . | State | string | The Same / Modified / Added / Removed | . | SourceRoot | DirectoryInfo | Source directory | . | DestinationRoot | DirectoryInfo | Destination directory | . | SourceFileRelative | string | Relative path to source file | . | DestinationFileRelative | string | Relative path to destination file | . os.directories(string, boolean) . Gets the directories . | Name | Type | Description | . | FullName | string | Full name of the directory | . | Attributes | FileAttributes | Directory attributes | . | CreationTime | DateTime | Creation time | . | CreationTimeUtc | DateTime | Creation time in UTC | . | LastAccessTime | DateTime | Last access time | . | LastAccessTimeUtc | DateTime | Last access time in UTC | . | LastWriteTime | DateTime | Last write time | . | LastWriteTimeUtc | DateTime | Last write time in UTC | . | Exists | bool | Determine does the directory exists | . | Extension | string | Gets the extension part of the file name | . | LastAccessTime | DateTime | Gets the time the current file or directory was last accessed | . | LastAccessTimeUtc | DateTime | Gets the time, in coordinated universal time (UTC), that the current file or directory was last accessed | . | Name | string | Gets the directory name | . | LastWriteTime | DateTime | Gets the date when the file or directory was written to | . | Parent | DirectoryInfo | Gets the parent directory | . | Root | DirectoryInfo | Gets the root directory | . | DirectoryInfo | DirectoryInfo | Gets raw DirectoryInfo | . os.dlls(string path) . Gets the dlls . | Name | Type | Description | . | FileInfo | FileInfo | Gets the metadata about the DLL file | . | Assembly | Assembly | Gets the Assembly object | . | Version | FileVersionInfo | Gets the assembly version | . os.dlls(string path) . Gets the dlls . | Name | Type | Description | . | FileInfo | FileInfo | Gets the metadata about the DLL file | . | Assembly | Assembly | Gets the Assembly object | . | Version | FileVersionInfo | Gets the assembly version | . os.files(string, boolean) . Gets the files . | Name | Type | Description | . | Name | string | Full name of the directory | . | CreationTime | DateTime | Creation time | . | CreationTimeUtc | DateTime | Creation time in UTC | . | LastAccessTime | DateTime | Last access time | . | LastAccessTimeUtc | DateTime | Last access time in UTC | . | LastWriteTime | DateTime | Last write time | . | LastWriteTimeUtc | DateTime | Last write time in UTC | . | DirectoryName | string | Gets the directory name | . | Extension | string | Gets the extension part of the file name | . | FullName | string | Gets the full path of file | . | Exists | bool | Determine whether file exists or not | . | IsReadOnly | bool | Determine whether the file is readonly | . | Length | long | Gets the length of file | . os.processes() . Gets the processes . | Name | Type | Description | . | BasePriority | int | Gets the base priority of associated process | . | EnableRaisingEvents | bool | Gets whether the exited event should be raised when the process terminates | . | ExitCode | int | Gets the value describing process termination | . | ExitTime | DateTime | Exit time in UTC | . | Handle | IntPtr | Gets the native handle of the associated process | . | HandleCount | int | Gets the number of handles opened by the process | . | HasExited | bool | Gets a value indicating whether the associated process has been terminated | . | Id | int | Gets the unique identifier for the associated process | . | MachineName | string | Gets the name of the computer the associated process is running on | . | MainWindowTitle | string | Gets the caption of the main window of the process | . | PagedMemorySize64 | long | Gets a value indicating whether the user interface of the process is responding | . | ProcessName | string | The name that the system uses to identify the process to the user | . | ProcessorAffinity | IntPtr | Gets the processors on which the threads in this process can be scheduled to run | . | Responding | bool | Gets a value indicating whether the user interface of the process is responding | . | StartTime | DateTime | Gets the time that the associated process was started | . | TotalProcessorTime | TimeSpan | Gets the total processor time for this process | . | UserProcessorTime | TimeSpan | Gets the user processor time for this process | . | Directory | string | Gets the directory of the process | . | FileName | string | Gets the filename of the process | . os.zip(string path) . Gets the zip files . | Name | Type | Description | . | Name | string | Gets the file name of the entry in the zip archive | . | FullName | string | Gets the relative path of the entry in the zip archive | . | CompressedLength | long | Gets the compressed size of the entry in the zip archive | . | LastWriteTime | DateTimeOffset | Gets the last time the entry in the zip archive was changed | . | Length | long | Gets the uncompressed size of the entry in the zip archive | . | IsDirectory | bool | Determine whether the entry is a directory | . | Level | int | Gets the nesting level | . os.metadata(string directoryOrFile) . Gets the metadata for file or for files within the directory . | Name | Type | Description | . | FullName | string | Gets the full path of the file | . | DirectoryName | string | Gets the directory the metadata resides in | . | TagName | string | Gets the tag name | . | Description | string | Gets the description | . os.metadata(string directory, bool useSubdirectories) . Gets the metadata for files within directories . | Name | Type | Description | . | FullName | string | Gets the full path of the file | . | DirectoryName | string | Gets the directory the metadata resides in | . | TagName | string | Gets the tag name | . | Description | string | Gets the description | . ",
    "url": "/data-sources/Os/windows-x64.html#tables",
    
    "relUrl": "/data-sources/Os/windows-x64.html#tables"
  },"315": {
    "doc": "Windows X64",
    "title": "Methods",
    "content": "Methods are functions that can be called on the data source specific column. Below are the methods that are exposed by this data source. bool IsZipArchive(string extension) . Determines whether the extension is zip archive. bool IsZipArchive() . Determines whether the extension is zip archive. bool IsArchive(string extension) . Determine whether the extension is archive. bool IsArchive() . Determines whether the file is archive. bool IsAudio(string extension) . Determine whether the extension is audio. bool IsAudio() . Determine whether the extension is audio. bool IsBook(string extension) . Determine whether the extension is book. bool IsBook() . Determine whether the extension is book. bool IsDoc(string extension) . Determine whether the extension is document. bool IsDoc() . Determine whether the extension is document. bool IsImage(string extension) . Determine whether the extension is image. bool IsImage() . Determine whether the extension is image. bool IsSource(string extension) . Determine whether the extension is source. bool IsSource() . Determine whether the extension is source. bool IsVideo(string extension) . Determine whether the extension is video. bool IsVideo() . Determine whether the extension is video. string? GetFileContent() . Gets the file content . string GetRelativePath() . Gets the relative path of a file . string GetRelativePath(string basePath) . Gets the relative path of a file . byte[] Head(int length) . Gets head bytes of a file . byte[] Tail(int length) . Gets tail bytes of a file . byte[] GetFileBytes(long bytesCount, long offset) . Gets file bytes of a file . string Sha1File() . Computes Sha1 hash of a file . string Sha256File() . Computes Sha256 hash of a file . string Sha256File(IO.FileInfo file) . Computes Sha256 hash of a file . string Md5File() . Computes Md5 hash of a file . string Base64File() . Turns file into base64 string . bool HasContent(string pattern) . Determine whether file has specific content . bool HasAttribute(long flags) . Determine whether file has attribute . string GetLinesContainingWord(string word) . Gets lines containing word . long GetFileLength(string unit) . Gets the file length . long GetLengthOfFile(string unit) . Gets the file length . string? SubPath(int nesting) . Gets the SubPath from the path . string? SubPath(int nesting) . Gets the SubPath from the path . string? RelativeSubPath(int nesting) . Gets the relative SubPath from the path . string? SubPath(string? directoryPath, int? nesting) . Gets the relative SubPath from the path . long Length(string unit) . Gets the length of the file . Musoq.DataSources.Os.Files.ExtendedFileInfo? GetFileInfo(string fullPath) . Gets the file info . Musoq.DataSources.Os.Files.ExtendedFileInfo GetExtendedFileInfo() . Gets extended file info . long CountOfLines() . Gets the count of lines of a file . long CountOfNotEmptyLines() . Gets the count of non empty lines of a file . string Combine(string path1, string path2) . Combines the paths . string Combine(string path1, string path2, string path3) . Combines the paths . string Combine(string path1, string path2, string path3, string path4) . Combines the paths . string Combine(string path1, string path2, string path3, string path4, string path5) . Combines the paths . string Combine(string[] paths) . Combines the paths . string? GetDirectoryName(string? path) . Gets the directory name . string? GetFileName(string? path) . Gets the file name . string? GetFileNameWithoutExtension(string? path) . Gets the file name without extension . string? GetExtension(string? path) . Gets the extension . string? GetMetadata(string directoryName, string tagName) . Gets the metadata of a file . string? GetMetadata(string tagName) . Gets the metadata of a file . bool HasMetadataDirectory(string directoryName) . Checks whether file has metadata directory . bool HasMetadataTag(string directoryName, string tagName) . Checks whether file has metadata tag . bool HasMetadataTag(string tagName) . Checks whether file has metadata tag . string AllMetadataJson() . Gets all metadata of a file and returns it as json . IReadOnlyList&lt;Musoq.DataSources.Os.Files.ExtendedFileInfo&gt;? AggregateFiles(string name) . Gets the aggregated average value from the given group name . IReadOnlyList&lt;IO.DirectoryInfo&gt;? AggregateDirectories(string name) . Gets the aggregated average value from the given group name . ",
    "url": "/data-sources/Os/windows-x64.html#methods",
    
    "relUrl": "/data-sources/Os/windows-x64.html#methods"
  },"316": {
    "doc": "Windows X64",
    "title": "Base Methods",
    "content": "Base methods are methods that can be called on the data source specific column. Those methods are automatically inherited and enriches the data source specific methods. Below are those base methods that are exposed by this data source. int RowNumber() . Gets the row number of the current row. string? GetTypeName(object? obj) . Gets the typename of passed object. string AggregateValues(string name) . Aggregates values into a single value. string AggregateValues(string name, int parent) . Aggregates values into a single value. Decimal Avg(string name) . Gets the aggregated average value from the given group name . Decimal Avg(string name, int parent) . Gets the aggregated average value from the given group name . byte? ShiftLeft(byte? value, int shift) . Shifts the value to the left by the specified number of bits. short? ShiftLeft(short? value, int shift) . Shifts the value to the left by the specified number of bits. int? ShiftLeft(int? value, int shift) . Shifts the value to the left by the specified number of bits. long? ShiftLeft(long? value, int shift) . Shifts the value to the left by the specified number of bits. sbyte? ShiftLeft(sbyte? value, int shift) . Shifts the value to the left by the specified number of bits. ushort? ShiftLeft(ushort? value, int shift) . Shifts the value to the left by the specified number of bits. uint? ShiftLeft(uint? value, int shift) . Shifts the value to the left by the specified number of bits. ulong? ShiftLeft(ulong? value, int shift) . Shifts the value to the left by the specified number of bits. byte? ShiftRight(byte? value, int shift) . Shifts the value to the right by the specified number of bits. short? ShiftRight(short? value, int shift) . Shifts the value to the right by the specified number of bits. int? ShiftRight(int? value, int shift) . Shifts the value to the right by the specified number of bits. long? ShiftRight(long? value, int shift) . Shifts the value to the right by the specified number of bits. sbyte? ShiftRight(sbyte? value, int shift) . Shifts the value to the right by the specified number of bits. ushort? ShiftRight(ushort? value, int shift) . Shifts the value to the right by the specified number of bits. uint? ShiftRight(uint? value, int shift) . Shifts the value to the right by the specified number of bits. ulong? ShiftRight(ulong? value, int shift) . Shifts the value to the right by the specified number of bits. byte? Not(byte? value) . Performs bitwise NOT operation on a given value. short? Not(short? value) . Performs bitwise NOT operation on a given value. int? Not(int? value) . Performs bitwise NOT operation on a given value. long? Not(long? value) . Performs bitwise NOT operation on a given value. sbyte? Not(sbyte? value) . Performs bitwise NOT operation on a given value. ushort? Not(ushort? value) . Performs bitwise NOT operation on a given value. uint? Not(uint? value) . Performs bitwise NOT operation on a given value. ulong? Not(ulong? value) . Performs bitwise NOT operation on a given value. byte? And(byte? left, byte? right) . Performs bitwise AND operation on two given values. int? And(byte? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(byte? left, short? right) . Performs bitwise AND operation on two given values. int? And(byte? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(byte? left, int? right) . Performs bitwise AND operation on two given values. uint? And(byte? left, uint? right) . Performs bitwise AND operation on two given values. long? And(byte? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(byte? left, ulong? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, byte? right) . Performs bitwise AND operation on two given values. sbyte? And(sbyte? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, short? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, int? right) . Performs bitwise AND operation on two given values. uint? And(sbyte? left, uint? right) . Performs bitwise AND operation on two given values. long? And(sbyte? left, long? right) . Performs bitwise AND operation on two given values. int? And(short? left, byte? right) . Performs bitwise AND operation on two given values. int? And(short? left, sbyte? right) . Performs bitwise AND operation on two given values. short? And(short? left, short? right) . Performs bitwise AND operation on two given values. int? And(short? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(short? left, int? right) . Performs bitwise AND operation on two given values. uint? And(short? left, uint? right) . Performs bitwise AND operation on two given values. long? And(short? left, long? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, byte? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, short? right) . Performs bitwise AND operation on two given values. ushort? And(ushort? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, int? right) . Performs bitwise AND operation on two given values. uint? And(ushort? left, uint? right) . Performs bitwise AND operation on two given values. long? And(ushort? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(ushort? left, ulong? right) . Performs bitwise AND operation on two given values. int? And(int? left, byte? right) . Performs bitwise AND operation on two given values. int? And(int? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(int? left, short? right) . Performs bitwise AND operation on two given values. int? And(int? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(int? left, int? right) . Performs bitwise AND operation on two given values. uint? And(int? left, uint? right) . Performs bitwise AND operation on two given values. long? And(int? left, long? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, uint? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, byte? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, sbyte? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, short? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, ushort? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, int? right) . Performs bitwise AND operation on two given values. ulong? And(uint? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(uint? left, ulong? right) . Performs bitwise AND operation on two given values. long? And(long? left, long? right) . Performs bitwise AND operation on two given values. long? And(long? left, byte? right) . Performs bitwise AND operation on two given values. long? And(long? left, sbyte? right) . Performs bitwise AND operation on two given values. long? And(long? left, short? right) . Performs bitwise AND operation on two given values. long? And(long? left, ushort? right) . Performs bitwise AND operation on two given values. long? And(long? left, int? right) . Performs bitwise AND operation on two given values. long? And(long? left, uint? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, byte? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, ushort? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, uint? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, ulong? right) . Performs bitwise AND operation on two given values. byte? Or(byte? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, short? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(byte? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(byte? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(byte? left, ulong? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, byte? right) . Performs bitwise OR operation on two given values. sbyte? Or(sbyte? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, short? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(sbyte? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(sbyte? left, long? right) . Performs bitwise OR operation on two given values. int? Or(short? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(short? left, sbyte? right) . Performs bitwise OR operation on two given values. short? Or(short? left, short? right) . Performs bitwise OR operation on two given values. int? Or(short? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(short? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(short? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(short? left, long? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, short? right) . Performs bitwise OR operation on two given values. ushort? Or(ushort? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(ushort? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(ushort? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(ushort? left, ulong? right) . Performs bitwise OR operation on two given values. int? Or(int? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(int? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(int? left, short? right) . Performs bitwise OR operation on two given values. int? Or(int? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(int? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(int? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(int? left, long? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, uint? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, byte? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, sbyte? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, short? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, ushort? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, int? right) . Performs bitwise OR operation on two given values. ulong? Or(uint? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(uint? left, ulong? right) . Performs bitwise OR operation on two given values. long? Or(long? left, long? right) . Performs bitwise OR operation on two given values. long? Or(long? left, byte? right) . Performs bitwise OR operation on two given values. long? Or(long? left, sbyte? right) . Performs bitwise OR operation on two given values. long? Or(long? left, short? right) . Performs bitwise OR operation on two given values. long? Or(long? left, ushort? right) . Performs bitwise OR operation on two given values. long? Or(long? left, int? right) . Performs bitwise OR operation on two given values. long? Or(long? left, uint? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, byte? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, ushort? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, uint? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, ulong? right) . Performs bitwise OR operation on two given values. byte? Xor(byte? left, byte? right) . Performs bitwise OR operation on two given values. int? Xor(byte? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(byte? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(byte? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(byte? left, ulong? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, byte? right) . Performs bitwise Xor operation on two given values. sbyte? Xor(sbyte? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(sbyte? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(sbyte? left, long? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, sbyte? right) . Performs bitwise Xor operation on two given values. short? Xor(short? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, ushort? right) . Performs bitwise XOR operation on two given values. int? Xor(short? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(short? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(short? left, long? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, short? right) . Performs bitwise Xor operation on two given values. ushort? Xor(ushort? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(ushort? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(ushort? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ushort? left, ulong? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(int? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(int? left, long? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, uint? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, byte? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, sbyte? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, short? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, ushort? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, int? right) . Performs bitwise Xor operation on two given values. ulong? Xor(uint? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(uint? left, ulong? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, long? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, byte? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, sbyte? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, short? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, ushort? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, int? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, uint? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, ulong? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, byte? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, ushort? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, uint? right) . Performs bitwise Xor operation on two given values. byte[] GetBytes(string? content) . Gets the bytes from the given string. byte[] GetBytes(string? content, int length, int offset) . Gets the bytes from the given string within given offset and length. byte?[]? GetBytes(char? character) . Gets the bytes from the given character. byte?[]? GetBytes(bool? bit) . Gets the bytes from the given boolean. byte?[]? GetBytes(long? value) . Gets the bytes from the given long. byte?[]? GetBytes(int? value) . Gets the bytes from the given int. byte?[]? GetBytes(short? value) . Gets the bytes from the given short. byte?[]? GetBytes(ulong? value) . Gets the bytes from the given ulong. byte?[]? GetBytes(ushort? value) . Gets the bytes from the given ushort. byte?[]? GetBytes(uint? value) . Gets the bytes from the given uint. byte?[]? GetBytes(Decimal? value) . Gets the bytes from the given decimal. byte?[]? GetBytes(double? value) . Gets the bytes from the given double. byte?[]? GetBytes(float? value) . Gets the bytes from the given float. string? ToBin(byte?[]? bytes, string delimiter) . Converts given bytes to binary with defined delimiter . string ToBin&lt;T&gt;(T value) . Converts given value to binary . string ToOcta&lt;T&gt;(T value) . Converts given value to octal . string ToDec&lt;T&gt;(T value) . Converts given value to decimal . string ToBase64(byte[] value) . Converts given value to string . string ToBase64(byte[] value, int offset, int length) . Converts given array of bytes to string . byte[] FromBase64(string value) . Converts given string to bytes array . bool FromBytesToBool(byte[] value) . Converts bytes to boolean value. short FromBytesToInt16(byte[] value) . Converts bytes to a 16-bit signed integer. ushort FromBytesToUInt16(byte[] value) . Converts bytes to a 16-bit unsigned integer. int FromBytesToInt32(byte[] value) . Converts bytes to a 32-bit signed integer. uint FromBytesToUInt32(byte[] value) . Converts bytes to a 32-bit unsigned integer. long FromBytesToInt64(byte[] value) . Converts bytes to a 64-bit signed integer. ulong FromBytesToUInt64(byte[] value) . Converts bytes to a 64-bit unsigned integer. float FromBytesToFloat(byte[] value) . Converts bytes to a float value. double FromBytesToDouble(byte[] value) . Converts bytes to a float value. string FromBytesToString(byte[] value) . Converts bytes to a string. byte[] ToBytes(bool value) . Converts boolean value to bytes. byte[] ToBytes(short value) . Converts short value to bytes. byte[] ToBytes(ushort value) . Converts ushort value to bytes. byte[] ToBytes(int value) . Converts int value to bytes. byte[] ToBytes(uint value) . Converts uint value to bytes. byte[] ToBytes(long value) . Converts long value to bytes. byte[] ToBytes(ulong value) . Converts long value to bytes. string? ToHex(byte?[]? bytes, string delimiter) . Converts given bytes to hex with defined delimiter . string? ToHex&lt;T&gt;(T value) . Converts given value to binary . int Count(string name) . Gets the count value of a given group. int Count(string name, int parent) . Gets the count value of a given group. int ExtractFromDate(string? date, string partOfDate) . Extracts part of the date from the date . int ExtractFromDate(string date, string culture, string partOfDate) . Extracts part of the date from the date based on given culture . DateTimeOffset? GetDate() . Gets the current datetime . DateTimeOffset? UtcGetDate() . Gets the current datetime in UTC . int? Month(DateTimeOffset? value) . Gets the month from DateTimeOffset . int? Year(DateTimeOffset? value) . Gets the year from DateTimeOffset . int? Day(DateTimeOffset? value) . Gets the day from DateTimeOffset . int? Hour(DateTimeOffset? value) . Gets the hour from DateTimeOffset . int? Minute(DateTimeOffset? value) . Gets the minute from DateTimeOffset . int? Second(DateTimeOffset? value) . Gets the second from DateTimeOffset . int? Milliseconds(DateTimeOffset? value) . Gets the millisecond from DateTimeOffset . int? DayOfWeek(DateTimeOffset? value) . Gets the day of week from DateTimeOffset . TimeSpan? ExtractTimeSpan(DateTimeOffset? dateTimeOffset) . Extracts time from DateTimeOffset . DateTime? ToDateTimeOffset(string value) . Converts given value to DateTimeOffset . DateTimeOffset? ToDateTimeOffset(string value, string culture) . Converts given value to DateTimeOffset . IEnumerable&lt;T&gt;? Skip&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? skipCount) . Skips elements from the beginning of the sequence. IEnumerable&lt;T&gt;? Take&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? takeCount) . Takes elements from the beginning of the sequence. IEnumerable&lt;T&gt;? SkipAndTake&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? skipCount, int? takeCount) . Skip and takes elements from the beginning of the sequence. T[]? EnumerableToArray&lt;T&gt;(IEnumerable&lt;T&gt;? values) . Turn array arguments of T into a single array. T[]? MergeArrays&lt;T&gt;(T[][]? values) . Turn array arguments of T into a single array. IEnumerable&lt;T&gt;? LongestCommonSequence&lt;T&gt;(IEnumerable&lt;T&gt;? source, IEnumerable&lt;T&gt;? pattern) . Computes longest common sequence of two given sequences . T? GetElementAtOrDefault&lt;T&gt;(IEnumerable&lt;T&gt;? enumerable, int? index) . Gets the element at the specified index in a sequence . int? Length&lt;T&gt;(IEnumerable&lt;T&gt;? enumerable) . Gets the length of the sequence . int? Length&lt;T&gt;(T[]? array) . Gets the length of the array . T? Choose&lt;T&gt;(int? index, T[] values) . Gets the value of an array at the specified index . T If&lt;T&gt;(bool expressionResult, T a, T b) . Chose a or b value based on the expression result . bool? Match(string? regex, string? content) . Determine whether content matches the specified pattern . byte? Coalesce(byte?[] array) . Gets the first non-null value in a list . sbyte? Coalesce(sbyte?[] array) . Gets the first non-null value in a list . short? Coalesce(short?[] array) . Gets the first non-null value in a list . ushort? Coalesce(ushort?[] array) . Gets the first non-null value in a list . int? Coalesce(int?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(uint?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(long?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(ulong?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(Decimal?[] array) . Gets the first non-null value in a list . T? Coalesce&lt;T&gt;(T[] array) . Gets the first non-null value in a list . IEnumerable&lt;T&gt;? Distinct&lt;T&gt;(IEnumerable&lt;T&gt;? values) . Returns distinct elements from a collection. string? Md5(string? content) . Gets the md5 hash of the given string. string? Md5(byte?[]? content) . Gets the md5 hash of the given bytes array. string? Sha1(string? content) . Gets the sha256 hash of the given string. string? Sha1(byte?[]? content) . Gets the sha256 hash of the given bytes array. string? Sha256(string? content) . Gets the sha256 hash of the given string. string? Sha256(byte?[]? content) . Gets the sha256 hash of the given bytes array. string? Sha512(string? content) . Gets the sha256 hash of the given string. string? Sha512(byte?[]? content) . Gets the sha256 hash of the bytes array. string? ToJson&lt;T&gt;(T? obj) . Converts object to json. string[] ExtractFromJsonToArray(string? json, string? path) . Extracts values from json by path. string? ExtractFromJson(string? json, string? path) . Extracts values from json by path and joins them with comma. Decimal? Abs(Decimal? value) . Gets the absolute value . long? Abs(long? value) . Gets the absolute value . int? Abs(int? value) . Gets the absolute value . Decimal? Ceil(Decimal? value) . Gets the ceiling value . Decimal? Floor(Decimal? value) . Gets the floor value . Decimal? Sign(Decimal? value) . Determine whether value is greater, equal or less that zero . long? Sign(long? value) . Determine whether value is greater, equal or less that zero . Decimal? Round(Decimal? value, int precision) . Rounds the value within given precision . Decimal? PercentOf(Decimal? value, Decimal? max) . Gets the percentage of the value . int Rand() . Gets the random integer value . int? Rand(int? min, int? max) . Gets the random integer value . double? Pow(Decimal? x, Decimal? y) . Computes the pow between two values . double? Pow(double? x, double? y) . Computes the pow between two values . double? Sqrt(Decimal? x) . Computes the sqrt of a given value . double? Sqrt(double? x) . Computes the sqrt of a given value . double? Sqrt(long? x) . Computes the sqrt of a given value . double? PercentRank&lt;T&gt;(IEnumerable&lt;T&gt;? window, T? value) . Computes the percent rank of a given window . double? Log(Decimal? base, Decimal? value) . Calculates the logarithm of a value with a specified base. Decimal? Sin(Decimal? value) . Calculates sine of a value. double? Sin(double? value) . Calculates sine of a value. float? Sin(float? value) . Calculates sine of a value. Decimal? Cos(Decimal? value) . Calculates cosine of a value. double? Cos(double? value) . Calculates cosine of a value. float? Cos(float? value) . Calculates cosine of a value. Decimal Max(string name) . Gets the max value of a given group. Decimal Max(string name, int parent) . Gets the max value of a given group. Decimal Min(string name) . Gets the min value of a given group. Decimal Min(string name, int parent) . Gets the min value of a given group. Decimal StDev(string name, int parent) . Gets the StDev value of a given group. string NewId() . Gets the new identifier . string? Trim(string? value) . Removes leading and trailing whitespace from a string. string? TrimStart(string? value) . Removes leading whitespace from a string. string? TrimEnd(string? value) . Removes trailing whitespace from a string. string? Substring(string? value, int? index, int? length) . Gets the substring from the string. string? Substring(string value, int? length) . Gets the substring from the string . string? Concat(string[]? strings) . Concatenates the specified values . string? Concat(char?[]? characters) . Concatenates the specified characters . string? Concat(string? firstString, char?[]? chars) . Concatenates specified string fir characters . string? Concat(char? firstChar, string[]? strings) . Concatenate specific character with strings . string? Concat(object[]? objects) . Concatenates the specified strings . string? Concat&lt;T&gt;(T[]? objects) . Concatenates the specified strings . bool? Contains(string? content, string? what) . Determine whether the string contains the specified value . int? IndexOf(string? value, string? text) . Position of the first occurrence of the specified value . string? Soundex(string? value) . Computes soundex for the specified value . bool HasFuzzyMatchedWord(string text, string word, string separator) . Matches the specified text by splitting it with separator and applying fuzzy comparison . bool HasWordThatHasSmallerLevenshteinDistanceThan(string text, string word, int distance, string separator) . Matches the specified text by splitting it with separator and applying fuzzy comparison with a given distance . bool HasWordThatSoundLike(string text, string word, string separator) . Matches whether the specified word is present after being fuzzified within the specified text . bool HasTextThatSoundLikeSentence(string text, string sentence, string separator) . Matches whether the specified text is present in sentence after being fuzified . string? ToUpper(string value) . Makes the string uppercase . string? ToUpper(string value, string culture) . Makes the string uppercase within specified culture . string? ToUpperInvariant(string value) . Makes the string uppercase . string? ToLower(string value) . Makes the string lowercase . string? ToLower(string value, string culture) . Makes the string lowercase within specified culture . string? ToLowerInvariant(string value) . Makes the string lowercase . string? PadLeft(string? value, string? character, int? totalWidth) . Returns a new string that right-aligns the characters in this instance by padding them on the left with a specified Unicode character, for a specified total lengt . string? PadRight(string? value, string? character, int? totalWidth) . Returns a new string that left-aligns the characters in this instance by padding them on the right with a specified Unicode character, for a specified total length . string? Head(string? value, int? length) . Gets the first N characters of the string . string? Tail(string? value, int? length) . Gets the last N characters of the string . int? LevenshteinDistance(string? firstValue, string? secondValue) . Computes the Levenshtein distance between two strings . char? GetCharacterOf(string value, int index) . Gets the character at specified index . string? Reverse(string? value) . Reverses the string . string[] Split(string value, string[] separators) . Splits the string into an array of substrings based on the specified separators . char[] ToCharArray(string value) . Splits the string into an array of characters . string? LongestCommonSubstring(string source, string pattern) . Computes the longest common subsequence between two source and pattern . string Replicate(string value, int integer) . Clones the value n times . string? Translate(string? value, string? characters, string? translations) . Returns the string from the first argument after the characters specified in the second argument are translated into the characters specified in the third argument. string? Replace(string? text, string lookFor, string? changeTo) . Replaces the first occurrence of a specified string in this instance with another specified string . string? ToTitleCase(string? value) . Capitalizes the first letter of the string . string? GetNthWord(string? text, int? wordIndex, string? separator) . Gets the nth word of the string . string? GetFirstWord(string text, string separator) . Gets the first word of the string . string? GetSecondWord(string text, string separator) . Gets the second word of the string . string? GetThirdWord(string text, string separator) . Gets the third word of the string . string? GetLastWord(string? text, string? separator) . Gets last word of the string . bool? IsNullOrEmpty(string? value) . Determines whether the string is null or empty . bool? IsNullOrWhiteSpace(string? value) . Determines whether the string is null or whitespace . string? UrlEncode(string? value) . Encodes the value . string? UrlDecode(string? value) . Decodes the value . string? UriEncode(string? value) . Encodes the value . string? UriDecode(string? value) . Decodes the value . bool? StartsWith(string? value, string? prefix) . Determines whether the string starts with the specified prefix . bool? StartsWith(string? value, string? prefix, string comparison) . Determines whether the string starts with the specified prefix . bool? EndsWith(string? value, string? suffix) . Determines whether the string ends with the specified suffix . bool? EndsWith(string? value, string? suffix, string comparison) . Determines whether the string ends with the specified suffix . string? RegexReplace(string? value, string? pattern, string? replacement) . Replace the specified value part that matches the pattern with the replacement . string[]? SplitByLinuxNewLines(string? input) . Split string by Linux-style newlines (\\n) . string[]? SplitByWindowsNewLines(string? input) . Split string by Windows-style newlines (\\r\\n) . string[]? SplitByNewLines(string? input) . Smart split that handles both Windows (\\r\\n) and Linux (\\n) newlines . Decimal Sum(string name) . Gets the sum value of a given group. Decimal Sum(string name, int parent) . Gets the sum value of a given group. Decimal SumIncome(string name) . Gets the sum value of a given group. Decimal SumIncome(string name, int parent) . Gets the sum value of a given group. Decimal SumOutcome(string name) . Gets the outcome value of a given group. Decimal SumOutcome(string name, int parent) . Gets the outcome value of a given group. TimeSpan? SumTimeSpan(string name) . Gets the sum value of a given group. TimeSpan? SumTimeSpan(string name, int parent) . Gets the sum value of a given group. TimeSpan? MinTimeSpan(string name) . Gets the min value of a given group. TimeSpan? MinTimeSpan(string name, int parent) . Gets the min value of a given group. TimeSpan? MaxTimeSpan(string name) . Gets the max value of a given group. TimeSpan? MaxTimeSpan(string name, int parent) . Gets the min value of a given group. char? ToChar(string? value) . Converts given value to character . char? ToChar(int? value) . Converts given value to character . char? ToChar(short? value) . Converts given value to character . char? ToChar(byte? value) . Converts given value to character . char? ToChar(object? value) . Converts given value to character . DateTime? ToDateTime(string value) . Converts given value to DateTime . DateTime? ToDateTime(string value, string culture) . Converts given value to DateTime . Decimal? ToDecimal(string? value) . Converts given value to decimal . Decimal? ToDecimal(string value, string culture) . Converts given value to decimal withing given culture . Decimal? ToDecimal(byte? value) . Converts given value to Decimal . Decimal? ToDecimal(sbyte? value) . Converts given value to Decimal . Decimal? ToDecimal(short? value) . Converts given value to Decimal . Decimal? ToDecimal(ushort? value) . Converts given value to Decimal . Decimal? ToDecimal(long? value) . Converts given value to Decimal . Decimal? ToDecimal(ulong? value) . Converts given value to Decimal . Decimal? ToDecimal(float? value) . Converts given value to Decimal . Decimal? ToDecimal(double? value) . Converts given value to Decimal . Decimal? ToDecimal(object? value) . Converts given value to Decimal . double? ToDouble(object? value) . Converts given value to double . double? ToDouble(string? value) . Converts given value to double . double? ToDouble(byte? value) . Converts given value to double . double? ToDouble(sbyte? value) . Converts given value to double . double? ToDouble(short? value) . Converts given value to double . double? ToDouble(ushort? value) . Converts given value to double . double? ToDouble(int? value) . Converts given value to double . double? ToDouble(uint? value) . Converts given value to double . double? ToDouble(long? value) . Converts given value to double . double? ToDouble(ulong? value) . Converts given value to double . double? ToDouble(float? value) . Converts given value to double . double? ToDouble(double? value) . Converts given value to double . double? ToDouble(Decimal? value) . Converts given value to double . float? ToFloat(string? value) . Converts given value to float . float? ToFloat(byte? value) . Converts given value to float . float? ToFloat(sbyte? value) . Converts given value to float . float? ToFloat(short? value) . Converts given value to float . float? ToFloat(ushort? value) . Converts given value to float . float? ToFloat(int? value) . Converts given value to float . float? ToFloat(uint? value) . Converts given value to float . float? ToFloat(long? value) . Converts given value to float . float? ToFloat(ulong? value) . Converts given value to float . float? ToFloat(float? value) . Converts given value to float . float? ToFloat(Decimal? value) . Converts given value to float . int? ToInt32(string value) . Converts given value to int . int? ToInt32(byte? value) . Converts given value to int . int? ToInt32(sbyte? value) . Converts given value to int . int? ToInt32(short? value) . Converts given value to int . int? ToInt32(ushort? value) . Converts given value to int . int? ToInt32(int? value) . Converts given value to int . int? ToInt32(uint? value) . Converts given value to int . int? ToInt32(long? value) . Converts given value to int . int? ToInt32(ulong? value) . Converts given value to int . int? ToInt32(float? value) . Converts given value to int . int? ToInt32(double? value) . Converts given value to int . int? ToInt32(Decimal? value) . Converts given value to int . int? ToInt32(object? value) . Converts given value to int . long? ToInt64(string value) . Converts given value to Int64 . long? ToInt64(byte? value) . Converts given value to long . long? ToInt64(sbyte? value) . Converts given value to long . long? ToInt64(short? value) . Converts given value to long . long? ToInt64(ushort? value) . Converts given value to long . long? ToInt64(int? value) . Converts given value to long . long? ToInt64(uint? value) . Converts given value to long . long? ToInt64(long? value) . Converts given value to long . long? ToInt64(ulong? value) . Converts given value to long . long? ToInt64(float? value) . Converts given value to long . long? ToInt64(double? value) . Converts given value to long . long? ToInt64(Decimal? value) . Converts given value to long . long? ToInt64(object? value) . Converts given value to long . string? ToString(char? value) . Converts given value to string . string? ToString(DateTimeOffset? value) . Converts given value to string . string? ToString(DateTimeOffset? value, string format) . Converts given value to string . string? ToString(byte? value) . Converts given value to string . string? ToString(byte? value, string format) . Converts given value to string . string? ToString(sbyte? value) . Converts given value to string . string? ToString(sbyte? value, string format) . Converts given value to string . string? ToString(int? value) . Converts given value to string . string? ToString(int? value, string format) . Converts given value to string . string? ToString(uint? value) . Converts given value to string . string? ToString(uint? value, string format) . Converts given value to string . string? ToString(long? value) . Converts given value to string . string? ToString(long? value, string format) . Converts given value to string . string? ToString(ulong? value) . Converts given value to string . string? ToString(ulong? value, string format) . Converts given value to string . string? ToString(float? value) . Converts given value to string . string? ToString(float? value, string format) . Converts given value to string . string? ToString(double? value) . Converts given value to string . string? ToString(double? value, string format) . Converts given value to string . string? ToString(Decimal? value) . Converts given value to string . string? ToString(Decimal? value, string format) . Converts given value to string . string? ToString(bool? value) . Converts given value to string . string? ToString(object? value) . Converts given value to string . string? ToString&lt;T&gt;(T? value) . Converts given value to string . string ToString(string[] value) . Converts given value to string . string ToString&lt;T&gt;(T[] value) . Converts given value to string . TimeSpan? ToTimeSpan(string value) . Converts given value to TimeSpan . TimeSpan? ToTimeSpan(string value, string culture) . Converts given value to TimeSpan . IEnumerable&lt;T&gt; Window&lt;T&gt;(string name) . Gets the window . ",
    "url": "/data-sources/Os/windows-x64.html#base-methods",
    
    "relUrl": "/data-sources/Os/windows-x64.html#base-methods"
  },"317": {
    "doc": "Windows X64",
    "title": "Windows X64",
    "content": " ",
    "url": "/data-sources/Os/windows-x64.html",
    
    "relUrl": "/data-sources/Os/windows-x64.html"
  },"318": {
    "doc": "Windows X64",
    "title": "Musoq.DataSources.OpenAI",
    "content": "Provides interface to work with OpenAI API. ",
    "url": "/data-sources/OpenAI/windows-x64.html#musoqdatasourcesopenai",
    
    "relUrl": "/data-sources/OpenAI/windows-x64.html#musoqdatasourcesopenai"
  },"319": {
    "doc": "Windows X64",
    "title": "Tables",
    "content": "Table is a collection of rows and columns that the plugin exposes. Below are the tables that are exposed by this data source. openai.gpt() . Gives the access to OpenAI api . Environment variables . In order to use the plugin, the user must set any required environment variables as specified in the environments element. Failure to do so may result in the plugin not functioning correctly. | Name | Is required | Description | . | OPENAI_API_KEY | true | Open AI api key | . Columns . This table has a dynamic structure, which means that its columns and other details cannot be determined until runtime. As a result, it is not possible to include a complete description of this table in the documentation. Instead, the actual columns and other details of this table will be determined at runtime. openai.gpt(string model) . Gives the access to OpenAI api . Environment variables . In order to use the plugin, the user must set any required environment variables as specified in the environments element. Failure to do so may result in the plugin not functioning correctly. | Name | Is required | Description | . | OPENAI_API_KEY | true | Open AI api key | . Columns . This table has a dynamic structure, which means that its columns and other details cannot be determined until runtime. As a result, it is not possible to include a complete description of this table in the documentation. Instead, the actual columns and other details of this table will be determined at runtime. openai.gpt(string model, int maxTokens) . Gives the access to OpenAI api . Environment variables . In order to use the plugin, the user must set any required environment variables as specified in the environments element. Failure to do so may result in the plugin not functioning correctly. | Name | Is required | Description | . | OPENAI_API_KEY | true | Open AI api key | . Columns . This table has a dynamic structure, which means that its columns and other details cannot be determined until runtime. As a result, it is not possible to include a complete description of this table in the documentation. Instead, the actual columns and other details of this table will be determined at runtime. openai.gpt(string model, int maxTokens, double temperature) . Gives the access to OpenAI api . Environment variables . In order to use the plugin, the user must set any required environment variables as specified in the environments element. Failure to do so may result in the plugin not functioning correctly. | Name | Is required | Description | . | OPENAI_API_KEY | true | Open AI api key | . Columns . This table has a dynamic structure, which means that its columns and other details cannot be determined until runtime. As a result, it is not possible to include a complete description of this table in the documentation. Instead, the actual columns and other details of this table will be determined at runtime. openai.gpt(string model, int maxTokens, double temperature, double frequencyPenalty) . Gives the access to OpenAI api . Environment variables . In order to use the plugin, the user must set any required environment variables as specified in the environments element. Failure to do so may result in the plugin not functioning correctly. | Name | Is required | Description | . | OPENAI_API_KEY | true | Open AI api key | . Columns . This table has a dynamic structure, which means that its columns and other details cannot be determined until runtime. As a result, it is not possible to include a complete description of this table in the documentation. Instead, the actual columns and other details of this table will be determined at runtime. openai.gpt(string model, int maxTokens, double temperature, double frequencyPenalty, double presencePenalty) . Gives the access to OpenAI api . Environment variables . In order to use the plugin, the user must set any required environment variables as specified in the environments element. Failure to do so may result in the plugin not functioning correctly. | Name | Is required | Description | . | OPENAI_API_KEY | true | Open AI api key | . Columns . This table has a dynamic structure, which means that its columns and other details cannot be determined until runtime. As a result, it is not possible to include a complete description of this table in the documentation. Instead, the actual columns and other details of this table will be determined at runtime. ",
    "url": "/data-sources/OpenAI/windows-x64.html#tables",
    
    "relUrl": "/data-sources/OpenAI/windows-x64.html#tables"
  },"320": {
    "doc": "Windows X64",
    "title": "Methods",
    "content": "Methods are functions that can be called on the data source specific column. Below are the methods that are exposed by this data source. bool IsContentAbout(string content, string question) . Determines whether the provided content is related to the given question. Returns true if the content is related, otherwise returns false. string Sentiment(string content, bool throwOnUnknown) . Performs sentiment analysis on the provided content and returns the sentiment as one of the following strings: “POSITIVE”, “NEGATIVE”, “NEUTRAL”, or “UNKNOWN”. string SummarizeContent(string content) . Summarizes the provided content using the OpenAI API and returns the summarized text. string TranslateContent(string content, string from, string to) . Translates the provided content from the source language to the destination language using the OpenAI API. string[] Entities(string content, bool throwOnException) . Extracts entities from the provided content using the OpenAI API and returns an array of entity strings. string LlmPerform&lt;TColumnType&gt;(string whatToDo, TColumnType column) . Performs the specified action on the provided entity using the OpenAI API and returns the result. string DescribeImage(string imageBase64) . Describes the provided image using the OpenAI API and returns a description of the image. string AskImage(string question, string imageBase64) . Asks a question about the provided image using the OpenAI API and returns the answer to the question. bool IsQuestionApplicableToImage(string question, string imageBase64) . Asks a question about the provided image using the OpenAI API and returns a boolean result. int CountTokens(string content) . Counts the number of tokens in the provided content using the specified model. int CountTokens(string content) . Counts the number of tokens in the provided content using the specified model. int CountTokens(string encodingName, string content) . Counts the number of tokens in the provided content using the specified model. ",
    "url": "/data-sources/OpenAI/windows-x64.html#methods",
    
    "relUrl": "/data-sources/OpenAI/windows-x64.html#methods"
  },"321": {
    "doc": "Windows X64",
    "title": "Base Methods",
    "content": "Base methods are methods that can be called on the data source specific column. Those methods are automatically inherited and enriches the data source specific methods. Below are those base methods that are exposed by this data source. int RowNumber() . Gets the row number of the current row. string? GetTypeName(object? obj) . Gets the typename of passed object. string AggregateValues(string name) . Aggregates values into a single value. string AggregateValues(string name, int parent) . Aggregates values into a single value. Decimal Avg(string name) . Gets the aggregated average value from the given group name . Decimal Avg(string name, int parent) . Gets the aggregated average value from the given group name . byte? ShiftLeft(byte? value, int shift) . Shifts the value to the left by the specified number of bits. short? ShiftLeft(short? value, int shift) . Shifts the value to the left by the specified number of bits. int? ShiftLeft(int? value, int shift) . Shifts the value to the left by the specified number of bits. long? ShiftLeft(long? value, int shift) . Shifts the value to the left by the specified number of bits. sbyte? ShiftLeft(sbyte? value, int shift) . Shifts the value to the left by the specified number of bits. ushort? ShiftLeft(ushort? value, int shift) . Shifts the value to the left by the specified number of bits. uint? ShiftLeft(uint? value, int shift) . Shifts the value to the left by the specified number of bits. ulong? ShiftLeft(ulong? value, int shift) . Shifts the value to the left by the specified number of bits. byte? ShiftRight(byte? value, int shift) . Shifts the value to the right by the specified number of bits. short? ShiftRight(short? value, int shift) . Shifts the value to the right by the specified number of bits. int? ShiftRight(int? value, int shift) . Shifts the value to the right by the specified number of bits. long? ShiftRight(long? value, int shift) . Shifts the value to the right by the specified number of bits. sbyte? ShiftRight(sbyte? value, int shift) . Shifts the value to the right by the specified number of bits. ushort? ShiftRight(ushort? value, int shift) . Shifts the value to the right by the specified number of bits. uint? ShiftRight(uint? value, int shift) . Shifts the value to the right by the specified number of bits. ulong? ShiftRight(ulong? value, int shift) . Shifts the value to the right by the specified number of bits. byte? Not(byte? value) . Performs bitwise NOT operation on a given value. short? Not(short? value) . Performs bitwise NOT operation on a given value. int? Not(int? value) . Performs bitwise NOT operation on a given value. long? Not(long? value) . Performs bitwise NOT operation on a given value. sbyte? Not(sbyte? value) . Performs bitwise NOT operation on a given value. ushort? Not(ushort? value) . Performs bitwise NOT operation on a given value. uint? Not(uint? value) . Performs bitwise NOT operation on a given value. ulong? Not(ulong? value) . Performs bitwise NOT operation on a given value. byte? And(byte? left, byte? right) . Performs bitwise AND operation on two given values. int? And(byte? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(byte? left, short? right) . Performs bitwise AND operation on two given values. int? And(byte? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(byte? left, int? right) . Performs bitwise AND operation on two given values. uint? And(byte? left, uint? right) . Performs bitwise AND operation on two given values. long? And(byte? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(byte? left, ulong? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, byte? right) . Performs bitwise AND operation on two given values. sbyte? And(sbyte? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, short? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, int? right) . Performs bitwise AND operation on two given values. uint? And(sbyte? left, uint? right) . Performs bitwise AND operation on two given values. long? And(sbyte? left, long? right) . Performs bitwise AND operation on two given values. int? And(short? left, byte? right) . Performs bitwise AND operation on two given values. int? And(short? left, sbyte? right) . Performs bitwise AND operation on two given values. short? And(short? left, short? right) . Performs bitwise AND operation on two given values. int? And(short? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(short? left, int? right) . Performs bitwise AND operation on two given values. uint? And(short? left, uint? right) . Performs bitwise AND operation on two given values. long? And(short? left, long? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, byte? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, short? right) . Performs bitwise AND operation on two given values. ushort? And(ushort? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, int? right) . Performs bitwise AND operation on two given values. uint? And(ushort? left, uint? right) . Performs bitwise AND operation on two given values. long? And(ushort? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(ushort? left, ulong? right) . Performs bitwise AND operation on two given values. int? And(int? left, byte? right) . Performs bitwise AND operation on two given values. int? And(int? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(int? left, short? right) . Performs bitwise AND operation on two given values. int? And(int? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(int? left, int? right) . Performs bitwise AND operation on two given values. uint? And(int? left, uint? right) . Performs bitwise AND operation on two given values. long? And(int? left, long? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, uint? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, byte? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, sbyte? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, short? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, ushort? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, int? right) . Performs bitwise AND operation on two given values. ulong? And(uint? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(uint? left, ulong? right) . Performs bitwise AND operation on two given values. long? And(long? left, long? right) . Performs bitwise AND operation on two given values. long? And(long? left, byte? right) . Performs bitwise AND operation on two given values. long? And(long? left, sbyte? right) . Performs bitwise AND operation on two given values. long? And(long? left, short? right) . Performs bitwise AND operation on two given values. long? And(long? left, ushort? right) . Performs bitwise AND operation on two given values. long? And(long? left, int? right) . Performs bitwise AND operation on two given values. long? And(long? left, uint? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, byte? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, ushort? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, uint? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, ulong? right) . Performs bitwise AND operation on two given values. byte? Or(byte? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, short? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(byte? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(byte? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(byte? left, ulong? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, byte? right) . Performs bitwise OR operation on two given values. sbyte? Or(sbyte? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, short? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(sbyte? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(sbyte? left, long? right) . Performs bitwise OR operation on two given values. int? Or(short? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(short? left, sbyte? right) . Performs bitwise OR operation on two given values. short? Or(short? left, short? right) . Performs bitwise OR operation on two given values. int? Or(short? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(short? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(short? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(short? left, long? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, short? right) . Performs bitwise OR operation on two given values. ushort? Or(ushort? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(ushort? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(ushort? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(ushort? left, ulong? right) . Performs bitwise OR operation on two given values. int? Or(int? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(int? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(int? left, short? right) . Performs bitwise OR operation on two given values. int? Or(int? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(int? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(int? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(int? left, long? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, uint? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, byte? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, sbyte? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, short? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, ushort? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, int? right) . Performs bitwise OR operation on two given values. ulong? Or(uint? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(uint? left, ulong? right) . Performs bitwise OR operation on two given values. long? Or(long? left, long? right) . Performs bitwise OR operation on two given values. long? Or(long? left, byte? right) . Performs bitwise OR operation on two given values. long? Or(long? left, sbyte? right) . Performs bitwise OR operation on two given values. long? Or(long? left, short? right) . Performs bitwise OR operation on two given values. long? Or(long? left, ushort? right) . Performs bitwise OR operation on two given values. long? Or(long? left, int? right) . Performs bitwise OR operation on two given values. long? Or(long? left, uint? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, byte? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, ushort? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, uint? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, ulong? right) . Performs bitwise OR operation on two given values. byte? Xor(byte? left, byte? right) . Performs bitwise OR operation on two given values. int? Xor(byte? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(byte? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(byte? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(byte? left, ulong? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, byte? right) . Performs bitwise Xor operation on two given values. sbyte? Xor(sbyte? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(sbyte? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(sbyte? left, long? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, sbyte? right) . Performs bitwise Xor operation on two given values. short? Xor(short? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, ushort? right) . Performs bitwise XOR operation on two given values. int? Xor(short? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(short? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(short? left, long? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, short? right) . Performs bitwise Xor operation on two given values. ushort? Xor(ushort? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(ushort? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(ushort? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ushort? left, ulong? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(int? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(int? left, long? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, uint? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, byte? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, sbyte? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, short? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, ushort? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, int? right) . Performs bitwise Xor operation on two given values. ulong? Xor(uint? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(uint? left, ulong? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, long? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, byte? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, sbyte? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, short? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, ushort? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, int? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, uint? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, ulong? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, byte? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, ushort? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, uint? right) . Performs bitwise Xor operation on two given values. byte[] GetBytes(string? content) . Gets the bytes from the given string. byte[] GetBytes(string? content, int length, int offset) . Gets the bytes from the given string within given offset and length. byte?[]? GetBytes(char? character) . Gets the bytes from the given character. byte?[]? GetBytes(bool? bit) . Gets the bytes from the given boolean. byte?[]? GetBytes(long? value) . Gets the bytes from the given long. byte?[]? GetBytes(int? value) . Gets the bytes from the given int. byte?[]? GetBytes(short? value) . Gets the bytes from the given short. byte?[]? GetBytes(ulong? value) . Gets the bytes from the given ulong. byte?[]? GetBytes(ushort? value) . Gets the bytes from the given ushort. byte?[]? GetBytes(uint? value) . Gets the bytes from the given uint. byte?[]? GetBytes(Decimal? value) . Gets the bytes from the given decimal. byte?[]? GetBytes(double? value) . Gets the bytes from the given double. byte?[]? GetBytes(float? value) . Gets the bytes from the given float. string? ToBin(byte?[]? bytes, string delimiter) . Converts given bytes to binary with defined delimiter . string ToBin&lt;T&gt;(T value) . Converts given value to binary . string ToOcta&lt;T&gt;(T value) . Converts given value to octal . string ToDec&lt;T&gt;(T value) . Converts given value to decimal . string ToBase64(byte[] value) . Converts given value to string . string ToBase64(byte[] value, int offset, int length) . Converts given array of bytes to string . byte[] FromBase64(string value) . Converts given string to bytes array . bool FromBytesToBool(byte[] value) . Converts bytes to boolean value. short FromBytesToInt16(byte[] value) . Converts bytes to a 16-bit signed integer. ushort FromBytesToUInt16(byte[] value) . Converts bytes to a 16-bit unsigned integer. int FromBytesToInt32(byte[] value) . Converts bytes to a 32-bit signed integer. uint FromBytesToUInt32(byte[] value) . Converts bytes to a 32-bit unsigned integer. long FromBytesToInt64(byte[] value) . Converts bytes to a 64-bit signed integer. ulong FromBytesToUInt64(byte[] value) . Converts bytes to a 64-bit unsigned integer. float FromBytesToFloat(byte[] value) . Converts bytes to a float value. double FromBytesToDouble(byte[] value) . Converts bytes to a float value. string FromBytesToString(byte[] value) . Converts bytes to a string. byte[] ToBytes(bool value) . Converts boolean value to bytes. byte[] ToBytes(short value) . Converts short value to bytes. byte[] ToBytes(ushort value) . Converts ushort value to bytes. byte[] ToBytes(int value) . Converts int value to bytes. byte[] ToBytes(uint value) . Converts uint value to bytes. byte[] ToBytes(long value) . Converts long value to bytes. byte[] ToBytes(ulong value) . Converts long value to bytes. string? ToHex(byte?[]? bytes, string delimiter) . Converts given bytes to hex with defined delimiter . string? ToHex&lt;T&gt;(T value) . Converts given value to binary . int Count(string name) . Gets the count value of a given group. int Count(string name, int parent) . Gets the count value of a given group. int ExtractFromDate(string? date, string partOfDate) . Extracts part of the date from the date . int ExtractFromDate(string date, string culture, string partOfDate) . Extracts part of the date from the date based on given culture . DateTimeOffset? GetDate() . Gets the current datetime . DateTimeOffset? UtcGetDate() . Gets the current datetime in UTC . int? Month(DateTimeOffset? value) . Gets the month from DateTimeOffset . int? Year(DateTimeOffset? value) . Gets the year from DateTimeOffset . int? Day(DateTimeOffset? value) . Gets the day from DateTimeOffset . int? Hour(DateTimeOffset? value) . Gets the hour from DateTimeOffset . int? Minute(DateTimeOffset? value) . Gets the minute from DateTimeOffset . int? Second(DateTimeOffset? value) . Gets the second from DateTimeOffset . int? Milliseconds(DateTimeOffset? value) . Gets the millisecond from DateTimeOffset . int? DayOfWeek(DateTimeOffset? value) . Gets the day of week from DateTimeOffset . TimeSpan? ExtractTimeSpan(DateTimeOffset? dateTimeOffset) . Extracts time from DateTimeOffset . DateTime? ToDateTimeOffset(string value) . Converts given value to DateTimeOffset . DateTimeOffset? ToDateTimeOffset(string value, string culture) . Converts given value to DateTimeOffset . IEnumerable&lt;T&gt;? Skip&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? skipCount) . Skips elements from the beginning of the sequence. IEnumerable&lt;T&gt;? Take&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? takeCount) . Takes elements from the beginning of the sequence. IEnumerable&lt;T&gt;? SkipAndTake&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? skipCount, int? takeCount) . Skip and takes elements from the beginning of the sequence. T[]? EnumerableToArray&lt;T&gt;(IEnumerable&lt;T&gt;? values) . Turn array arguments of T into a single array. T[]? MergeArrays&lt;T&gt;(T[][]? values) . Turn array arguments of T into a single array. IEnumerable&lt;T&gt;? LongestCommonSequence&lt;T&gt;(IEnumerable&lt;T&gt;? source, IEnumerable&lt;T&gt;? pattern) . Computes longest common sequence of two given sequences . T? GetElementAtOrDefault&lt;T&gt;(IEnumerable&lt;T&gt;? enumerable, int? index) . Gets the element at the specified index in a sequence . int? Length&lt;T&gt;(IEnumerable&lt;T&gt;? enumerable) . Gets the length of the sequence . int? Length&lt;T&gt;(T[]? array) . Gets the length of the array . T? Choose&lt;T&gt;(int? index, T[] values) . Gets the value of an array at the specified index . T If&lt;T&gt;(bool expressionResult, T a, T b) . Chose a or b value based on the expression result . bool? Match(string? regex, string? content) . Determine whether content matches the specified pattern . byte? Coalesce(byte?[] array) . Gets the first non-null value in a list . sbyte? Coalesce(sbyte?[] array) . Gets the first non-null value in a list . short? Coalesce(short?[] array) . Gets the first non-null value in a list . ushort? Coalesce(ushort?[] array) . Gets the first non-null value in a list . int? Coalesce(int?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(uint?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(long?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(ulong?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(Decimal?[] array) . Gets the first non-null value in a list . T? Coalesce&lt;T&gt;(T[] array) . Gets the first non-null value in a list . IEnumerable&lt;T&gt;? Distinct&lt;T&gt;(IEnumerable&lt;T&gt;? values) . Returns distinct elements from a collection. string? Md5(string? content) . Gets the md5 hash of the given string. string? Md5(byte?[]? content) . Gets the md5 hash of the given bytes array. string? Sha1(string? content) . Gets the sha256 hash of the given string. string? Sha1(byte?[]? content) . Gets the sha256 hash of the given bytes array. string? Sha256(string? content) . Gets the sha256 hash of the given string. string? Sha256(byte?[]? content) . Gets the sha256 hash of the given bytes array. string? Sha512(string? content) . Gets the sha256 hash of the given string. string? Sha512(byte?[]? content) . Gets the sha256 hash of the bytes array. string? ToJson&lt;T&gt;(T? obj) . Converts object to json. string[] ExtractFromJsonToArray(string? json, string? path) . Extracts values from json by path. string? ExtractFromJson(string? json, string? path) . Extracts values from json by path and joins them with comma. Decimal? Abs(Decimal? value) . Gets the absolute value . long? Abs(long? value) . Gets the absolute value . int? Abs(int? value) . Gets the absolute value . Decimal? Ceil(Decimal? value) . Gets the ceiling value . Decimal? Floor(Decimal? value) . Gets the floor value . Decimal? Sign(Decimal? value) . Determine whether value is greater, equal or less that zero . long? Sign(long? value) . Determine whether value is greater, equal or less that zero . Decimal? Round(Decimal? value, int precision) . Rounds the value within given precision . Decimal? PercentOf(Decimal? value, Decimal? max) . Gets the percentage of the value . int Rand() . Gets the random integer value . int? Rand(int? min, int? max) . Gets the random integer value . double? Pow(Decimal? x, Decimal? y) . Computes the pow between two values . double? Pow(double? x, double? y) . Computes the pow between two values . double? Sqrt(Decimal? x) . Computes the sqrt of a given value . double? Sqrt(double? x) . Computes the sqrt of a given value . double? Sqrt(long? x) . Computes the sqrt of a given value . double? PercentRank&lt;T&gt;(IEnumerable&lt;T&gt;? window, T? value) . Computes the percent rank of a given window . double? Log(Decimal? base, Decimal? value) . Calculates the logarithm of a value with a specified base. Decimal? Sin(Decimal? value) . Calculates sine of a value. double? Sin(double? value) . Calculates sine of a value. float? Sin(float? value) . Calculates sine of a value. Decimal? Cos(Decimal? value) . Calculates cosine of a value. double? Cos(double? value) . Calculates cosine of a value. float? Cos(float? value) . Calculates cosine of a value. Decimal Max(string name) . Gets the max value of a given group. Decimal Max(string name, int parent) . Gets the max value of a given group. Decimal Min(string name) . Gets the min value of a given group. Decimal Min(string name, int parent) . Gets the min value of a given group. Decimal StDev(string name, int parent) . Gets the StDev value of a given group. string NewId() . Gets the new identifier . string? Trim(string? value) . Removes leading and trailing whitespace from a string. string? TrimStart(string? value) . Removes leading whitespace from a string. string? TrimEnd(string? value) . Removes trailing whitespace from a string. string? Substring(string? value, int? index, int? length) . Gets the substring from the string. string? Substring(string value, int? length) . Gets the substring from the string . string? Concat(string[]? strings) . Concatenates the specified values . string? Concat(char?[]? characters) . Concatenates the specified characters . string? Concat(string? firstString, char?[]? chars) . Concatenates specified string fir characters . string? Concat(char? firstChar, string[]? strings) . Concatenate specific character with strings . string? Concat(object[]? objects) . Concatenates the specified strings . string? Concat&lt;T&gt;(T[]? objects) . Concatenates the specified strings . bool? Contains(string? content, string? what) . Determine whether the string contains the specified value . int? IndexOf(string? value, string? text) . Position of the first occurrence of the specified value . string? Soundex(string? value) . Computes soundex for the specified value . bool HasFuzzyMatchedWord(string text, string word, string separator) . Matches the specified text by splitting it with separator and applying fuzzy comparison . bool HasWordThatHasSmallerLevenshteinDistanceThan(string text, string word, int distance, string separator) . Matches the specified text by splitting it with separator and applying fuzzy comparison with a given distance . bool HasWordThatSoundLike(string text, string word, string separator) . Matches whether the specified word is present after being fuzzified within the specified text . bool HasTextThatSoundLikeSentence(string text, string sentence, string separator) . Matches whether the specified text is present in sentence after being fuzified . string? ToUpper(string value) . Makes the string uppercase . string? ToUpper(string value, string culture) . Makes the string uppercase within specified culture . string? ToUpperInvariant(string value) . Makes the string uppercase . string? ToLower(string value) . Makes the string lowercase . string? ToLower(string value, string culture) . Makes the string lowercase within specified culture . string? ToLowerInvariant(string value) . Makes the string lowercase . string? PadLeft(string? value, string? character, int? totalWidth) . Returns a new string that right-aligns the characters in this instance by padding them on the left with a specified Unicode character, for a specified total lengt . string? PadRight(string? value, string? character, int? totalWidth) . Returns a new string that left-aligns the characters in this instance by padding them on the right with a specified Unicode character, for a specified total length . string? Head(string? value, int? length) . Gets the first N characters of the string . string? Tail(string? value, int? length) . Gets the last N characters of the string . int? LevenshteinDistance(string? firstValue, string? secondValue) . Computes the Levenshtein distance between two strings . char? GetCharacterOf(string value, int index) . Gets the character at specified index . string? Reverse(string? value) . Reverses the string . string[] Split(string value, string[] separators) . Splits the string into an array of substrings based on the specified separators . char[] ToCharArray(string value) . Splits the string into an array of characters . string? LongestCommonSubstring(string source, string pattern) . Computes the longest common subsequence between two source and pattern . string Replicate(string value, int integer) . Clones the value n times . string? Translate(string? value, string? characters, string? translations) . Returns the string from the first argument after the characters specified in the second argument are translated into the characters specified in the third argument. string? Replace(string? text, string lookFor, string? changeTo) . Replaces the first occurrence of a specified string in this instance with another specified string . string? ToTitleCase(string? value) . Capitalizes the first letter of the string . string? GetNthWord(string? text, int? wordIndex, string? separator) . Gets the nth word of the string . string? GetFirstWord(string text, string separator) . Gets the first word of the string . string? GetSecondWord(string text, string separator) . Gets the second word of the string . string? GetThirdWord(string text, string separator) . Gets the third word of the string . string? GetLastWord(string? text, string? separator) . Gets last word of the string . bool? IsNullOrEmpty(string? value) . Determines whether the string is null or empty . bool? IsNullOrWhiteSpace(string? value) . Determines whether the string is null or whitespace . string? UrlEncode(string? value) . Encodes the value . string? UrlDecode(string? value) . Decodes the value . string? UriEncode(string? value) . Encodes the value . string? UriDecode(string? value) . Decodes the value . bool? StartsWith(string? value, string? prefix) . Determines whether the string starts with the specified prefix . bool? StartsWith(string? value, string? prefix, string comparison) . Determines whether the string starts with the specified prefix . bool? EndsWith(string? value, string? suffix) . Determines whether the string ends with the specified suffix . bool? EndsWith(string? value, string? suffix, string comparison) . Determines whether the string ends with the specified suffix . string? RegexReplace(string? value, string? pattern, string? replacement) . Replace the specified value part that matches the pattern with the replacement . string[]? SplitByLinuxNewLines(string? input) . Split string by Linux-style newlines (\\n) . string[]? SplitByWindowsNewLines(string? input) . Split string by Windows-style newlines (\\r\\n) . string[]? SplitByNewLines(string? input) . Smart split that handles both Windows (\\r\\n) and Linux (\\n) newlines . Decimal Sum(string name) . Gets the sum value of a given group. Decimal Sum(string name, int parent) . Gets the sum value of a given group. Decimal SumIncome(string name) . Gets the sum value of a given group. Decimal SumIncome(string name, int parent) . Gets the sum value of a given group. Decimal SumOutcome(string name) . Gets the outcome value of a given group. Decimal SumOutcome(string name, int parent) . Gets the outcome value of a given group. TimeSpan? SumTimeSpan(string name) . Gets the sum value of a given group. TimeSpan? SumTimeSpan(string name, int parent) . Gets the sum value of a given group. TimeSpan? MinTimeSpan(string name) . Gets the min value of a given group. TimeSpan? MinTimeSpan(string name, int parent) . Gets the min value of a given group. TimeSpan? MaxTimeSpan(string name) . Gets the max value of a given group. TimeSpan? MaxTimeSpan(string name, int parent) . Gets the min value of a given group. char? ToChar(string? value) . Converts given value to character . char? ToChar(int? value) . Converts given value to character . char? ToChar(short? value) . Converts given value to character . char? ToChar(byte? value) . Converts given value to character . char? ToChar(object? value) . Converts given value to character . DateTime? ToDateTime(string value) . Converts given value to DateTime . DateTime? ToDateTime(string value, string culture) . Converts given value to DateTime . Decimal? ToDecimal(string? value) . Converts given value to decimal . Decimal? ToDecimal(string value, string culture) . Converts given value to decimal withing given culture . Decimal? ToDecimal(byte? value) . Converts given value to Decimal . Decimal? ToDecimal(sbyte? value) . Converts given value to Decimal . Decimal? ToDecimal(short? value) . Converts given value to Decimal . Decimal? ToDecimal(ushort? value) . Converts given value to Decimal . Decimal? ToDecimal(long? value) . Converts given value to Decimal . Decimal? ToDecimal(ulong? value) . Converts given value to Decimal . Decimal? ToDecimal(float? value) . Converts given value to Decimal . Decimal? ToDecimal(double? value) . Converts given value to Decimal . Decimal? ToDecimal(object? value) . Converts given value to Decimal . double? ToDouble(object? value) . Converts given value to double . double? ToDouble(string? value) . Converts given value to double . double? ToDouble(byte? value) . Converts given value to double . double? ToDouble(sbyte? value) . Converts given value to double . double? ToDouble(short? value) . Converts given value to double . double? ToDouble(ushort? value) . Converts given value to double . double? ToDouble(int? value) . Converts given value to double . double? ToDouble(uint? value) . Converts given value to double . double? ToDouble(long? value) . Converts given value to double . double? ToDouble(ulong? value) . Converts given value to double . double? ToDouble(float? value) . Converts given value to double . double? ToDouble(double? value) . Converts given value to double . double? ToDouble(Decimal? value) . Converts given value to double . float? ToFloat(string? value) . Converts given value to float . float? ToFloat(byte? value) . Converts given value to float . float? ToFloat(sbyte? value) . Converts given value to float . float? ToFloat(short? value) . Converts given value to float . float? ToFloat(ushort? value) . Converts given value to float . float? ToFloat(int? value) . Converts given value to float . float? ToFloat(uint? value) . Converts given value to float . float? ToFloat(long? value) . Converts given value to float . float? ToFloat(ulong? value) . Converts given value to float . float? ToFloat(float? value) . Converts given value to float . float? ToFloat(Decimal? value) . Converts given value to float . int? ToInt32(string value) . Converts given value to int . int? ToInt32(byte? value) . Converts given value to int . int? ToInt32(sbyte? value) . Converts given value to int . int? ToInt32(short? value) . Converts given value to int . int? ToInt32(ushort? value) . Converts given value to int . int? ToInt32(int? value) . Converts given value to int . int? ToInt32(uint? value) . Converts given value to int . int? ToInt32(long? value) . Converts given value to int . int? ToInt32(ulong? value) . Converts given value to int . int? ToInt32(float? value) . Converts given value to int . int? ToInt32(double? value) . Converts given value to int . int? ToInt32(Decimal? value) . Converts given value to int . int? ToInt32(object? value) . Converts given value to int . long? ToInt64(string value) . Converts given value to Int64 . long? ToInt64(byte? value) . Converts given value to long . long? ToInt64(sbyte? value) . Converts given value to long . long? ToInt64(short? value) . Converts given value to long . long? ToInt64(ushort? value) . Converts given value to long . long? ToInt64(int? value) . Converts given value to long . long? ToInt64(uint? value) . Converts given value to long . long? ToInt64(long? value) . Converts given value to long . long? ToInt64(ulong? value) . Converts given value to long . long? ToInt64(float? value) . Converts given value to long . long? ToInt64(double? value) . Converts given value to long . long? ToInt64(Decimal? value) . Converts given value to long . long? ToInt64(object? value) . Converts given value to long . string? ToString(char? value) . Converts given value to string . string? ToString(DateTimeOffset? value) . Converts given value to string . string? ToString(DateTimeOffset? value, string format) . Converts given value to string . string? ToString(byte? value) . Converts given value to string . string? ToString(byte? value, string format) . Converts given value to string . string? ToString(sbyte? value) . Converts given value to string . string? ToString(sbyte? value, string format) . Converts given value to string . string? ToString(int? value) . Converts given value to string . string? ToString(int? value, string format) . Converts given value to string . string? ToString(uint? value) . Converts given value to string . string? ToString(uint? value, string format) . Converts given value to string . string? ToString(long? value) . Converts given value to string . string? ToString(long? value, string format) . Converts given value to string . string? ToString(ulong? value) . Converts given value to string . string? ToString(ulong? value, string format) . Converts given value to string . string? ToString(float? value) . Converts given value to string . string? ToString(float? value, string format) . Converts given value to string . string? ToString(double? value) . Converts given value to string . string? ToString(double? value, string format) . Converts given value to string . string? ToString(Decimal? value) . Converts given value to string . string? ToString(Decimal? value, string format) . Converts given value to string . string? ToString(bool? value) . Converts given value to string . string? ToString(object? value) . Converts given value to string . string? ToString&lt;T&gt;(T? value) . Converts given value to string . string ToString(string[] value) . Converts given value to string . string ToString&lt;T&gt;(T[] value) . Converts given value to string . TimeSpan? ToTimeSpan(string value) . Converts given value to TimeSpan . TimeSpan? ToTimeSpan(string value, string culture) . Converts given value to TimeSpan . IEnumerable&lt;T&gt; Window&lt;T&gt;(string name) . Gets the window . ",
    "url": "/data-sources/OpenAI/windows-x64.html#base-methods",
    
    "relUrl": "/data-sources/OpenAI/windows-x64.html#base-methods"
  },"322": {
    "doc": "Windows X64",
    "title": "Windows X64",
    "content": " ",
    "url": "/data-sources/OpenAI/windows-x64.html",
    
    "relUrl": "/data-sources/OpenAI/windows-x64.html"
  },"323": {
    "doc": "Windows X64",
    "title": "Musoq.DataSources.Roslyn",
    "content": "Provides schema to work with Roslyn data source. ",
    "url": "/data-sources/roslyn/windows-x64.html#musoqdatasourcesroslyn",
    
    "relUrl": "/data-sources/roslyn/windows-x64.html#musoqdatasourcesroslyn"
  },"324": {
    "doc": "Windows X64",
    "title": "Tables",
    "content": "Table is a collection of rows and columns that the plugin exposes. Below are the tables that are exposed by this data source. csharp.solution(string path) . Allows to perform queries on the given solution file. | Name | Type | Description | . | Id | string | Solution id | . | Projects | ProjectEntity[] | Projects within the solution | . ",
    "url": "/data-sources/roslyn/windows-x64.html#tables",
    
    "relUrl": "/data-sources/roslyn/windows-x64.html#tables"
  },"325": {
    "doc": "Windows X64",
    "title": "Private Tables",
    "content": "Private tables are tables that are not exposed by the plugin, but are available for use in queries when using CROSS / OUTER APPLY operator. ProjectEntity . Represent project of solution . | Name | Type | Description | . | Id | string | Project id | . | FilePath | string | File path | . | OutputFilePath | string | Output file path | . | OutputRefFilePath | string | Output reference file path | . | DefaultNamespace | string | Default namespace | . | Language | string | Language | . | AssemblyName | string | Assembly name | . | Name | string | Name | . | IsSubmission | bool | Is submission | . | Version | string | Version | . | Documents | DocumentEntity[] | Documents | . DocumentEntity . Represent document of project . | Name | Type | Description | . | Name | string | Name | . | Text | string | Text | . | ClassCount | int | Class count | . | InterfaceCount | int | Interface count | . | EnumCount | int | Enum count | . | Classes | ClassEntity[] | Struct count | . | Interfaces | InterfaceEntity[] | Interfaces | . | Enums | EnumEntity[] | Enums | . ReferencedDocumentEntity . Represent referenced document of project . | Name | Type | Description | . | Name | string | Name | . | Text | string | Text | . | ClassCount | int | Class count | . | InterfaceCount | int | Interface count | . | EnumCount | int | Enum count | . | Classes | ClassEntity[] | Struct count | . | Interfaces | InterfaceEntity[] | Interfaces | . | Enums | EnumEntity[] | Enums | . | StartLine | int | Start line | . | StartColumn | int | Start column | . | EndLine | int | End line | . | EndColumn | int | End column | . ClassEntity . Represent class of document . | Name | Type | Description | . | Document | DocumentEntity | Document | . | Text | string | Text | . | IsAbstract | bool | Is abstract | . | IsSealed | bool | Is sealed | . | IsStatic | bool | Is static | . | BaseTypes | string[] | Base types | . | Interfaces | string[] | Interfaces | . | TypeParameters | string[] | Type parameters | . | MemberNames | string[] | Member names | . | Attributes | string[] | Attributes | . | Name | string | Name | . | FullName | string | Full name | . | Namespace | string | Namespace | . | Modifiers | string[] | Modifiers | . | Methods | MethodEntity[] | Methods | . | Properties | PropertyEntity[] | Properties | . | MethodsCount | int | Methods count | . | PropertiesCount | int | Properties count | . | FieldsCount | int | Fields count | . | InheritanceDepth | int | Inheritance depth | . | ConstructorsCount | int | Constructors count | . | NestedClassesCount | int | Nested classes count | . | NestedInterfacesCount | int | Nested interfaces count | . | InterfacesCount | int | Interfaces count | . | LackOfCohesion | int | Lack of cohesion | . | LinesOfCode | int | Lines of code | . EnumEntity . Represent enum of document . | Name | Type | Description | . | Document | DocumentEntity | Document | . | Members | string[] | Members | . | Name | string | Name | . | FullName | string | Full name | . | Namespace | string | Namespace | . | Modifiers | string[] | Modifiers | . | Methods | MethodEntity[] | Methods | . | Properties | PropertyEntity[] | Properties | . InterfaceEntity . Represent interface of document . | Name | Type | Description | . | Document | DocumentEntity | Document | . | BaseInterfaces | string[] | Base interfaces | . | Name | string | Name | . | FullName | string | Full name | . | Namespace | string | Namespace | . | Modifiers | string[] | Modifiers | . | Methods | MethodEntity[] | Methods | . | Properties | PropertyEntity[] | Properties | . MethodEntity . Represent method of class . | Name | Type | Description | . | Name | string | Name | . | ReturnType | string | Return type | . | Parameters | ParameterEntity[] | Parameters | . | Modifiers | string[] | Modifiers | . | Text | string | Text | . | Attributes | AttributeEntity[] | Attributes | . | CyclomaticComplexity | int | Cyclomatic complexity | . PropertyEntity . Represent property of class . | Name | Type | Description | . | Name | string | Name | . | Type | string | Type | . | IsIndexer | bool | Is indexer | . | IsReadOnly | bool | Is read only | . | IsWriteOnly | bool | Is write only | . | IsRequired | bool | Is required | . | IsWithEvents | bool | Is with events | . | IsVirtual | bool | Is virtual | . | IsOverride | bool | Is override | . | IsAbstract | bool | Is abstract | . | IsSealed | bool | Is sealed | . | IsStatic | bool | Is static | . | Modifiers | string[] | Modifiers | . ParameterEntity . Represent parameter of method . | Name | Type | Description | . | Name | string | Name | . | Type | string | Type | . | IsOptional | bool | Is optional | . | IsParams | bool | Is params | . | IsThis | bool | Is this | . | IsDiscard | bool | Is discard | . | IsIn | bool | Is in | . | IsOut | bool | Is out | . | IsRef | bool | Is ref | . | IsByRef | bool | Is by ref | . | IsByValue | bool | Is by value | . ProjectReferenceEntity . Represent project reference . | Name | Type | Description | . | Name | string | Name | . LibraryReferenceEntity . Represent library reference . | Name | Type | Description | . | Name | string | Name | . | Version | string | Version | . | Culture | string | Culture | . | Location | string | Location | . ",
    "url": "/data-sources/roslyn/windows-x64.html#private-tables",
    
    "relUrl": "/data-sources/roslyn/windows-x64.html#private-tables"
  },"326": {
    "doc": "Windows X64",
    "title": "Methods",
    "content": "Methods are functions that can be called on the data source specific column. Below are the methods that are exposed by this data source. IEnumerable&lt;Musoq.DataSources.Roslyn.Entities.ProjectEntity&gt; GetProjectsByNames(string[] names) . Gets projects by names. IEnumerable&lt;Musoq.DataSources.Roslyn.Entities.ClassEntity&gt; GetClassesByNames(string[] names) . Gets classes by names. IEnumerable&lt;Musoq.DataSources.Roslyn.Entities.InterfaceEntity&gt; GetInterfacesByNames(string[] names) . Gets classes by names. IEnumerable&lt;Musoq.DataSources.Roslyn.Entities.EnumEntity&gt; GetEnumsByNames(string[] names) . Gets classes by names. IEnumerable&lt;Musoq.DataSources.Roslyn.Entities.ReferencedDocumentEntity&gt; FindReferences(Musoq.DataSources.Roslyn.Entities.ClassEntity entity) . Finds references of the specified class entity. IEnumerable&lt;Musoq.DataSources.Roslyn.Entities.ReferencedDocumentEntity&gt; FindReferences(Musoq.DataSources.Roslyn.Entities.InterfaceEntity entity) . Finds references of the specified interface entity. IEnumerable&lt;Musoq.DataSources.Roslyn.Entities.ReferencedDocumentEntity&gt; FindReferences(Musoq.DataSources.Roslyn.Entities.EnumEntity entity) . Finds references of the specified interface entity. ",
    "url": "/data-sources/roslyn/windows-x64.html#methods",
    
    "relUrl": "/data-sources/roslyn/windows-x64.html#methods"
  },"327": {
    "doc": "Windows X64",
    "title": "Base Methods",
    "content": "Base methods are methods that can be called on the data source specific column. Those methods are automatically inherited and enriches the data source specific methods. Below are those base methods that are exposed by this data source. int RowNumber() . Gets the row number of the current row. string? GetTypeName(object? obj) . Gets the typename of passed object. string AggregateValues(string name) . Aggregates values into a single value. string AggregateValues(string name, int parent) . Aggregates values into a single value. Decimal Avg(string name) . Gets the aggregated average value from the given group name . Decimal Avg(string name, int parent) . Gets the aggregated average value from the given group name . byte? ShiftLeft(byte? value, int shift) . Shifts the value to the left by the specified number of bits. short? ShiftLeft(short? value, int shift) . Shifts the value to the left by the specified number of bits. int? ShiftLeft(int? value, int shift) . Shifts the value to the left by the specified number of bits. long? ShiftLeft(long? value, int shift) . Shifts the value to the left by the specified number of bits. sbyte? ShiftLeft(sbyte? value, int shift) . Shifts the value to the left by the specified number of bits. ushort? ShiftLeft(ushort? value, int shift) . Shifts the value to the left by the specified number of bits. uint? ShiftLeft(uint? value, int shift) . Shifts the value to the left by the specified number of bits. ulong? ShiftLeft(ulong? value, int shift) . Shifts the value to the left by the specified number of bits. byte? ShiftRight(byte? value, int shift) . Shifts the value to the right by the specified number of bits. short? ShiftRight(short? value, int shift) . Shifts the value to the right by the specified number of bits. int? ShiftRight(int? value, int shift) . Shifts the value to the right by the specified number of bits. long? ShiftRight(long? value, int shift) . Shifts the value to the right by the specified number of bits. sbyte? ShiftRight(sbyte? value, int shift) . Shifts the value to the right by the specified number of bits. ushort? ShiftRight(ushort? value, int shift) . Shifts the value to the right by the specified number of bits. uint? ShiftRight(uint? value, int shift) . Shifts the value to the right by the specified number of bits. ulong? ShiftRight(ulong? value, int shift) . Shifts the value to the right by the specified number of bits. byte? Not(byte? value) . Performs bitwise NOT operation on a given value. short? Not(short? value) . Performs bitwise NOT operation on a given value. int? Not(int? value) . Performs bitwise NOT operation on a given value. long? Not(long? value) . Performs bitwise NOT operation on a given value. sbyte? Not(sbyte? value) . Performs bitwise NOT operation on a given value. ushort? Not(ushort? value) . Performs bitwise NOT operation on a given value. uint? Not(uint? value) . Performs bitwise NOT operation on a given value. ulong? Not(ulong? value) . Performs bitwise NOT operation on a given value. byte? And(byte? left, byte? right) . Performs bitwise AND operation on two given values. int? And(byte? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(byte? left, short? right) . Performs bitwise AND operation on two given values. int? And(byte? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(byte? left, int? right) . Performs bitwise AND operation on two given values. uint? And(byte? left, uint? right) . Performs bitwise AND operation on two given values. long? And(byte? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(byte? left, ulong? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, byte? right) . Performs bitwise AND operation on two given values. sbyte? And(sbyte? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, short? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, int? right) . Performs bitwise AND operation on two given values. uint? And(sbyte? left, uint? right) . Performs bitwise AND operation on two given values. long? And(sbyte? left, long? right) . Performs bitwise AND operation on two given values. int? And(short? left, byte? right) . Performs bitwise AND operation on two given values. int? And(short? left, sbyte? right) . Performs bitwise AND operation on two given values. short? And(short? left, short? right) . Performs bitwise AND operation on two given values. int? And(short? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(short? left, int? right) . Performs bitwise AND operation on two given values. uint? And(short? left, uint? right) . Performs bitwise AND operation on two given values. long? And(short? left, long? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, byte? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, short? right) . Performs bitwise AND operation on two given values. ushort? And(ushort? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, int? right) . Performs bitwise AND operation on two given values. uint? And(ushort? left, uint? right) . Performs bitwise AND operation on two given values. long? And(ushort? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(ushort? left, ulong? right) . Performs bitwise AND operation on two given values. int? And(int? left, byte? right) . Performs bitwise AND operation on two given values. int? And(int? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(int? left, short? right) . Performs bitwise AND operation on two given values. int? And(int? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(int? left, int? right) . Performs bitwise AND operation on two given values. uint? And(int? left, uint? right) . Performs bitwise AND operation on two given values. long? And(int? left, long? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, uint? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, byte? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, sbyte? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, short? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, ushort? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, int? right) . Performs bitwise AND operation on two given values. ulong? And(uint? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(uint? left, ulong? right) . Performs bitwise AND operation on two given values. long? And(long? left, long? right) . Performs bitwise AND operation on two given values. long? And(long? left, byte? right) . Performs bitwise AND operation on two given values. long? And(long? left, sbyte? right) . Performs bitwise AND operation on two given values. long? And(long? left, short? right) . Performs bitwise AND operation on two given values. long? And(long? left, ushort? right) . Performs bitwise AND operation on two given values. long? And(long? left, int? right) . Performs bitwise AND operation on two given values. long? And(long? left, uint? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, byte? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, ushort? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, uint? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, ulong? right) . Performs bitwise AND operation on two given values. byte? Or(byte? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, short? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(byte? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(byte? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(byte? left, ulong? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, byte? right) . Performs bitwise OR operation on two given values. sbyte? Or(sbyte? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, short? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(sbyte? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(sbyte? left, long? right) . Performs bitwise OR operation on two given values. int? Or(short? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(short? left, sbyte? right) . Performs bitwise OR operation on two given values. short? Or(short? left, short? right) . Performs bitwise OR operation on two given values. int? Or(short? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(short? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(short? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(short? left, long? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, short? right) . Performs bitwise OR operation on two given values. ushort? Or(ushort? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(ushort? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(ushort? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(ushort? left, ulong? right) . Performs bitwise OR operation on two given values. int? Or(int? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(int? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(int? left, short? right) . Performs bitwise OR operation on two given values. int? Or(int? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(int? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(int? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(int? left, long? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, uint? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, byte? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, sbyte? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, short? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, ushort? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, int? right) . Performs bitwise OR operation on two given values. ulong? Or(uint? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(uint? left, ulong? right) . Performs bitwise OR operation on two given values. long? Or(long? left, long? right) . Performs bitwise OR operation on two given values. long? Or(long? left, byte? right) . Performs bitwise OR operation on two given values. long? Or(long? left, sbyte? right) . Performs bitwise OR operation on two given values. long? Or(long? left, short? right) . Performs bitwise OR operation on two given values. long? Or(long? left, ushort? right) . Performs bitwise OR operation on two given values. long? Or(long? left, int? right) . Performs bitwise OR operation on two given values. long? Or(long? left, uint? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, byte? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, ushort? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, uint? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, ulong? right) . Performs bitwise OR operation on two given values. byte? Xor(byte? left, byte? right) . Performs bitwise OR operation on two given values. int? Xor(byte? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(byte? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(byte? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(byte? left, ulong? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, byte? right) . Performs bitwise Xor operation on two given values. sbyte? Xor(sbyte? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(sbyte? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(sbyte? left, long? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, sbyte? right) . Performs bitwise Xor operation on two given values. short? Xor(short? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, ushort? right) . Performs bitwise XOR operation on two given values. int? Xor(short? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(short? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(short? left, long? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, short? right) . Performs bitwise Xor operation on two given values. ushort? Xor(ushort? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(ushort? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(ushort? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ushort? left, ulong? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(int? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(int? left, long? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, uint? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, byte? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, sbyte? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, short? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, ushort? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, int? right) . Performs bitwise Xor operation on two given values. ulong? Xor(uint? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(uint? left, ulong? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, long? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, byte? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, sbyte? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, short? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, ushort? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, int? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, uint? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, ulong? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, byte? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, ushort? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, uint? right) . Performs bitwise Xor operation on two given values. byte[] GetBytes(string? content) . Gets the bytes from the given string. byte[] GetBytes(string? content, int length, int offset) . Gets the bytes from the given string within given offset and length. byte?[]? GetBytes(char? character) . Gets the bytes from the given character. byte?[]? GetBytes(bool? bit) . Gets the bytes from the given boolean. byte?[]? GetBytes(long? value) . Gets the bytes from the given long. byte?[]? GetBytes(int? value) . Gets the bytes from the given int. byte?[]? GetBytes(short? value) . Gets the bytes from the given short. byte?[]? GetBytes(ulong? value) . Gets the bytes from the given ulong. byte?[]? GetBytes(ushort? value) . Gets the bytes from the given ushort. byte?[]? GetBytes(uint? value) . Gets the bytes from the given uint. byte?[]? GetBytes(Decimal? value) . Gets the bytes from the given decimal. byte?[]? GetBytes(double? value) . Gets the bytes from the given double. byte?[]? GetBytes(float? value) . Gets the bytes from the given float. string? ToBin(byte?[]? bytes, string delimiter) . Converts given bytes to binary with defined delimiter . string ToBin&lt;T&gt;(T value) . Converts given value to binary . string ToOcta&lt;T&gt;(T value) . Converts given value to octal . string ToDec&lt;T&gt;(T value) . Converts given value to decimal . string ToBase64(byte[] value) . Converts given value to string . string ToBase64(byte[] value, int offset, int length) . Converts given array of bytes to string . byte[] FromBase64(string value) . Converts given string to bytes array . bool FromBytesToBool(byte[] value) . Converts bytes to boolean value. short FromBytesToInt16(byte[] value) . Converts bytes to a 16-bit signed integer. ushort FromBytesToUInt16(byte[] value) . Converts bytes to a 16-bit unsigned integer. int FromBytesToInt32(byte[] value) . Converts bytes to a 32-bit signed integer. uint FromBytesToUInt32(byte[] value) . Converts bytes to a 32-bit unsigned integer. long FromBytesToInt64(byte[] value) . Converts bytes to a 64-bit signed integer. ulong FromBytesToUInt64(byte[] value) . Converts bytes to a 64-bit unsigned integer. float FromBytesToFloat(byte[] value) . Converts bytes to a float value. double FromBytesToDouble(byte[] value) . Converts bytes to a float value. string FromBytesToString(byte[] value) . Converts bytes to a string. byte[] ToBytes(bool value) . Converts boolean value to bytes. byte[] ToBytes(short value) . Converts short value to bytes. byte[] ToBytes(ushort value) . Converts ushort value to bytes. byte[] ToBytes(int value) . Converts int value to bytes. byte[] ToBytes(uint value) . Converts uint value to bytes. byte[] ToBytes(long value) . Converts long value to bytes. byte[] ToBytes(ulong value) . Converts long value to bytes. string? ToHex(byte?[]? bytes, string delimiter) . Converts given bytes to hex with defined delimiter . string? ToHex&lt;T&gt;(T value) . Converts given value to binary . int Count(string name) . Gets the count value of a given group. int Count(string name, int parent) . Gets the count value of a given group. int ExtractFromDate(string? date, string partOfDate) . Extracts part of the date from the date . int ExtractFromDate(string date, string culture, string partOfDate) . Extracts part of the date from the date based on given culture . DateTimeOffset? GetDate() . Gets the current datetime . DateTimeOffset? UtcGetDate() . Gets the current datetime in UTC . int? Month(DateTimeOffset? value) . Gets the month from DateTimeOffset . int? Year(DateTimeOffset? value) . Gets the year from DateTimeOffset . int? Day(DateTimeOffset? value) . Gets the day from DateTimeOffset . int? Hour(DateTimeOffset? value) . Gets the hour from DateTimeOffset . int? Minute(DateTimeOffset? value) . Gets the minute from DateTimeOffset . int? Second(DateTimeOffset? value) . Gets the second from DateTimeOffset . int? Milliseconds(DateTimeOffset? value) . Gets the millisecond from DateTimeOffset . int? DayOfWeek(DateTimeOffset? value) . Gets the day of week from DateTimeOffset . TimeSpan? ExtractTimeSpan(DateTimeOffset? dateTimeOffset) . Extracts time from DateTimeOffset . DateTime? ToDateTimeOffset(string value) . Converts given value to DateTimeOffset . DateTimeOffset? ToDateTimeOffset(string value, string culture) . Converts given value to DateTimeOffset . IEnumerable&lt;T&gt;? Skip&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? skipCount) . Skips elements from the beginning of the sequence. IEnumerable&lt;T&gt;? Take&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? takeCount) . Takes elements from the beginning of the sequence. IEnumerable&lt;T&gt;? SkipAndTake&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? skipCount, int? takeCount) . Skip and takes elements from the beginning of the sequence. T[]? EnumerableToArray&lt;T&gt;(IEnumerable&lt;T&gt;? values) . Turn array arguments of T into a single array. T[]? MergeArrays&lt;T&gt;(T[][]? values) . Turn array arguments of T into a single array. IEnumerable&lt;T&gt;? LongestCommonSequence&lt;T&gt;(IEnumerable&lt;T&gt;? source, IEnumerable&lt;T&gt;? pattern) . Computes longest common sequence of two given sequences . T? GetElementAtOrDefault&lt;T&gt;(IEnumerable&lt;T&gt;? enumerable, int? index) . Gets the element at the specified index in a sequence . int? Length&lt;T&gt;(IEnumerable&lt;T&gt;? enumerable) . Gets the length of the sequence . int? Length&lt;T&gt;(T[]? array) . Gets the length of the array . T? Choose&lt;T&gt;(int? index, T[] values) . Gets the value of an array at the specified index . T If&lt;T&gt;(bool expressionResult, T a, T b) . Chose a or b value based on the expression result . bool? Match(string? regex, string? content) . Determine whether content matches the specified pattern . byte? Coalesce(byte?[] array) . Gets the first non-null value in a list . sbyte? Coalesce(sbyte?[] array) . Gets the first non-null value in a list . short? Coalesce(short?[] array) . Gets the first non-null value in a list . ushort? Coalesce(ushort?[] array) . Gets the first non-null value in a list . int? Coalesce(int?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(uint?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(long?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(ulong?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(Decimal?[] array) . Gets the first non-null value in a list . T? Coalesce&lt;T&gt;(T[] array) . Gets the first non-null value in a list . IEnumerable&lt;T&gt;? Distinct&lt;T&gt;(IEnumerable&lt;T&gt;? values) . Returns distinct elements from a collection. string? Md5(string? content) . Gets the md5 hash of the given string. string? Md5(byte?[]? content) . Gets the md5 hash of the given bytes array. string? Sha1(string? content) . Gets the sha256 hash of the given string. string? Sha1(byte?[]? content) . Gets the sha256 hash of the given bytes array. string? Sha256(string? content) . Gets the sha256 hash of the given string. string? Sha256(byte?[]? content) . Gets the sha256 hash of the given bytes array. string? Sha512(string? content) . Gets the sha256 hash of the given string. string? Sha512(byte?[]? content) . Gets the sha256 hash of the bytes array. string? ToJson&lt;T&gt;(T? obj) . Converts object to json. string[] ExtractFromJsonToArray(string? json, string? path) . Extracts values from json by path. string? ExtractFromJson(string? json, string? path) . Extracts values from json by path and joins them with comma. Decimal? Abs(Decimal? value) . Gets the absolute value . long? Abs(long? value) . Gets the absolute value . int? Abs(int? value) . Gets the absolute value . Decimal? Ceil(Decimal? value) . Gets the ceiling value . Decimal? Floor(Decimal? value) . Gets the floor value . Decimal? Sign(Decimal? value) . Determine whether value is greater, equal or less that zero . long? Sign(long? value) . Determine whether value is greater, equal or less that zero . Decimal? Round(Decimal? value, int precision) . Rounds the value within given precision . Decimal? PercentOf(Decimal? value, Decimal? max) . Gets the percentage of the value . int Rand() . Gets the random integer value . int? Rand(int? min, int? max) . Gets the random integer value . double? Pow(Decimal? x, Decimal? y) . Computes the pow between two values . double? Pow(double? x, double? y) . Computes the pow between two values . double? Sqrt(Decimal? x) . Computes the sqrt of a given value . double? Sqrt(double? x) . Computes the sqrt of a given value . double? Sqrt(long? x) . Computes the sqrt of a given value . double? PercentRank&lt;T&gt;(IEnumerable&lt;T&gt;? window, T? value) . Computes the percent rank of a given window . double? Log(Decimal? base, Decimal? value) . Calculates the logarithm of a value with a specified base. Decimal? Sin(Decimal? value) . Calculates sine of a value. double? Sin(double? value) . Calculates sine of a value. float? Sin(float? value) . Calculates sine of a value. Decimal? Cos(Decimal? value) . Calculates cosine of a value. double? Cos(double? value) . Calculates cosine of a value. float? Cos(float? value) . Calculates cosine of a value. Decimal Max(string name) . Gets the max value of a given group. Decimal Max(string name, int parent) . Gets the max value of a given group. Decimal Min(string name) . Gets the min value of a given group. Decimal Min(string name, int parent) . Gets the min value of a given group. Decimal StDev(string name, int parent) . Gets the StDev value of a given group. string NewId() . Gets the new identifier . string? Trim(string? value) . Removes leading and trailing whitespace from a string. string? TrimStart(string? value) . Removes leading whitespace from a string. string? TrimEnd(string? value) . Removes trailing whitespace from a string. string? Substring(string? value, int? index, int? length) . Gets the substring from the string. string? Substring(string value, int? length) . Gets the substring from the string . string? Concat(string[]? strings) . Concatenates the specified values . string? Concat(char?[]? characters) . Concatenates the specified characters . string? Concat(string? firstString, char?[]? chars) . Concatenates specified string fir characters . string? Concat(char? firstChar, string[]? strings) . Concatenate specific character with strings . string? Concat(object[]? objects) . Concatenates the specified strings . string? Concat&lt;T&gt;(T[]? objects) . Concatenates the specified strings . bool? Contains(string? content, string? what) . Determine whether the string contains the specified value . int? IndexOf(string? value, string? text) . Position of the first occurrence of the specified value . string? Soundex(string? value) . Computes soundex for the specified value . bool HasFuzzyMatchedWord(string text, string word, string separator) . Matches the specified text by splitting it with separator and applying fuzzy comparison . bool HasWordThatHasSmallerLevenshteinDistanceThan(string text, string word, int distance, string separator) . Matches the specified text by splitting it with separator and applying fuzzy comparison with a given distance . bool HasWordThatSoundLike(string text, string word, string separator) . Matches whether the specified word is present after being fuzzified within the specified text . bool HasTextThatSoundLikeSentence(string text, string sentence, string separator) . Matches whether the specified text is present in sentence after being fuzified . string? ToUpper(string value) . Makes the string uppercase . string? ToUpper(string value, string culture) . Makes the string uppercase within specified culture . string? ToUpperInvariant(string value) . Makes the string uppercase . string? ToLower(string value) . Makes the string lowercase . string? ToLower(string value, string culture) . Makes the string lowercase within specified culture . string? ToLowerInvariant(string value) . Makes the string lowercase . string? PadLeft(string? value, string? character, int? totalWidth) . Returns a new string that right-aligns the characters in this instance by padding them on the left with a specified Unicode character, for a specified total lengt . string? PadRight(string? value, string? character, int? totalWidth) . Returns a new string that left-aligns the characters in this instance by padding them on the right with a specified Unicode character, for a specified total length . string? Head(string? value, int? length) . Gets the first N characters of the string . string? Tail(string? value, int? length) . Gets the last N characters of the string . int? LevenshteinDistance(string? firstValue, string? secondValue) . Computes the Levenshtein distance between two strings . char? GetCharacterOf(string value, int index) . Gets the character at specified index . string? Reverse(string? value) . Reverses the string . string[] Split(string value, string[] separators) . Splits the string into an array of substrings based on the specified separators . char[] ToCharArray(string value) . Splits the string into an array of characters . string? LongestCommonSubstring(string source, string pattern) . Computes the longest common subsequence between two source and pattern . string Replicate(string value, int integer) . Clones the value n times . string? Translate(string? value, string? characters, string? translations) . Returns the string from the first argument after the characters specified in the second argument are translated into the characters specified in the third argument. string? Replace(string? text, string lookFor, string? changeTo) . Replaces the first occurrence of a specified string in this instance with another specified string . string? ToTitleCase(string? value) . Capitalizes the first letter of the string . string? GetNthWord(string? text, int? wordIndex, string? separator) . Gets the nth word of the string . string? GetFirstWord(string text, string separator) . Gets the first word of the string . string? GetSecondWord(string text, string separator) . Gets the second word of the string . string? GetThirdWord(string text, string separator) . Gets the third word of the string . string? GetLastWord(string? text, string? separator) . Gets last word of the string . bool? IsNullOrEmpty(string? value) . Determines whether the string is null or empty . bool? IsNullOrWhiteSpace(string? value) . Determines whether the string is null or whitespace . string? UrlEncode(string? value) . Encodes the value . string? UrlDecode(string? value) . Decodes the value . string? UriEncode(string? value) . Encodes the value . string? UriDecode(string? value) . Decodes the value . bool? StartsWith(string? value, string? prefix) . Determines whether the string starts with the specified prefix . bool? StartsWith(string? value, string? prefix, string comparison) . Determines whether the string starts with the specified prefix . bool? EndsWith(string? value, string? suffix) . Determines whether the string ends with the specified suffix . bool? EndsWith(string? value, string? suffix, string comparison) . Determines whether the string ends with the specified suffix . string? RegexReplace(string? value, string? pattern, string? replacement) . Replace the specified value part that matches the pattern with the replacement . string[]? SplitByLinuxNewLines(string? input) . Split string by Linux-style newlines (\\n) . string[]? SplitByWindowsNewLines(string? input) . Split string by Windows-style newlines (\\r\\n) . string[]? SplitByNewLines(string? input) . Smart split that handles both Windows (\\r\\n) and Linux (\\n) newlines . Decimal Sum(string name) . Gets the sum value of a given group. Decimal Sum(string name, int parent) . Gets the sum value of a given group. Decimal SumIncome(string name) . Gets the sum value of a given group. Decimal SumIncome(string name, int parent) . Gets the sum value of a given group. Decimal SumOutcome(string name) . Gets the outcome value of a given group. Decimal SumOutcome(string name, int parent) . Gets the outcome value of a given group. TimeSpan? SumTimeSpan(string name) . Gets the sum value of a given group. TimeSpan? SumTimeSpan(string name, int parent) . Gets the sum value of a given group. TimeSpan? MinTimeSpan(string name) . Gets the min value of a given group. TimeSpan? MinTimeSpan(string name, int parent) . Gets the min value of a given group. TimeSpan? MaxTimeSpan(string name) . Gets the max value of a given group. TimeSpan? MaxTimeSpan(string name, int parent) . Gets the min value of a given group. char? ToChar(string? value) . Converts given value to character . char? ToChar(int? value) . Converts given value to character . char? ToChar(short? value) . Converts given value to character . char? ToChar(byte? value) . Converts given value to character . char? ToChar(object? value) . Converts given value to character . DateTime? ToDateTime(string value) . Converts given value to DateTime . DateTime? ToDateTime(string value, string culture) . Converts given value to DateTime . Decimal? ToDecimal(string? value) . Converts given value to decimal . Decimal? ToDecimal(string value, string culture) . Converts given value to decimal withing given culture . Decimal? ToDecimal(byte? value) . Converts given value to Decimal . Decimal? ToDecimal(sbyte? value) . Converts given value to Decimal . Decimal? ToDecimal(short? value) . Converts given value to Decimal . Decimal? ToDecimal(ushort? value) . Converts given value to Decimal . Decimal? ToDecimal(long? value) . Converts given value to Decimal . Decimal? ToDecimal(ulong? value) . Converts given value to Decimal . Decimal? ToDecimal(float? value) . Converts given value to Decimal . Decimal? ToDecimal(double? value) . Converts given value to Decimal . Decimal? ToDecimal(object? value) . Converts given value to Decimal . double? ToDouble(object? value) . Converts given value to double . double? ToDouble(string? value) . Converts given value to double . double? ToDouble(byte? value) . Converts given value to double . double? ToDouble(sbyte? value) . Converts given value to double . double? ToDouble(short? value) . Converts given value to double . double? ToDouble(ushort? value) . Converts given value to double . double? ToDouble(int? value) . Converts given value to double . double? ToDouble(uint? value) . Converts given value to double . double? ToDouble(long? value) . Converts given value to double . double? ToDouble(ulong? value) . Converts given value to double . double? ToDouble(float? value) . Converts given value to double . double? ToDouble(double? value) . Converts given value to double . double? ToDouble(Decimal? value) . Converts given value to double . float? ToFloat(string? value) . Converts given value to float . float? ToFloat(byte? value) . Converts given value to float . float? ToFloat(sbyte? value) . Converts given value to float . float? ToFloat(short? value) . Converts given value to float . float? ToFloat(ushort? value) . Converts given value to float . float? ToFloat(int? value) . Converts given value to float . float? ToFloat(uint? value) . Converts given value to float . float? ToFloat(long? value) . Converts given value to float . float? ToFloat(ulong? value) . Converts given value to float . float? ToFloat(float? value) . Converts given value to float . float? ToFloat(Decimal? value) . Converts given value to float . int? ToInt32(string value) . Converts given value to int . int? ToInt32(byte? value) . Converts given value to int . int? ToInt32(sbyte? value) . Converts given value to int . int? ToInt32(short? value) . Converts given value to int . int? ToInt32(ushort? value) . Converts given value to int . int? ToInt32(int? value) . Converts given value to int . int? ToInt32(uint? value) . Converts given value to int . int? ToInt32(long? value) . Converts given value to int . int? ToInt32(ulong? value) . Converts given value to int . int? ToInt32(float? value) . Converts given value to int . int? ToInt32(double? value) . Converts given value to int . int? ToInt32(Decimal? value) . Converts given value to int . int? ToInt32(object? value) . Converts given value to int . long? ToInt64(string value) . Converts given value to Int64 . long? ToInt64(byte? value) . Converts given value to long . long? ToInt64(sbyte? value) . Converts given value to long . long? ToInt64(short? value) . Converts given value to long . long? ToInt64(ushort? value) . Converts given value to long . long? ToInt64(int? value) . Converts given value to long . long? ToInt64(uint? value) . Converts given value to long . long? ToInt64(long? value) . Converts given value to long . long? ToInt64(ulong? value) . Converts given value to long . long? ToInt64(float? value) . Converts given value to long . long? ToInt64(double? value) . Converts given value to long . long? ToInt64(Decimal? value) . Converts given value to long . long? ToInt64(object? value) . Converts given value to long . string? ToString(char? value) . Converts given value to string . string? ToString(DateTimeOffset? value) . Converts given value to string . string? ToString(DateTimeOffset? value, string format) . Converts given value to string . string? ToString(byte? value) . Converts given value to string . string? ToString(byte? value, string format) . Converts given value to string . string? ToString(sbyte? value) . Converts given value to string . string? ToString(sbyte? value, string format) . Converts given value to string . string? ToString(int? value) . Converts given value to string . string? ToString(int? value, string format) . Converts given value to string . string? ToString(uint? value) . Converts given value to string . string? ToString(uint? value, string format) . Converts given value to string . string? ToString(long? value) . Converts given value to string . string? ToString(long? value, string format) . Converts given value to string . string? ToString(ulong? value) . Converts given value to string . string? ToString(ulong? value, string format) . Converts given value to string . string? ToString(float? value) . Converts given value to string . string? ToString(float? value, string format) . Converts given value to string . string? ToString(double? value) . Converts given value to string . string? ToString(double? value, string format) . Converts given value to string . string? ToString(Decimal? value) . Converts given value to string . string? ToString(Decimal? value, string format) . Converts given value to string . string? ToString(bool? value) . Converts given value to string . string? ToString(object? value) . Converts given value to string . string? ToString&lt;T&gt;(T? value) . Converts given value to string . string ToString(string[] value) . Converts given value to string . string ToString&lt;T&gt;(T[] value) . Converts given value to string . TimeSpan? ToTimeSpan(string value) . Converts given value to TimeSpan . TimeSpan? ToTimeSpan(string value, string culture) . Converts given value to TimeSpan . IEnumerable&lt;T&gt; Window&lt;T&gt;(string name) . Gets the window . ",
    "url": "/data-sources/roslyn/windows-x64.html#base-methods",
    
    "relUrl": "/data-sources/roslyn/windows-x64.html#base-methods"
  },"328": {
    "doc": "Windows X64",
    "title": "Windows X64",
    "content": " ",
    "url": "/data-sources/roslyn/windows-x64.html",
    
    "relUrl": "/data-sources/roslyn/windows-x64.html"
  },"329": {
    "doc": "Windows X64",
    "title": "Musoq.DataSources.Ollama",
    "content": "Provides interface to work with Ollama API. ",
    "url": "/data-sources/Ollama/windows-x64.html#musoqdatasourcesollama",
    
    "relUrl": "/data-sources/Ollama/windows-x64.html#musoqdatasourcesollama"
  },"330": {
    "doc": "Windows X64",
    "title": "Tables",
    "content": "Table is a collection of rows and columns that the plugin exposes. Below are the tables that are exposed by this data source. ollama.llm(string model) . Gives the access to Ollama api . Environment variables . In order to use the plugin, the user must set any required environment variables as specified in the environments element. Failure to do so may result in the plugin not functioning correctly. | Name | Is required | Description | . | OLLAMA_BASE_URL | false | Ollama base url, default http://localhost:11434 | . Columns . This table has a dynamic structure, which means that its columns and other details cannot be determined until runtime. As a result, it is not possible to include a complete description of this table in the documentation. Instead, the actual columns and other details of this table will be determined at runtime. ollama.llm(string model, float temperature) . Gives the access to Ollama api . Environment variables . In order to use the plugin, the user must set any required environment variables as specified in the environments element. Failure to do so may result in the plugin not functioning correctly. | Name | Is required | Description | . | OLLAMA_BASE_URL | false | Ollama base url, default http://localhost:11434 | . Columns . This table has a dynamic structure, which means that its columns and other details cannot be determined until runtime. As a result, it is not possible to include a complete description of this table in the documentation. Instead, the actual columns and other details of this table will be determined at runtime. ",
    "url": "/data-sources/Ollama/windows-x64.html#tables",
    
    "relUrl": "/data-sources/Ollama/windows-x64.html#tables"
  },"331": {
    "doc": "Windows X64",
    "title": "Methods",
    "content": "Methods are functions that can be called on the data source specific column. Below are the methods that are exposed by this data source. bool IsContentAbout(string content, string question) . Determines whether the provided content is related to the given question. Returns true if the content is related, otherwise returns false. string Sentiment(string content, bool throwOnUnknown) . Performs sentiment analysis on the provided content and returns the sentiment as one of the following strings: “POSITIVE”, “NEGATIVE”, “NEUTRAL”, or “UNKNOWN”. string SummarizeContent(string content) . Summarizes the provided content using the OpenAI API and returns the summarized text. string TranslateContent(string content, string from, string to) . Translates the provided content from the source language to the destination language using the OpenAI API. string[] Entities(string content, bool throwOnException) . Extracts entities from the provided content using the OpenAI API and returns an array of entity strings. string DescribeImage(string imageBase64) . Describes the provided image using the Ollama API and returns the description. string AskImage(string question, string imageBase64) . Ask the provided image using the Ollama API and returns the response. bool IsQuestionApplicableToImage(string question, string imageBase64) . Ask the provided image using the Ollama API and returns the response. string LlmPerform&lt;TColumnType&gt;(string whatToDo, TColumnType column) . Ask the provided image using the Ollama API and returns the response. int CountTokens(string content) . Counts the number of tokens in the provided content using the specified model. int CountTokens(string content) . Counts the number of tokens in the provided content using the specified model. ",
    "url": "/data-sources/Ollama/windows-x64.html#methods",
    
    "relUrl": "/data-sources/Ollama/windows-x64.html#methods"
  },"332": {
    "doc": "Windows X64",
    "title": "Base Methods",
    "content": "Base methods are methods that can be called on the data source specific column. Those methods are automatically inherited and enriches the data source specific methods. Below are those base methods that are exposed by this data source. int RowNumber() . Gets the row number of the current row. string? GetTypeName(object? obj) . Gets the typename of passed object. string AggregateValues(string name) . Aggregates values into a single value. string AggregateValues(string name, int parent) . Aggregates values into a single value. Decimal Avg(string name) . Gets the aggregated average value from the given group name . Decimal Avg(string name, int parent) . Gets the aggregated average value from the given group name . byte? ShiftLeft(byte? value, int shift) . Shifts the value to the left by the specified number of bits. short? ShiftLeft(short? value, int shift) . Shifts the value to the left by the specified number of bits. int? ShiftLeft(int? value, int shift) . Shifts the value to the left by the specified number of bits. long? ShiftLeft(long? value, int shift) . Shifts the value to the left by the specified number of bits. sbyte? ShiftLeft(sbyte? value, int shift) . Shifts the value to the left by the specified number of bits. ushort? ShiftLeft(ushort? value, int shift) . Shifts the value to the left by the specified number of bits. uint? ShiftLeft(uint? value, int shift) . Shifts the value to the left by the specified number of bits. ulong? ShiftLeft(ulong? value, int shift) . Shifts the value to the left by the specified number of bits. byte? ShiftRight(byte? value, int shift) . Shifts the value to the right by the specified number of bits. short? ShiftRight(short? value, int shift) . Shifts the value to the right by the specified number of bits. int? ShiftRight(int? value, int shift) . Shifts the value to the right by the specified number of bits. long? ShiftRight(long? value, int shift) . Shifts the value to the right by the specified number of bits. sbyte? ShiftRight(sbyte? value, int shift) . Shifts the value to the right by the specified number of bits. ushort? ShiftRight(ushort? value, int shift) . Shifts the value to the right by the specified number of bits. uint? ShiftRight(uint? value, int shift) . Shifts the value to the right by the specified number of bits. ulong? ShiftRight(ulong? value, int shift) . Shifts the value to the right by the specified number of bits. byte? Not(byte? value) . Performs bitwise NOT operation on a given value. short? Not(short? value) . Performs bitwise NOT operation on a given value. int? Not(int? value) . Performs bitwise NOT operation on a given value. long? Not(long? value) . Performs bitwise NOT operation on a given value. sbyte? Not(sbyte? value) . Performs bitwise NOT operation on a given value. ushort? Not(ushort? value) . Performs bitwise NOT operation on a given value. uint? Not(uint? value) . Performs bitwise NOT operation on a given value. ulong? Not(ulong? value) . Performs bitwise NOT operation on a given value. byte? And(byte? left, byte? right) . Performs bitwise AND operation on two given values. int? And(byte? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(byte? left, short? right) . Performs bitwise AND operation on two given values. int? And(byte? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(byte? left, int? right) . Performs bitwise AND operation on two given values. uint? And(byte? left, uint? right) . Performs bitwise AND operation on two given values. long? And(byte? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(byte? left, ulong? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, byte? right) . Performs bitwise AND operation on two given values. sbyte? And(sbyte? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, short? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, int? right) . Performs bitwise AND operation on two given values. uint? And(sbyte? left, uint? right) . Performs bitwise AND operation on two given values. long? And(sbyte? left, long? right) . Performs bitwise AND operation on two given values. int? And(short? left, byte? right) . Performs bitwise AND operation on two given values. int? And(short? left, sbyte? right) . Performs bitwise AND operation on two given values. short? And(short? left, short? right) . Performs bitwise AND operation on two given values. int? And(short? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(short? left, int? right) . Performs bitwise AND operation on two given values. uint? And(short? left, uint? right) . Performs bitwise AND operation on two given values. long? And(short? left, long? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, byte? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, short? right) . Performs bitwise AND operation on two given values. ushort? And(ushort? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, int? right) . Performs bitwise AND operation on two given values. uint? And(ushort? left, uint? right) . Performs bitwise AND operation on two given values. long? And(ushort? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(ushort? left, ulong? right) . Performs bitwise AND operation on two given values. int? And(int? left, byte? right) . Performs bitwise AND operation on two given values. int? And(int? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(int? left, short? right) . Performs bitwise AND operation on two given values. int? And(int? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(int? left, int? right) . Performs bitwise AND operation on two given values. uint? And(int? left, uint? right) . Performs bitwise AND operation on two given values. long? And(int? left, long? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, uint? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, byte? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, sbyte? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, short? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, ushort? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, int? right) . Performs bitwise AND operation on two given values. ulong? And(uint? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(uint? left, ulong? right) . Performs bitwise AND operation on two given values. long? And(long? left, long? right) . Performs bitwise AND operation on two given values. long? And(long? left, byte? right) . Performs bitwise AND operation on two given values. long? And(long? left, sbyte? right) . Performs bitwise AND operation on two given values. long? And(long? left, short? right) . Performs bitwise AND operation on two given values. long? And(long? left, ushort? right) . Performs bitwise AND operation on two given values. long? And(long? left, int? right) . Performs bitwise AND operation on two given values. long? And(long? left, uint? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, byte? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, ushort? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, uint? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, ulong? right) . Performs bitwise AND operation on two given values. byte? Or(byte? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, short? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(byte? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(byte? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(byte? left, ulong? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, byte? right) . Performs bitwise OR operation on two given values. sbyte? Or(sbyte? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, short? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(sbyte? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(sbyte? left, long? right) . Performs bitwise OR operation on two given values. int? Or(short? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(short? left, sbyte? right) . Performs bitwise OR operation on two given values. short? Or(short? left, short? right) . Performs bitwise OR operation on two given values. int? Or(short? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(short? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(short? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(short? left, long? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, short? right) . Performs bitwise OR operation on two given values. ushort? Or(ushort? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(ushort? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(ushort? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(ushort? left, ulong? right) . Performs bitwise OR operation on two given values. int? Or(int? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(int? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(int? left, short? right) . Performs bitwise OR operation on two given values. int? Or(int? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(int? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(int? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(int? left, long? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, uint? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, byte? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, sbyte? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, short? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, ushort? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, int? right) . Performs bitwise OR operation on two given values. ulong? Or(uint? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(uint? left, ulong? right) . Performs bitwise OR operation on two given values. long? Or(long? left, long? right) . Performs bitwise OR operation on two given values. long? Or(long? left, byte? right) . Performs bitwise OR operation on two given values. long? Or(long? left, sbyte? right) . Performs bitwise OR operation on two given values. long? Or(long? left, short? right) . Performs bitwise OR operation on two given values. long? Or(long? left, ushort? right) . Performs bitwise OR operation on two given values. long? Or(long? left, int? right) . Performs bitwise OR operation on two given values. long? Or(long? left, uint? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, byte? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, ushort? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, uint? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, ulong? right) . Performs bitwise OR operation on two given values. byte? Xor(byte? left, byte? right) . Performs bitwise OR operation on two given values. int? Xor(byte? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(byte? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(byte? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(byte? left, ulong? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, byte? right) . Performs bitwise Xor operation on two given values. sbyte? Xor(sbyte? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(sbyte? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(sbyte? left, long? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, sbyte? right) . Performs bitwise Xor operation on two given values. short? Xor(short? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, ushort? right) . Performs bitwise XOR operation on two given values. int? Xor(short? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(short? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(short? left, long? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, short? right) . Performs bitwise Xor operation on two given values. ushort? Xor(ushort? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(ushort? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(ushort? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ushort? left, ulong? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(int? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(int? left, long? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, uint? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, byte? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, sbyte? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, short? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, ushort? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, int? right) . Performs bitwise Xor operation on two given values. ulong? Xor(uint? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(uint? left, ulong? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, long? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, byte? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, sbyte? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, short? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, ushort? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, int? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, uint? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, ulong? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, byte? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, ushort? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, uint? right) . Performs bitwise Xor operation on two given values. byte[] GetBytes(string? content) . Gets the bytes from the given string. byte[] GetBytes(string? content, int length, int offset) . Gets the bytes from the given string within given offset and length. byte?[]? GetBytes(char? character) . Gets the bytes from the given character. byte?[]? GetBytes(bool? bit) . Gets the bytes from the given boolean. byte?[]? GetBytes(long? value) . Gets the bytes from the given long. byte?[]? GetBytes(int? value) . Gets the bytes from the given int. byte?[]? GetBytes(short? value) . Gets the bytes from the given short. byte?[]? GetBytes(ulong? value) . Gets the bytes from the given ulong. byte?[]? GetBytes(ushort? value) . Gets the bytes from the given ushort. byte?[]? GetBytes(uint? value) . Gets the bytes from the given uint. byte?[]? GetBytes(Decimal? value) . Gets the bytes from the given decimal. byte?[]? GetBytes(double? value) . Gets the bytes from the given double. byte?[]? GetBytes(float? value) . Gets the bytes from the given float. string? ToBin(byte?[]? bytes, string delimiter) . Converts given bytes to binary with defined delimiter . string ToBin&lt;T&gt;(T value) . Converts given value to binary . string ToOcta&lt;T&gt;(T value) . Converts given value to octal . string ToDec&lt;T&gt;(T value) . Converts given value to decimal . string ToBase64(byte[] value) . Converts given value to string . string ToBase64(byte[] value, int offset, int length) . Converts given array of bytes to string . byte[] FromBase64(string value) . Converts given string to bytes array . bool FromBytesToBool(byte[] value) . Converts bytes to boolean value. short FromBytesToInt16(byte[] value) . Converts bytes to a 16-bit signed integer. ushort FromBytesToUInt16(byte[] value) . Converts bytes to a 16-bit unsigned integer. int FromBytesToInt32(byte[] value) . Converts bytes to a 32-bit signed integer. uint FromBytesToUInt32(byte[] value) . Converts bytes to a 32-bit unsigned integer. long FromBytesToInt64(byte[] value) . Converts bytes to a 64-bit signed integer. ulong FromBytesToUInt64(byte[] value) . Converts bytes to a 64-bit unsigned integer. float FromBytesToFloat(byte[] value) . Converts bytes to a float value. double FromBytesToDouble(byte[] value) . Converts bytes to a float value. string FromBytesToString(byte[] value) . Converts bytes to a string. byte[] ToBytes(bool value) . Converts boolean value to bytes. byte[] ToBytes(short value) . Converts short value to bytes. byte[] ToBytes(ushort value) . Converts ushort value to bytes. byte[] ToBytes(int value) . Converts int value to bytes. byte[] ToBytes(uint value) . Converts uint value to bytes. byte[] ToBytes(long value) . Converts long value to bytes. byte[] ToBytes(ulong value) . Converts long value to bytes. string? ToHex(byte?[]? bytes, string delimiter) . Converts given bytes to hex with defined delimiter . string? ToHex&lt;T&gt;(T value) . Converts given value to binary . int Count(string name) . Gets the count value of a given group. int Count(string name, int parent) . Gets the count value of a given group. int ExtractFromDate(string? date, string partOfDate) . Extracts part of the date from the date . int ExtractFromDate(string date, string culture, string partOfDate) . Extracts part of the date from the date based on given culture . DateTimeOffset? GetDate() . Gets the current datetime . DateTimeOffset? UtcGetDate() . Gets the current datetime in UTC . int? Month(DateTimeOffset? value) . Gets the month from DateTimeOffset . int? Year(DateTimeOffset? value) . Gets the year from DateTimeOffset . int? Day(DateTimeOffset? value) . Gets the day from DateTimeOffset . int? Hour(DateTimeOffset? value) . Gets the hour from DateTimeOffset . int? Minute(DateTimeOffset? value) . Gets the minute from DateTimeOffset . int? Second(DateTimeOffset? value) . Gets the second from DateTimeOffset . int? Milliseconds(DateTimeOffset? value) . Gets the millisecond from DateTimeOffset . int? DayOfWeek(DateTimeOffset? value) . Gets the day of week from DateTimeOffset . TimeSpan? ExtractTimeSpan(DateTimeOffset? dateTimeOffset) . Extracts time from DateTimeOffset . DateTime? ToDateTimeOffset(string value) . Converts given value to DateTimeOffset . DateTimeOffset? ToDateTimeOffset(string value, string culture) . Converts given value to DateTimeOffset . IEnumerable&lt;T&gt;? Skip&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? skipCount) . Skips elements from the beginning of the sequence. IEnumerable&lt;T&gt;? Take&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? takeCount) . Takes elements from the beginning of the sequence. IEnumerable&lt;T&gt;? SkipAndTake&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? skipCount, int? takeCount) . Skip and takes elements from the beginning of the sequence. T[]? EnumerableToArray&lt;T&gt;(IEnumerable&lt;T&gt;? values) . Turn array arguments of T into a single array. T[]? MergeArrays&lt;T&gt;(T[][]? values) . Turn array arguments of T into a single array. IEnumerable&lt;T&gt;? LongestCommonSequence&lt;T&gt;(IEnumerable&lt;T&gt;? source, IEnumerable&lt;T&gt;? pattern) . Computes longest common sequence of two given sequences . T? GetElementAtOrDefault&lt;T&gt;(IEnumerable&lt;T&gt;? enumerable, int? index) . Gets the element at the specified index in a sequence . int? Length&lt;T&gt;(IEnumerable&lt;T&gt;? enumerable) . Gets the length of the sequence . int? Length&lt;T&gt;(T[]? array) . Gets the length of the array . T? Choose&lt;T&gt;(int? index, T[] values) . Gets the value of an array at the specified index . T If&lt;T&gt;(bool expressionResult, T a, T b) . Chose a or b value based on the expression result . bool? Match(string? regex, string? content) . Determine whether content matches the specified pattern . byte? Coalesce(byte?[] array) . Gets the first non-null value in a list . sbyte? Coalesce(sbyte?[] array) . Gets the first non-null value in a list . short? Coalesce(short?[] array) . Gets the first non-null value in a list . ushort? Coalesce(ushort?[] array) . Gets the first non-null value in a list . int? Coalesce(int?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(uint?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(long?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(ulong?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(Decimal?[] array) . Gets the first non-null value in a list . T? Coalesce&lt;T&gt;(T[] array) . Gets the first non-null value in a list . IEnumerable&lt;T&gt;? Distinct&lt;T&gt;(IEnumerable&lt;T&gt;? values) . Returns distinct elements from a collection. string? Md5(string? content) . Gets the md5 hash of the given string. string? Md5(byte?[]? content) . Gets the md5 hash of the given bytes array. string? Sha1(string? content) . Gets the sha256 hash of the given string. string? Sha1(byte?[]? content) . Gets the sha256 hash of the given bytes array. string? Sha256(string? content) . Gets the sha256 hash of the given string. string? Sha256(byte?[]? content) . Gets the sha256 hash of the given bytes array. string? Sha512(string? content) . Gets the sha256 hash of the given string. string? Sha512(byte?[]? content) . Gets the sha256 hash of the bytes array. string? ToJson&lt;T&gt;(T? obj) . Converts object to json. string[] ExtractFromJsonToArray(string? json, string? path) . Extracts values from json by path. string? ExtractFromJson(string? json, string? path) . Extracts values from json by path and joins them with comma. Decimal? Abs(Decimal? value) . Gets the absolute value . long? Abs(long? value) . Gets the absolute value . int? Abs(int? value) . Gets the absolute value . Decimal? Ceil(Decimal? value) . Gets the ceiling value . Decimal? Floor(Decimal? value) . Gets the floor value . Decimal? Sign(Decimal? value) . Determine whether value is greater, equal or less that zero . long? Sign(long? value) . Determine whether value is greater, equal or less that zero . Decimal? Round(Decimal? value, int precision) . Rounds the value within given precision . Decimal? PercentOf(Decimal? value, Decimal? max) . Gets the percentage of the value . int Rand() . Gets the random integer value . int? Rand(int? min, int? max) . Gets the random integer value . double? Pow(Decimal? x, Decimal? y) . Computes the pow between two values . double? Pow(double? x, double? y) . Computes the pow between two values . double? Sqrt(Decimal? x) . Computes the sqrt of a given value . double? Sqrt(double? x) . Computes the sqrt of a given value . double? Sqrt(long? x) . Computes the sqrt of a given value . double? PercentRank&lt;T&gt;(IEnumerable&lt;T&gt;? window, T? value) . Computes the percent rank of a given window . double? Log(Decimal? base, Decimal? value) . Calculates the logarithm of a value with a specified base. Decimal? Sin(Decimal? value) . Calculates sine of a value. double? Sin(double? value) . Calculates sine of a value. float? Sin(float? value) . Calculates sine of a value. Decimal? Cos(Decimal? value) . Calculates cosine of a value. double? Cos(double? value) . Calculates cosine of a value. float? Cos(float? value) . Calculates cosine of a value. Decimal Max(string name) . Gets the max value of a given group. Decimal Max(string name, int parent) . Gets the max value of a given group. Decimal Min(string name) . Gets the min value of a given group. Decimal Min(string name, int parent) . Gets the min value of a given group. Decimal StDev(string name, int parent) . Gets the StDev value of a given group. string NewId() . Gets the new identifier . string? Trim(string? value) . Removes leading and trailing whitespace from a string. string? TrimStart(string? value) . Removes leading whitespace from a string. string? TrimEnd(string? value) . Removes trailing whitespace from a string. string? Substring(string? value, int? index, int? length) . Gets the substring from the string. string? Substring(string value, int? length) . Gets the substring from the string . string? Concat(string[]? strings) . Concatenates the specified values . string? Concat(char?[]? characters) . Concatenates the specified characters . string? Concat(string? firstString, char?[]? chars) . Concatenates specified string fir characters . string? Concat(char? firstChar, string[]? strings) . Concatenate specific character with strings . string? Concat(object[]? objects) . Concatenates the specified strings . string? Concat&lt;T&gt;(T[]? objects) . Concatenates the specified strings . bool? Contains(string? content, string? what) . Determine whether the string contains the specified value . int? IndexOf(string? value, string? text) . Position of the first occurrence of the specified value . string? Soundex(string? value) . Computes soundex for the specified value . bool HasFuzzyMatchedWord(string text, string word, string separator) . Matches the specified text by splitting it with separator and applying fuzzy comparison . bool HasWordThatHasSmallerLevenshteinDistanceThan(string text, string word, int distance, string separator) . Matches the specified text by splitting it with separator and applying fuzzy comparison with a given distance . bool HasWordThatSoundLike(string text, string word, string separator) . Matches whether the specified word is present after being fuzzified within the specified text . bool HasTextThatSoundLikeSentence(string text, string sentence, string separator) . Matches whether the specified text is present in sentence after being fuzified . string? ToUpper(string value) . Makes the string uppercase . string? ToUpper(string value, string culture) . Makes the string uppercase within specified culture . string? ToUpperInvariant(string value) . Makes the string uppercase . string? ToLower(string value) . Makes the string lowercase . string? ToLower(string value, string culture) . Makes the string lowercase within specified culture . string? ToLowerInvariant(string value) . Makes the string lowercase . string? PadLeft(string? value, string? character, int? totalWidth) . Returns a new string that right-aligns the characters in this instance by padding them on the left with a specified Unicode character, for a specified total lengt . string? PadRight(string? value, string? character, int? totalWidth) . Returns a new string that left-aligns the characters in this instance by padding them on the right with a specified Unicode character, for a specified total length . string? Head(string? value, int? length) . Gets the first N characters of the string . string? Tail(string? value, int? length) . Gets the last N characters of the string . int? LevenshteinDistance(string? firstValue, string? secondValue) . Computes the Levenshtein distance between two strings . char? GetCharacterOf(string value, int index) . Gets the character at specified index . string? Reverse(string? value) . Reverses the string . string[] Split(string value, string[] separators) . Splits the string into an array of substrings based on the specified separators . char[] ToCharArray(string value) . Splits the string into an array of characters . string? LongestCommonSubstring(string source, string pattern) . Computes the longest common subsequence between two source and pattern . string Replicate(string value, int integer) . Clones the value n times . string? Translate(string? value, string? characters, string? translations) . Returns the string from the first argument after the characters specified in the second argument are translated into the characters specified in the third argument. string? Replace(string? text, string lookFor, string? changeTo) . Replaces the first occurrence of a specified string in this instance with another specified string . string? ToTitleCase(string? value) . Capitalizes the first letter of the string . string? GetNthWord(string? text, int? wordIndex, string? separator) . Gets the nth word of the string . string? GetFirstWord(string text, string separator) . Gets the first word of the string . string? GetSecondWord(string text, string separator) . Gets the second word of the string . string? GetThirdWord(string text, string separator) . Gets the third word of the string . string? GetLastWord(string? text, string? separator) . Gets last word of the string . bool? IsNullOrEmpty(string? value) . Determines whether the string is null or empty . bool? IsNullOrWhiteSpace(string? value) . Determines whether the string is null or whitespace . string? UrlEncode(string? value) . Encodes the value . string? UrlDecode(string? value) . Decodes the value . string? UriEncode(string? value) . Encodes the value . string? UriDecode(string? value) . Decodes the value . bool? StartsWith(string? value, string? prefix) . Determines whether the string starts with the specified prefix . bool? StartsWith(string? value, string? prefix, string comparison) . Determines whether the string starts with the specified prefix . bool? EndsWith(string? value, string? suffix) . Determines whether the string ends with the specified suffix . bool? EndsWith(string? value, string? suffix, string comparison) . Determines whether the string ends with the specified suffix . string? RegexReplace(string? value, string? pattern, string? replacement) . Replace the specified value part that matches the pattern with the replacement . string[]? SplitByLinuxNewLines(string? input) . Split string by Linux-style newlines (\\n) . string[]? SplitByWindowsNewLines(string? input) . Split string by Windows-style newlines (\\r\\n) . string[]? SplitByNewLines(string? input) . Smart split that handles both Windows (\\r\\n) and Linux (\\n) newlines . Decimal Sum(string name) . Gets the sum value of a given group. Decimal Sum(string name, int parent) . Gets the sum value of a given group. Decimal SumIncome(string name) . Gets the sum value of a given group. Decimal SumIncome(string name, int parent) . Gets the sum value of a given group. Decimal SumOutcome(string name) . Gets the outcome value of a given group. Decimal SumOutcome(string name, int parent) . Gets the outcome value of a given group. TimeSpan? SumTimeSpan(string name) . Gets the sum value of a given group. TimeSpan? SumTimeSpan(string name, int parent) . Gets the sum value of a given group. TimeSpan? MinTimeSpan(string name) . Gets the min value of a given group. TimeSpan? MinTimeSpan(string name, int parent) . Gets the min value of a given group. TimeSpan? MaxTimeSpan(string name) . Gets the max value of a given group. TimeSpan? MaxTimeSpan(string name, int parent) . Gets the min value of a given group. char? ToChar(string? value) . Converts given value to character . char? ToChar(int? value) . Converts given value to character . char? ToChar(short? value) . Converts given value to character . char? ToChar(byte? value) . Converts given value to character . char? ToChar(object? value) . Converts given value to character . DateTime? ToDateTime(string value) . Converts given value to DateTime . DateTime? ToDateTime(string value, string culture) . Converts given value to DateTime . Decimal? ToDecimal(string? value) . Converts given value to decimal . Decimal? ToDecimal(string value, string culture) . Converts given value to decimal withing given culture . Decimal? ToDecimal(byte? value) . Converts given value to Decimal . Decimal? ToDecimal(sbyte? value) . Converts given value to Decimal . Decimal? ToDecimal(short? value) . Converts given value to Decimal . Decimal? ToDecimal(ushort? value) . Converts given value to Decimal . Decimal? ToDecimal(long? value) . Converts given value to Decimal . Decimal? ToDecimal(ulong? value) . Converts given value to Decimal . Decimal? ToDecimal(float? value) . Converts given value to Decimal . Decimal? ToDecimal(double? value) . Converts given value to Decimal . Decimal? ToDecimal(object? value) . Converts given value to Decimal . double? ToDouble(object? value) . Converts given value to double . double? ToDouble(string? value) . Converts given value to double . double? ToDouble(byte? value) . Converts given value to double . double? ToDouble(sbyte? value) . Converts given value to double . double? ToDouble(short? value) . Converts given value to double . double? ToDouble(ushort? value) . Converts given value to double . double? ToDouble(int? value) . Converts given value to double . double? ToDouble(uint? value) . Converts given value to double . double? ToDouble(long? value) . Converts given value to double . double? ToDouble(ulong? value) . Converts given value to double . double? ToDouble(float? value) . Converts given value to double . double? ToDouble(double? value) . Converts given value to double . double? ToDouble(Decimal? value) . Converts given value to double . float? ToFloat(string? value) . Converts given value to float . float? ToFloat(byte? value) . Converts given value to float . float? ToFloat(sbyte? value) . Converts given value to float . float? ToFloat(short? value) . Converts given value to float . float? ToFloat(ushort? value) . Converts given value to float . float? ToFloat(int? value) . Converts given value to float . float? ToFloat(uint? value) . Converts given value to float . float? ToFloat(long? value) . Converts given value to float . float? ToFloat(ulong? value) . Converts given value to float . float? ToFloat(float? value) . Converts given value to float . float? ToFloat(Decimal? value) . Converts given value to float . int? ToInt32(string value) . Converts given value to int . int? ToInt32(byte? value) . Converts given value to int . int? ToInt32(sbyte? value) . Converts given value to int . int? ToInt32(short? value) . Converts given value to int . int? ToInt32(ushort? value) . Converts given value to int . int? ToInt32(int? value) . Converts given value to int . int? ToInt32(uint? value) . Converts given value to int . int? ToInt32(long? value) . Converts given value to int . int? ToInt32(ulong? value) . Converts given value to int . int? ToInt32(float? value) . Converts given value to int . int? ToInt32(double? value) . Converts given value to int . int? ToInt32(Decimal? value) . Converts given value to int . int? ToInt32(object? value) . Converts given value to int . long? ToInt64(string value) . Converts given value to Int64 . long? ToInt64(byte? value) . Converts given value to long . long? ToInt64(sbyte? value) . Converts given value to long . long? ToInt64(short? value) . Converts given value to long . long? ToInt64(ushort? value) . Converts given value to long . long? ToInt64(int? value) . Converts given value to long . long? ToInt64(uint? value) . Converts given value to long . long? ToInt64(long? value) . Converts given value to long . long? ToInt64(ulong? value) . Converts given value to long . long? ToInt64(float? value) . Converts given value to long . long? ToInt64(double? value) . Converts given value to long . long? ToInt64(Decimal? value) . Converts given value to long . long? ToInt64(object? value) . Converts given value to long . string? ToString(char? value) . Converts given value to string . string? ToString(DateTimeOffset? value) . Converts given value to string . string? ToString(DateTimeOffset? value, string format) . Converts given value to string . string? ToString(byte? value) . Converts given value to string . string? ToString(byte? value, string format) . Converts given value to string . string? ToString(sbyte? value) . Converts given value to string . string? ToString(sbyte? value, string format) . Converts given value to string . string? ToString(int? value) . Converts given value to string . string? ToString(int? value, string format) . Converts given value to string . string? ToString(uint? value) . Converts given value to string . string? ToString(uint? value, string format) . Converts given value to string . string? ToString(long? value) . Converts given value to string . string? ToString(long? value, string format) . Converts given value to string . string? ToString(ulong? value) . Converts given value to string . string? ToString(ulong? value, string format) . Converts given value to string . string? ToString(float? value) . Converts given value to string . string? ToString(float? value, string format) . Converts given value to string . string? ToString(double? value) . Converts given value to string . string? ToString(double? value, string format) . Converts given value to string . string? ToString(Decimal? value) . Converts given value to string . string? ToString(Decimal? value, string format) . Converts given value to string . string? ToString(bool? value) . Converts given value to string . string? ToString(object? value) . Converts given value to string . string? ToString&lt;T&gt;(T? value) . Converts given value to string . string ToString(string[] value) . Converts given value to string . string ToString&lt;T&gt;(T[] value) . Converts given value to string . TimeSpan? ToTimeSpan(string value) . Converts given value to TimeSpan . TimeSpan? ToTimeSpan(string value, string culture) . Converts given value to TimeSpan . IEnumerable&lt;T&gt; Window&lt;T&gt;(string name) . Gets the window . ",
    "url": "/data-sources/Ollama/windows-x64.html#base-methods",
    
    "relUrl": "/data-sources/Ollama/windows-x64.html#base-methods"
  },"333": {
    "doc": "Windows X64",
    "title": "Windows X64",
    "content": " ",
    "url": "/data-sources/Ollama/windows-x64.html",
    
    "relUrl": "/data-sources/Ollama/windows-x64.html"
  },"334": {
    "doc": "Windows X64",
    "title": "Musoq.DataSources.Kubernetes",
    "content": "Provides schema to work with Kubernetes. ",
    "url": "/data-sources/Kubernetes/windows-x64.html#musoqdatasourceskubernetes",
    
    "relUrl": "/data-sources/Kubernetes/windows-x64.html#musoqdatasourceskubernetes"
  },"335": {
    "doc": "Windows X64",
    "title": "Tables",
    "content": "Table is a collection of rows and columns that the plugin exposes. Below are the tables that are exposed by this data source. kubernetes.deployments() . Enumerate deployments . Environment variables . In order to use the plugin, the user must set any required environment variables as specified in the environments element. Failure to do so may result in the plugin not functioning correctly. | Name | Is required | Description | . | MUSOQ_KUBERNETES_CONFIG_FILE | false | Kubernetes config file | . Columns . | Name | Type | Description | . | Namespace | string | Namespace string | . | Name | string | Name string | . | CreationTimestamp | DateTime? | CreationTimestamp of the DeploymentEntity | . | Generation | long? | Generation of the DeploymentEntity | . | ResourceVersion | string | ResourceVersion string | . | Images | string | Image used within deployment | . | ImagePullPolicies | string | ImagePullPolicies used within deployment | . | RestartPolicy | string | RestartPolicy string | . | ContainersNames | string | Names of containers used within deployment | . | Statuses | string | Statuses of depl | . kubernetes.pods() . Enumerate pods . Environment variables . In order to use the plugin, the user must set any required environment variables as specified in the environments element. Failure to do so may result in the plugin not functioning correctly. | Name | Is required | Description | . | MUSOQ_KUBERNETES_CONFIG_FILE | false | Kubernetes config file | . Columns . | Name | Type | Description | . | Namespace | string | Namespace string | . | Name | string | Name string | . | Type | string | Type string | . | PF | string | PF string | . | Ready | string | Ready string | . | Restarts | string | Restarts string | . | Status | string | Status string | . | Cpu | string | Cpu string | . | Memory | string | Memory string | . | IP | string | IP string | . kubernetes.services() . Enumerates services . Environment variables . In order to use the plugin, the user must set any required environment variables as specified in the environments element. Failure to do so may result in the plugin not functioning correctly. | Name | Is required | Description | . | MUSOQ_KUBERNETES_CONFIG_FILE | false | Kubernetes config file | . Columns . | Name | Type | Description | . | Metadata | V1ObjectMeta | Metadata of the ServiceEntity | . | Spec | V1ServiceSpec | Spec of the ServiceEntity | . | Kind | string | Kind string | . | Status | V1ServiceStatus | Status of the ServiceEntity | . kubernetes.nodes() . Enumerates nodes . Environment variables . In order to use the plugin, the user must set any required environment variables as specified in the environments element. Failure to do so may result in the plugin not functioning correctly. | Name | Is required | Description | . | MUSOQ_KUBERNETES_CONFIG_FILE | false | Kubernetes config file | . Columns . | Name | Type | Description | . | Name | string | Name string | . | Status | string | Status string | . | Roles | string | Roles string | . | Age | DateTime? | Age of the NodeEntity | . | Version | string | Version string | . | Kernel | string | Kernel string | . | OS | string | OS string | . | Architecture | string | Architecture string | . | ContainerRuntime | string | Container Runtime string | . | Cpu | string | CPU string | . | Memory | string | Memory string | . kubernetes.configmaps() . Enumerate configmaps . Environment variables . In order to use the plugin, the user must set any required environment variables as specified in the environments element. Failure to do so may result in the plugin not functioning correctly. | Name | Is required | Description | . | MUSOQ_KUBERNETES_CONFIG_FILE | false | Kubernetes config file | . Columns . | Name | Type | Description | . | Namespace | string | Namespace string | . | Name | string | Name string | . | Age | DateTime? | Age | . kubernetes.cronJobs() . Enumerate cron jobs . Environment variables . In order to use the plugin, the user must set any required environment variables as specified in the environments element. Failure to do so may result in the plugin not functioning correctly. | Name | Is required | Description | . | MUSOQ_KUBERNETES_CONFIG_FILE | false | Kubernetes config file | . Columns . | Name | Type | Description | . | Namespace | string | Namespace string | . | Name | string | Name string | . | Schedule | string | Dictionary of the schedule | . | Active | bool | Flag indicating if the job is active | . | LastScheduleTime | DateTime? | Last schedule time of the job | . kubernetes.daemonSets() . Enumerate daemonsets . Environment variables . In order to use the plugin, the user must set any required environment variables as specified in the environments element. Failure to do so may result in the plugin not functioning correctly. | Name | Is required | Description | . | MUSOQ_KUBERNETES_CONFIG_FILE | false | Kubernetes config file | . Columns . | Name | Type | Description | . | Namespace | string | Namespace string | . | Name | string | Name string | . | Desired | int | Desired number of entities | . | Current | int | Current number of entities | . | Ready | int | Number of ready entities | . | UpToDate | int? | Number of up-to-date entities | . | Available | int? | Number of available entities | . | Age | DateTime? | Age of the entity | . kubernetes.jobs() . Enumerate jobs . Environment variables . In order to use the plugin, the user must set any required environment variables as specified in the environments element. Failure to do so may result in the plugin not functioning correctly. | Name | Is required | Description | . | MUSOQ_KUBERNETES_CONFIG_FILE | false | Kubernetes config file | . Columns . | Name | Type | Description | . | Namespace | string | Namespace string | . | Name | string | Name string | . | Completions | int | Number of completions | . | Duration | TimeSpan? | Duration of job execution | . | Images | string | Images string | . | Age | DateTime? | Age of the job | . kubernetes.persistentVolumeClaims() . Enumerate persistent volume claims . Environment variables . In order to use the plugin, the user must set any required environment variables as specified in the environments element. Failure to do so may result in the plugin not functioning correctly. | Name | Is required | Description | . | MUSOQ_KUBERNETES_CONFIG_FILE | false | Kubernetes config file | . Columns . | Name | Type | Description | . | Namespace | string | Namespace string | . | Name | string | Name string | . | Status | string | Status string | . | Volume | string | Volume string | . | Capacity | string | Capacity string | . | Age | DateTime? | Age of the PersistentVolumeClaimsEntity | . kubernetes.persistentVolumes() . Enumerate persistent volumes . Environment variables . In order to use the plugin, the user must set any required environment variables as specified in the environments element. Failure to do so may result in the plugin not functioning correctly. | Name | Is required | Description | . | MUSOQ_KUBERNETES_CONFIG_FILE | false | Kubernetes config file | . Columns . | Name | Type | Description | . | Name | string | Name string | . | Capacity | IDictionary&lt;string, ResourceQuantity&gt; | Dictionary of capacities | . | AccessModes | string | AccessModes string | . | ReclaimPolicy | string | Reclaim policy string | . | Status | string | Status string | . | Claim | string | Claim string | . | StorageClass | string | StorageClass string | . | Reason | string | Reason string | . | Age | DateTime? | Age of the PersistentVolumeEntity | . kubernetes.replicaSets() . Enumerate replicasets . Environment variables . In order to use the plugin, the user must set any required environment variables as specified in the environments element. Failure to do so may result in the plugin not functioning correctly. | Name | Is required | Description | . | MUSOQ_KUBERNETES_CONFIG_FILE | false | Kubernetes config file | . Columns . | Name | Type | Description | . | Namespace | string | Namespace string | . | Name | string | Name string | . | Desired | int? | Desired number of replicas | . | Current | string | Current string | . | ReadyAge | DateTime? | Age when the ReplicaSetEntity is ready | . kubernetes.secretsData() . Enumerate secrets data . Environment variables . In order to use the plugin, the user must set any required environment variables as specified in the environments element. Failure to do so may result in the plugin not functioning correctly. | Name | Is required | Description | . | MUSOQ_KUBERNETES_CONFIG_FILE | false | Kubernetes config file | . Columns . | Name | Type | Description | . | Namespace | string | Namespace string | . | Name | string | Name string | . | Key | string | Key string | . | Value | byte[] | Value byte array | . kubernetes.secrets() . Enumerate secrets . Environment variables . In order to use the plugin, the user must set any required environment variables as specified in the environments element. Failure to do so may result in the plugin not functioning correctly. | Name | Is required | Description | . | MUSOQ_KUBERNETES_CONFIG_FILE | false | Kubernetes config file | . Columns . | Name | Type | Description | . | Namespace | string | Namespace string | . | Name | string | Name string | . | Type | string | Type string | . | Age | DateTime? | Age of the SecretEntity | . kubernetes.statefulsets() . Enumerate statefulsets . Environment variables . In order to use the plugin, the user must set any required environment variables as specified in the environments element. Failure to do so may result in the plugin not functioning correctly. | Name | Is required | Description | . | MUSOQ_KUBERNETES_CONFIG_FILE | false | Kubernetes config file | . Columns . | Name | Type | Description | . | Namespace | string | Namespace string | . | Name | string | Name string | . | Replicas | int? | Number of replicas | . | Age | DateTime? | Age of the StatefulSetEntity | . kubernetes.podcontainers() . Enumerate pod containers . Environment variables . In order to use the plugin, the user must set any required environment variables as specified in the environments element. Failure to do so may result in the plugin not functioning correctly. | Name | Is required | Description | . | MUSOQ_KUBERNETES_CONFIG_FILE | false | Kubernetes config file | . Columns . | Name | Type | Description | . | Namespace | string | Namespace string | . | Name | string | Name string | . | ContainerName | string | Container name string | . | Image | string | Image string | . | ImagePullPolicy | string | Image pull policy string | . | Age | DateTime? | Container age | . kubernetes.podlogs(string podName, string string containerName, string namespace) . Enumerate pod containers . Environment variables . In order to use the plugin, the user must set any required environment variables as specified in the environments element. Failure to do so may result in the plugin not functioning correctly. | Name | Is required | Description | . | MUSOQ_KUBERNETES_CONFIG_FILE | false | Kubernetes config file | . Columns . | Name | Type | Description | . | Namespace | string | Namespace string | . | Name | string | Name string | . | ContainerName | string | Container name string | . | Line | string | Line string | . kubernetes.events() . Enumerate events . Environment variables . In order to use the plugin, the user must set any required environment variables as specified in the environments element. Failure to do so may result in the plugin not functioning correctly. | Name | Is required | Description | . | MUSOQ_KUBERNETES_CONFIG_FILE | false | Kubernetes config file | . Columns . | Name | Type | Description | . | Action | string | Action string | . | ApiVersion | string | ApiVersion string | . | Count | int? | Count of the event | . | EventTime | DateTime? | EventTime of the event | . | FirstTimestamp | DateTime? | FirstTimestamp of the event | . | InvolvedObject | V1ObjectReference | InvolvedObject of the event | . | Kind | string | Kind string | . | LastTimestamp | DateTime? | LastTimestamp of the event | . | Message | string | Message string | . | Reason | string | Reason string | . | Related | V1ObjectReference | Related of the event | . | ReportingComponent | string | ReportingComponent string | . | ReportingInstance | string | ReportingInstance string | . | Series | Corev1EventSeries | Series of the event | . | Source | V1EventSource | Source of the event | . | Type | string | Type string | . kubernetes.events(string namespace) . Enumerate events . Environment variables . In order to use the plugin, the user must set any required environment variables as specified in the environments element. Failure to do so may result in the plugin not functioning correctly. | Name | Is required | Description | . | MUSOQ_KUBERNETES_CONFIG_FILE | false | Kubernetes config file | . Columns . | Name | Type | Description | . | Action | string | Action string | . | ApiVersion | string | ApiVersion string | . | Count | int? | Count of the event | . | EventTime | DateTime? | EventTime of the event | . | FirstTimestamp | DateTime? | FirstTimestamp of the event | . | InvolvedObject | V1ObjectReference | InvolvedObject of the event | . | Kind | string | Kind string | . | LastTimestamp | DateTime? | LastTimestamp of the event | . | Message | string | Message string | . | Reason | string | Reason string | . | Related | V1ObjectReference | Related of the event | . | ReportingComponent | string | ReportingComponent string | . | ReportingInstance | string | ReportingInstance string | . | Series | Corev1EventSeries | Series of the event | . | Source | V1EventSource | Source of the event | . | Type | string | Type string | . ",
    "url": "/data-sources/Kubernetes/windows-x64.html#tables",
    
    "relUrl": "/data-sources/Kubernetes/windows-x64.html#tables"
  },"336": {
    "doc": "Windows X64",
    "title": "Methods",
    "content": "Methods are functions that can be called on the data source specific column. Below are the methods that are exposed by this data source. string EncodeSecret(string text) . Encodes the secret. string EncodeSecret(string text, string encoding) . Encodes the secret. string DecodeSecret(string text) . Decodes the secret. string? GetLabelOrDefault(string key) . Gets the pod container label. ",
    "url": "/data-sources/Kubernetes/windows-x64.html#methods",
    
    "relUrl": "/data-sources/Kubernetes/windows-x64.html#methods"
  },"337": {
    "doc": "Windows X64",
    "title": "Base Methods",
    "content": "Base methods are methods that can be called on the data source specific column. Those methods are automatically inherited and enriches the data source specific methods. Below are those base methods that are exposed by this data source. int RowNumber() . Gets the row number of the current row. string? GetTypeName(object? obj) . Gets the typename of passed object. string AggregateValues(string name) . Aggregates values into a single value. string AggregateValues(string name, int parent) . Aggregates values into a single value. Decimal Avg(string name) . Gets the aggregated average value from the given group name . Decimal Avg(string name, int parent) . Gets the aggregated average value from the given group name . byte? ShiftLeft(byte? value, int shift) . Shifts the value to the left by the specified number of bits. short? ShiftLeft(short? value, int shift) . Shifts the value to the left by the specified number of bits. int? ShiftLeft(int? value, int shift) . Shifts the value to the left by the specified number of bits. long? ShiftLeft(long? value, int shift) . Shifts the value to the left by the specified number of bits. sbyte? ShiftLeft(sbyte? value, int shift) . Shifts the value to the left by the specified number of bits. ushort? ShiftLeft(ushort? value, int shift) . Shifts the value to the left by the specified number of bits. uint? ShiftLeft(uint? value, int shift) . Shifts the value to the left by the specified number of bits. ulong? ShiftLeft(ulong? value, int shift) . Shifts the value to the left by the specified number of bits. byte? ShiftRight(byte? value, int shift) . Shifts the value to the right by the specified number of bits. short? ShiftRight(short? value, int shift) . Shifts the value to the right by the specified number of bits. int? ShiftRight(int? value, int shift) . Shifts the value to the right by the specified number of bits. long? ShiftRight(long? value, int shift) . Shifts the value to the right by the specified number of bits. sbyte? ShiftRight(sbyte? value, int shift) . Shifts the value to the right by the specified number of bits. ushort? ShiftRight(ushort? value, int shift) . Shifts the value to the right by the specified number of bits. uint? ShiftRight(uint? value, int shift) . Shifts the value to the right by the specified number of bits. ulong? ShiftRight(ulong? value, int shift) . Shifts the value to the right by the specified number of bits. byte? Not(byte? value) . Performs bitwise NOT operation on a given value. short? Not(short? value) . Performs bitwise NOT operation on a given value. int? Not(int? value) . Performs bitwise NOT operation on a given value. long? Not(long? value) . Performs bitwise NOT operation on a given value. sbyte? Not(sbyte? value) . Performs bitwise NOT operation on a given value. ushort? Not(ushort? value) . Performs bitwise NOT operation on a given value. uint? Not(uint? value) . Performs bitwise NOT operation on a given value. ulong? Not(ulong? value) . Performs bitwise NOT operation on a given value. byte? And(byte? left, byte? right) . Performs bitwise AND operation on two given values. int? And(byte? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(byte? left, short? right) . Performs bitwise AND operation on two given values. int? And(byte? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(byte? left, int? right) . Performs bitwise AND operation on two given values. uint? And(byte? left, uint? right) . Performs bitwise AND operation on two given values. long? And(byte? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(byte? left, ulong? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, byte? right) . Performs bitwise AND operation on two given values. sbyte? And(sbyte? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, short? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, int? right) . Performs bitwise AND operation on two given values. uint? And(sbyte? left, uint? right) . Performs bitwise AND operation on two given values. long? And(sbyte? left, long? right) . Performs bitwise AND operation on two given values. int? And(short? left, byte? right) . Performs bitwise AND operation on two given values. int? And(short? left, sbyte? right) . Performs bitwise AND operation on two given values. short? And(short? left, short? right) . Performs bitwise AND operation on two given values. int? And(short? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(short? left, int? right) . Performs bitwise AND operation on two given values. uint? And(short? left, uint? right) . Performs bitwise AND operation on two given values. long? And(short? left, long? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, byte? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, short? right) . Performs bitwise AND operation on two given values. ushort? And(ushort? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, int? right) . Performs bitwise AND operation on two given values. uint? And(ushort? left, uint? right) . Performs bitwise AND operation on two given values. long? And(ushort? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(ushort? left, ulong? right) . Performs bitwise AND operation on two given values. int? And(int? left, byte? right) . Performs bitwise AND operation on two given values. int? And(int? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(int? left, short? right) . Performs bitwise AND operation on two given values. int? And(int? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(int? left, int? right) . Performs bitwise AND operation on two given values. uint? And(int? left, uint? right) . Performs bitwise AND operation on two given values. long? And(int? left, long? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, uint? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, byte? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, sbyte? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, short? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, ushort? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, int? right) . Performs bitwise AND operation on two given values. ulong? And(uint? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(uint? left, ulong? right) . Performs bitwise AND operation on two given values. long? And(long? left, long? right) . Performs bitwise AND operation on two given values. long? And(long? left, byte? right) . Performs bitwise AND operation on two given values. long? And(long? left, sbyte? right) . Performs bitwise AND operation on two given values. long? And(long? left, short? right) . Performs bitwise AND operation on two given values. long? And(long? left, ushort? right) . Performs bitwise AND operation on two given values. long? And(long? left, int? right) . Performs bitwise AND operation on two given values. long? And(long? left, uint? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, byte? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, ushort? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, uint? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, ulong? right) . Performs bitwise AND operation on two given values. byte? Or(byte? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, short? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(byte? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(byte? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(byte? left, ulong? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, byte? right) . Performs bitwise OR operation on two given values. sbyte? Or(sbyte? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, short? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(sbyte? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(sbyte? left, long? right) . Performs bitwise OR operation on two given values. int? Or(short? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(short? left, sbyte? right) . Performs bitwise OR operation on two given values. short? Or(short? left, short? right) . Performs bitwise OR operation on two given values. int? Or(short? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(short? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(short? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(short? left, long? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, short? right) . Performs bitwise OR operation on two given values. ushort? Or(ushort? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(ushort? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(ushort? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(ushort? left, ulong? right) . Performs bitwise OR operation on two given values. int? Or(int? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(int? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(int? left, short? right) . Performs bitwise OR operation on two given values. int? Or(int? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(int? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(int? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(int? left, long? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, uint? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, byte? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, sbyte? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, short? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, ushort? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, int? right) . Performs bitwise OR operation on two given values. ulong? Or(uint? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(uint? left, ulong? right) . Performs bitwise OR operation on two given values. long? Or(long? left, long? right) . Performs bitwise OR operation on two given values. long? Or(long? left, byte? right) . Performs bitwise OR operation on two given values. long? Or(long? left, sbyte? right) . Performs bitwise OR operation on two given values. long? Or(long? left, short? right) . Performs bitwise OR operation on two given values. long? Or(long? left, ushort? right) . Performs bitwise OR operation on two given values. long? Or(long? left, int? right) . Performs bitwise OR operation on two given values. long? Or(long? left, uint? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, byte? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, ushort? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, uint? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, ulong? right) . Performs bitwise OR operation on two given values. byte? Xor(byte? left, byte? right) . Performs bitwise OR operation on two given values. int? Xor(byte? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(byte? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(byte? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(byte? left, ulong? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, byte? right) . Performs bitwise Xor operation on two given values. sbyte? Xor(sbyte? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(sbyte? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(sbyte? left, long? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, sbyte? right) . Performs bitwise Xor operation on two given values. short? Xor(short? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, ushort? right) . Performs bitwise XOR operation on two given values. int? Xor(short? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(short? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(short? left, long? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, short? right) . Performs bitwise Xor operation on two given values. ushort? Xor(ushort? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(ushort? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(ushort? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ushort? left, ulong? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(int? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(int? left, long? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, uint? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, byte? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, sbyte? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, short? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, ushort? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, int? right) . Performs bitwise Xor operation on two given values. ulong? Xor(uint? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(uint? left, ulong? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, long? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, byte? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, sbyte? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, short? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, ushort? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, int? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, uint? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, ulong? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, byte? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, ushort? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, uint? right) . Performs bitwise Xor operation on two given values. byte[] GetBytes(string? content) . Gets the bytes from the given string. byte[] GetBytes(string? content, int length, int offset) . Gets the bytes from the given string within given offset and length. byte?[]? GetBytes(char? character) . Gets the bytes from the given character. byte?[]? GetBytes(bool? bit) . Gets the bytes from the given boolean. byte?[]? GetBytes(long? value) . Gets the bytes from the given long. byte?[]? GetBytes(int? value) . Gets the bytes from the given int. byte?[]? GetBytes(short? value) . Gets the bytes from the given short. byte?[]? GetBytes(ulong? value) . Gets the bytes from the given ulong. byte?[]? GetBytes(ushort? value) . Gets the bytes from the given ushort. byte?[]? GetBytes(uint? value) . Gets the bytes from the given uint. byte?[]? GetBytes(Decimal? value) . Gets the bytes from the given decimal. byte?[]? GetBytes(double? value) . Gets the bytes from the given double. byte?[]? GetBytes(float? value) . Gets the bytes from the given float. string? ToBin(byte?[]? bytes, string delimiter) . Converts given bytes to binary with defined delimiter . string ToBin&lt;T&gt;(T value) . Converts given value to binary . string ToOcta&lt;T&gt;(T value) . Converts given value to octal . string ToDec&lt;T&gt;(T value) . Converts given value to decimal . string ToBase64(byte[] value) . Converts given value to string . string ToBase64(byte[] value, int offset, int length) . Converts given array of bytes to string . byte[] FromBase64(string value) . Converts given string to bytes array . bool FromBytesToBool(byte[] value) . Converts bytes to boolean value. short FromBytesToInt16(byte[] value) . Converts bytes to a 16-bit signed integer. ushort FromBytesToUInt16(byte[] value) . Converts bytes to a 16-bit unsigned integer. int FromBytesToInt32(byte[] value) . Converts bytes to a 32-bit signed integer. uint FromBytesToUInt32(byte[] value) . Converts bytes to a 32-bit unsigned integer. long FromBytesToInt64(byte[] value) . Converts bytes to a 64-bit signed integer. ulong FromBytesToUInt64(byte[] value) . Converts bytes to a 64-bit unsigned integer. float FromBytesToFloat(byte[] value) . Converts bytes to a float value. double FromBytesToDouble(byte[] value) . Converts bytes to a float value. string FromBytesToString(byte[] value) . Converts bytes to a string. byte[] ToBytes(bool value) . Converts boolean value to bytes. byte[] ToBytes(short value) . Converts short value to bytes. byte[] ToBytes(ushort value) . Converts ushort value to bytes. byte[] ToBytes(int value) . Converts int value to bytes. byte[] ToBytes(uint value) . Converts uint value to bytes. byte[] ToBytes(long value) . Converts long value to bytes. byte[] ToBytes(ulong value) . Converts long value to bytes. string? ToHex(byte?[]? bytes, string delimiter) . Converts given bytes to hex with defined delimiter . string? ToHex&lt;T&gt;(T value) . Converts given value to binary . int Count(string name) . Gets the count value of a given group. int Count(string name, int parent) . Gets the count value of a given group. int ExtractFromDate(string? date, string partOfDate) . Extracts part of the date from the date . int ExtractFromDate(string date, string culture, string partOfDate) . Extracts part of the date from the date based on given culture . DateTimeOffset? GetDate() . Gets the current datetime . DateTimeOffset? UtcGetDate() . Gets the current datetime in UTC . int? Month(DateTimeOffset? value) . Gets the month from DateTimeOffset . int? Year(DateTimeOffset? value) . Gets the year from DateTimeOffset . int? Day(DateTimeOffset? value) . Gets the day from DateTimeOffset . int? Hour(DateTimeOffset? value) . Gets the hour from DateTimeOffset . int? Minute(DateTimeOffset? value) . Gets the minute from DateTimeOffset . int? Second(DateTimeOffset? value) . Gets the second from DateTimeOffset . int? Milliseconds(DateTimeOffset? value) . Gets the millisecond from DateTimeOffset . int? DayOfWeek(DateTimeOffset? value) . Gets the day of week from DateTimeOffset . TimeSpan? ExtractTimeSpan(DateTimeOffset? dateTimeOffset) . Extracts time from DateTimeOffset . DateTime? ToDateTimeOffset(string value) . Converts given value to DateTimeOffset . DateTimeOffset? ToDateTimeOffset(string value, string culture) . Converts given value to DateTimeOffset . IEnumerable&lt;T&gt;? Skip&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? skipCount) . Skips elements from the beginning of the sequence. IEnumerable&lt;T&gt;? Take&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? takeCount) . Takes elements from the beginning of the sequence. IEnumerable&lt;T&gt;? SkipAndTake&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? skipCount, int? takeCount) . Skip and takes elements from the beginning of the sequence. T[]? EnumerableToArray&lt;T&gt;(IEnumerable&lt;T&gt;? values) . Turn array arguments of T into a single array. T[]? MergeArrays&lt;T&gt;(T[][]? values) . Turn array arguments of T into a single array. IEnumerable&lt;T&gt;? LongestCommonSequence&lt;T&gt;(IEnumerable&lt;T&gt;? source, IEnumerable&lt;T&gt;? pattern) . Computes longest common sequence of two given sequences . T? GetElementAtOrDefault&lt;T&gt;(IEnumerable&lt;T&gt;? enumerable, int? index) . Gets the element at the specified index in a sequence . int? Length&lt;T&gt;(IEnumerable&lt;T&gt;? enumerable) . Gets the length of the sequence . int? Length&lt;T&gt;(T[]? array) . Gets the length of the array . T? Choose&lt;T&gt;(int? index, T[] values) . Gets the value of an array at the specified index . T If&lt;T&gt;(bool expressionResult, T a, T b) . Chose a or b value based on the expression result . bool? Match(string? regex, string? content) . Determine whether content matches the specified pattern . byte? Coalesce(byte?[] array) . Gets the first non-null value in a list . sbyte? Coalesce(sbyte?[] array) . Gets the first non-null value in a list . short? Coalesce(short?[] array) . Gets the first non-null value in a list . ushort? Coalesce(ushort?[] array) . Gets the first non-null value in a list . int? Coalesce(int?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(uint?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(long?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(ulong?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(Decimal?[] array) . Gets the first non-null value in a list . T? Coalesce&lt;T&gt;(T[] array) . Gets the first non-null value in a list . IEnumerable&lt;T&gt;? Distinct&lt;T&gt;(IEnumerable&lt;T&gt;? values) . Returns distinct elements from a collection. string? Md5(string? content) . Gets the md5 hash of the given string. string? Md5(byte?[]? content) . Gets the md5 hash of the given bytes array. string? Sha1(string? content) . Gets the sha256 hash of the given string. string? Sha1(byte?[]? content) . Gets the sha256 hash of the given bytes array. string? Sha256(string? content) . Gets the sha256 hash of the given string. string? Sha256(byte?[]? content) . Gets the sha256 hash of the given bytes array. string? Sha512(string? content) . Gets the sha256 hash of the given string. string? Sha512(byte?[]? content) . Gets the sha256 hash of the bytes array. string? ToJson&lt;T&gt;(T? obj) . Converts object to json. string[] ExtractFromJsonToArray(string? json, string? path) . Extracts values from json by path. string? ExtractFromJson(string? json, string? path) . Extracts values from json by path and joins them with comma. Decimal? Abs(Decimal? value) . Gets the absolute value . long? Abs(long? value) . Gets the absolute value . int? Abs(int? value) . Gets the absolute value . Decimal? Ceil(Decimal? value) . Gets the ceiling value . Decimal? Floor(Decimal? value) . Gets the floor value . Decimal? Sign(Decimal? value) . Determine whether value is greater, equal or less that zero . long? Sign(long? value) . Determine whether value is greater, equal or less that zero . Decimal? Round(Decimal? value, int precision) . Rounds the value within given precision . Decimal? PercentOf(Decimal? value, Decimal? max) . Gets the percentage of the value . int Rand() . Gets the random integer value . int? Rand(int? min, int? max) . Gets the random integer value . double? Pow(Decimal? x, Decimal? y) . Computes the pow between two values . double? Pow(double? x, double? y) . Computes the pow between two values . double? Sqrt(Decimal? x) . Computes the sqrt of a given value . double? Sqrt(double? x) . Computes the sqrt of a given value . double? Sqrt(long? x) . Computes the sqrt of a given value . double? PercentRank&lt;T&gt;(IEnumerable&lt;T&gt;? window, T? value) . Computes the percent rank of a given window . double? Log(Decimal? base, Decimal? value) . Calculates the logarithm of a value with a specified base. Decimal? Sin(Decimal? value) . Calculates sine of a value. double? Sin(double? value) . Calculates sine of a value. float? Sin(float? value) . Calculates sine of a value. Decimal? Cos(Decimal? value) . Calculates cosine of a value. double? Cos(double? value) . Calculates cosine of a value. float? Cos(float? value) . Calculates cosine of a value. Decimal Max(string name) . Gets the max value of a given group. Decimal Max(string name, int parent) . Gets the max value of a given group. Decimal Min(string name) . Gets the min value of a given group. Decimal Min(string name, int parent) . Gets the min value of a given group. Decimal StDev(string name, int parent) . Gets the StDev value of a given group. string NewId() . Gets the new identifier . string? Trim(string? value) . Removes leading and trailing whitespace from a string. string? TrimStart(string? value) . Removes leading whitespace from a string. string? TrimEnd(string? value) . Removes trailing whitespace from a string. string? Substring(string? value, int? index, int? length) . Gets the substring from the string. string? Substring(string value, int? length) . Gets the substring from the string . string? Concat(string[]? strings) . Concatenates the specified values . string? Concat(char?[]? characters) . Concatenates the specified characters . string? Concat(string? firstString, char?[]? chars) . Concatenates specified string fir characters . string? Concat(char? firstChar, string[]? strings) . Concatenate specific character with strings . string? Concat(object[]? objects) . Concatenates the specified strings . string? Concat&lt;T&gt;(T[]? objects) . Concatenates the specified strings . bool? Contains(string? content, string? what) . Determine whether the string contains the specified value . int? IndexOf(string? value, string? text) . Position of the first occurrence of the specified value . string? Soundex(string? value) . Computes soundex for the specified value . bool HasFuzzyMatchedWord(string text, string word, string separator) . Matches the specified text by splitting it with separator and applying fuzzy comparison . bool HasWordThatHasSmallerLevenshteinDistanceThan(string text, string word, int distance, string separator) . Matches the specified text by splitting it with separator and applying fuzzy comparison with a given distance . bool HasWordThatSoundLike(string text, string word, string separator) . Matches whether the specified word is present after being fuzzified within the specified text . bool HasTextThatSoundLikeSentence(string text, string sentence, string separator) . Matches whether the specified text is present in sentence after being fuzified . string? ToUpper(string value) . Makes the string uppercase . string? ToUpper(string value, string culture) . Makes the string uppercase within specified culture . string? ToUpperInvariant(string value) . Makes the string uppercase . string? ToLower(string value) . Makes the string lowercase . string? ToLower(string value, string culture) . Makes the string lowercase within specified culture . string? ToLowerInvariant(string value) . Makes the string lowercase . string? PadLeft(string? value, string? character, int? totalWidth) . Returns a new string that right-aligns the characters in this instance by padding them on the left with a specified Unicode character, for a specified total lengt . string? PadRight(string? value, string? character, int? totalWidth) . Returns a new string that left-aligns the characters in this instance by padding them on the right with a specified Unicode character, for a specified total length . string? Head(string? value, int? length) . Gets the first N characters of the string . string? Tail(string? value, int? length) . Gets the last N characters of the string . int? LevenshteinDistance(string? firstValue, string? secondValue) . Computes the Levenshtein distance between two strings . char? GetCharacterOf(string value, int index) . Gets the character at specified index . string? Reverse(string? value) . Reverses the string . string[] Split(string value, string[] separators) . Splits the string into an array of substrings based on the specified separators . char[] ToCharArray(string value) . Splits the string into an array of characters . string? LongestCommonSubstring(string source, string pattern) . Computes the longest common subsequence between two source and pattern . string Replicate(string value, int integer) . Clones the value n times . string? Translate(string? value, string? characters, string? translations) . Returns the string from the first argument after the characters specified in the second argument are translated into the characters specified in the third argument. string? Replace(string? text, string lookFor, string? changeTo) . Replaces the first occurrence of a specified string in this instance with another specified string . string? ToTitleCase(string? value) . Capitalizes the first letter of the string . string? GetNthWord(string? text, int? wordIndex, string? separator) . Gets the nth word of the string . string? GetFirstWord(string text, string separator) . Gets the first word of the string . string? GetSecondWord(string text, string separator) . Gets the second word of the string . string? GetThirdWord(string text, string separator) . Gets the third word of the string . string? GetLastWord(string? text, string? separator) . Gets last word of the string . bool? IsNullOrEmpty(string? value) . Determines whether the string is null or empty . bool? IsNullOrWhiteSpace(string? value) . Determines whether the string is null or whitespace . string? UrlEncode(string? value) . Encodes the value . string? UrlDecode(string? value) . Decodes the value . string? UriEncode(string? value) . Encodes the value . string? UriDecode(string? value) . Decodes the value . bool? StartsWith(string? value, string? prefix) . Determines whether the string starts with the specified prefix . bool? StartsWith(string? value, string? prefix, string comparison) . Determines whether the string starts with the specified prefix . bool? EndsWith(string? value, string? suffix) . Determines whether the string ends with the specified suffix . bool? EndsWith(string? value, string? suffix, string comparison) . Determines whether the string ends with the specified suffix . string? RegexReplace(string? value, string? pattern, string? replacement) . Replace the specified value part that matches the pattern with the replacement . string[]? SplitByLinuxNewLines(string? input) . Split string by Linux-style newlines (\\n) . string[]? SplitByWindowsNewLines(string? input) . Split string by Windows-style newlines (\\r\\n) . string[]? SplitByNewLines(string? input) . Smart split that handles both Windows (\\r\\n) and Linux (\\n) newlines . Decimal Sum(string name) . Gets the sum value of a given group. Decimal Sum(string name, int parent) . Gets the sum value of a given group. Decimal SumIncome(string name) . Gets the sum value of a given group. Decimal SumIncome(string name, int parent) . Gets the sum value of a given group. Decimal SumOutcome(string name) . Gets the outcome value of a given group. Decimal SumOutcome(string name, int parent) . Gets the outcome value of a given group. TimeSpan? SumTimeSpan(string name) . Gets the sum value of a given group. TimeSpan? SumTimeSpan(string name, int parent) . Gets the sum value of a given group. TimeSpan? MinTimeSpan(string name) . Gets the min value of a given group. TimeSpan? MinTimeSpan(string name, int parent) . Gets the min value of a given group. TimeSpan? MaxTimeSpan(string name) . Gets the max value of a given group. TimeSpan? MaxTimeSpan(string name, int parent) . Gets the min value of a given group. char? ToChar(string? value) . Converts given value to character . char? ToChar(int? value) . Converts given value to character . char? ToChar(short? value) . Converts given value to character . char? ToChar(byte? value) . Converts given value to character . char? ToChar(object? value) . Converts given value to character . DateTime? ToDateTime(string value) . Converts given value to DateTime . DateTime? ToDateTime(string value, string culture) . Converts given value to DateTime . Decimal? ToDecimal(string? value) . Converts given value to decimal . Decimal? ToDecimal(string value, string culture) . Converts given value to decimal withing given culture . Decimal? ToDecimal(byte? value) . Converts given value to Decimal . Decimal? ToDecimal(sbyte? value) . Converts given value to Decimal . Decimal? ToDecimal(short? value) . Converts given value to Decimal . Decimal? ToDecimal(ushort? value) . Converts given value to Decimal . Decimal? ToDecimal(long? value) . Converts given value to Decimal . Decimal? ToDecimal(ulong? value) . Converts given value to Decimal . Decimal? ToDecimal(float? value) . Converts given value to Decimal . Decimal? ToDecimal(double? value) . Converts given value to Decimal . Decimal? ToDecimal(object? value) . Converts given value to Decimal . double? ToDouble(object? value) . Converts given value to double . double? ToDouble(string? value) . Converts given value to double . double? ToDouble(byte? value) . Converts given value to double . double? ToDouble(sbyte? value) . Converts given value to double . double? ToDouble(short? value) . Converts given value to double . double? ToDouble(ushort? value) . Converts given value to double . double? ToDouble(int? value) . Converts given value to double . double? ToDouble(uint? value) . Converts given value to double . double? ToDouble(long? value) . Converts given value to double . double? ToDouble(ulong? value) . Converts given value to double . double? ToDouble(float? value) . Converts given value to double . double? ToDouble(double? value) . Converts given value to double . double? ToDouble(Decimal? value) . Converts given value to double . float? ToFloat(string? value) . Converts given value to float . float? ToFloat(byte? value) . Converts given value to float . float? ToFloat(sbyte? value) . Converts given value to float . float? ToFloat(short? value) . Converts given value to float . float? ToFloat(ushort? value) . Converts given value to float . float? ToFloat(int? value) . Converts given value to float . float? ToFloat(uint? value) . Converts given value to float . float? ToFloat(long? value) . Converts given value to float . float? ToFloat(ulong? value) . Converts given value to float . float? ToFloat(float? value) . Converts given value to float . float? ToFloat(Decimal? value) . Converts given value to float . int? ToInt32(string value) . Converts given value to int . int? ToInt32(byte? value) . Converts given value to int . int? ToInt32(sbyte? value) . Converts given value to int . int? ToInt32(short? value) . Converts given value to int . int? ToInt32(ushort? value) . Converts given value to int . int? ToInt32(int? value) . Converts given value to int . int? ToInt32(uint? value) . Converts given value to int . int? ToInt32(long? value) . Converts given value to int . int? ToInt32(ulong? value) . Converts given value to int . int? ToInt32(float? value) . Converts given value to int . int? ToInt32(double? value) . Converts given value to int . int? ToInt32(Decimal? value) . Converts given value to int . int? ToInt32(object? value) . Converts given value to int . long? ToInt64(string value) . Converts given value to Int64 . long? ToInt64(byte? value) . Converts given value to long . long? ToInt64(sbyte? value) . Converts given value to long . long? ToInt64(short? value) . Converts given value to long . long? ToInt64(ushort? value) . Converts given value to long . long? ToInt64(int? value) . Converts given value to long . long? ToInt64(uint? value) . Converts given value to long . long? ToInt64(long? value) . Converts given value to long . long? ToInt64(ulong? value) . Converts given value to long . long? ToInt64(float? value) . Converts given value to long . long? ToInt64(double? value) . Converts given value to long . long? ToInt64(Decimal? value) . Converts given value to long . long? ToInt64(object? value) . Converts given value to long . string? ToString(char? value) . Converts given value to string . string? ToString(DateTimeOffset? value) . Converts given value to string . string? ToString(DateTimeOffset? value, string format) . Converts given value to string . string? ToString(byte? value) . Converts given value to string . string? ToString(byte? value, string format) . Converts given value to string . string? ToString(sbyte? value) . Converts given value to string . string? ToString(sbyte? value, string format) . Converts given value to string . string? ToString(int? value) . Converts given value to string . string? ToString(int? value, string format) . Converts given value to string . string? ToString(uint? value) . Converts given value to string . string? ToString(uint? value, string format) . Converts given value to string . string? ToString(long? value) . Converts given value to string . string? ToString(long? value, string format) . Converts given value to string . string? ToString(ulong? value) . Converts given value to string . string? ToString(ulong? value, string format) . Converts given value to string . string? ToString(float? value) . Converts given value to string . string? ToString(float? value, string format) . Converts given value to string . string? ToString(double? value) . Converts given value to string . string? ToString(double? value, string format) . Converts given value to string . string? ToString(Decimal? value) . Converts given value to string . string? ToString(Decimal? value, string format) . Converts given value to string . string? ToString(bool? value) . Converts given value to string . string? ToString(object? value) . Converts given value to string . string? ToString&lt;T&gt;(T? value) . Converts given value to string . string ToString(string[] value) . Converts given value to string . string ToString&lt;T&gt;(T[] value) . Converts given value to string . TimeSpan? ToTimeSpan(string value) . Converts given value to TimeSpan . TimeSpan? ToTimeSpan(string value, string culture) . Converts given value to TimeSpan . IEnumerable&lt;T&gt; Window&lt;T&gt;(string name) . Gets the window . ",
    "url": "/data-sources/Kubernetes/windows-x64.html#base-methods",
    
    "relUrl": "/data-sources/Kubernetes/windows-x64.html#base-methods"
  },"338": {
    "doc": "Windows X64",
    "title": "Windows X64",
    "content": " ",
    "url": "/data-sources/Kubernetes/windows-x64.html",
    
    "relUrl": "/data-sources/Kubernetes/windows-x64.html"
  },"339": {
    "doc": "Windows X64",
    "title": "Musoq.DataSources.Time",
    "content": " ",
    "url": "/data-sources/Time/windows-x64.html#musoqdatasourcestime",
    
    "relUrl": "/data-sources/Time/windows-x64.html#musoqdatasourcestime"
  },"340": {
    "doc": "Windows X64",
    "title": "Tables",
    "content": "Table is a collection of rows and columns that the plugin exposes. Below are the tables that are exposed by this data source. time.interval(string startDateTime, string stopDateTime, string interval) . Compute dates between two ranges . | Name | Type | Description | . | DateTime | DateTime | Gets the DateTime object | . | Second | int | Gets second of current computed DateTime | . | Minute | int | Gets minute of current computed DateTime | . | Hour | int | Gets the hour of current computed DateTime | . | Day | int | Gets the day of current computed DateTime | . | Month | int | Gets the month of current computed DateTime | . | Year | int | Gets the year of current computed DateTime | . | DayOfWeek | int | Gets the day of week of current computed DateTime | . | DayOfYear | int | Gets the day of year of current computed DateTime | . | TimeOfDay | TimeSpan | Gets the time of day of current computed DateTime | . ",
    "url": "/data-sources/Time/windows-x64.html#tables",
    
    "relUrl": "/data-sources/Time/windows-x64.html#tables"
  },"341": {
    "doc": "Windows X64",
    "title": "Base Methods",
    "content": "Base methods are methods that can be called on the data source specific column. Those methods are automatically inherited and enriches the data source specific methods. Below are those base methods that are exposed by this data source. int RowNumber() . Gets the row number of the current row. string? GetTypeName(object? obj) . Gets the typename of passed object. string AggregateValues(string name) . Aggregates values into a single value. string AggregateValues(string name, int parent) . Aggregates values into a single value. Decimal Avg(string name) . Gets the aggregated average value from the given group name . Decimal Avg(string name, int parent) . Gets the aggregated average value from the given group name . byte? ShiftLeft(byte? value, int shift) . Shifts the value to the left by the specified number of bits. short? ShiftLeft(short? value, int shift) . Shifts the value to the left by the specified number of bits. int? ShiftLeft(int? value, int shift) . Shifts the value to the left by the specified number of bits. long? ShiftLeft(long? value, int shift) . Shifts the value to the left by the specified number of bits. sbyte? ShiftLeft(sbyte? value, int shift) . Shifts the value to the left by the specified number of bits. ushort? ShiftLeft(ushort? value, int shift) . Shifts the value to the left by the specified number of bits. uint? ShiftLeft(uint? value, int shift) . Shifts the value to the left by the specified number of bits. ulong? ShiftLeft(ulong? value, int shift) . Shifts the value to the left by the specified number of bits. byte? ShiftRight(byte? value, int shift) . Shifts the value to the right by the specified number of bits. short? ShiftRight(short? value, int shift) . Shifts the value to the right by the specified number of bits. int? ShiftRight(int? value, int shift) . Shifts the value to the right by the specified number of bits. long? ShiftRight(long? value, int shift) . Shifts the value to the right by the specified number of bits. sbyte? ShiftRight(sbyte? value, int shift) . Shifts the value to the right by the specified number of bits. ushort? ShiftRight(ushort? value, int shift) . Shifts the value to the right by the specified number of bits. uint? ShiftRight(uint? value, int shift) . Shifts the value to the right by the specified number of bits. ulong? ShiftRight(ulong? value, int shift) . Shifts the value to the right by the specified number of bits. byte? Not(byte? value) . Performs bitwise NOT operation on a given value. short? Not(short? value) . Performs bitwise NOT operation on a given value. int? Not(int? value) . Performs bitwise NOT operation on a given value. long? Not(long? value) . Performs bitwise NOT operation on a given value. sbyte? Not(sbyte? value) . Performs bitwise NOT operation on a given value. ushort? Not(ushort? value) . Performs bitwise NOT operation on a given value. uint? Not(uint? value) . Performs bitwise NOT operation on a given value. ulong? Not(ulong? value) . Performs bitwise NOT operation on a given value. byte? And(byte? left, byte? right) . Performs bitwise AND operation on two given values. int? And(byte? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(byte? left, short? right) . Performs bitwise AND operation on two given values. int? And(byte? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(byte? left, int? right) . Performs bitwise AND operation on two given values. uint? And(byte? left, uint? right) . Performs bitwise AND operation on two given values. long? And(byte? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(byte? left, ulong? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, byte? right) . Performs bitwise AND operation on two given values. sbyte? And(sbyte? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, short? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, int? right) . Performs bitwise AND operation on two given values. uint? And(sbyte? left, uint? right) . Performs bitwise AND operation on two given values. long? And(sbyte? left, long? right) . Performs bitwise AND operation on two given values. int? And(short? left, byte? right) . Performs bitwise AND operation on two given values. int? And(short? left, sbyte? right) . Performs bitwise AND operation on two given values. short? And(short? left, short? right) . Performs bitwise AND operation on two given values. int? And(short? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(short? left, int? right) . Performs bitwise AND operation on two given values. uint? And(short? left, uint? right) . Performs bitwise AND operation on two given values. long? And(short? left, long? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, byte? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, short? right) . Performs bitwise AND operation on two given values. ushort? And(ushort? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, int? right) . Performs bitwise AND operation on two given values. uint? And(ushort? left, uint? right) . Performs bitwise AND operation on two given values. long? And(ushort? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(ushort? left, ulong? right) . Performs bitwise AND operation on two given values. int? And(int? left, byte? right) . Performs bitwise AND operation on two given values. int? And(int? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(int? left, short? right) . Performs bitwise AND operation on two given values. int? And(int? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(int? left, int? right) . Performs bitwise AND operation on two given values. uint? And(int? left, uint? right) . Performs bitwise AND operation on two given values. long? And(int? left, long? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, uint? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, byte? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, sbyte? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, short? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, ushort? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, int? right) . Performs bitwise AND operation on two given values. ulong? And(uint? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(uint? left, ulong? right) . Performs bitwise AND operation on two given values. long? And(long? left, long? right) . Performs bitwise AND operation on two given values. long? And(long? left, byte? right) . Performs bitwise AND operation on two given values. long? And(long? left, sbyte? right) . Performs bitwise AND operation on two given values. long? And(long? left, short? right) . Performs bitwise AND operation on two given values. long? And(long? left, ushort? right) . Performs bitwise AND operation on two given values. long? And(long? left, int? right) . Performs bitwise AND operation on two given values. long? And(long? left, uint? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, byte? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, ushort? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, uint? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, ulong? right) . Performs bitwise AND operation on two given values. byte? Or(byte? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, short? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(byte? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(byte? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(byte? left, ulong? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, byte? right) . Performs bitwise OR operation on two given values. sbyte? Or(sbyte? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, short? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(sbyte? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(sbyte? left, long? right) . Performs bitwise OR operation on two given values. int? Or(short? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(short? left, sbyte? right) . Performs bitwise OR operation on two given values. short? Or(short? left, short? right) . Performs bitwise OR operation on two given values. int? Or(short? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(short? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(short? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(short? left, long? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, short? right) . Performs bitwise OR operation on two given values. ushort? Or(ushort? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(ushort? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(ushort? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(ushort? left, ulong? right) . Performs bitwise OR operation on two given values. int? Or(int? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(int? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(int? left, short? right) . Performs bitwise OR operation on two given values. int? Or(int? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(int? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(int? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(int? left, long? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, uint? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, byte? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, sbyte? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, short? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, ushort? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, int? right) . Performs bitwise OR operation on two given values. ulong? Or(uint? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(uint? left, ulong? right) . Performs bitwise OR operation on two given values. long? Or(long? left, long? right) . Performs bitwise OR operation on two given values. long? Or(long? left, byte? right) . Performs bitwise OR operation on two given values. long? Or(long? left, sbyte? right) . Performs bitwise OR operation on two given values. long? Or(long? left, short? right) . Performs bitwise OR operation on two given values. long? Or(long? left, ushort? right) . Performs bitwise OR operation on two given values. long? Or(long? left, int? right) . Performs bitwise OR operation on two given values. long? Or(long? left, uint? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, byte? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, ushort? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, uint? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, ulong? right) . Performs bitwise OR operation on two given values. byte? Xor(byte? left, byte? right) . Performs bitwise OR operation on two given values. int? Xor(byte? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(byte? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(byte? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(byte? left, ulong? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, byte? right) . Performs bitwise Xor operation on two given values. sbyte? Xor(sbyte? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(sbyte? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(sbyte? left, long? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, sbyte? right) . Performs bitwise Xor operation on two given values. short? Xor(short? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, ushort? right) . Performs bitwise XOR operation on two given values. int? Xor(short? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(short? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(short? left, long? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, short? right) . Performs bitwise Xor operation on two given values. ushort? Xor(ushort? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(ushort? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(ushort? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ushort? left, ulong? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(int? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(int? left, long? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, uint? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, byte? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, sbyte? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, short? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, ushort? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, int? right) . Performs bitwise Xor operation on two given values. ulong? Xor(uint? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(uint? left, ulong? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, long? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, byte? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, sbyte? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, short? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, ushort? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, int? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, uint? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, ulong? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, byte? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, ushort? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, uint? right) . Performs bitwise Xor operation on two given values. byte[] GetBytes(string? content) . Gets the bytes from the given string. byte[] GetBytes(string? content, int length, int offset) . Gets the bytes from the given string within given offset and length. byte?[]? GetBytes(char? character) . Gets the bytes from the given character. byte?[]? GetBytes(bool? bit) . Gets the bytes from the given boolean. byte?[]? GetBytes(long? value) . Gets the bytes from the given long. byte?[]? GetBytes(int? value) . Gets the bytes from the given int. byte?[]? GetBytes(short? value) . Gets the bytes from the given short. byte?[]? GetBytes(ulong? value) . Gets the bytes from the given ulong. byte?[]? GetBytes(ushort? value) . Gets the bytes from the given ushort. byte?[]? GetBytes(uint? value) . Gets the bytes from the given uint. byte?[]? GetBytes(Decimal? value) . Gets the bytes from the given decimal. byte?[]? GetBytes(double? value) . Gets the bytes from the given double. byte?[]? GetBytes(float? value) . Gets the bytes from the given float. string? ToBin(byte?[]? bytes, string delimiter) . Converts given bytes to binary with defined delimiter . string ToBin&lt;T&gt;(T value) . Converts given value to binary . string ToOcta&lt;T&gt;(T value) . Converts given value to octal . string ToDec&lt;T&gt;(T value) . Converts given value to decimal . string ToBase64(byte[] value) . Converts given value to string . string ToBase64(byte[] value, int offset, int length) . Converts given array of bytes to string . byte[] FromBase64(string value) . Converts given string to bytes array . bool FromBytesToBool(byte[] value) . Converts bytes to boolean value. short FromBytesToInt16(byte[] value) . Converts bytes to a 16-bit signed integer. ushort FromBytesToUInt16(byte[] value) . Converts bytes to a 16-bit unsigned integer. int FromBytesToInt32(byte[] value) . Converts bytes to a 32-bit signed integer. uint FromBytesToUInt32(byte[] value) . Converts bytes to a 32-bit unsigned integer. long FromBytesToInt64(byte[] value) . Converts bytes to a 64-bit signed integer. ulong FromBytesToUInt64(byte[] value) . Converts bytes to a 64-bit unsigned integer. float FromBytesToFloat(byte[] value) . Converts bytes to a float value. double FromBytesToDouble(byte[] value) . Converts bytes to a float value. string FromBytesToString(byte[] value) . Converts bytes to a string. byte[] ToBytes(bool value) . Converts boolean value to bytes. byte[] ToBytes(short value) . Converts short value to bytes. byte[] ToBytes(ushort value) . Converts ushort value to bytes. byte[] ToBytes(int value) . Converts int value to bytes. byte[] ToBytes(uint value) . Converts uint value to bytes. byte[] ToBytes(long value) . Converts long value to bytes. byte[] ToBytes(ulong value) . Converts long value to bytes. string? ToHex(byte?[]? bytes, string delimiter) . Converts given bytes to hex with defined delimiter . string? ToHex&lt;T&gt;(T value) . Converts given value to binary . int Count(string name) . Gets the count value of a given group. int Count(string name, int parent) . Gets the count value of a given group. int ExtractFromDate(string? date, string partOfDate) . Extracts part of the date from the date . int ExtractFromDate(string date, string culture, string partOfDate) . Extracts part of the date from the date based on given culture . DateTimeOffset? GetDate() . Gets the current datetime . DateTimeOffset? UtcGetDate() . Gets the current datetime in UTC . int? Month(DateTimeOffset? value) . Gets the month from DateTimeOffset . int? Year(DateTimeOffset? value) . Gets the year from DateTimeOffset . int? Day(DateTimeOffset? value) . Gets the day from DateTimeOffset . int? Hour(DateTimeOffset? value) . Gets the hour from DateTimeOffset . int? Minute(DateTimeOffset? value) . Gets the minute from DateTimeOffset . int? Second(DateTimeOffset? value) . Gets the second from DateTimeOffset . int? Milliseconds(DateTimeOffset? value) . Gets the millisecond from DateTimeOffset . int? DayOfWeek(DateTimeOffset? value) . Gets the day of week from DateTimeOffset . TimeSpan? ExtractTimeSpan(DateTimeOffset? dateTimeOffset) . Extracts time from DateTimeOffset . DateTime? ToDateTimeOffset(string value) . Converts given value to DateTimeOffset . DateTimeOffset? ToDateTimeOffset(string value, string culture) . Converts given value to DateTimeOffset . IEnumerable&lt;T&gt;? Skip&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? skipCount) . Skips elements from the beginning of the sequence. IEnumerable&lt;T&gt;? Take&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? takeCount) . Takes elements from the beginning of the sequence. IEnumerable&lt;T&gt;? SkipAndTake&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? skipCount, int? takeCount) . Skip and takes elements from the beginning of the sequence. T[]? EnumerableToArray&lt;T&gt;(IEnumerable&lt;T&gt;? values) . Turn array arguments of T into a single array. T[]? MergeArrays&lt;T&gt;(T[][]? values) . Turn array arguments of T into a single array. IEnumerable&lt;T&gt;? LongestCommonSequence&lt;T&gt;(IEnumerable&lt;T&gt;? source, IEnumerable&lt;T&gt;? pattern) . Computes longest common sequence of two given sequences . T? GetElementAtOrDefault&lt;T&gt;(IEnumerable&lt;T&gt;? enumerable, int? index) . Gets the element at the specified index in a sequence . int? Length&lt;T&gt;(IEnumerable&lt;T&gt;? enumerable) . Gets the length of the sequence . int? Length&lt;T&gt;(T[]? array) . Gets the length of the array . T? Choose&lt;T&gt;(int? index, T[] values) . Gets the value of an array at the specified index . T If&lt;T&gt;(bool expressionResult, T a, T b) . Chose a or b value based on the expression result . bool? Match(string? regex, string? content) . Determine whether content matches the specified pattern . byte? Coalesce(byte?[] array) . Gets the first non-null value in a list . sbyte? Coalesce(sbyte?[] array) . Gets the first non-null value in a list . short? Coalesce(short?[] array) . Gets the first non-null value in a list . ushort? Coalesce(ushort?[] array) . Gets the first non-null value in a list . int? Coalesce(int?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(uint?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(long?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(ulong?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(Decimal?[] array) . Gets the first non-null value in a list . T? Coalesce&lt;T&gt;(T[] array) . Gets the first non-null value in a list . IEnumerable&lt;T&gt;? Distinct&lt;T&gt;(IEnumerable&lt;T&gt;? values) . Returns distinct elements from a collection. string? Md5(string? content) . Gets the md5 hash of the given string. string? Md5(byte?[]? content) . Gets the md5 hash of the given bytes array. string? Sha1(string? content) . Gets the sha256 hash of the given string. string? Sha1(byte?[]? content) . Gets the sha256 hash of the given bytes array. string? Sha256(string? content) . Gets the sha256 hash of the given string. string? Sha256(byte?[]? content) . Gets the sha256 hash of the given bytes array. string? Sha512(string? content) . Gets the sha256 hash of the given string. string? Sha512(byte?[]? content) . Gets the sha256 hash of the bytes array. string? ToJson&lt;T&gt;(T? obj) . Converts object to json. string[] ExtractFromJsonToArray(string? json, string? path) . Extracts values from json by path. string? ExtractFromJson(string? json, string? path) . Extracts values from json by path and joins them with comma. Decimal? Abs(Decimal? value) . Gets the absolute value . long? Abs(long? value) . Gets the absolute value . int? Abs(int? value) . Gets the absolute value . Decimal? Ceil(Decimal? value) . Gets the ceiling value . Decimal? Floor(Decimal? value) . Gets the floor value . Decimal? Sign(Decimal? value) . Determine whether value is greater, equal or less that zero . long? Sign(long? value) . Determine whether value is greater, equal or less that zero . Decimal? Round(Decimal? value, int precision) . Rounds the value within given precision . Decimal? PercentOf(Decimal? value, Decimal? max) . Gets the percentage of the value . int Rand() . Gets the random integer value . int? Rand(int? min, int? max) . Gets the random integer value . double? Pow(Decimal? x, Decimal? y) . Computes the pow between two values . double? Pow(double? x, double? y) . Computes the pow between two values . double? Sqrt(Decimal? x) . Computes the sqrt of a given value . double? Sqrt(double? x) . Computes the sqrt of a given value . double? Sqrt(long? x) . Computes the sqrt of a given value . double? PercentRank&lt;T&gt;(IEnumerable&lt;T&gt;? window, T? value) . Computes the percent rank of a given window . double? Log(Decimal? base, Decimal? value) . Calculates the logarithm of a value with a specified base. Decimal? Sin(Decimal? value) . Calculates sine of a value. double? Sin(double? value) . Calculates sine of a value. float? Sin(float? value) . Calculates sine of a value. Decimal? Cos(Decimal? value) . Calculates cosine of a value. double? Cos(double? value) . Calculates cosine of a value. float? Cos(float? value) . Calculates cosine of a value. Decimal Max(string name) . Gets the max value of a given group. Decimal Max(string name, int parent) . Gets the max value of a given group. Decimal Min(string name) . Gets the min value of a given group. Decimal Min(string name, int parent) . Gets the min value of a given group. Decimal StDev(string name, int parent) . Gets the StDev value of a given group. string NewId() . Gets the new identifier . string? Trim(string? value) . Removes leading and trailing whitespace from a string. string? TrimStart(string? value) . Removes leading whitespace from a string. string? TrimEnd(string? value) . Removes trailing whitespace from a string. string? Substring(string? value, int? index, int? length) . Gets the substring from the string. string? Substring(string value, int? length) . Gets the substring from the string . string? Concat(string[]? strings) . Concatenates the specified values . string? Concat(char?[]? characters) . Concatenates the specified characters . string? Concat(string? firstString, char?[]? chars) . Concatenates specified string fir characters . string? Concat(char? firstChar, string[]? strings) . Concatenate specific character with strings . string? Concat(object[]? objects) . Concatenates the specified strings . string? Concat&lt;T&gt;(T[]? objects) . Concatenates the specified strings . bool? Contains(string? content, string? what) . Determine whether the string contains the specified value . int? IndexOf(string? value, string? text) . Position of the first occurrence of the specified value . string? Soundex(string? value) . Computes soundex for the specified value . bool HasFuzzyMatchedWord(string text, string word, string separator) . Matches the specified text by splitting it with separator and applying fuzzy comparison . bool HasWordThatHasSmallerLevenshteinDistanceThan(string text, string word, int distance, string separator) . Matches the specified text by splitting it with separator and applying fuzzy comparison with a given distance . bool HasWordThatSoundLike(string text, string word, string separator) . Matches whether the specified word is present after being fuzzified within the specified text . bool HasTextThatSoundLikeSentence(string text, string sentence, string separator) . Matches whether the specified text is present in sentence after being fuzified . string? ToUpper(string value) . Makes the string uppercase . string? ToUpper(string value, string culture) . Makes the string uppercase within specified culture . string? ToUpperInvariant(string value) . Makes the string uppercase . string? ToLower(string value) . Makes the string lowercase . string? ToLower(string value, string culture) . Makes the string lowercase within specified culture . string? ToLowerInvariant(string value) . Makes the string lowercase . string? PadLeft(string? value, string? character, int? totalWidth) . Returns a new string that right-aligns the characters in this instance by padding them on the left with a specified Unicode character, for a specified total lengt . string? PadRight(string? value, string? character, int? totalWidth) . Returns a new string that left-aligns the characters in this instance by padding them on the right with a specified Unicode character, for a specified total length . string? Head(string? value, int? length) . Gets the first N characters of the string . string? Tail(string? value, int? length) . Gets the last N characters of the string . int? LevenshteinDistance(string? firstValue, string? secondValue) . Computes the Levenshtein distance between two strings . char? GetCharacterOf(string value, int index) . Gets the character at specified index . string? Reverse(string? value) . Reverses the string . string[] Split(string value, string[] separators) . Splits the string into an array of substrings based on the specified separators . char[] ToCharArray(string value) . Splits the string into an array of characters . string? LongestCommonSubstring(string source, string pattern) . Computes the longest common subsequence between two source and pattern . string Replicate(string value, int integer) . Clones the value n times . string? Translate(string? value, string? characters, string? translations) . Returns the string from the first argument after the characters specified in the second argument are translated into the characters specified in the third argument. string? Replace(string? text, string lookFor, string? changeTo) . Replaces the first occurrence of a specified string in this instance with another specified string . string? ToTitleCase(string? value) . Capitalizes the first letter of the string . string? GetNthWord(string? text, int? wordIndex, string? separator) . Gets the nth word of the string . string? GetFirstWord(string text, string separator) . Gets the first word of the string . string? GetSecondWord(string text, string separator) . Gets the second word of the string . string? GetThirdWord(string text, string separator) . Gets the third word of the string . string? GetLastWord(string? text, string? separator) . Gets last word of the string . bool? IsNullOrEmpty(string? value) . Determines whether the string is null or empty . bool? IsNullOrWhiteSpace(string? value) . Determines whether the string is null or whitespace . string? UrlEncode(string? value) . Encodes the value . string? UrlDecode(string? value) . Decodes the value . string? UriEncode(string? value) . Encodes the value . string? UriDecode(string? value) . Decodes the value . bool? StartsWith(string? value, string? prefix) . Determines whether the string starts with the specified prefix . bool? StartsWith(string? value, string? prefix, string comparison) . Determines whether the string starts with the specified prefix . bool? EndsWith(string? value, string? suffix) . Determines whether the string ends with the specified suffix . bool? EndsWith(string? value, string? suffix, string comparison) . Determines whether the string ends with the specified suffix . string? RegexReplace(string? value, string? pattern, string? replacement) . Replace the specified value part that matches the pattern with the replacement . string[]? SplitByLinuxNewLines(string? input) . Split string by Linux-style newlines (\\n) . string[]? SplitByWindowsNewLines(string? input) . Split string by Windows-style newlines (\\r\\n) . string[]? SplitByNewLines(string? input) . Smart split that handles both Windows (\\r\\n) and Linux (\\n) newlines . Decimal Sum(string name) . Gets the sum value of a given group. Decimal Sum(string name, int parent) . Gets the sum value of a given group. Decimal SumIncome(string name) . Gets the sum value of a given group. Decimal SumIncome(string name, int parent) . Gets the sum value of a given group. Decimal SumOutcome(string name) . Gets the outcome value of a given group. Decimal SumOutcome(string name, int parent) . Gets the outcome value of a given group. TimeSpan? SumTimeSpan(string name) . Gets the sum value of a given group. TimeSpan? SumTimeSpan(string name, int parent) . Gets the sum value of a given group. TimeSpan? MinTimeSpan(string name) . Gets the min value of a given group. TimeSpan? MinTimeSpan(string name, int parent) . Gets the min value of a given group. TimeSpan? MaxTimeSpan(string name) . Gets the max value of a given group. TimeSpan? MaxTimeSpan(string name, int parent) . Gets the min value of a given group. char? ToChar(string? value) . Converts given value to character . char? ToChar(int? value) . Converts given value to character . char? ToChar(short? value) . Converts given value to character . char? ToChar(byte? value) . Converts given value to character . char? ToChar(object? value) . Converts given value to character . DateTime? ToDateTime(string value) . Converts given value to DateTime . DateTime? ToDateTime(string value, string culture) . Converts given value to DateTime . Decimal? ToDecimal(string? value) . Converts given value to decimal . Decimal? ToDecimal(string value, string culture) . Converts given value to decimal withing given culture . Decimal? ToDecimal(byte? value) . Converts given value to Decimal . Decimal? ToDecimal(sbyte? value) . Converts given value to Decimal . Decimal? ToDecimal(short? value) . Converts given value to Decimal . Decimal? ToDecimal(ushort? value) . Converts given value to Decimal . Decimal? ToDecimal(long? value) . Converts given value to Decimal . Decimal? ToDecimal(ulong? value) . Converts given value to Decimal . Decimal? ToDecimal(float? value) . Converts given value to Decimal . Decimal? ToDecimal(double? value) . Converts given value to Decimal . Decimal? ToDecimal(object? value) . Converts given value to Decimal . double? ToDouble(object? value) . Converts given value to double . double? ToDouble(string? value) . Converts given value to double . double? ToDouble(byte? value) . Converts given value to double . double? ToDouble(sbyte? value) . Converts given value to double . double? ToDouble(short? value) . Converts given value to double . double? ToDouble(ushort? value) . Converts given value to double . double? ToDouble(int? value) . Converts given value to double . double? ToDouble(uint? value) . Converts given value to double . double? ToDouble(long? value) . Converts given value to double . double? ToDouble(ulong? value) . Converts given value to double . double? ToDouble(float? value) . Converts given value to double . double? ToDouble(double? value) . Converts given value to double . double? ToDouble(Decimal? value) . Converts given value to double . float? ToFloat(string? value) . Converts given value to float . float? ToFloat(byte? value) . Converts given value to float . float? ToFloat(sbyte? value) . Converts given value to float . float? ToFloat(short? value) . Converts given value to float . float? ToFloat(ushort? value) . Converts given value to float . float? ToFloat(int? value) . Converts given value to float . float? ToFloat(uint? value) . Converts given value to float . float? ToFloat(long? value) . Converts given value to float . float? ToFloat(ulong? value) . Converts given value to float . float? ToFloat(float? value) . Converts given value to float . float? ToFloat(Decimal? value) . Converts given value to float . int? ToInt32(string value) . Converts given value to int . int? ToInt32(byte? value) . Converts given value to int . int? ToInt32(sbyte? value) . Converts given value to int . int? ToInt32(short? value) . Converts given value to int . int? ToInt32(ushort? value) . Converts given value to int . int? ToInt32(int? value) . Converts given value to int . int? ToInt32(uint? value) . Converts given value to int . int? ToInt32(long? value) . Converts given value to int . int? ToInt32(ulong? value) . Converts given value to int . int? ToInt32(float? value) . Converts given value to int . int? ToInt32(double? value) . Converts given value to int . int? ToInt32(Decimal? value) . Converts given value to int . int? ToInt32(object? value) . Converts given value to int . long? ToInt64(string value) . Converts given value to Int64 . long? ToInt64(byte? value) . Converts given value to long . long? ToInt64(sbyte? value) . Converts given value to long . long? ToInt64(short? value) . Converts given value to long . long? ToInt64(ushort? value) . Converts given value to long . long? ToInt64(int? value) . Converts given value to long . long? ToInt64(uint? value) . Converts given value to long . long? ToInt64(long? value) . Converts given value to long . long? ToInt64(ulong? value) . Converts given value to long . long? ToInt64(float? value) . Converts given value to long . long? ToInt64(double? value) . Converts given value to long . long? ToInt64(Decimal? value) . Converts given value to long . long? ToInt64(object? value) . Converts given value to long . string? ToString(char? value) . Converts given value to string . string? ToString(DateTimeOffset? value) . Converts given value to string . string? ToString(DateTimeOffset? value, string format) . Converts given value to string . string? ToString(byte? value) . Converts given value to string . string? ToString(byte? value, string format) . Converts given value to string . string? ToString(sbyte? value) . Converts given value to string . string? ToString(sbyte? value, string format) . Converts given value to string . string? ToString(int? value) . Converts given value to string . string? ToString(int? value, string format) . Converts given value to string . string? ToString(uint? value) . Converts given value to string . string? ToString(uint? value, string format) . Converts given value to string . string? ToString(long? value) . Converts given value to string . string? ToString(long? value, string format) . Converts given value to string . string? ToString(ulong? value) . Converts given value to string . string? ToString(ulong? value, string format) . Converts given value to string . string? ToString(float? value) . Converts given value to string . string? ToString(float? value, string format) . Converts given value to string . string? ToString(double? value) . Converts given value to string . string? ToString(double? value, string format) . Converts given value to string . string? ToString(Decimal? value) . Converts given value to string . string? ToString(Decimal? value, string format) . Converts given value to string . string? ToString(bool? value) . Converts given value to string . string? ToString(object? value) . Converts given value to string . string? ToString&lt;T&gt;(T? value) . Converts given value to string . string ToString(string[] value) . Converts given value to string . string ToString&lt;T&gt;(T[] value) . Converts given value to string . TimeSpan? ToTimeSpan(string value) . Converts given value to TimeSpan . TimeSpan? ToTimeSpan(string value, string culture) . Converts given value to TimeSpan . IEnumerable&lt;T&gt; Window&lt;T&gt;(string name) . Gets the window . ",
    "url": "/data-sources/Time/windows-x64.html#base-methods",
    
    "relUrl": "/data-sources/Time/windows-x64.html#base-methods"
  },"342": {
    "doc": "Windows X64",
    "title": "Windows X64",
    "content": " ",
    "url": "/data-sources/Time/windows-x64.html",
    
    "relUrl": "/data-sources/Time/windows-x64.html"
  },"343": {
    "doc": "Windows X64",
    "title": "Musoq.DataSources.Airtable",
    "content": "Provides interface to work with Airtable API. ",
    "url": "/data-sources/Airtable/windows-x64.html#musoqdatasourcesairtable",
    
    "relUrl": "/data-sources/Airtable/windows-x64.html#musoqdatasourcesairtable"
  },"344": {
    "doc": "Windows X64",
    "title": "Tables",
    "content": "Table is a collection of rows and columns that the plugin exposes. Below are the tables that are exposed by this data source. airtable.bases() . Enumerate bases from Airtable API . Environment variables . In order to use the plugin, the user must set any required environment variables as specified in the environments element. Failure to do so may result in the plugin not functioning correctly. | Name | Is required | Description | . | MUSOQ_AIRTABLE_API_KEY | true | Airtable API key | . Columns . | Name | Type | Description | . | Id | string | Base id | . | Name | string | Base name | . | PermissionLevel | string | Base description | . airtable.base() . Enumerate base tables for Airtable API . Environment variables . In order to use the plugin, the user must set any required environment variables as specified in the environments element. Failure to do so may result in the plugin not functioning correctly. | Name | Is required | Description | . | MUSOQ_AIRTABLE_API_KEY | true | Airtable API key | . | MUSOQ_AIRTABLE_BASE_ID | true | Airtable base id | . Columns . | Name | Type | Description | . | Id | string | Base id | . | Name | string | Base name | . | PrimaryFieldId | string | Base description | . airtable.records(string tableName) . Enumerate records for specific table . Environment variables . In order to use the plugin, the user must set any required environment variables as specified in the environments element. Failure to do so may result in the plugin not functioning correctly. | Name | Is required | Description | . | MUSOQ_AIRTABLE_API_KEY | true | Airtable API key | . | MUSOQ_AIRTABLE_BASE_ID | true | Airtable base id | . Columns . This table has a dynamic structure, which means that its columns and other details cannot be determined until runtime. As a result, it is not possible to include a complete description of this table in the documentation. Instead, the actual columns and other details of this table will be determined at runtime. ",
    "url": "/data-sources/Airtable/windows-x64.html#tables",
    
    "relUrl": "/data-sources/Airtable/windows-x64.html#tables"
  },"345": {
    "doc": "Windows X64",
    "title": "Base Methods",
    "content": "Base methods are methods that can be called on the data source specific column. Those methods are automatically inherited and enriches the data source specific methods. Below are those base methods that are exposed by this data source. int RowNumber() . Gets the row number of the current row. string? GetTypeName(object? obj) . Gets the typename of passed object. string AggregateValues(string name) . Aggregates values into a single value. string AggregateValues(string name, int parent) . Aggregates values into a single value. Decimal Avg(string name) . Gets the aggregated average value from the given group name . Decimal Avg(string name, int parent) . Gets the aggregated average value from the given group name . byte? ShiftLeft(byte? value, int shift) . Shifts the value to the left by the specified number of bits. short? ShiftLeft(short? value, int shift) . Shifts the value to the left by the specified number of bits. int? ShiftLeft(int? value, int shift) . Shifts the value to the left by the specified number of bits. long? ShiftLeft(long? value, int shift) . Shifts the value to the left by the specified number of bits. sbyte? ShiftLeft(sbyte? value, int shift) . Shifts the value to the left by the specified number of bits. ushort? ShiftLeft(ushort? value, int shift) . Shifts the value to the left by the specified number of bits. uint? ShiftLeft(uint? value, int shift) . Shifts the value to the left by the specified number of bits. ulong? ShiftLeft(ulong? value, int shift) . Shifts the value to the left by the specified number of bits. byte? ShiftRight(byte? value, int shift) . Shifts the value to the right by the specified number of bits. short? ShiftRight(short? value, int shift) . Shifts the value to the right by the specified number of bits. int? ShiftRight(int? value, int shift) . Shifts the value to the right by the specified number of bits. long? ShiftRight(long? value, int shift) . Shifts the value to the right by the specified number of bits. sbyte? ShiftRight(sbyte? value, int shift) . Shifts the value to the right by the specified number of bits. ushort? ShiftRight(ushort? value, int shift) . Shifts the value to the right by the specified number of bits. uint? ShiftRight(uint? value, int shift) . Shifts the value to the right by the specified number of bits. ulong? ShiftRight(ulong? value, int shift) . Shifts the value to the right by the specified number of bits. byte? Not(byte? value) . Performs bitwise NOT operation on a given value. short? Not(short? value) . Performs bitwise NOT operation on a given value. int? Not(int? value) . Performs bitwise NOT operation on a given value. long? Not(long? value) . Performs bitwise NOT operation on a given value. sbyte? Not(sbyte? value) . Performs bitwise NOT operation on a given value. ushort? Not(ushort? value) . Performs bitwise NOT operation on a given value. uint? Not(uint? value) . Performs bitwise NOT operation on a given value. ulong? Not(ulong? value) . Performs bitwise NOT operation on a given value. byte? And(byte? left, byte? right) . Performs bitwise AND operation on two given values. int? And(byte? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(byte? left, short? right) . Performs bitwise AND operation on two given values. int? And(byte? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(byte? left, int? right) . Performs bitwise AND operation on two given values. uint? And(byte? left, uint? right) . Performs bitwise AND operation on two given values. long? And(byte? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(byte? left, ulong? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, byte? right) . Performs bitwise AND operation on two given values. sbyte? And(sbyte? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, short? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, int? right) . Performs bitwise AND operation on two given values. uint? And(sbyte? left, uint? right) . Performs bitwise AND operation on two given values. long? And(sbyte? left, long? right) . Performs bitwise AND operation on two given values. int? And(short? left, byte? right) . Performs bitwise AND operation on two given values. int? And(short? left, sbyte? right) . Performs bitwise AND operation on two given values. short? And(short? left, short? right) . Performs bitwise AND operation on two given values. int? And(short? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(short? left, int? right) . Performs bitwise AND operation on two given values. uint? And(short? left, uint? right) . Performs bitwise AND operation on two given values. long? And(short? left, long? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, byte? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, short? right) . Performs bitwise AND operation on two given values. ushort? And(ushort? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, int? right) . Performs bitwise AND operation on two given values. uint? And(ushort? left, uint? right) . Performs bitwise AND operation on two given values. long? And(ushort? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(ushort? left, ulong? right) . Performs bitwise AND operation on two given values. int? And(int? left, byte? right) . Performs bitwise AND operation on two given values. int? And(int? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(int? left, short? right) . Performs bitwise AND operation on two given values. int? And(int? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(int? left, int? right) . Performs bitwise AND operation on two given values. uint? And(int? left, uint? right) . Performs bitwise AND operation on two given values. long? And(int? left, long? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, uint? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, byte? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, sbyte? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, short? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, ushort? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, int? right) . Performs bitwise AND operation on two given values. ulong? And(uint? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(uint? left, ulong? right) . Performs bitwise AND operation on two given values. long? And(long? left, long? right) . Performs bitwise AND operation on two given values. long? And(long? left, byte? right) . Performs bitwise AND operation on two given values. long? And(long? left, sbyte? right) . Performs bitwise AND operation on two given values. long? And(long? left, short? right) . Performs bitwise AND operation on two given values. long? And(long? left, ushort? right) . Performs bitwise AND operation on two given values. long? And(long? left, int? right) . Performs bitwise AND operation on two given values. long? And(long? left, uint? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, byte? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, ushort? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, uint? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, ulong? right) . Performs bitwise AND operation on two given values. byte? Or(byte? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, short? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(byte? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(byte? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(byte? left, ulong? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, byte? right) . Performs bitwise OR operation on two given values. sbyte? Or(sbyte? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, short? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(sbyte? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(sbyte? left, long? right) . Performs bitwise OR operation on two given values. int? Or(short? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(short? left, sbyte? right) . Performs bitwise OR operation on two given values. short? Or(short? left, short? right) . Performs bitwise OR operation on two given values. int? Or(short? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(short? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(short? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(short? left, long? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, short? right) . Performs bitwise OR operation on two given values. ushort? Or(ushort? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(ushort? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(ushort? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(ushort? left, ulong? right) . Performs bitwise OR operation on two given values. int? Or(int? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(int? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(int? left, short? right) . Performs bitwise OR operation on two given values. int? Or(int? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(int? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(int? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(int? left, long? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, uint? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, byte? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, sbyte? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, short? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, ushort? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, int? right) . Performs bitwise OR operation on two given values. ulong? Or(uint? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(uint? left, ulong? right) . Performs bitwise OR operation on two given values. long? Or(long? left, long? right) . Performs bitwise OR operation on two given values. long? Or(long? left, byte? right) . Performs bitwise OR operation on two given values. long? Or(long? left, sbyte? right) . Performs bitwise OR operation on two given values. long? Or(long? left, short? right) . Performs bitwise OR operation on two given values. long? Or(long? left, ushort? right) . Performs bitwise OR operation on two given values. long? Or(long? left, int? right) . Performs bitwise OR operation on two given values. long? Or(long? left, uint? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, byte? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, ushort? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, uint? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, ulong? right) . Performs bitwise OR operation on two given values. byte? Xor(byte? left, byte? right) . Performs bitwise OR operation on two given values. int? Xor(byte? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(byte? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(byte? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(byte? left, ulong? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, byte? right) . Performs bitwise Xor operation on two given values. sbyte? Xor(sbyte? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(sbyte? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(sbyte? left, long? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, sbyte? right) . Performs bitwise Xor operation on two given values. short? Xor(short? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, ushort? right) . Performs bitwise XOR operation on two given values. int? Xor(short? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(short? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(short? left, long? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, short? right) . Performs bitwise Xor operation on two given values. ushort? Xor(ushort? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(ushort? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(ushort? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ushort? left, ulong? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(int? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(int? left, long? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, uint? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, byte? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, sbyte? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, short? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, ushort? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, int? right) . Performs bitwise Xor operation on two given values. ulong? Xor(uint? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(uint? left, ulong? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, long? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, byte? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, sbyte? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, short? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, ushort? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, int? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, uint? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, ulong? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, byte? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, ushort? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, uint? right) . Performs bitwise Xor operation on two given values. byte[] GetBytes(string? content) . Gets the bytes from the given string. byte[] GetBytes(string? content, int length, int offset) . Gets the bytes from the given string within given offset and length. byte?[]? GetBytes(char? character) . Gets the bytes from the given character. byte?[]? GetBytes(bool? bit) . Gets the bytes from the given boolean. byte?[]? GetBytes(long? value) . Gets the bytes from the given long. byte?[]? GetBytes(int? value) . Gets the bytes from the given int. byte?[]? GetBytes(short? value) . Gets the bytes from the given short. byte?[]? GetBytes(ulong? value) . Gets the bytes from the given ulong. byte?[]? GetBytes(ushort? value) . Gets the bytes from the given ushort. byte?[]? GetBytes(uint? value) . Gets the bytes from the given uint. byte?[]? GetBytes(Decimal? value) . Gets the bytes from the given decimal. byte?[]? GetBytes(double? value) . Gets the bytes from the given double. byte?[]? GetBytes(float? value) . Gets the bytes from the given float. string? ToBin(byte?[]? bytes, string delimiter) . Converts given bytes to binary with defined delimiter . string ToBin&lt;T&gt;(T value) . Converts given value to binary . string ToOcta&lt;T&gt;(T value) . Converts given value to octal . string ToDec&lt;T&gt;(T value) . Converts given value to decimal . string ToBase64(byte[] value) . Converts given value to string . string ToBase64(byte[] value, int offset, int length) . Converts given array of bytes to string . byte[] FromBase64(string value) . Converts given string to bytes array . bool FromBytesToBool(byte[] value) . Converts bytes to boolean value. short FromBytesToInt16(byte[] value) . Converts bytes to a 16-bit signed integer. ushort FromBytesToUInt16(byte[] value) . Converts bytes to a 16-bit unsigned integer. int FromBytesToInt32(byte[] value) . Converts bytes to a 32-bit signed integer. uint FromBytesToUInt32(byte[] value) . Converts bytes to a 32-bit unsigned integer. long FromBytesToInt64(byte[] value) . Converts bytes to a 64-bit signed integer. ulong FromBytesToUInt64(byte[] value) . Converts bytes to a 64-bit unsigned integer. float FromBytesToFloat(byte[] value) . Converts bytes to a float value. double FromBytesToDouble(byte[] value) . Converts bytes to a float value. string FromBytesToString(byte[] value) . Converts bytes to a string. byte[] ToBytes(bool value) . Converts boolean value to bytes. byte[] ToBytes(short value) . Converts short value to bytes. byte[] ToBytes(ushort value) . Converts ushort value to bytes. byte[] ToBytes(int value) . Converts int value to bytes. byte[] ToBytes(uint value) . Converts uint value to bytes. byte[] ToBytes(long value) . Converts long value to bytes. byte[] ToBytes(ulong value) . Converts long value to bytes. string? ToHex(byte?[]? bytes, string delimiter) . Converts given bytes to hex with defined delimiter . string? ToHex&lt;T&gt;(T value) . Converts given value to binary . int Count(string name) . Gets the count value of a given group. int Count(string name, int parent) . Gets the count value of a given group. int ExtractFromDate(string? date, string partOfDate) . Extracts part of the date from the date . int ExtractFromDate(string date, string culture, string partOfDate) . Extracts part of the date from the date based on given culture . DateTimeOffset? GetDate() . Gets the current datetime . DateTimeOffset? UtcGetDate() . Gets the current datetime in UTC . int? Month(DateTimeOffset? value) . Gets the month from DateTimeOffset . int? Year(DateTimeOffset? value) . Gets the year from DateTimeOffset . int? Day(DateTimeOffset? value) . Gets the day from DateTimeOffset . int? Hour(DateTimeOffset? value) . Gets the hour from DateTimeOffset . int? Minute(DateTimeOffset? value) . Gets the minute from DateTimeOffset . int? Second(DateTimeOffset? value) . Gets the second from DateTimeOffset . int? Milliseconds(DateTimeOffset? value) . Gets the millisecond from DateTimeOffset . int? DayOfWeek(DateTimeOffset? value) . Gets the day of week from DateTimeOffset . TimeSpan? ExtractTimeSpan(DateTimeOffset? dateTimeOffset) . Extracts time from DateTimeOffset . DateTime? ToDateTimeOffset(string value) . Converts given value to DateTimeOffset . DateTimeOffset? ToDateTimeOffset(string value, string culture) . Converts given value to DateTimeOffset . IEnumerable&lt;T&gt;? Skip&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? skipCount) . Skips elements from the beginning of the sequence. IEnumerable&lt;T&gt;? Take&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? takeCount) . Takes elements from the beginning of the sequence. IEnumerable&lt;T&gt;? SkipAndTake&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? skipCount, int? takeCount) . Skip and takes elements from the beginning of the sequence. T[]? EnumerableToArray&lt;T&gt;(IEnumerable&lt;T&gt;? values) . Turn array arguments of T into a single array. T[]? MergeArrays&lt;T&gt;(T[][]? values) . Turn array arguments of T into a single array. IEnumerable&lt;T&gt;? LongestCommonSequence&lt;T&gt;(IEnumerable&lt;T&gt;? source, IEnumerable&lt;T&gt;? pattern) . Computes longest common sequence of two given sequences . T? GetElementAtOrDefault&lt;T&gt;(IEnumerable&lt;T&gt;? enumerable, int? index) . Gets the element at the specified index in a sequence . int? Length&lt;T&gt;(IEnumerable&lt;T&gt;? enumerable) . Gets the length of the sequence . int? Length&lt;T&gt;(T[]? array) . Gets the length of the array . T? Choose&lt;T&gt;(int? index, T[] values) . Gets the value of an array at the specified index . T If&lt;T&gt;(bool expressionResult, T a, T b) . Chose a or b value based on the expression result . bool? Match(string? regex, string? content) . Determine whether content matches the specified pattern . byte? Coalesce(byte?[] array) . Gets the first non-null value in a list . sbyte? Coalesce(sbyte?[] array) . Gets the first non-null value in a list . short? Coalesce(short?[] array) . Gets the first non-null value in a list . ushort? Coalesce(ushort?[] array) . Gets the first non-null value in a list . int? Coalesce(int?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(uint?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(long?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(ulong?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(Decimal?[] array) . Gets the first non-null value in a list . T? Coalesce&lt;T&gt;(T[] array) . Gets the first non-null value in a list . IEnumerable&lt;T&gt;? Distinct&lt;T&gt;(IEnumerable&lt;T&gt;? values) . Returns distinct elements from a collection. string? Md5(string? content) . Gets the md5 hash of the given string. string? Md5(byte?[]? content) . Gets the md5 hash of the given bytes array. string? Sha1(string? content) . Gets the sha256 hash of the given string. string? Sha1(byte?[]? content) . Gets the sha256 hash of the given bytes array. string? Sha256(string? content) . Gets the sha256 hash of the given string. string? Sha256(byte?[]? content) . Gets the sha256 hash of the given bytes array. string? Sha512(string? content) . Gets the sha256 hash of the given string. string? Sha512(byte?[]? content) . Gets the sha256 hash of the bytes array. string? ToJson&lt;T&gt;(T? obj) . Converts object to json. string[] ExtractFromJsonToArray(string? json, string? path) . Extracts values from json by path. string? ExtractFromJson(string? json, string? path) . Extracts values from json by path and joins them with comma. Decimal? Abs(Decimal? value) . Gets the absolute value . long? Abs(long? value) . Gets the absolute value . int? Abs(int? value) . Gets the absolute value . Decimal? Ceil(Decimal? value) . Gets the ceiling value . Decimal? Floor(Decimal? value) . Gets the floor value . Decimal? Sign(Decimal? value) . Determine whether value is greater, equal or less that zero . long? Sign(long? value) . Determine whether value is greater, equal or less that zero . Decimal? Round(Decimal? value, int precision) . Rounds the value within given precision . Decimal? PercentOf(Decimal? value, Decimal? max) . Gets the percentage of the value . int Rand() . Gets the random integer value . int? Rand(int? min, int? max) . Gets the random integer value . double? Pow(Decimal? x, Decimal? y) . Computes the pow between two values . double? Pow(double? x, double? y) . Computes the pow between two values . double? Sqrt(Decimal? x) . Computes the sqrt of a given value . double? Sqrt(double? x) . Computes the sqrt of a given value . double? Sqrt(long? x) . Computes the sqrt of a given value . double? PercentRank&lt;T&gt;(IEnumerable&lt;T&gt;? window, T? value) . Computes the percent rank of a given window . double? Log(Decimal? base, Decimal? value) . Calculates the logarithm of a value with a specified base. Decimal? Sin(Decimal? value) . Calculates sine of a value. double? Sin(double? value) . Calculates sine of a value. float? Sin(float? value) . Calculates sine of a value. Decimal? Cos(Decimal? value) . Calculates cosine of a value. double? Cos(double? value) . Calculates cosine of a value. float? Cos(float? value) . Calculates cosine of a value. Decimal Max(string name) . Gets the max value of a given group. Decimal Max(string name, int parent) . Gets the max value of a given group. Decimal Min(string name) . Gets the min value of a given group. Decimal Min(string name, int parent) . Gets the min value of a given group. Decimal StDev(string name, int parent) . Gets the StDev value of a given group. string NewId() . Gets the new identifier . string? Trim(string? value) . Removes leading and trailing whitespace from a string. string? TrimStart(string? value) . Removes leading whitespace from a string. string? TrimEnd(string? value) . Removes trailing whitespace from a string. string? Substring(string? value, int? index, int? length) . Gets the substring from the string. string? Substring(string value, int? length) . Gets the substring from the string . string? Concat(string[]? strings) . Concatenates the specified values . string? Concat(char?[]? characters) . Concatenates the specified characters . string? Concat(string? firstString, char?[]? chars) . Concatenates specified string fir characters . string? Concat(char? firstChar, string[]? strings) . Concatenate specific character with strings . string? Concat(object[]? objects) . Concatenates the specified strings . string? Concat&lt;T&gt;(T[]? objects) . Concatenates the specified strings . bool? Contains(string? content, string? what) . Determine whether the string contains the specified value . int? IndexOf(string? value, string? text) . Position of the first occurrence of the specified value . string? Soundex(string? value) . Computes soundex for the specified value . bool HasFuzzyMatchedWord(string text, string word, string separator) . Matches the specified text by splitting it with separator and applying fuzzy comparison . bool HasWordThatHasSmallerLevenshteinDistanceThan(string text, string word, int distance, string separator) . Matches the specified text by splitting it with separator and applying fuzzy comparison with a given distance . bool HasWordThatSoundLike(string text, string word, string separator) . Matches whether the specified word is present after being fuzzified within the specified text . bool HasTextThatSoundLikeSentence(string text, string sentence, string separator) . Matches whether the specified text is present in sentence after being fuzified . string? ToUpper(string value) . Makes the string uppercase . string? ToUpper(string value, string culture) . Makes the string uppercase within specified culture . string? ToUpperInvariant(string value) . Makes the string uppercase . string? ToLower(string value) . Makes the string lowercase . string? ToLower(string value, string culture) . Makes the string lowercase within specified culture . string? ToLowerInvariant(string value) . Makes the string lowercase . string? PadLeft(string? value, string? character, int? totalWidth) . Returns a new string that right-aligns the characters in this instance by padding them on the left with a specified Unicode character, for a specified total lengt . string? PadRight(string? value, string? character, int? totalWidth) . Returns a new string that left-aligns the characters in this instance by padding them on the right with a specified Unicode character, for a specified total length . string? Head(string? value, int? length) . Gets the first N characters of the string . string? Tail(string? value, int? length) . Gets the last N characters of the string . int? LevenshteinDistance(string? firstValue, string? secondValue) . Computes the Levenshtein distance between two strings . char? GetCharacterOf(string value, int index) . Gets the character at specified index . string? Reverse(string? value) . Reverses the string . string[] Split(string value, string[] separators) . Splits the string into an array of substrings based on the specified separators . char[] ToCharArray(string value) . Splits the string into an array of characters . string? LongestCommonSubstring(string source, string pattern) . Computes the longest common subsequence between two source and pattern . string Replicate(string value, int integer) . Clones the value n times . string? Translate(string? value, string? characters, string? translations) . Returns the string from the first argument after the characters specified in the second argument are translated into the characters specified in the third argument. string? Replace(string? text, string lookFor, string? changeTo) . Replaces the first occurrence of a specified string in this instance with another specified string . string? ToTitleCase(string? value) . Capitalizes the first letter of the string . string? GetNthWord(string? text, int? wordIndex, string? separator) . Gets the nth word of the string . string? GetFirstWord(string text, string separator) . Gets the first word of the string . string? GetSecondWord(string text, string separator) . Gets the second word of the string . string? GetThirdWord(string text, string separator) . Gets the third word of the string . string? GetLastWord(string? text, string? separator) . Gets last word of the string . bool? IsNullOrEmpty(string? value) . Determines whether the string is null or empty . bool? IsNullOrWhiteSpace(string? value) . Determines whether the string is null or whitespace . string? UrlEncode(string? value) . Encodes the value . string? UrlDecode(string? value) . Decodes the value . string? UriEncode(string? value) . Encodes the value . string? UriDecode(string? value) . Decodes the value . bool? StartsWith(string? value, string? prefix) . Determines whether the string starts with the specified prefix . bool? StartsWith(string? value, string? prefix, string comparison) . Determines whether the string starts with the specified prefix . bool? EndsWith(string? value, string? suffix) . Determines whether the string ends with the specified suffix . bool? EndsWith(string? value, string? suffix, string comparison) . Determines whether the string ends with the specified suffix . string? RegexReplace(string? value, string? pattern, string? replacement) . Replace the specified value part that matches the pattern with the replacement . string[]? SplitByLinuxNewLines(string? input) . Split string by Linux-style newlines (\\n) . string[]? SplitByWindowsNewLines(string? input) . Split string by Windows-style newlines (\\r\\n) . string[]? SplitByNewLines(string? input) . Smart split that handles both Windows (\\r\\n) and Linux (\\n) newlines . Decimal Sum(string name) . Gets the sum value of a given group. Decimal Sum(string name, int parent) . Gets the sum value of a given group. Decimal SumIncome(string name) . Gets the sum value of a given group. Decimal SumIncome(string name, int parent) . Gets the sum value of a given group. Decimal SumOutcome(string name) . Gets the outcome value of a given group. Decimal SumOutcome(string name, int parent) . Gets the outcome value of a given group. TimeSpan? SumTimeSpan(string name) . Gets the sum value of a given group. TimeSpan? SumTimeSpan(string name, int parent) . Gets the sum value of a given group. TimeSpan? MinTimeSpan(string name) . Gets the min value of a given group. TimeSpan? MinTimeSpan(string name, int parent) . Gets the min value of a given group. TimeSpan? MaxTimeSpan(string name) . Gets the max value of a given group. TimeSpan? MaxTimeSpan(string name, int parent) . Gets the min value of a given group. char? ToChar(string? value) . Converts given value to character . char? ToChar(int? value) . Converts given value to character . char? ToChar(short? value) . Converts given value to character . char? ToChar(byte? value) . Converts given value to character . char? ToChar(object? value) . Converts given value to character . DateTime? ToDateTime(string value) . Converts given value to DateTime . DateTime? ToDateTime(string value, string culture) . Converts given value to DateTime . Decimal? ToDecimal(string? value) . Converts given value to decimal . Decimal? ToDecimal(string value, string culture) . Converts given value to decimal withing given culture . Decimal? ToDecimal(byte? value) . Converts given value to Decimal . Decimal? ToDecimal(sbyte? value) . Converts given value to Decimal . Decimal? ToDecimal(short? value) . Converts given value to Decimal . Decimal? ToDecimal(ushort? value) . Converts given value to Decimal . Decimal? ToDecimal(long? value) . Converts given value to Decimal . Decimal? ToDecimal(ulong? value) . Converts given value to Decimal . Decimal? ToDecimal(float? value) . Converts given value to Decimal . Decimal? ToDecimal(double? value) . Converts given value to Decimal . Decimal? ToDecimal(object? value) . Converts given value to Decimal . double? ToDouble(object? value) . Converts given value to double . double? ToDouble(string? value) . Converts given value to double . double? ToDouble(byte? value) . Converts given value to double . double? ToDouble(sbyte? value) . Converts given value to double . double? ToDouble(short? value) . Converts given value to double . double? ToDouble(ushort? value) . Converts given value to double . double? ToDouble(int? value) . Converts given value to double . double? ToDouble(uint? value) . Converts given value to double . double? ToDouble(long? value) . Converts given value to double . double? ToDouble(ulong? value) . Converts given value to double . double? ToDouble(float? value) . Converts given value to double . double? ToDouble(double? value) . Converts given value to double . double? ToDouble(Decimal? value) . Converts given value to double . float? ToFloat(string? value) . Converts given value to float . float? ToFloat(byte? value) . Converts given value to float . float? ToFloat(sbyte? value) . Converts given value to float . float? ToFloat(short? value) . Converts given value to float . float? ToFloat(ushort? value) . Converts given value to float . float? ToFloat(int? value) . Converts given value to float . float? ToFloat(uint? value) . Converts given value to float . float? ToFloat(long? value) . Converts given value to float . float? ToFloat(ulong? value) . Converts given value to float . float? ToFloat(float? value) . Converts given value to float . float? ToFloat(Decimal? value) . Converts given value to float . int? ToInt32(string value) . Converts given value to int . int? ToInt32(byte? value) . Converts given value to int . int? ToInt32(sbyte? value) . Converts given value to int . int? ToInt32(short? value) . Converts given value to int . int? ToInt32(ushort? value) . Converts given value to int . int? ToInt32(int? value) . Converts given value to int . int? ToInt32(uint? value) . Converts given value to int . int? ToInt32(long? value) . Converts given value to int . int? ToInt32(ulong? value) . Converts given value to int . int? ToInt32(float? value) . Converts given value to int . int? ToInt32(double? value) . Converts given value to int . int? ToInt32(Decimal? value) . Converts given value to int . int? ToInt32(object? value) . Converts given value to int . long? ToInt64(string value) . Converts given value to Int64 . long? ToInt64(byte? value) . Converts given value to long . long? ToInt64(sbyte? value) . Converts given value to long . long? ToInt64(short? value) . Converts given value to long . long? ToInt64(ushort? value) . Converts given value to long . long? ToInt64(int? value) . Converts given value to long . long? ToInt64(uint? value) . Converts given value to long . long? ToInt64(long? value) . Converts given value to long . long? ToInt64(ulong? value) . Converts given value to long . long? ToInt64(float? value) . Converts given value to long . long? ToInt64(double? value) . Converts given value to long . long? ToInt64(Decimal? value) . Converts given value to long . long? ToInt64(object? value) . Converts given value to long . string? ToString(char? value) . Converts given value to string . string? ToString(DateTimeOffset? value) . Converts given value to string . string? ToString(DateTimeOffset? value, string format) . Converts given value to string . string? ToString(byte? value) . Converts given value to string . string? ToString(byte? value, string format) . Converts given value to string . string? ToString(sbyte? value) . Converts given value to string . string? ToString(sbyte? value, string format) . Converts given value to string . string? ToString(int? value) . Converts given value to string . string? ToString(int? value, string format) . Converts given value to string . string? ToString(uint? value) . Converts given value to string . string? ToString(uint? value, string format) . Converts given value to string . string? ToString(long? value) . Converts given value to string . string? ToString(long? value, string format) . Converts given value to string . string? ToString(ulong? value) . Converts given value to string . string? ToString(ulong? value, string format) . Converts given value to string . string? ToString(float? value) . Converts given value to string . string? ToString(float? value, string format) . Converts given value to string . string? ToString(double? value) . Converts given value to string . string? ToString(double? value, string format) . Converts given value to string . string? ToString(Decimal? value) . Converts given value to string . string? ToString(Decimal? value, string format) . Converts given value to string . string? ToString(bool? value) . Converts given value to string . string? ToString(object? value) . Converts given value to string . string? ToString&lt;T&gt;(T? value) . Converts given value to string . string ToString(string[] value) . Converts given value to string . string ToString&lt;T&gt;(T[] value) . Converts given value to string . TimeSpan? ToTimeSpan(string value) . Converts given value to TimeSpan . TimeSpan? ToTimeSpan(string value, string culture) . Converts given value to TimeSpan . IEnumerable&lt;T&gt; Window&lt;T&gt;(string name) . Gets the window . ",
    "url": "/data-sources/Airtable/windows-x64.html#base-methods",
    
    "relUrl": "/data-sources/Airtable/windows-x64.html#base-methods"
  },"346": {
    "doc": "Windows X64",
    "title": "Windows X64",
    "content": " ",
    "url": "/data-sources/Airtable/windows-x64.html",
    
    "relUrl": "/data-sources/Airtable/windows-x64.html"
  },"347": {
    "doc": "Windows X64",
    "title": "Musoq.DataSources.SeparatedValues",
    "content": "Provides schema to work with separated values like .csv, .tsv, semicolon. ",
    "url": "/data-sources/SeparatedValues/windows-x64.html#musoqdatasourcesseparatedvalues",
    
    "relUrl": "/data-sources/SeparatedValues/windows-x64.html#musoqdatasourcesseparatedvalues"
  },"348": {
    "doc": "Windows X64",
    "title": "Tables",
    "content": "Table is a collection of rows and columns that the plugin exposes. Below are the tables that are exposed by this data source. separatedvalues.comma(string path, bool hasHeader, int skipLines) . Gives the ability to process .CSV files . This table has a dynamic structure, which means that its columns and other details cannot be determined until runtime. As a result, it is not possible to include a complete description of this table in the documentation. Instead, the actual columns and other details of this table will be determined at runtime. separatedvalues.tab(string path, bool hasHeader, int skipLines) . Gives the ability to process .TSV files . This table has a dynamic structure, which means that its columns and other details cannot be determined until runtime. As a result, it is not possible to include a complete description of this table in the documentation. Instead, the actual columns and other details of this table will be determined at runtime. separatedvalues.semicolon(string path, bool hasHeader, int skipLines) . Gives the ability to process semicolon files . This table has a dynamic structure, which means that its columns and other details cannot be determined until runtime. As a result, it is not possible to include a complete description of this table in the documentation. Instead, the actual columns and other details of this table will be determined at runtime. ",
    "url": "/data-sources/SeparatedValues/windows-x64.html#tables",
    
    "relUrl": "/data-sources/SeparatedValues/windows-x64.html#tables"
  },"349": {
    "doc": "Windows X64",
    "title": "Methods",
    "content": "Methods are functions that can be called on the data source specific column. Below are the methods that are exposed by this data source. string ClusteredByContainsKey(string dictionaryFilePath, string value) . Categorize values based on provided file . ",
    "url": "/data-sources/SeparatedValues/windows-x64.html#methods",
    
    "relUrl": "/data-sources/SeparatedValues/windows-x64.html#methods"
  },"350": {
    "doc": "Windows X64",
    "title": "Base Methods",
    "content": "Base methods are methods that can be called on the data source specific column. Those methods are automatically inherited and enriches the data source specific methods. Below are those base methods that are exposed by this data source. int RowNumber() . Gets the row number of the current row. string? GetTypeName(object? obj) . Gets the typename of passed object. string AggregateValues(string name) . Aggregates values into a single value. string AggregateValues(string name, int parent) . Aggregates values into a single value. Decimal Avg(string name) . Gets the aggregated average value from the given group name . Decimal Avg(string name, int parent) . Gets the aggregated average value from the given group name . byte? ShiftLeft(byte? value, int shift) . Shifts the value to the left by the specified number of bits. short? ShiftLeft(short? value, int shift) . Shifts the value to the left by the specified number of bits. int? ShiftLeft(int? value, int shift) . Shifts the value to the left by the specified number of bits. long? ShiftLeft(long? value, int shift) . Shifts the value to the left by the specified number of bits. sbyte? ShiftLeft(sbyte? value, int shift) . Shifts the value to the left by the specified number of bits. ushort? ShiftLeft(ushort? value, int shift) . Shifts the value to the left by the specified number of bits. uint? ShiftLeft(uint? value, int shift) . Shifts the value to the left by the specified number of bits. ulong? ShiftLeft(ulong? value, int shift) . Shifts the value to the left by the specified number of bits. byte? ShiftRight(byte? value, int shift) . Shifts the value to the right by the specified number of bits. short? ShiftRight(short? value, int shift) . Shifts the value to the right by the specified number of bits. int? ShiftRight(int? value, int shift) . Shifts the value to the right by the specified number of bits. long? ShiftRight(long? value, int shift) . Shifts the value to the right by the specified number of bits. sbyte? ShiftRight(sbyte? value, int shift) . Shifts the value to the right by the specified number of bits. ushort? ShiftRight(ushort? value, int shift) . Shifts the value to the right by the specified number of bits. uint? ShiftRight(uint? value, int shift) . Shifts the value to the right by the specified number of bits. ulong? ShiftRight(ulong? value, int shift) . Shifts the value to the right by the specified number of bits. byte? Not(byte? value) . Performs bitwise NOT operation on a given value. short? Not(short? value) . Performs bitwise NOT operation on a given value. int? Not(int? value) . Performs bitwise NOT operation on a given value. long? Not(long? value) . Performs bitwise NOT operation on a given value. sbyte? Not(sbyte? value) . Performs bitwise NOT operation on a given value. ushort? Not(ushort? value) . Performs bitwise NOT operation on a given value. uint? Not(uint? value) . Performs bitwise NOT operation on a given value. ulong? Not(ulong? value) . Performs bitwise NOT operation on a given value. byte? And(byte? left, byte? right) . Performs bitwise AND operation on two given values. int? And(byte? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(byte? left, short? right) . Performs bitwise AND operation on two given values. int? And(byte? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(byte? left, int? right) . Performs bitwise AND operation on two given values. uint? And(byte? left, uint? right) . Performs bitwise AND operation on two given values. long? And(byte? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(byte? left, ulong? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, byte? right) . Performs bitwise AND operation on two given values. sbyte? And(sbyte? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, short? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, int? right) . Performs bitwise AND operation on two given values. uint? And(sbyte? left, uint? right) . Performs bitwise AND operation on two given values. long? And(sbyte? left, long? right) . Performs bitwise AND operation on two given values. int? And(short? left, byte? right) . Performs bitwise AND operation on two given values. int? And(short? left, sbyte? right) . Performs bitwise AND operation on two given values. short? And(short? left, short? right) . Performs bitwise AND operation on two given values. int? And(short? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(short? left, int? right) . Performs bitwise AND operation on two given values. uint? And(short? left, uint? right) . Performs bitwise AND operation on two given values. long? And(short? left, long? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, byte? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, short? right) . Performs bitwise AND operation on two given values. ushort? And(ushort? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, int? right) . Performs bitwise AND operation on two given values. uint? And(ushort? left, uint? right) . Performs bitwise AND operation on two given values. long? And(ushort? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(ushort? left, ulong? right) . Performs bitwise AND operation on two given values. int? And(int? left, byte? right) . Performs bitwise AND operation on two given values. int? And(int? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(int? left, short? right) . Performs bitwise AND operation on two given values. int? And(int? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(int? left, int? right) . Performs bitwise AND operation on two given values. uint? And(int? left, uint? right) . Performs bitwise AND operation on two given values. long? And(int? left, long? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, uint? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, byte? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, sbyte? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, short? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, ushort? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, int? right) . Performs bitwise AND operation on two given values. ulong? And(uint? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(uint? left, ulong? right) . Performs bitwise AND operation on two given values. long? And(long? left, long? right) . Performs bitwise AND operation on two given values. long? And(long? left, byte? right) . Performs bitwise AND operation on two given values. long? And(long? left, sbyte? right) . Performs bitwise AND operation on two given values. long? And(long? left, short? right) . Performs bitwise AND operation on two given values. long? And(long? left, ushort? right) . Performs bitwise AND operation on two given values. long? And(long? left, int? right) . Performs bitwise AND operation on two given values. long? And(long? left, uint? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, byte? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, ushort? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, uint? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, ulong? right) . Performs bitwise AND operation on two given values. byte? Or(byte? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, short? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(byte? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(byte? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(byte? left, ulong? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, byte? right) . Performs bitwise OR operation on two given values. sbyte? Or(sbyte? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, short? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(sbyte? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(sbyte? left, long? right) . Performs bitwise OR operation on two given values. int? Or(short? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(short? left, sbyte? right) . Performs bitwise OR operation on two given values. short? Or(short? left, short? right) . Performs bitwise OR operation on two given values. int? Or(short? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(short? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(short? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(short? left, long? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, short? right) . Performs bitwise OR operation on two given values. ushort? Or(ushort? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(ushort? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(ushort? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(ushort? left, ulong? right) . Performs bitwise OR operation on two given values. int? Or(int? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(int? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(int? left, short? right) . Performs bitwise OR operation on two given values. int? Or(int? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(int? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(int? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(int? left, long? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, uint? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, byte? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, sbyte? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, short? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, ushort? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, int? right) . Performs bitwise OR operation on two given values. ulong? Or(uint? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(uint? left, ulong? right) . Performs bitwise OR operation on two given values. long? Or(long? left, long? right) . Performs bitwise OR operation on two given values. long? Or(long? left, byte? right) . Performs bitwise OR operation on two given values. long? Or(long? left, sbyte? right) . Performs bitwise OR operation on two given values. long? Or(long? left, short? right) . Performs bitwise OR operation on two given values. long? Or(long? left, ushort? right) . Performs bitwise OR operation on two given values. long? Or(long? left, int? right) . Performs bitwise OR operation on two given values. long? Or(long? left, uint? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, byte? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, ushort? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, uint? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, ulong? right) . Performs bitwise OR operation on two given values. byte? Xor(byte? left, byte? right) . Performs bitwise OR operation on two given values. int? Xor(byte? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(byte? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(byte? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(byte? left, ulong? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, byte? right) . Performs bitwise Xor operation on two given values. sbyte? Xor(sbyte? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(sbyte? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(sbyte? left, long? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, sbyte? right) . Performs bitwise Xor operation on two given values. short? Xor(short? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, ushort? right) . Performs bitwise XOR operation on two given values. int? Xor(short? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(short? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(short? left, long? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, short? right) . Performs bitwise Xor operation on two given values. ushort? Xor(ushort? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(ushort? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(ushort? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ushort? left, ulong? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(int? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(int? left, long? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, uint? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, byte? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, sbyte? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, short? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, ushort? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, int? right) . Performs bitwise Xor operation on two given values. ulong? Xor(uint? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(uint? left, ulong? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, long? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, byte? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, sbyte? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, short? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, ushort? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, int? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, uint? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, ulong? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, byte? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, ushort? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, uint? right) . Performs bitwise Xor operation on two given values. byte[] GetBytes(string? content) . Gets the bytes from the given string. byte[] GetBytes(string? content, int length, int offset) . Gets the bytes from the given string within given offset and length. byte?[]? GetBytes(char? character) . Gets the bytes from the given character. byte?[]? GetBytes(bool? bit) . Gets the bytes from the given boolean. byte?[]? GetBytes(long? value) . Gets the bytes from the given long. byte?[]? GetBytes(int? value) . Gets the bytes from the given int. byte?[]? GetBytes(short? value) . Gets the bytes from the given short. byte?[]? GetBytes(ulong? value) . Gets the bytes from the given ulong. byte?[]? GetBytes(ushort? value) . Gets the bytes from the given ushort. byte?[]? GetBytes(uint? value) . Gets the bytes from the given uint. byte?[]? GetBytes(Decimal? value) . Gets the bytes from the given decimal. byte?[]? GetBytes(double? value) . Gets the bytes from the given double. byte?[]? GetBytes(float? value) . Gets the bytes from the given float. string? ToBin(byte?[]? bytes, string delimiter) . Converts given bytes to binary with defined delimiter . string ToBin&lt;T&gt;(T value) . Converts given value to binary . string ToOcta&lt;T&gt;(T value) . Converts given value to octal . string ToDec&lt;T&gt;(T value) . Converts given value to decimal . string ToBase64(byte[] value) . Converts given value to string . string ToBase64(byte[] value, int offset, int length) . Converts given array of bytes to string . byte[] FromBase64(string value) . Converts given string to bytes array . bool FromBytesToBool(byte[] value) . Converts bytes to boolean value. short FromBytesToInt16(byte[] value) . Converts bytes to a 16-bit signed integer. ushort FromBytesToUInt16(byte[] value) . Converts bytes to a 16-bit unsigned integer. int FromBytesToInt32(byte[] value) . Converts bytes to a 32-bit signed integer. uint FromBytesToUInt32(byte[] value) . Converts bytes to a 32-bit unsigned integer. long FromBytesToInt64(byte[] value) . Converts bytes to a 64-bit signed integer. ulong FromBytesToUInt64(byte[] value) . Converts bytes to a 64-bit unsigned integer. float FromBytesToFloat(byte[] value) . Converts bytes to a float value. double FromBytesToDouble(byte[] value) . Converts bytes to a float value. string FromBytesToString(byte[] value) . Converts bytes to a string. byte[] ToBytes(bool value) . Converts boolean value to bytes. byte[] ToBytes(short value) . Converts short value to bytes. byte[] ToBytes(ushort value) . Converts ushort value to bytes. byte[] ToBytes(int value) . Converts int value to bytes. byte[] ToBytes(uint value) . Converts uint value to bytes. byte[] ToBytes(long value) . Converts long value to bytes. byte[] ToBytes(ulong value) . Converts long value to bytes. string? ToHex(byte?[]? bytes, string delimiter) . Converts given bytes to hex with defined delimiter . string? ToHex&lt;T&gt;(T value) . Converts given value to binary . int Count(string name) . Gets the count value of a given group. int Count(string name, int parent) . Gets the count value of a given group. int ExtractFromDate(string? date, string partOfDate) . Extracts part of the date from the date . int ExtractFromDate(string date, string culture, string partOfDate) . Extracts part of the date from the date based on given culture . DateTimeOffset? GetDate() . Gets the current datetime . DateTimeOffset? UtcGetDate() . Gets the current datetime in UTC . int? Month(DateTimeOffset? value) . Gets the month from DateTimeOffset . int? Year(DateTimeOffset? value) . Gets the year from DateTimeOffset . int? Day(DateTimeOffset? value) . Gets the day from DateTimeOffset . int? Hour(DateTimeOffset? value) . Gets the hour from DateTimeOffset . int? Minute(DateTimeOffset? value) . Gets the minute from DateTimeOffset . int? Second(DateTimeOffset? value) . Gets the second from DateTimeOffset . int? Milliseconds(DateTimeOffset? value) . Gets the millisecond from DateTimeOffset . int? DayOfWeek(DateTimeOffset? value) . Gets the day of week from DateTimeOffset . TimeSpan? ExtractTimeSpan(DateTimeOffset? dateTimeOffset) . Extracts time from DateTimeOffset . DateTime? ToDateTimeOffset(string value) . Converts given value to DateTimeOffset . DateTimeOffset? ToDateTimeOffset(string value, string culture) . Converts given value to DateTimeOffset . IEnumerable&lt;T&gt;? Skip&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? skipCount) . Skips elements from the beginning of the sequence. IEnumerable&lt;T&gt;? Take&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? takeCount) . Takes elements from the beginning of the sequence. IEnumerable&lt;T&gt;? SkipAndTake&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? skipCount, int? takeCount) . Skip and takes elements from the beginning of the sequence. T[]? EnumerableToArray&lt;T&gt;(IEnumerable&lt;T&gt;? values) . Turn array arguments of T into a single array. T[]? MergeArrays&lt;T&gt;(T[][]? values) . Turn array arguments of T into a single array. IEnumerable&lt;T&gt;? LongestCommonSequence&lt;T&gt;(IEnumerable&lt;T&gt;? source, IEnumerable&lt;T&gt;? pattern) . Computes longest common sequence of two given sequences . T? GetElementAtOrDefault&lt;T&gt;(IEnumerable&lt;T&gt;? enumerable, int? index) . Gets the element at the specified index in a sequence . int? Length&lt;T&gt;(IEnumerable&lt;T&gt;? enumerable) . Gets the length of the sequence . int? Length&lt;T&gt;(T[]? array) . Gets the length of the array . T? Choose&lt;T&gt;(int? index, T[] values) . Gets the value of an array at the specified index . T If&lt;T&gt;(bool expressionResult, T a, T b) . Chose a or b value based on the expression result . bool? Match(string? regex, string? content) . Determine whether content matches the specified pattern . byte? Coalesce(byte?[] array) . Gets the first non-null value in a list . sbyte? Coalesce(sbyte?[] array) . Gets the first non-null value in a list . short? Coalesce(short?[] array) . Gets the first non-null value in a list . ushort? Coalesce(ushort?[] array) . Gets the first non-null value in a list . int? Coalesce(int?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(uint?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(long?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(ulong?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(Decimal?[] array) . Gets the first non-null value in a list . T? Coalesce&lt;T&gt;(T[] array) . Gets the first non-null value in a list . IEnumerable&lt;T&gt;? Distinct&lt;T&gt;(IEnumerable&lt;T&gt;? values) . Returns distinct elements from a collection. string? Md5(string? content) . Gets the md5 hash of the given string. string? Md5(byte?[]? content) . Gets the md5 hash of the given bytes array. string? Sha1(string? content) . Gets the sha256 hash of the given string. string? Sha1(byte?[]? content) . Gets the sha256 hash of the given bytes array. string? Sha256(string? content) . Gets the sha256 hash of the given string. string? Sha256(byte?[]? content) . Gets the sha256 hash of the given bytes array. string? Sha512(string? content) . Gets the sha256 hash of the given string. string? Sha512(byte?[]? content) . Gets the sha256 hash of the bytes array. string? ToJson&lt;T&gt;(T? obj) . Converts object to json. string[] ExtractFromJsonToArray(string? json, string? path) . Extracts values from json by path. string? ExtractFromJson(string? json, string? path) . Extracts values from json by path and joins them with comma. Decimal? Abs(Decimal? value) . Gets the absolute value . long? Abs(long? value) . Gets the absolute value . int? Abs(int? value) . Gets the absolute value . Decimal? Ceil(Decimal? value) . Gets the ceiling value . Decimal? Floor(Decimal? value) . Gets the floor value . Decimal? Sign(Decimal? value) . Determine whether value is greater, equal or less that zero . long? Sign(long? value) . Determine whether value is greater, equal or less that zero . Decimal? Round(Decimal? value, int precision) . Rounds the value within given precision . Decimal? PercentOf(Decimal? value, Decimal? max) . Gets the percentage of the value . int Rand() . Gets the random integer value . int? Rand(int? min, int? max) . Gets the random integer value . double? Pow(Decimal? x, Decimal? y) . Computes the pow between two values . double? Pow(double? x, double? y) . Computes the pow between two values . double? Sqrt(Decimal? x) . Computes the sqrt of a given value . double? Sqrt(double? x) . Computes the sqrt of a given value . double? Sqrt(long? x) . Computes the sqrt of a given value . double? PercentRank&lt;T&gt;(IEnumerable&lt;T&gt;? window, T? value) . Computes the percent rank of a given window . double? Log(Decimal? base, Decimal? value) . Calculates the logarithm of a value with a specified base. Decimal? Sin(Decimal? value) . Calculates sine of a value. double? Sin(double? value) . Calculates sine of a value. float? Sin(float? value) . Calculates sine of a value. Decimal? Cos(Decimal? value) . Calculates cosine of a value. double? Cos(double? value) . Calculates cosine of a value. float? Cos(float? value) . Calculates cosine of a value. Decimal Max(string name) . Gets the max value of a given group. Decimal Max(string name, int parent) . Gets the max value of a given group. Decimal Min(string name) . Gets the min value of a given group. Decimal Min(string name, int parent) . Gets the min value of a given group. Decimal StDev(string name, int parent) . Gets the StDev value of a given group. string NewId() . Gets the new identifier . string? Trim(string? value) . Removes leading and trailing whitespace from a string. string? TrimStart(string? value) . Removes leading whitespace from a string. string? TrimEnd(string? value) . Removes trailing whitespace from a string. string? Substring(string? value, int? index, int? length) . Gets the substring from the string. string? Substring(string value, int? length) . Gets the substring from the string . string? Concat(string[]? strings) . Concatenates the specified values . string? Concat(char?[]? characters) . Concatenates the specified characters . string? Concat(string? firstString, char?[]? chars) . Concatenates specified string fir characters . string? Concat(char? firstChar, string[]? strings) . Concatenate specific character with strings . string? Concat(object[]? objects) . Concatenates the specified strings . string? Concat&lt;T&gt;(T[]? objects) . Concatenates the specified strings . bool? Contains(string? content, string? what) . Determine whether the string contains the specified value . int? IndexOf(string? value, string? text) . Position of the first occurrence of the specified value . string? Soundex(string? value) . Computes soundex for the specified value . bool HasFuzzyMatchedWord(string text, string word, string separator) . Matches the specified text by splitting it with separator and applying fuzzy comparison . bool HasWordThatHasSmallerLevenshteinDistanceThan(string text, string word, int distance, string separator) . Matches the specified text by splitting it with separator and applying fuzzy comparison with a given distance . bool HasWordThatSoundLike(string text, string word, string separator) . Matches whether the specified word is present after being fuzzified within the specified text . bool HasTextThatSoundLikeSentence(string text, string sentence, string separator) . Matches whether the specified text is present in sentence after being fuzified . string? ToUpper(string value) . Makes the string uppercase . string? ToUpper(string value, string culture) . Makes the string uppercase within specified culture . string? ToUpperInvariant(string value) . Makes the string uppercase . string? ToLower(string value) . Makes the string lowercase . string? ToLower(string value, string culture) . Makes the string lowercase within specified culture . string? ToLowerInvariant(string value) . Makes the string lowercase . string? PadLeft(string? value, string? character, int? totalWidth) . Returns a new string that right-aligns the characters in this instance by padding them on the left with a specified Unicode character, for a specified total lengt . string? PadRight(string? value, string? character, int? totalWidth) . Returns a new string that left-aligns the characters in this instance by padding them on the right with a specified Unicode character, for a specified total length . string? Head(string? value, int? length) . Gets the first N characters of the string . string? Tail(string? value, int? length) . Gets the last N characters of the string . int? LevenshteinDistance(string? firstValue, string? secondValue) . Computes the Levenshtein distance between two strings . char? GetCharacterOf(string value, int index) . Gets the character at specified index . string? Reverse(string? value) . Reverses the string . string[] Split(string value, string[] separators) . Splits the string into an array of substrings based on the specified separators . char[] ToCharArray(string value) . Splits the string into an array of characters . string? LongestCommonSubstring(string source, string pattern) . Computes the longest common subsequence between two source and pattern . string Replicate(string value, int integer) . Clones the value n times . string? Translate(string? value, string? characters, string? translations) . Returns the string from the first argument after the characters specified in the second argument are translated into the characters specified in the third argument. string? Replace(string? text, string lookFor, string? changeTo) . Replaces the first occurrence of a specified string in this instance with another specified string . string? ToTitleCase(string? value) . Capitalizes the first letter of the string . string? GetNthWord(string? text, int? wordIndex, string? separator) . Gets the nth word of the string . string? GetFirstWord(string text, string separator) . Gets the first word of the string . string? GetSecondWord(string text, string separator) . Gets the second word of the string . string? GetThirdWord(string text, string separator) . Gets the third word of the string . string? GetLastWord(string? text, string? separator) . Gets last word of the string . bool? IsNullOrEmpty(string? value) . Determines whether the string is null or empty . bool? IsNullOrWhiteSpace(string? value) . Determines whether the string is null or whitespace . string? UrlEncode(string? value) . Encodes the value . string? UrlDecode(string? value) . Decodes the value . string? UriEncode(string? value) . Encodes the value . string? UriDecode(string? value) . Decodes the value . bool? StartsWith(string? value, string? prefix) . Determines whether the string starts with the specified prefix . bool? StartsWith(string? value, string? prefix, string comparison) . Determines whether the string starts with the specified prefix . bool? EndsWith(string? value, string? suffix) . Determines whether the string ends with the specified suffix . bool? EndsWith(string? value, string? suffix, string comparison) . Determines whether the string ends with the specified suffix . string? RegexReplace(string? value, string? pattern, string? replacement) . Replace the specified value part that matches the pattern with the replacement . string[]? SplitByLinuxNewLines(string? input) . Split string by Linux-style newlines (\\n) . string[]? SplitByWindowsNewLines(string? input) . Split string by Windows-style newlines (\\r\\n) . string[]? SplitByNewLines(string? input) . Smart split that handles both Windows (\\r\\n) and Linux (\\n) newlines . Decimal Sum(string name) . Gets the sum value of a given group. Decimal Sum(string name, int parent) . Gets the sum value of a given group. Decimal SumIncome(string name) . Gets the sum value of a given group. Decimal SumIncome(string name, int parent) . Gets the sum value of a given group. Decimal SumOutcome(string name) . Gets the outcome value of a given group. Decimal SumOutcome(string name, int parent) . Gets the outcome value of a given group. TimeSpan? SumTimeSpan(string name) . Gets the sum value of a given group. TimeSpan? SumTimeSpan(string name, int parent) . Gets the sum value of a given group. TimeSpan? MinTimeSpan(string name) . Gets the min value of a given group. TimeSpan? MinTimeSpan(string name, int parent) . Gets the min value of a given group. TimeSpan? MaxTimeSpan(string name) . Gets the max value of a given group. TimeSpan? MaxTimeSpan(string name, int parent) . Gets the min value of a given group. char? ToChar(string? value) . Converts given value to character . char? ToChar(int? value) . Converts given value to character . char? ToChar(short? value) . Converts given value to character . char? ToChar(byte? value) . Converts given value to character . char? ToChar(object? value) . Converts given value to character . DateTime? ToDateTime(string value) . Converts given value to DateTime . DateTime? ToDateTime(string value, string culture) . Converts given value to DateTime . Decimal? ToDecimal(string? value) . Converts given value to decimal . Decimal? ToDecimal(string value, string culture) . Converts given value to decimal withing given culture . Decimal? ToDecimal(byte? value) . Converts given value to Decimal . Decimal? ToDecimal(sbyte? value) . Converts given value to Decimal . Decimal? ToDecimal(short? value) . Converts given value to Decimal . Decimal? ToDecimal(ushort? value) . Converts given value to Decimal . Decimal? ToDecimal(long? value) . Converts given value to Decimal . Decimal? ToDecimal(ulong? value) . Converts given value to Decimal . Decimal? ToDecimal(float? value) . Converts given value to Decimal . Decimal? ToDecimal(double? value) . Converts given value to Decimal . Decimal? ToDecimal(object? value) . Converts given value to Decimal . double? ToDouble(object? value) . Converts given value to double . double? ToDouble(string? value) . Converts given value to double . double? ToDouble(byte? value) . Converts given value to double . double? ToDouble(sbyte? value) . Converts given value to double . double? ToDouble(short? value) . Converts given value to double . double? ToDouble(ushort? value) . Converts given value to double . double? ToDouble(int? value) . Converts given value to double . double? ToDouble(uint? value) . Converts given value to double . double? ToDouble(long? value) . Converts given value to double . double? ToDouble(ulong? value) . Converts given value to double . double? ToDouble(float? value) . Converts given value to double . double? ToDouble(double? value) . Converts given value to double . double? ToDouble(Decimal? value) . Converts given value to double . float? ToFloat(string? value) . Converts given value to float . float? ToFloat(byte? value) . Converts given value to float . float? ToFloat(sbyte? value) . Converts given value to float . float? ToFloat(short? value) . Converts given value to float . float? ToFloat(ushort? value) . Converts given value to float . float? ToFloat(int? value) . Converts given value to float . float? ToFloat(uint? value) . Converts given value to float . float? ToFloat(long? value) . Converts given value to float . float? ToFloat(ulong? value) . Converts given value to float . float? ToFloat(float? value) . Converts given value to float . float? ToFloat(Decimal? value) . Converts given value to float . int? ToInt32(string value) . Converts given value to int . int? ToInt32(byte? value) . Converts given value to int . int? ToInt32(sbyte? value) . Converts given value to int . int? ToInt32(short? value) . Converts given value to int . int? ToInt32(ushort? value) . Converts given value to int . int? ToInt32(int? value) . Converts given value to int . int? ToInt32(uint? value) . Converts given value to int . int? ToInt32(long? value) . Converts given value to int . int? ToInt32(ulong? value) . Converts given value to int . int? ToInt32(float? value) . Converts given value to int . int? ToInt32(double? value) . Converts given value to int . int? ToInt32(Decimal? value) . Converts given value to int . int? ToInt32(object? value) . Converts given value to int . long? ToInt64(string value) . Converts given value to Int64 . long? ToInt64(byte? value) . Converts given value to long . long? ToInt64(sbyte? value) . Converts given value to long . long? ToInt64(short? value) . Converts given value to long . long? ToInt64(ushort? value) . Converts given value to long . long? ToInt64(int? value) . Converts given value to long . long? ToInt64(uint? value) . Converts given value to long . long? ToInt64(long? value) . Converts given value to long . long? ToInt64(ulong? value) . Converts given value to long . long? ToInt64(float? value) . Converts given value to long . long? ToInt64(double? value) . Converts given value to long . long? ToInt64(Decimal? value) . Converts given value to long . long? ToInt64(object? value) . Converts given value to long . string? ToString(char? value) . Converts given value to string . string? ToString(DateTimeOffset? value) . Converts given value to string . string? ToString(DateTimeOffset? value, string format) . Converts given value to string . string? ToString(byte? value) . Converts given value to string . string? ToString(byte? value, string format) . Converts given value to string . string? ToString(sbyte? value) . Converts given value to string . string? ToString(sbyte? value, string format) . Converts given value to string . string? ToString(int? value) . Converts given value to string . string? ToString(int? value, string format) . Converts given value to string . string? ToString(uint? value) . Converts given value to string . string? ToString(uint? value, string format) . Converts given value to string . string? ToString(long? value) . Converts given value to string . string? ToString(long? value, string format) . Converts given value to string . string? ToString(ulong? value) . Converts given value to string . string? ToString(ulong? value, string format) . Converts given value to string . string? ToString(float? value) . Converts given value to string . string? ToString(float? value, string format) . Converts given value to string . string? ToString(double? value) . Converts given value to string . string? ToString(double? value, string format) . Converts given value to string . string? ToString(Decimal? value) . Converts given value to string . string? ToString(Decimal? value, string format) . Converts given value to string . string? ToString(bool? value) . Converts given value to string . string? ToString(object? value) . Converts given value to string . string? ToString&lt;T&gt;(T? value) . Converts given value to string . string ToString(string[] value) . Converts given value to string . string ToString&lt;T&gt;(T[] value) . Converts given value to string . TimeSpan? ToTimeSpan(string value) . Converts given value to TimeSpan . TimeSpan? ToTimeSpan(string value, string culture) . Converts given value to TimeSpan . IEnumerable&lt;T&gt; Window&lt;T&gt;(string name) . Gets the window . ",
    "url": "/data-sources/SeparatedValues/windows-x64.html#base-methods",
    
    "relUrl": "/data-sources/SeparatedValues/windows-x64.html#base-methods"
  },"351": {
    "doc": "Windows X64",
    "title": "Windows X64",
    "content": " ",
    "url": "/data-sources/SeparatedValues/windows-x64.html",
    
    "relUrl": "/data-sources/SeparatedValues/windows-x64.html"
  },"352": {
    "doc": "Windows X64",
    "title": "Musoq.DataSources.Postgres",
    "content": "Provides schema to work with postgres database . ",
    "url": "/data-sources/Postgres/windows-x64.html#musoqdatasourcespostgres",
    
    "relUrl": "/data-sources/Postgres/windows-x64.html#musoqdatasourcespostgres"
  },"353": {
    "doc": "Windows X64",
    "title": "Tables",
    "content": "Table is a collection of rows and columns that the plugin exposes. Below are the tables that are exposed by this data source. postgres.tableName(‘schemaName’) . Gives ability to process sqlite table . Environment variables . In order to use the plugin, the user must set any required environment variables as specified in the environments element. Failure to do so may result in the plugin not functioning correctly. | Name | Is required | Description | . | NPGSQL_CONNECTION_STRING | true | Postgres connections string | . Columns . This table has a dynamic structure, which means that its columns and other details cannot be determined until runtime. As a result, it is not possible to include a complete description of this table in the documentation. Instead, the actual columns and other details of this table will be determined at runtime. ",
    "url": "/data-sources/Postgres/windows-x64.html#tables",
    
    "relUrl": "/data-sources/Postgres/windows-x64.html#tables"
  },"354": {
    "doc": "Windows X64",
    "title": "Base Methods",
    "content": "Base methods are methods that can be called on the data source specific column. Those methods are automatically inherited and enriches the data source specific methods. Below are those base methods that are exposed by this data source. int RowNumber() . Gets the row number of the current row. string? GetTypeName(object? obj) . Gets the typename of passed object. string AggregateValues(string name) . Aggregates values into a single value. string AggregateValues(string name, int parent) . Aggregates values into a single value. Decimal Avg(string name) . Gets the aggregated average value from the given group name . Decimal Avg(string name, int parent) . Gets the aggregated average value from the given group name . byte? ShiftLeft(byte? value, int shift) . Shifts the value to the left by the specified number of bits. short? ShiftLeft(short? value, int shift) . Shifts the value to the left by the specified number of bits. int? ShiftLeft(int? value, int shift) . Shifts the value to the left by the specified number of bits. long? ShiftLeft(long? value, int shift) . Shifts the value to the left by the specified number of bits. sbyte? ShiftLeft(sbyte? value, int shift) . Shifts the value to the left by the specified number of bits. ushort? ShiftLeft(ushort? value, int shift) . Shifts the value to the left by the specified number of bits. uint? ShiftLeft(uint? value, int shift) . Shifts the value to the left by the specified number of bits. ulong? ShiftLeft(ulong? value, int shift) . Shifts the value to the left by the specified number of bits. byte? ShiftRight(byte? value, int shift) . Shifts the value to the right by the specified number of bits. short? ShiftRight(short? value, int shift) . Shifts the value to the right by the specified number of bits. int? ShiftRight(int? value, int shift) . Shifts the value to the right by the specified number of bits. long? ShiftRight(long? value, int shift) . Shifts the value to the right by the specified number of bits. sbyte? ShiftRight(sbyte? value, int shift) . Shifts the value to the right by the specified number of bits. ushort? ShiftRight(ushort? value, int shift) . Shifts the value to the right by the specified number of bits. uint? ShiftRight(uint? value, int shift) . Shifts the value to the right by the specified number of bits. ulong? ShiftRight(ulong? value, int shift) . Shifts the value to the right by the specified number of bits. byte? Not(byte? value) . Performs bitwise NOT operation on a given value. short? Not(short? value) . Performs bitwise NOT operation on a given value. int? Not(int? value) . Performs bitwise NOT operation on a given value. long? Not(long? value) . Performs bitwise NOT operation on a given value. sbyte? Not(sbyte? value) . Performs bitwise NOT operation on a given value. ushort? Not(ushort? value) . Performs bitwise NOT operation on a given value. uint? Not(uint? value) . Performs bitwise NOT operation on a given value. ulong? Not(ulong? value) . Performs bitwise NOT operation on a given value. byte? And(byte? left, byte? right) . Performs bitwise AND operation on two given values. int? And(byte? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(byte? left, short? right) . Performs bitwise AND operation on two given values. int? And(byte? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(byte? left, int? right) . Performs bitwise AND operation on two given values. uint? And(byte? left, uint? right) . Performs bitwise AND operation on two given values. long? And(byte? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(byte? left, ulong? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, byte? right) . Performs bitwise AND operation on two given values. sbyte? And(sbyte? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, short? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, int? right) . Performs bitwise AND operation on two given values. uint? And(sbyte? left, uint? right) . Performs bitwise AND operation on two given values. long? And(sbyte? left, long? right) . Performs bitwise AND operation on two given values. int? And(short? left, byte? right) . Performs bitwise AND operation on two given values. int? And(short? left, sbyte? right) . Performs bitwise AND operation on two given values. short? And(short? left, short? right) . Performs bitwise AND operation on two given values. int? And(short? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(short? left, int? right) . Performs bitwise AND operation on two given values. uint? And(short? left, uint? right) . Performs bitwise AND operation on two given values. long? And(short? left, long? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, byte? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, short? right) . Performs bitwise AND operation on two given values. ushort? And(ushort? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, int? right) . Performs bitwise AND operation on two given values. uint? And(ushort? left, uint? right) . Performs bitwise AND operation on two given values. long? And(ushort? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(ushort? left, ulong? right) . Performs bitwise AND operation on two given values. int? And(int? left, byte? right) . Performs bitwise AND operation on two given values. int? And(int? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(int? left, short? right) . Performs bitwise AND operation on two given values. int? And(int? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(int? left, int? right) . Performs bitwise AND operation on two given values. uint? And(int? left, uint? right) . Performs bitwise AND operation on two given values. long? And(int? left, long? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, uint? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, byte? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, sbyte? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, short? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, ushort? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, int? right) . Performs bitwise AND operation on two given values. ulong? And(uint? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(uint? left, ulong? right) . Performs bitwise AND operation on two given values. long? And(long? left, long? right) . Performs bitwise AND operation on two given values. long? And(long? left, byte? right) . Performs bitwise AND operation on two given values. long? And(long? left, sbyte? right) . Performs bitwise AND operation on two given values. long? And(long? left, short? right) . Performs bitwise AND operation on two given values. long? And(long? left, ushort? right) . Performs bitwise AND operation on two given values. long? And(long? left, int? right) . Performs bitwise AND operation on two given values. long? And(long? left, uint? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, byte? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, ushort? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, uint? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, ulong? right) . Performs bitwise AND operation on two given values. byte? Or(byte? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, short? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(byte? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(byte? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(byte? left, ulong? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, byte? right) . Performs bitwise OR operation on two given values. sbyte? Or(sbyte? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, short? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(sbyte? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(sbyte? left, long? right) . Performs bitwise OR operation on two given values. int? Or(short? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(short? left, sbyte? right) . Performs bitwise OR operation on two given values. short? Or(short? left, short? right) . Performs bitwise OR operation on two given values. int? Or(short? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(short? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(short? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(short? left, long? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, short? right) . Performs bitwise OR operation on two given values. ushort? Or(ushort? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(ushort? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(ushort? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(ushort? left, ulong? right) . Performs bitwise OR operation on two given values. int? Or(int? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(int? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(int? left, short? right) . Performs bitwise OR operation on two given values. int? Or(int? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(int? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(int? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(int? left, long? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, uint? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, byte? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, sbyte? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, short? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, ushort? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, int? right) . Performs bitwise OR operation on two given values. ulong? Or(uint? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(uint? left, ulong? right) . Performs bitwise OR operation on two given values. long? Or(long? left, long? right) . Performs bitwise OR operation on two given values. long? Or(long? left, byte? right) . Performs bitwise OR operation on two given values. long? Or(long? left, sbyte? right) . Performs bitwise OR operation on two given values. long? Or(long? left, short? right) . Performs bitwise OR operation on two given values. long? Or(long? left, ushort? right) . Performs bitwise OR operation on two given values. long? Or(long? left, int? right) . Performs bitwise OR operation on two given values. long? Or(long? left, uint? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, byte? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, ushort? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, uint? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, ulong? right) . Performs bitwise OR operation on two given values. byte? Xor(byte? left, byte? right) . Performs bitwise OR operation on two given values. int? Xor(byte? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(byte? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(byte? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(byte? left, ulong? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, byte? right) . Performs bitwise Xor operation on two given values. sbyte? Xor(sbyte? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(sbyte? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(sbyte? left, long? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, sbyte? right) . Performs bitwise Xor operation on two given values. short? Xor(short? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, ushort? right) . Performs bitwise XOR operation on two given values. int? Xor(short? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(short? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(short? left, long? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, short? right) . Performs bitwise Xor operation on two given values. ushort? Xor(ushort? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(ushort? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(ushort? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ushort? left, ulong? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(int? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(int? left, long? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, uint? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, byte? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, sbyte? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, short? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, ushort? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, int? right) . Performs bitwise Xor operation on two given values. ulong? Xor(uint? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(uint? left, ulong? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, long? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, byte? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, sbyte? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, short? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, ushort? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, int? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, uint? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, ulong? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, byte? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, ushort? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, uint? right) . Performs bitwise Xor operation on two given values. byte[] GetBytes(string? content) . Gets the bytes from the given string. byte[] GetBytes(string? content, int length, int offset) . Gets the bytes from the given string within given offset and length. byte?[]? GetBytes(char? character) . Gets the bytes from the given character. byte?[]? GetBytes(bool? bit) . Gets the bytes from the given boolean. byte?[]? GetBytes(long? value) . Gets the bytes from the given long. byte?[]? GetBytes(int? value) . Gets the bytes from the given int. byte?[]? GetBytes(short? value) . Gets the bytes from the given short. byte?[]? GetBytes(ulong? value) . Gets the bytes from the given ulong. byte?[]? GetBytes(ushort? value) . Gets the bytes from the given ushort. byte?[]? GetBytes(uint? value) . Gets the bytes from the given uint. byte?[]? GetBytes(Decimal? value) . Gets the bytes from the given decimal. byte?[]? GetBytes(double? value) . Gets the bytes from the given double. byte?[]? GetBytes(float? value) . Gets the bytes from the given float. string? ToBin(byte?[]? bytes, string delimiter) . Converts given bytes to binary with defined delimiter . string ToBin&lt;T&gt;(T value) . Converts given value to binary . string ToOcta&lt;T&gt;(T value) . Converts given value to octal . string ToDec&lt;T&gt;(T value) . Converts given value to decimal . string ToBase64(byte[] value) . Converts given value to string . string ToBase64(byte[] value, int offset, int length) . Converts given array of bytes to string . byte[] FromBase64(string value) . Converts given string to bytes array . bool FromBytesToBool(byte[] value) . Converts bytes to boolean value. short FromBytesToInt16(byte[] value) . Converts bytes to a 16-bit signed integer. ushort FromBytesToUInt16(byte[] value) . Converts bytes to a 16-bit unsigned integer. int FromBytesToInt32(byte[] value) . Converts bytes to a 32-bit signed integer. uint FromBytesToUInt32(byte[] value) . Converts bytes to a 32-bit unsigned integer. long FromBytesToInt64(byte[] value) . Converts bytes to a 64-bit signed integer. ulong FromBytesToUInt64(byte[] value) . Converts bytes to a 64-bit unsigned integer. float FromBytesToFloat(byte[] value) . Converts bytes to a float value. double FromBytesToDouble(byte[] value) . Converts bytes to a float value. string FromBytesToString(byte[] value) . Converts bytes to a string. byte[] ToBytes(bool value) . Converts boolean value to bytes. byte[] ToBytes(short value) . Converts short value to bytes. byte[] ToBytes(ushort value) . Converts ushort value to bytes. byte[] ToBytes(int value) . Converts int value to bytes. byte[] ToBytes(uint value) . Converts uint value to bytes. byte[] ToBytes(long value) . Converts long value to bytes. byte[] ToBytes(ulong value) . Converts long value to bytes. string? ToHex(byte?[]? bytes, string delimiter) . Converts given bytes to hex with defined delimiter . string? ToHex&lt;T&gt;(T value) . Converts given value to binary . int Count(string name) . Gets the count value of a given group. int Count(string name, int parent) . Gets the count value of a given group. int ExtractFromDate(string? date, string partOfDate) . Extracts part of the date from the date . int ExtractFromDate(string date, string culture, string partOfDate) . Extracts part of the date from the date based on given culture . DateTimeOffset? GetDate() . Gets the current datetime . DateTimeOffset? UtcGetDate() . Gets the current datetime in UTC . int? Month(DateTimeOffset? value) . Gets the month from DateTimeOffset . int? Year(DateTimeOffset? value) . Gets the year from DateTimeOffset . int? Day(DateTimeOffset? value) . Gets the day from DateTimeOffset . int? Hour(DateTimeOffset? value) . Gets the hour from DateTimeOffset . int? Minute(DateTimeOffset? value) . Gets the minute from DateTimeOffset . int? Second(DateTimeOffset? value) . Gets the second from DateTimeOffset . int? Milliseconds(DateTimeOffset? value) . Gets the millisecond from DateTimeOffset . int? DayOfWeek(DateTimeOffset? value) . Gets the day of week from DateTimeOffset . TimeSpan? ExtractTimeSpan(DateTimeOffset? dateTimeOffset) . Extracts time from DateTimeOffset . DateTime? ToDateTimeOffset(string value) . Converts given value to DateTimeOffset . DateTimeOffset? ToDateTimeOffset(string value, string culture) . Converts given value to DateTimeOffset . IEnumerable&lt;T&gt;? Skip&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? skipCount) . Skips elements from the beginning of the sequence. IEnumerable&lt;T&gt;? Take&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? takeCount) . Takes elements from the beginning of the sequence. IEnumerable&lt;T&gt;? SkipAndTake&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? skipCount, int? takeCount) . Skip and takes elements from the beginning of the sequence. T[]? EnumerableToArray&lt;T&gt;(IEnumerable&lt;T&gt;? values) . Turn array arguments of T into a single array. T[]? MergeArrays&lt;T&gt;(T[][]? values) . Turn array arguments of T into a single array. IEnumerable&lt;T&gt;? LongestCommonSequence&lt;T&gt;(IEnumerable&lt;T&gt;? source, IEnumerable&lt;T&gt;? pattern) . Computes longest common sequence of two given sequences . T? GetElementAtOrDefault&lt;T&gt;(IEnumerable&lt;T&gt;? enumerable, int? index) . Gets the element at the specified index in a sequence . int? Length&lt;T&gt;(IEnumerable&lt;T&gt;? enumerable) . Gets the length of the sequence . int? Length&lt;T&gt;(T[]? array) . Gets the length of the array . T? Choose&lt;T&gt;(int? index, T[] values) . Gets the value of an array at the specified index . T If&lt;T&gt;(bool expressionResult, T a, T b) . Chose a or b value based on the expression result . bool? Match(string? regex, string? content) . Determine whether content matches the specified pattern . byte? Coalesce(byte?[] array) . Gets the first non-null value in a list . sbyte? Coalesce(sbyte?[] array) . Gets the first non-null value in a list . short? Coalesce(short?[] array) . Gets the first non-null value in a list . ushort? Coalesce(ushort?[] array) . Gets the first non-null value in a list . int? Coalesce(int?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(uint?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(long?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(ulong?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(Decimal?[] array) . Gets the first non-null value in a list . T? Coalesce&lt;T&gt;(T[] array) . Gets the first non-null value in a list . IEnumerable&lt;T&gt;? Distinct&lt;T&gt;(IEnumerable&lt;T&gt;? values) . Returns distinct elements from a collection. string? Md5(string? content) . Gets the md5 hash of the given string. string? Md5(byte?[]? content) . Gets the md5 hash of the given bytes array. string? Sha1(string? content) . Gets the sha256 hash of the given string. string? Sha1(byte?[]? content) . Gets the sha256 hash of the given bytes array. string? Sha256(string? content) . Gets the sha256 hash of the given string. string? Sha256(byte?[]? content) . Gets the sha256 hash of the given bytes array. string? Sha512(string? content) . Gets the sha256 hash of the given string. string? Sha512(byte?[]? content) . Gets the sha256 hash of the bytes array. string? ToJson&lt;T&gt;(T? obj) . Converts object to json. string[] ExtractFromJsonToArray(string? json, string? path) . Extracts values from json by path. string? ExtractFromJson(string? json, string? path) . Extracts values from json by path and joins them with comma. Decimal? Abs(Decimal? value) . Gets the absolute value . long? Abs(long? value) . Gets the absolute value . int? Abs(int? value) . Gets the absolute value . Decimal? Ceil(Decimal? value) . Gets the ceiling value . Decimal? Floor(Decimal? value) . Gets the floor value . Decimal? Sign(Decimal? value) . Determine whether value is greater, equal or less that zero . long? Sign(long? value) . Determine whether value is greater, equal or less that zero . Decimal? Round(Decimal? value, int precision) . Rounds the value within given precision . Decimal? PercentOf(Decimal? value, Decimal? max) . Gets the percentage of the value . int Rand() . Gets the random integer value . int? Rand(int? min, int? max) . Gets the random integer value . double? Pow(Decimal? x, Decimal? y) . Computes the pow between two values . double? Pow(double? x, double? y) . Computes the pow between two values . double? Sqrt(Decimal? x) . Computes the sqrt of a given value . double? Sqrt(double? x) . Computes the sqrt of a given value . double? Sqrt(long? x) . Computes the sqrt of a given value . double? PercentRank&lt;T&gt;(IEnumerable&lt;T&gt;? window, T? value) . Computes the percent rank of a given window . double? Log(Decimal? base, Decimal? value) . Calculates the logarithm of a value with a specified base. Decimal? Sin(Decimal? value) . Calculates sine of a value. double? Sin(double? value) . Calculates sine of a value. float? Sin(float? value) . Calculates sine of a value. Decimal? Cos(Decimal? value) . Calculates cosine of a value. double? Cos(double? value) . Calculates cosine of a value. float? Cos(float? value) . Calculates cosine of a value. Decimal Max(string name) . Gets the max value of a given group. Decimal Max(string name, int parent) . Gets the max value of a given group. Decimal Min(string name) . Gets the min value of a given group. Decimal Min(string name, int parent) . Gets the min value of a given group. Decimal StDev(string name, int parent) . Gets the StDev value of a given group. string NewId() . Gets the new identifier . string? Trim(string? value) . Removes leading and trailing whitespace from a string. string? TrimStart(string? value) . Removes leading whitespace from a string. string? TrimEnd(string? value) . Removes trailing whitespace from a string. string? Substring(string? value, int? index, int? length) . Gets the substring from the string. string? Substring(string value, int? length) . Gets the substring from the string . string? Concat(string[]? strings) . Concatenates the specified values . string? Concat(char?[]? characters) . Concatenates the specified characters . string? Concat(string? firstString, char?[]? chars) . Concatenates specified string fir characters . string? Concat(char? firstChar, string[]? strings) . Concatenate specific character with strings . string? Concat(object[]? objects) . Concatenates the specified strings . string? Concat&lt;T&gt;(T[]? objects) . Concatenates the specified strings . bool? Contains(string? content, string? what) . Determine whether the string contains the specified value . int? IndexOf(string? value, string? text) . Position of the first occurrence of the specified value . string? Soundex(string? value) . Computes soundex for the specified value . bool HasFuzzyMatchedWord(string text, string word, string separator) . Matches the specified text by splitting it with separator and applying fuzzy comparison . bool HasWordThatHasSmallerLevenshteinDistanceThan(string text, string word, int distance, string separator) . Matches the specified text by splitting it with separator and applying fuzzy comparison with a given distance . bool HasWordThatSoundLike(string text, string word, string separator) . Matches whether the specified word is present after being fuzzified within the specified text . bool HasTextThatSoundLikeSentence(string text, string sentence, string separator) . Matches whether the specified text is present in sentence after being fuzified . string? ToUpper(string value) . Makes the string uppercase . string? ToUpper(string value, string culture) . Makes the string uppercase within specified culture . string? ToUpperInvariant(string value) . Makes the string uppercase . string? ToLower(string value) . Makes the string lowercase . string? ToLower(string value, string culture) . Makes the string lowercase within specified culture . string? ToLowerInvariant(string value) . Makes the string lowercase . string? PadLeft(string? value, string? character, int? totalWidth) . Returns a new string that right-aligns the characters in this instance by padding them on the left with a specified Unicode character, for a specified total lengt . string? PadRight(string? value, string? character, int? totalWidth) . Returns a new string that left-aligns the characters in this instance by padding them on the right with a specified Unicode character, for a specified total length . string? Head(string? value, int? length) . Gets the first N characters of the string . string? Tail(string? value, int? length) . Gets the last N characters of the string . int? LevenshteinDistance(string? firstValue, string? secondValue) . Computes the Levenshtein distance between two strings . char? GetCharacterOf(string value, int index) . Gets the character at specified index . string? Reverse(string? value) . Reverses the string . string[] Split(string value, string[] separators) . Splits the string into an array of substrings based on the specified separators . char[] ToCharArray(string value) . Splits the string into an array of characters . string? LongestCommonSubstring(string source, string pattern) . Computes the longest common subsequence between two source and pattern . string Replicate(string value, int integer) . Clones the value n times . string? Translate(string? value, string? characters, string? translations) . Returns the string from the first argument after the characters specified in the second argument are translated into the characters specified in the third argument. string? Replace(string? text, string lookFor, string? changeTo) . Replaces the first occurrence of a specified string in this instance with another specified string . string? ToTitleCase(string? value) . Capitalizes the first letter of the string . string? GetNthWord(string? text, int? wordIndex, string? separator) . Gets the nth word of the string . string? GetFirstWord(string text, string separator) . Gets the first word of the string . string? GetSecondWord(string text, string separator) . Gets the second word of the string . string? GetThirdWord(string text, string separator) . Gets the third word of the string . string? GetLastWord(string? text, string? separator) . Gets last word of the string . bool? IsNullOrEmpty(string? value) . Determines whether the string is null or empty . bool? IsNullOrWhiteSpace(string? value) . Determines whether the string is null or whitespace . string? UrlEncode(string? value) . Encodes the value . string? UrlDecode(string? value) . Decodes the value . string? UriEncode(string? value) . Encodes the value . string? UriDecode(string? value) . Decodes the value . bool? StartsWith(string? value, string? prefix) . Determines whether the string starts with the specified prefix . bool? StartsWith(string? value, string? prefix, string comparison) . Determines whether the string starts with the specified prefix . bool? EndsWith(string? value, string? suffix) . Determines whether the string ends with the specified suffix . bool? EndsWith(string? value, string? suffix, string comparison) . Determines whether the string ends with the specified suffix . string? RegexReplace(string? value, string? pattern, string? replacement) . Replace the specified value part that matches the pattern with the replacement . string[]? SplitByLinuxNewLines(string? input) . Split string by Linux-style newlines (\\n) . string[]? SplitByWindowsNewLines(string? input) . Split string by Windows-style newlines (\\r\\n) . string[]? SplitByNewLines(string? input) . Smart split that handles both Windows (\\r\\n) and Linux (\\n) newlines . Decimal Sum(string name) . Gets the sum value of a given group. Decimal Sum(string name, int parent) . Gets the sum value of a given group. Decimal SumIncome(string name) . Gets the sum value of a given group. Decimal SumIncome(string name, int parent) . Gets the sum value of a given group. Decimal SumOutcome(string name) . Gets the outcome value of a given group. Decimal SumOutcome(string name, int parent) . Gets the outcome value of a given group. TimeSpan? SumTimeSpan(string name) . Gets the sum value of a given group. TimeSpan? SumTimeSpan(string name, int parent) . Gets the sum value of a given group. TimeSpan? MinTimeSpan(string name) . Gets the min value of a given group. TimeSpan? MinTimeSpan(string name, int parent) . Gets the min value of a given group. TimeSpan? MaxTimeSpan(string name) . Gets the max value of a given group. TimeSpan? MaxTimeSpan(string name, int parent) . Gets the min value of a given group. char? ToChar(string? value) . Converts given value to character . char? ToChar(int? value) . Converts given value to character . char? ToChar(short? value) . Converts given value to character . char? ToChar(byte? value) . Converts given value to character . char? ToChar(object? value) . Converts given value to character . DateTime? ToDateTime(string value) . Converts given value to DateTime . DateTime? ToDateTime(string value, string culture) . Converts given value to DateTime . Decimal? ToDecimal(string? value) . Converts given value to decimal . Decimal? ToDecimal(string value, string culture) . Converts given value to decimal withing given culture . Decimal? ToDecimal(byte? value) . Converts given value to Decimal . Decimal? ToDecimal(sbyte? value) . Converts given value to Decimal . Decimal? ToDecimal(short? value) . Converts given value to Decimal . Decimal? ToDecimal(ushort? value) . Converts given value to Decimal . Decimal? ToDecimal(long? value) . Converts given value to Decimal . Decimal? ToDecimal(ulong? value) . Converts given value to Decimal . Decimal? ToDecimal(float? value) . Converts given value to Decimal . Decimal? ToDecimal(double? value) . Converts given value to Decimal . Decimal? ToDecimal(object? value) . Converts given value to Decimal . double? ToDouble(object? value) . Converts given value to double . double? ToDouble(string? value) . Converts given value to double . double? ToDouble(byte? value) . Converts given value to double . double? ToDouble(sbyte? value) . Converts given value to double . double? ToDouble(short? value) . Converts given value to double . double? ToDouble(ushort? value) . Converts given value to double . double? ToDouble(int? value) . Converts given value to double . double? ToDouble(uint? value) . Converts given value to double . double? ToDouble(long? value) . Converts given value to double . double? ToDouble(ulong? value) . Converts given value to double . double? ToDouble(float? value) . Converts given value to double . double? ToDouble(double? value) . Converts given value to double . double? ToDouble(Decimal? value) . Converts given value to double . float? ToFloat(string? value) . Converts given value to float . float? ToFloat(byte? value) . Converts given value to float . float? ToFloat(sbyte? value) . Converts given value to float . float? ToFloat(short? value) . Converts given value to float . float? ToFloat(ushort? value) . Converts given value to float . float? ToFloat(int? value) . Converts given value to float . float? ToFloat(uint? value) . Converts given value to float . float? ToFloat(long? value) . Converts given value to float . float? ToFloat(ulong? value) . Converts given value to float . float? ToFloat(float? value) . Converts given value to float . float? ToFloat(Decimal? value) . Converts given value to float . int? ToInt32(string value) . Converts given value to int . int? ToInt32(byte? value) . Converts given value to int . int? ToInt32(sbyte? value) . Converts given value to int . int? ToInt32(short? value) . Converts given value to int . int? ToInt32(ushort? value) . Converts given value to int . int? ToInt32(int? value) . Converts given value to int . int? ToInt32(uint? value) . Converts given value to int . int? ToInt32(long? value) . Converts given value to int . int? ToInt32(ulong? value) . Converts given value to int . int? ToInt32(float? value) . Converts given value to int . int? ToInt32(double? value) . Converts given value to int . int? ToInt32(Decimal? value) . Converts given value to int . int? ToInt32(object? value) . Converts given value to int . long? ToInt64(string value) . Converts given value to Int64 . long? ToInt64(byte? value) . Converts given value to long . long? ToInt64(sbyte? value) . Converts given value to long . long? ToInt64(short? value) . Converts given value to long . long? ToInt64(ushort? value) . Converts given value to long . long? ToInt64(int? value) . Converts given value to long . long? ToInt64(uint? value) . Converts given value to long . long? ToInt64(long? value) . Converts given value to long . long? ToInt64(ulong? value) . Converts given value to long . long? ToInt64(float? value) . Converts given value to long . long? ToInt64(double? value) . Converts given value to long . long? ToInt64(Decimal? value) . Converts given value to long . long? ToInt64(object? value) . Converts given value to long . string? ToString(char? value) . Converts given value to string . string? ToString(DateTimeOffset? value) . Converts given value to string . string? ToString(DateTimeOffset? value, string format) . Converts given value to string . string? ToString(byte? value) . Converts given value to string . string? ToString(byte? value, string format) . Converts given value to string . string? ToString(sbyte? value) . Converts given value to string . string? ToString(sbyte? value, string format) . Converts given value to string . string? ToString(int? value) . Converts given value to string . string? ToString(int? value, string format) . Converts given value to string . string? ToString(uint? value) . Converts given value to string . string? ToString(uint? value, string format) . Converts given value to string . string? ToString(long? value) . Converts given value to string . string? ToString(long? value, string format) . Converts given value to string . string? ToString(ulong? value) . Converts given value to string . string? ToString(ulong? value, string format) . Converts given value to string . string? ToString(float? value) . Converts given value to string . string? ToString(float? value, string format) . Converts given value to string . string? ToString(double? value) . Converts given value to string . string? ToString(double? value, string format) . Converts given value to string . string? ToString(Decimal? value) . Converts given value to string . string? ToString(Decimal? value, string format) . Converts given value to string . string? ToString(bool? value) . Converts given value to string . string? ToString(object? value) . Converts given value to string . string? ToString&lt;T&gt;(T? value) . Converts given value to string . string ToString(string[] value) . Converts given value to string . string ToString&lt;T&gt;(T[] value) . Converts given value to string . TimeSpan? ToTimeSpan(string value) . Converts given value to TimeSpan . TimeSpan? ToTimeSpan(string value, string culture) . Converts given value to TimeSpan . IEnumerable&lt;T&gt; Window&lt;T&gt;(string name) . Gets the window . ",
    "url": "/data-sources/Postgres/windows-x64.html#base-methods",
    
    "relUrl": "/data-sources/Postgres/windows-x64.html#base-methods"
  },"355": {
    "doc": "Windows X64",
    "title": "Windows X64",
    "content": " ",
    "url": "/data-sources/Postgres/windows-x64.html",
    
    "relUrl": "/data-sources/Postgres/windows-x64.html"
  },"356": {
    "doc": "Windows X64",
    "title": "Musoq.DataSources.Json",
    "content": "Provides schema to work with json files . ",
    "url": "/data-sources/Json/windows-x64.html#musoqdatasourcesjson",
    
    "relUrl": "/data-sources/Json/windows-x64.html#musoqdatasourcesjson"
  },"357": {
    "doc": "Windows X64",
    "title": "Tables",
    "content": "Table is a collection of rows and columns that the plugin exposes. Below are the tables that are exposed by this data source. json.file(string jsonFilePath, string jsonSchemaFilePath) . Gives the ability to process json files . This table has a dynamic structure, which means that its columns and other details cannot be determined until runtime. As a result, it is not possible to include a complete description of this table in the documentation. Instead, the actual columns and other details of this table will be determined at runtime. ",
    "url": "/data-sources/Json/windows-x64.html#tables",
    
    "relUrl": "/data-sources/Json/windows-x64.html#tables"
  },"358": {
    "doc": "Windows X64",
    "title": "Methods",
    "content": "Methods are functions that can be called on the data source specific column. Below are the methods that are exposed by this data source. int Length(List&lt;Dynamic.ExpandoObject&gt; array) . Gets the length of the array . int Length(List&lt;object&gt; array) . Gets the length of the array . string MakeFlat(List&lt;Dynamic.ExpandoObject&gt; array) . Flattening the array . string MakeFlat(List&lt;object&gt; array) . Flattening the array . ",
    "url": "/data-sources/Json/windows-x64.html#methods",
    
    "relUrl": "/data-sources/Json/windows-x64.html#methods"
  },"359": {
    "doc": "Windows X64",
    "title": "Base Methods",
    "content": "Base methods are methods that can be called on the data source specific column. Those methods are automatically inherited and enriches the data source specific methods. Below are those base methods that are exposed by this data source. int RowNumber() . Gets the row number of the current row. string? GetTypeName(object? obj) . Gets the typename of passed object. string AggregateValues(string name) . Aggregates values into a single value. string AggregateValues(string name, int parent) . Aggregates values into a single value. Decimal Avg(string name) . Gets the aggregated average value from the given group name . Decimal Avg(string name, int parent) . Gets the aggregated average value from the given group name . byte? ShiftLeft(byte? value, int shift) . Shifts the value to the left by the specified number of bits. short? ShiftLeft(short? value, int shift) . Shifts the value to the left by the specified number of bits. int? ShiftLeft(int? value, int shift) . Shifts the value to the left by the specified number of bits. long? ShiftLeft(long? value, int shift) . Shifts the value to the left by the specified number of bits. sbyte? ShiftLeft(sbyte? value, int shift) . Shifts the value to the left by the specified number of bits. ushort? ShiftLeft(ushort? value, int shift) . Shifts the value to the left by the specified number of bits. uint? ShiftLeft(uint? value, int shift) . Shifts the value to the left by the specified number of bits. ulong? ShiftLeft(ulong? value, int shift) . Shifts the value to the left by the specified number of bits. byte? ShiftRight(byte? value, int shift) . Shifts the value to the right by the specified number of bits. short? ShiftRight(short? value, int shift) . Shifts the value to the right by the specified number of bits. int? ShiftRight(int? value, int shift) . Shifts the value to the right by the specified number of bits. long? ShiftRight(long? value, int shift) . Shifts the value to the right by the specified number of bits. sbyte? ShiftRight(sbyte? value, int shift) . Shifts the value to the right by the specified number of bits. ushort? ShiftRight(ushort? value, int shift) . Shifts the value to the right by the specified number of bits. uint? ShiftRight(uint? value, int shift) . Shifts the value to the right by the specified number of bits. ulong? ShiftRight(ulong? value, int shift) . Shifts the value to the right by the specified number of bits. byte? Not(byte? value) . Performs bitwise NOT operation on a given value. short? Not(short? value) . Performs bitwise NOT operation on a given value. int? Not(int? value) . Performs bitwise NOT operation on a given value. long? Not(long? value) . Performs bitwise NOT operation on a given value. sbyte? Not(sbyte? value) . Performs bitwise NOT operation on a given value. ushort? Not(ushort? value) . Performs bitwise NOT operation on a given value. uint? Not(uint? value) . Performs bitwise NOT operation on a given value. ulong? Not(ulong? value) . Performs bitwise NOT operation on a given value. byte? And(byte? left, byte? right) . Performs bitwise AND operation on two given values. int? And(byte? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(byte? left, short? right) . Performs bitwise AND operation on two given values. int? And(byte? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(byte? left, int? right) . Performs bitwise AND operation on two given values. uint? And(byte? left, uint? right) . Performs bitwise AND operation on two given values. long? And(byte? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(byte? left, ulong? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, byte? right) . Performs bitwise AND operation on two given values. sbyte? And(sbyte? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, short? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, int? right) . Performs bitwise AND operation on two given values. uint? And(sbyte? left, uint? right) . Performs bitwise AND operation on two given values. long? And(sbyte? left, long? right) . Performs bitwise AND operation on two given values. int? And(short? left, byte? right) . Performs bitwise AND operation on two given values. int? And(short? left, sbyte? right) . Performs bitwise AND operation on two given values. short? And(short? left, short? right) . Performs bitwise AND operation on two given values. int? And(short? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(short? left, int? right) . Performs bitwise AND operation on two given values. uint? And(short? left, uint? right) . Performs bitwise AND operation on two given values. long? And(short? left, long? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, byte? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, short? right) . Performs bitwise AND operation on two given values. ushort? And(ushort? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, int? right) . Performs bitwise AND operation on two given values. uint? And(ushort? left, uint? right) . Performs bitwise AND operation on two given values. long? And(ushort? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(ushort? left, ulong? right) . Performs bitwise AND operation on two given values. int? And(int? left, byte? right) . Performs bitwise AND operation on two given values. int? And(int? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(int? left, short? right) . Performs bitwise AND operation on two given values. int? And(int? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(int? left, int? right) . Performs bitwise AND operation on two given values. uint? And(int? left, uint? right) . Performs bitwise AND operation on two given values. long? And(int? left, long? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, uint? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, byte? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, sbyte? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, short? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, ushort? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, int? right) . Performs bitwise AND operation on two given values. ulong? And(uint? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(uint? left, ulong? right) . Performs bitwise AND operation on two given values. long? And(long? left, long? right) . Performs bitwise AND operation on two given values. long? And(long? left, byte? right) . Performs bitwise AND operation on two given values. long? And(long? left, sbyte? right) . Performs bitwise AND operation on two given values. long? And(long? left, short? right) . Performs bitwise AND operation on two given values. long? And(long? left, ushort? right) . Performs bitwise AND operation on two given values. long? And(long? left, int? right) . Performs bitwise AND operation on two given values. long? And(long? left, uint? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, byte? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, ushort? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, uint? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, ulong? right) . Performs bitwise AND operation on two given values. byte? Or(byte? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, short? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(byte? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(byte? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(byte? left, ulong? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, byte? right) . Performs bitwise OR operation on two given values. sbyte? Or(sbyte? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, short? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(sbyte? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(sbyte? left, long? right) . Performs bitwise OR operation on two given values. int? Or(short? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(short? left, sbyte? right) . Performs bitwise OR operation on two given values. short? Or(short? left, short? right) . Performs bitwise OR operation on two given values. int? Or(short? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(short? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(short? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(short? left, long? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, short? right) . Performs bitwise OR operation on two given values. ushort? Or(ushort? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(ushort? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(ushort? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(ushort? left, ulong? right) . Performs bitwise OR operation on two given values. int? Or(int? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(int? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(int? left, short? right) . Performs bitwise OR operation on two given values. int? Or(int? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(int? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(int? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(int? left, long? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, uint? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, byte? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, sbyte? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, short? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, ushort? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, int? right) . Performs bitwise OR operation on two given values. ulong? Or(uint? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(uint? left, ulong? right) . Performs bitwise OR operation on two given values. long? Or(long? left, long? right) . Performs bitwise OR operation on two given values. long? Or(long? left, byte? right) . Performs bitwise OR operation on two given values. long? Or(long? left, sbyte? right) . Performs bitwise OR operation on two given values. long? Or(long? left, short? right) . Performs bitwise OR operation on two given values. long? Or(long? left, ushort? right) . Performs bitwise OR operation on two given values. long? Or(long? left, int? right) . Performs bitwise OR operation on two given values. long? Or(long? left, uint? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, byte? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, ushort? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, uint? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, ulong? right) . Performs bitwise OR operation on two given values. byte? Xor(byte? left, byte? right) . Performs bitwise OR operation on two given values. int? Xor(byte? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(byte? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(byte? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(byte? left, ulong? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, byte? right) . Performs bitwise Xor operation on two given values. sbyte? Xor(sbyte? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(sbyte? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(sbyte? left, long? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, sbyte? right) . Performs bitwise Xor operation on two given values. short? Xor(short? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, ushort? right) . Performs bitwise XOR operation on two given values. int? Xor(short? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(short? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(short? left, long? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, short? right) . Performs bitwise Xor operation on two given values. ushort? Xor(ushort? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(ushort? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(ushort? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ushort? left, ulong? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(int? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(int? left, long? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, uint? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, byte? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, sbyte? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, short? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, ushort? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, int? right) . Performs bitwise Xor operation on two given values. ulong? Xor(uint? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(uint? left, ulong? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, long? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, byte? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, sbyte? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, short? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, ushort? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, int? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, uint? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, ulong? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, byte? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, ushort? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, uint? right) . Performs bitwise Xor operation on two given values. byte[] GetBytes(string? content) . Gets the bytes from the given string. byte[] GetBytes(string? content, int length, int offset) . Gets the bytes from the given string within given offset and length. byte?[]? GetBytes(char? character) . Gets the bytes from the given character. byte?[]? GetBytes(bool? bit) . Gets the bytes from the given boolean. byte?[]? GetBytes(long? value) . Gets the bytes from the given long. byte?[]? GetBytes(int? value) . Gets the bytes from the given int. byte?[]? GetBytes(short? value) . Gets the bytes from the given short. byte?[]? GetBytes(ulong? value) . Gets the bytes from the given ulong. byte?[]? GetBytes(ushort? value) . Gets the bytes from the given ushort. byte?[]? GetBytes(uint? value) . Gets the bytes from the given uint. byte?[]? GetBytes(Decimal? value) . Gets the bytes from the given decimal. byte?[]? GetBytes(double? value) . Gets the bytes from the given double. byte?[]? GetBytes(float? value) . Gets the bytes from the given float. string? ToBin(byte?[]? bytes, string delimiter) . Converts given bytes to binary with defined delimiter . string ToBin&lt;T&gt;(T value) . Converts given value to binary . string ToOcta&lt;T&gt;(T value) . Converts given value to octal . string ToDec&lt;T&gt;(T value) . Converts given value to decimal . string ToBase64(byte[] value) . Converts given value to string . string ToBase64(byte[] value, int offset, int length) . Converts given array of bytes to string . byte[] FromBase64(string value) . Converts given string to bytes array . bool FromBytesToBool(byte[] value) . Converts bytes to boolean value. short FromBytesToInt16(byte[] value) . Converts bytes to a 16-bit signed integer. ushort FromBytesToUInt16(byte[] value) . Converts bytes to a 16-bit unsigned integer. int FromBytesToInt32(byte[] value) . Converts bytes to a 32-bit signed integer. uint FromBytesToUInt32(byte[] value) . Converts bytes to a 32-bit unsigned integer. long FromBytesToInt64(byte[] value) . Converts bytes to a 64-bit signed integer. ulong FromBytesToUInt64(byte[] value) . Converts bytes to a 64-bit unsigned integer. float FromBytesToFloat(byte[] value) . Converts bytes to a float value. double FromBytesToDouble(byte[] value) . Converts bytes to a float value. string FromBytesToString(byte[] value) . Converts bytes to a string. byte[] ToBytes(bool value) . Converts boolean value to bytes. byte[] ToBytes(short value) . Converts short value to bytes. byte[] ToBytes(ushort value) . Converts ushort value to bytes. byte[] ToBytes(int value) . Converts int value to bytes. byte[] ToBytes(uint value) . Converts uint value to bytes. byte[] ToBytes(long value) . Converts long value to bytes. byte[] ToBytes(ulong value) . Converts long value to bytes. string? ToHex(byte?[]? bytes, string delimiter) . Converts given bytes to hex with defined delimiter . string? ToHex&lt;T&gt;(T value) . Converts given value to binary . int Count(string name) . Gets the count value of a given group. int Count(string name, int parent) . Gets the count value of a given group. int ExtractFromDate(string? date, string partOfDate) . Extracts part of the date from the date . int ExtractFromDate(string date, string culture, string partOfDate) . Extracts part of the date from the date based on given culture . DateTimeOffset? GetDate() . Gets the current datetime . DateTimeOffset? UtcGetDate() . Gets the current datetime in UTC . int? Month(DateTimeOffset? value) . Gets the month from DateTimeOffset . int? Year(DateTimeOffset? value) . Gets the year from DateTimeOffset . int? Day(DateTimeOffset? value) . Gets the day from DateTimeOffset . int? Hour(DateTimeOffset? value) . Gets the hour from DateTimeOffset . int? Minute(DateTimeOffset? value) . Gets the minute from DateTimeOffset . int? Second(DateTimeOffset? value) . Gets the second from DateTimeOffset . int? Milliseconds(DateTimeOffset? value) . Gets the millisecond from DateTimeOffset . int? DayOfWeek(DateTimeOffset? value) . Gets the day of week from DateTimeOffset . TimeSpan? ExtractTimeSpan(DateTimeOffset? dateTimeOffset) . Extracts time from DateTimeOffset . DateTime? ToDateTimeOffset(string value) . Converts given value to DateTimeOffset . DateTimeOffset? ToDateTimeOffset(string value, string culture) . Converts given value to DateTimeOffset . IEnumerable&lt;T&gt;? Skip&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? skipCount) . Skips elements from the beginning of the sequence. IEnumerable&lt;T&gt;? Take&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? takeCount) . Takes elements from the beginning of the sequence. IEnumerable&lt;T&gt;? SkipAndTake&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? skipCount, int? takeCount) . Skip and takes elements from the beginning of the sequence. T[]? EnumerableToArray&lt;T&gt;(IEnumerable&lt;T&gt;? values) . Turn array arguments of T into a single array. T[]? MergeArrays&lt;T&gt;(T[][]? values) . Turn array arguments of T into a single array. IEnumerable&lt;T&gt;? LongestCommonSequence&lt;T&gt;(IEnumerable&lt;T&gt;? source, IEnumerable&lt;T&gt;? pattern) . Computes longest common sequence of two given sequences . T? GetElementAtOrDefault&lt;T&gt;(IEnumerable&lt;T&gt;? enumerable, int? index) . Gets the element at the specified index in a sequence . int? Length&lt;T&gt;(IEnumerable&lt;T&gt;? enumerable) . Gets the length of the sequence . int? Length&lt;T&gt;(T[]? array) . Gets the length of the array . T? Choose&lt;T&gt;(int? index, T[] values) . Gets the value of an array at the specified index . T If&lt;T&gt;(bool expressionResult, T a, T b) . Chose a or b value based on the expression result . bool? Match(string? regex, string? content) . Determine whether content matches the specified pattern . byte? Coalesce(byte?[] array) . Gets the first non-null value in a list . sbyte? Coalesce(sbyte?[] array) . Gets the first non-null value in a list . short? Coalesce(short?[] array) . Gets the first non-null value in a list . ushort? Coalesce(ushort?[] array) . Gets the first non-null value in a list . int? Coalesce(int?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(uint?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(long?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(ulong?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(Decimal?[] array) . Gets the first non-null value in a list . T? Coalesce&lt;T&gt;(T[] array) . Gets the first non-null value in a list . IEnumerable&lt;T&gt;? Distinct&lt;T&gt;(IEnumerable&lt;T&gt;? values) . Returns distinct elements from a collection. string? Md5(string? content) . Gets the md5 hash of the given string. string? Md5(byte?[]? content) . Gets the md5 hash of the given bytes array. string? Sha1(string? content) . Gets the sha256 hash of the given string. string? Sha1(byte?[]? content) . Gets the sha256 hash of the given bytes array. string? Sha256(string? content) . Gets the sha256 hash of the given string. string? Sha256(byte?[]? content) . Gets the sha256 hash of the given bytes array. string? Sha512(string? content) . Gets the sha256 hash of the given string. string? Sha512(byte?[]? content) . Gets the sha256 hash of the bytes array. string? ToJson&lt;T&gt;(T? obj) . Converts object to json. string[] ExtractFromJsonToArray(string? json, string? path) . Extracts values from json by path. string? ExtractFromJson(string? json, string? path) . Extracts values from json by path and joins them with comma. Decimal? Abs(Decimal? value) . Gets the absolute value . long? Abs(long? value) . Gets the absolute value . int? Abs(int? value) . Gets the absolute value . Decimal? Ceil(Decimal? value) . Gets the ceiling value . Decimal? Floor(Decimal? value) . Gets the floor value . Decimal? Sign(Decimal? value) . Determine whether value is greater, equal or less that zero . long? Sign(long? value) . Determine whether value is greater, equal or less that zero . Decimal? Round(Decimal? value, int precision) . Rounds the value within given precision . Decimal? PercentOf(Decimal? value, Decimal? max) . Gets the percentage of the value . int Rand() . Gets the random integer value . int? Rand(int? min, int? max) . Gets the random integer value . double? Pow(Decimal? x, Decimal? y) . Computes the pow between two values . double? Pow(double? x, double? y) . Computes the pow between two values . double? Sqrt(Decimal? x) . Computes the sqrt of a given value . double? Sqrt(double? x) . Computes the sqrt of a given value . double? Sqrt(long? x) . Computes the sqrt of a given value . double? PercentRank&lt;T&gt;(IEnumerable&lt;T&gt;? window, T? value) . Computes the percent rank of a given window . double? Log(Decimal? base, Decimal? value) . Calculates the logarithm of a value with a specified base. Decimal? Sin(Decimal? value) . Calculates sine of a value. double? Sin(double? value) . Calculates sine of a value. float? Sin(float? value) . Calculates sine of a value. Decimal? Cos(Decimal? value) . Calculates cosine of a value. double? Cos(double? value) . Calculates cosine of a value. float? Cos(float? value) . Calculates cosine of a value. Decimal Max(string name) . Gets the max value of a given group. Decimal Max(string name, int parent) . Gets the max value of a given group. Decimal Min(string name) . Gets the min value of a given group. Decimal Min(string name, int parent) . Gets the min value of a given group. Decimal StDev(string name, int parent) . Gets the StDev value of a given group. string NewId() . Gets the new identifier . string? Trim(string? value) . Removes leading and trailing whitespace from a string. string? TrimStart(string? value) . Removes leading whitespace from a string. string? TrimEnd(string? value) . Removes trailing whitespace from a string. string? Substring(string? value, int? index, int? length) . Gets the substring from the string. string? Substring(string value, int? length) . Gets the substring from the string . string? Concat(string[]? strings) . Concatenates the specified values . string? Concat(char?[]? characters) . Concatenates the specified characters . string? Concat(string? firstString, char?[]? chars) . Concatenates specified string fir characters . string? Concat(char? firstChar, string[]? strings) . Concatenate specific character with strings . string? Concat(object[]? objects) . Concatenates the specified strings . string? Concat&lt;T&gt;(T[]? objects) . Concatenates the specified strings . bool? Contains(string? content, string? what) . Determine whether the string contains the specified value . int? IndexOf(string? value, string? text) . Position of the first occurrence of the specified value . string? Soundex(string? value) . Computes soundex for the specified value . bool HasFuzzyMatchedWord(string text, string word, string separator) . Matches the specified text by splitting it with separator and applying fuzzy comparison . bool HasWordThatHasSmallerLevenshteinDistanceThan(string text, string word, int distance, string separator) . Matches the specified text by splitting it with separator and applying fuzzy comparison with a given distance . bool HasWordThatSoundLike(string text, string word, string separator) . Matches whether the specified word is present after being fuzzified within the specified text . bool HasTextThatSoundLikeSentence(string text, string sentence, string separator) . Matches whether the specified text is present in sentence after being fuzified . string? ToUpper(string value) . Makes the string uppercase . string? ToUpper(string value, string culture) . Makes the string uppercase within specified culture . string? ToUpperInvariant(string value) . Makes the string uppercase . string? ToLower(string value) . Makes the string lowercase . string? ToLower(string value, string culture) . Makes the string lowercase within specified culture . string? ToLowerInvariant(string value) . Makes the string lowercase . string? PadLeft(string? value, string? character, int? totalWidth) . Returns a new string that right-aligns the characters in this instance by padding them on the left with a specified Unicode character, for a specified total lengt . string? PadRight(string? value, string? character, int? totalWidth) . Returns a new string that left-aligns the characters in this instance by padding them on the right with a specified Unicode character, for a specified total length . string? Head(string? value, int? length) . Gets the first N characters of the string . string? Tail(string? value, int? length) . Gets the last N characters of the string . int? LevenshteinDistance(string? firstValue, string? secondValue) . Computes the Levenshtein distance between two strings . char? GetCharacterOf(string value, int index) . Gets the character at specified index . string? Reverse(string? value) . Reverses the string . string[] Split(string value, string[] separators) . Splits the string into an array of substrings based on the specified separators . char[] ToCharArray(string value) . Splits the string into an array of characters . string? LongestCommonSubstring(string source, string pattern) . Computes the longest common subsequence between two source and pattern . string Replicate(string value, int integer) . Clones the value n times . string? Translate(string? value, string? characters, string? translations) . Returns the string from the first argument after the characters specified in the second argument are translated into the characters specified in the third argument. string? Replace(string? text, string lookFor, string? changeTo) . Replaces the first occurrence of a specified string in this instance with another specified string . string? ToTitleCase(string? value) . Capitalizes the first letter of the string . string? GetNthWord(string? text, int? wordIndex, string? separator) . Gets the nth word of the string . string? GetFirstWord(string text, string separator) . Gets the first word of the string . string? GetSecondWord(string text, string separator) . Gets the second word of the string . string? GetThirdWord(string text, string separator) . Gets the third word of the string . string? GetLastWord(string? text, string? separator) . Gets last word of the string . bool? IsNullOrEmpty(string? value) . Determines whether the string is null or empty . bool? IsNullOrWhiteSpace(string? value) . Determines whether the string is null or whitespace . string? UrlEncode(string? value) . Encodes the value . string? UrlDecode(string? value) . Decodes the value . string? UriEncode(string? value) . Encodes the value . string? UriDecode(string? value) . Decodes the value . bool? StartsWith(string? value, string? prefix) . Determines whether the string starts with the specified prefix . bool? StartsWith(string? value, string? prefix, string comparison) . Determines whether the string starts with the specified prefix . bool? EndsWith(string? value, string? suffix) . Determines whether the string ends with the specified suffix . bool? EndsWith(string? value, string? suffix, string comparison) . Determines whether the string ends with the specified suffix . string? RegexReplace(string? value, string? pattern, string? replacement) . Replace the specified value part that matches the pattern with the replacement . string[]? SplitByLinuxNewLines(string? input) . Split string by Linux-style newlines (\\n) . string[]? SplitByWindowsNewLines(string? input) . Split string by Windows-style newlines (\\r\\n) . string[]? SplitByNewLines(string? input) . Smart split that handles both Windows (\\r\\n) and Linux (\\n) newlines . Decimal Sum(string name) . Gets the sum value of a given group. Decimal Sum(string name, int parent) . Gets the sum value of a given group. Decimal SumIncome(string name) . Gets the sum value of a given group. Decimal SumIncome(string name, int parent) . Gets the sum value of a given group. Decimal SumOutcome(string name) . Gets the outcome value of a given group. Decimal SumOutcome(string name, int parent) . Gets the outcome value of a given group. TimeSpan? SumTimeSpan(string name) . Gets the sum value of a given group. TimeSpan? SumTimeSpan(string name, int parent) . Gets the sum value of a given group. TimeSpan? MinTimeSpan(string name) . Gets the min value of a given group. TimeSpan? MinTimeSpan(string name, int parent) . Gets the min value of a given group. TimeSpan? MaxTimeSpan(string name) . Gets the max value of a given group. TimeSpan? MaxTimeSpan(string name, int parent) . Gets the min value of a given group. char? ToChar(string? value) . Converts given value to character . char? ToChar(int? value) . Converts given value to character . char? ToChar(short? value) . Converts given value to character . char? ToChar(byte? value) . Converts given value to character . char? ToChar(object? value) . Converts given value to character . DateTime? ToDateTime(string value) . Converts given value to DateTime . DateTime? ToDateTime(string value, string culture) . Converts given value to DateTime . Decimal? ToDecimal(string? value) . Converts given value to decimal . Decimal? ToDecimal(string value, string culture) . Converts given value to decimal withing given culture . Decimal? ToDecimal(byte? value) . Converts given value to Decimal . Decimal? ToDecimal(sbyte? value) . Converts given value to Decimal . Decimal? ToDecimal(short? value) . Converts given value to Decimal . Decimal? ToDecimal(ushort? value) . Converts given value to Decimal . Decimal? ToDecimal(long? value) . Converts given value to Decimal . Decimal? ToDecimal(ulong? value) . Converts given value to Decimal . Decimal? ToDecimal(float? value) . Converts given value to Decimal . Decimal? ToDecimal(double? value) . Converts given value to Decimal . Decimal? ToDecimal(object? value) . Converts given value to Decimal . double? ToDouble(object? value) . Converts given value to double . double? ToDouble(string? value) . Converts given value to double . double? ToDouble(byte? value) . Converts given value to double . double? ToDouble(sbyte? value) . Converts given value to double . double? ToDouble(short? value) . Converts given value to double . double? ToDouble(ushort? value) . Converts given value to double . double? ToDouble(int? value) . Converts given value to double . double? ToDouble(uint? value) . Converts given value to double . double? ToDouble(long? value) . Converts given value to double . double? ToDouble(ulong? value) . Converts given value to double . double? ToDouble(float? value) . Converts given value to double . double? ToDouble(double? value) . Converts given value to double . double? ToDouble(Decimal? value) . Converts given value to double . float? ToFloat(string? value) . Converts given value to float . float? ToFloat(byte? value) . Converts given value to float . float? ToFloat(sbyte? value) . Converts given value to float . float? ToFloat(short? value) . Converts given value to float . float? ToFloat(ushort? value) . Converts given value to float . float? ToFloat(int? value) . Converts given value to float . float? ToFloat(uint? value) . Converts given value to float . float? ToFloat(long? value) . Converts given value to float . float? ToFloat(ulong? value) . Converts given value to float . float? ToFloat(float? value) . Converts given value to float . float? ToFloat(Decimal? value) . Converts given value to float . int? ToInt32(string value) . Converts given value to int . int? ToInt32(byte? value) . Converts given value to int . int? ToInt32(sbyte? value) . Converts given value to int . int? ToInt32(short? value) . Converts given value to int . int? ToInt32(ushort? value) . Converts given value to int . int? ToInt32(int? value) . Converts given value to int . int? ToInt32(uint? value) . Converts given value to int . int? ToInt32(long? value) . Converts given value to int . int? ToInt32(ulong? value) . Converts given value to int . int? ToInt32(float? value) . Converts given value to int . int? ToInt32(double? value) . Converts given value to int . int? ToInt32(Decimal? value) . Converts given value to int . int? ToInt32(object? value) . Converts given value to int . long? ToInt64(string value) . Converts given value to Int64 . long? ToInt64(byte? value) . Converts given value to long . long? ToInt64(sbyte? value) . Converts given value to long . long? ToInt64(short? value) . Converts given value to long . long? ToInt64(ushort? value) . Converts given value to long . long? ToInt64(int? value) . Converts given value to long . long? ToInt64(uint? value) . Converts given value to long . long? ToInt64(long? value) . Converts given value to long . long? ToInt64(ulong? value) . Converts given value to long . long? ToInt64(float? value) . Converts given value to long . long? ToInt64(double? value) . Converts given value to long . long? ToInt64(Decimal? value) . Converts given value to long . long? ToInt64(object? value) . Converts given value to long . string? ToString(char? value) . Converts given value to string . string? ToString(DateTimeOffset? value) . Converts given value to string . string? ToString(DateTimeOffset? value, string format) . Converts given value to string . string? ToString(byte? value) . Converts given value to string . string? ToString(byte? value, string format) . Converts given value to string . string? ToString(sbyte? value) . Converts given value to string . string? ToString(sbyte? value, string format) . Converts given value to string . string? ToString(int? value) . Converts given value to string . string? ToString(int? value, string format) . Converts given value to string . string? ToString(uint? value) . Converts given value to string . string? ToString(uint? value, string format) . Converts given value to string . string? ToString(long? value) . Converts given value to string . string? ToString(long? value, string format) . Converts given value to string . string? ToString(ulong? value) . Converts given value to string . string? ToString(ulong? value, string format) . Converts given value to string . string? ToString(float? value) . Converts given value to string . string? ToString(float? value, string format) . Converts given value to string . string? ToString(double? value) . Converts given value to string . string? ToString(double? value, string format) . Converts given value to string . string? ToString(Decimal? value) . Converts given value to string . string? ToString(Decimal? value, string format) . Converts given value to string . string? ToString(bool? value) . Converts given value to string . string? ToString(object? value) . Converts given value to string . string? ToString&lt;T&gt;(T? value) . Converts given value to string . string ToString(string[] value) . Converts given value to string . string ToString&lt;T&gt;(T[] value) . Converts given value to string . TimeSpan? ToTimeSpan(string value) . Converts given value to TimeSpan . TimeSpan? ToTimeSpan(string value, string culture) . Converts given value to TimeSpan . IEnumerable&lt;T&gt; Window&lt;T&gt;(string name) . Gets the window . ",
    "url": "/data-sources/Json/windows-x64.html#base-methods",
    
    "relUrl": "/data-sources/Json/windows-x64.html#base-methods"
  },"360": {
    "doc": "Windows X64",
    "title": "Windows X64",
    "content": " ",
    "url": "/data-sources/Json/windows-x64.html",
    
    "relUrl": "/data-sources/Json/windows-x64.html"
  },"361": {
    "doc": "Windows X64",
    "title": "Musoq.DataSources.FlatFile",
    "content": "Provides schema to work with flat files . ",
    "url": "/data-sources/FlatFile/windows-x64.html#musoqdatasourcesflatfile",
    
    "relUrl": "/data-sources/FlatFile/windows-x64.html#musoqdatasourcesflatfile"
  },"362": {
    "doc": "Windows X64",
    "title": "Tables",
    "content": "Table is a collection of rows and columns that the plugin exposes. Below are the tables that are exposed by this data source. flat.file(string path) . Gives ability to process flat files . | Name | Type | Description | . | LineNumber | int | Line number of a given file | . | Line | string | Line of a given file | . ",
    "url": "/data-sources/FlatFile/windows-x64.html#tables",
    
    "relUrl": "/data-sources/FlatFile/windows-x64.html#tables"
  },"363": {
    "doc": "Windows X64",
    "title": "Base Methods",
    "content": "Base methods are methods that can be called on the data source specific column. Those methods are automatically inherited and enriches the data source specific methods. Below are those base methods that are exposed by this data source. int RowNumber() . Gets the row number of the current row. string? GetTypeName(object? obj) . Gets the typename of passed object. string AggregateValues(string name) . Aggregates values into a single value. string AggregateValues(string name, int parent) . Aggregates values into a single value. Decimal Avg(string name) . Gets the aggregated average value from the given group name . Decimal Avg(string name, int parent) . Gets the aggregated average value from the given group name . byte? ShiftLeft(byte? value, int shift) . Shifts the value to the left by the specified number of bits. short? ShiftLeft(short? value, int shift) . Shifts the value to the left by the specified number of bits. int? ShiftLeft(int? value, int shift) . Shifts the value to the left by the specified number of bits. long? ShiftLeft(long? value, int shift) . Shifts the value to the left by the specified number of bits. sbyte? ShiftLeft(sbyte? value, int shift) . Shifts the value to the left by the specified number of bits. ushort? ShiftLeft(ushort? value, int shift) . Shifts the value to the left by the specified number of bits. uint? ShiftLeft(uint? value, int shift) . Shifts the value to the left by the specified number of bits. ulong? ShiftLeft(ulong? value, int shift) . Shifts the value to the left by the specified number of bits. byte? ShiftRight(byte? value, int shift) . Shifts the value to the right by the specified number of bits. short? ShiftRight(short? value, int shift) . Shifts the value to the right by the specified number of bits. int? ShiftRight(int? value, int shift) . Shifts the value to the right by the specified number of bits. long? ShiftRight(long? value, int shift) . Shifts the value to the right by the specified number of bits. sbyte? ShiftRight(sbyte? value, int shift) . Shifts the value to the right by the specified number of bits. ushort? ShiftRight(ushort? value, int shift) . Shifts the value to the right by the specified number of bits. uint? ShiftRight(uint? value, int shift) . Shifts the value to the right by the specified number of bits. ulong? ShiftRight(ulong? value, int shift) . Shifts the value to the right by the specified number of bits. byte? Not(byte? value) . Performs bitwise NOT operation on a given value. short? Not(short? value) . Performs bitwise NOT operation on a given value. int? Not(int? value) . Performs bitwise NOT operation on a given value. long? Not(long? value) . Performs bitwise NOT operation on a given value. sbyte? Not(sbyte? value) . Performs bitwise NOT operation on a given value. ushort? Not(ushort? value) . Performs bitwise NOT operation on a given value. uint? Not(uint? value) . Performs bitwise NOT operation on a given value. ulong? Not(ulong? value) . Performs bitwise NOT operation on a given value. byte? And(byte? left, byte? right) . Performs bitwise AND operation on two given values. int? And(byte? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(byte? left, short? right) . Performs bitwise AND operation on two given values. int? And(byte? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(byte? left, int? right) . Performs bitwise AND operation on two given values. uint? And(byte? left, uint? right) . Performs bitwise AND operation on two given values. long? And(byte? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(byte? left, ulong? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, byte? right) . Performs bitwise AND operation on two given values. sbyte? And(sbyte? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, short? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, int? right) . Performs bitwise AND operation on two given values. uint? And(sbyte? left, uint? right) . Performs bitwise AND operation on two given values. long? And(sbyte? left, long? right) . Performs bitwise AND operation on two given values. int? And(short? left, byte? right) . Performs bitwise AND operation on two given values. int? And(short? left, sbyte? right) . Performs bitwise AND operation on two given values. short? And(short? left, short? right) . Performs bitwise AND operation on two given values. int? And(short? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(short? left, int? right) . Performs bitwise AND operation on two given values. uint? And(short? left, uint? right) . Performs bitwise AND operation on two given values. long? And(short? left, long? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, byte? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, short? right) . Performs bitwise AND operation on two given values. ushort? And(ushort? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, int? right) . Performs bitwise AND operation on two given values. uint? And(ushort? left, uint? right) . Performs bitwise AND operation on two given values. long? And(ushort? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(ushort? left, ulong? right) . Performs bitwise AND operation on two given values. int? And(int? left, byte? right) . Performs bitwise AND operation on two given values. int? And(int? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(int? left, short? right) . Performs bitwise AND operation on two given values. int? And(int? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(int? left, int? right) . Performs bitwise AND operation on two given values. uint? And(int? left, uint? right) . Performs bitwise AND operation on two given values. long? And(int? left, long? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, uint? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, byte? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, sbyte? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, short? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, ushort? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, int? right) . Performs bitwise AND operation on two given values. ulong? And(uint? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(uint? left, ulong? right) . Performs bitwise AND operation on two given values. long? And(long? left, long? right) . Performs bitwise AND operation on two given values. long? And(long? left, byte? right) . Performs bitwise AND operation on two given values. long? And(long? left, sbyte? right) . Performs bitwise AND operation on two given values. long? And(long? left, short? right) . Performs bitwise AND operation on two given values. long? And(long? left, ushort? right) . Performs bitwise AND operation on two given values. long? And(long? left, int? right) . Performs bitwise AND operation on two given values. long? And(long? left, uint? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, byte? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, ushort? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, uint? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, ulong? right) . Performs bitwise AND operation on two given values. byte? Or(byte? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, short? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(byte? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(byte? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(byte? left, ulong? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, byte? right) . Performs bitwise OR operation on two given values. sbyte? Or(sbyte? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, short? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(sbyte? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(sbyte? left, long? right) . Performs bitwise OR operation on two given values. int? Or(short? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(short? left, sbyte? right) . Performs bitwise OR operation on two given values. short? Or(short? left, short? right) . Performs bitwise OR operation on two given values. int? Or(short? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(short? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(short? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(short? left, long? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, short? right) . Performs bitwise OR operation on two given values. ushort? Or(ushort? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(ushort? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(ushort? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(ushort? left, ulong? right) . Performs bitwise OR operation on two given values. int? Or(int? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(int? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(int? left, short? right) . Performs bitwise OR operation on two given values. int? Or(int? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(int? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(int? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(int? left, long? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, uint? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, byte? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, sbyte? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, short? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, ushort? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, int? right) . Performs bitwise OR operation on two given values. ulong? Or(uint? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(uint? left, ulong? right) . Performs bitwise OR operation on two given values. long? Or(long? left, long? right) . Performs bitwise OR operation on two given values. long? Or(long? left, byte? right) . Performs bitwise OR operation on two given values. long? Or(long? left, sbyte? right) . Performs bitwise OR operation on two given values. long? Or(long? left, short? right) . Performs bitwise OR operation on two given values. long? Or(long? left, ushort? right) . Performs bitwise OR operation on two given values. long? Or(long? left, int? right) . Performs bitwise OR operation on two given values. long? Or(long? left, uint? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, byte? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, ushort? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, uint? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, ulong? right) . Performs bitwise OR operation on two given values. byte? Xor(byte? left, byte? right) . Performs bitwise OR operation on two given values. int? Xor(byte? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(byte? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(byte? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(byte? left, ulong? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, byte? right) . Performs bitwise Xor operation on two given values. sbyte? Xor(sbyte? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(sbyte? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(sbyte? left, long? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, sbyte? right) . Performs bitwise Xor operation on two given values. short? Xor(short? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, ushort? right) . Performs bitwise XOR operation on two given values. int? Xor(short? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(short? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(short? left, long? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, short? right) . Performs bitwise Xor operation on two given values. ushort? Xor(ushort? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(ushort? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(ushort? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ushort? left, ulong? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(int? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(int? left, long? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, uint? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, byte? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, sbyte? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, short? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, ushort? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, int? right) . Performs bitwise Xor operation on two given values. ulong? Xor(uint? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(uint? left, ulong? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, long? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, byte? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, sbyte? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, short? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, ushort? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, int? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, uint? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, ulong? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, byte? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, ushort? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, uint? right) . Performs bitwise Xor operation on two given values. byte[] GetBytes(string? content) . Gets the bytes from the given string. byte[] GetBytes(string? content, int length, int offset) . Gets the bytes from the given string within given offset and length. byte?[]? GetBytes(char? character) . Gets the bytes from the given character. byte?[]? GetBytes(bool? bit) . Gets the bytes from the given boolean. byte?[]? GetBytes(long? value) . Gets the bytes from the given long. byte?[]? GetBytes(int? value) . Gets the bytes from the given int. byte?[]? GetBytes(short? value) . Gets the bytes from the given short. byte?[]? GetBytes(ulong? value) . Gets the bytes from the given ulong. byte?[]? GetBytes(ushort? value) . Gets the bytes from the given ushort. byte?[]? GetBytes(uint? value) . Gets the bytes from the given uint. byte?[]? GetBytes(Decimal? value) . Gets the bytes from the given decimal. byte?[]? GetBytes(double? value) . Gets the bytes from the given double. byte?[]? GetBytes(float? value) . Gets the bytes from the given float. string? ToBin(byte?[]? bytes, string delimiter) . Converts given bytes to binary with defined delimiter . string ToBin&lt;T&gt;(T value) . Converts given value to binary . string ToOcta&lt;T&gt;(T value) . Converts given value to octal . string ToDec&lt;T&gt;(T value) . Converts given value to decimal . string ToBase64(byte[] value) . Converts given value to string . string ToBase64(byte[] value, int offset, int length) . Converts given array of bytes to string . byte[] FromBase64(string value) . Converts given string to bytes array . bool FromBytesToBool(byte[] value) . Converts bytes to boolean value. short FromBytesToInt16(byte[] value) . Converts bytes to a 16-bit signed integer. ushort FromBytesToUInt16(byte[] value) . Converts bytes to a 16-bit unsigned integer. int FromBytesToInt32(byte[] value) . Converts bytes to a 32-bit signed integer. uint FromBytesToUInt32(byte[] value) . Converts bytes to a 32-bit unsigned integer. long FromBytesToInt64(byte[] value) . Converts bytes to a 64-bit signed integer. ulong FromBytesToUInt64(byte[] value) . Converts bytes to a 64-bit unsigned integer. float FromBytesToFloat(byte[] value) . Converts bytes to a float value. double FromBytesToDouble(byte[] value) . Converts bytes to a float value. string FromBytesToString(byte[] value) . Converts bytes to a string. byte[] ToBytes(bool value) . Converts boolean value to bytes. byte[] ToBytes(short value) . Converts short value to bytes. byte[] ToBytes(ushort value) . Converts ushort value to bytes. byte[] ToBytes(int value) . Converts int value to bytes. byte[] ToBytes(uint value) . Converts uint value to bytes. byte[] ToBytes(long value) . Converts long value to bytes. byte[] ToBytes(ulong value) . Converts long value to bytes. string? ToHex(byte?[]? bytes, string delimiter) . Converts given bytes to hex with defined delimiter . string? ToHex&lt;T&gt;(T value) . Converts given value to binary . int Count(string name) . Gets the count value of a given group. int Count(string name, int parent) . Gets the count value of a given group. int ExtractFromDate(string? date, string partOfDate) . Extracts part of the date from the date . int ExtractFromDate(string date, string culture, string partOfDate) . Extracts part of the date from the date based on given culture . DateTimeOffset? GetDate() . Gets the current datetime . DateTimeOffset? UtcGetDate() . Gets the current datetime in UTC . int? Month(DateTimeOffset? value) . Gets the month from DateTimeOffset . int? Year(DateTimeOffset? value) . Gets the year from DateTimeOffset . int? Day(DateTimeOffset? value) . Gets the day from DateTimeOffset . int? Hour(DateTimeOffset? value) . Gets the hour from DateTimeOffset . int? Minute(DateTimeOffset? value) . Gets the minute from DateTimeOffset . int? Second(DateTimeOffset? value) . Gets the second from DateTimeOffset . int? Milliseconds(DateTimeOffset? value) . Gets the millisecond from DateTimeOffset . int? DayOfWeek(DateTimeOffset? value) . Gets the day of week from DateTimeOffset . TimeSpan? ExtractTimeSpan(DateTimeOffset? dateTimeOffset) . Extracts time from DateTimeOffset . DateTime? ToDateTimeOffset(string value) . Converts given value to DateTimeOffset . DateTimeOffset? ToDateTimeOffset(string value, string culture) . Converts given value to DateTimeOffset . IEnumerable&lt;T&gt;? Skip&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? skipCount) . Skips elements from the beginning of the sequence. IEnumerable&lt;T&gt;? Take&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? takeCount) . Takes elements from the beginning of the sequence. IEnumerable&lt;T&gt;? SkipAndTake&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? skipCount, int? takeCount) . Skip and takes elements from the beginning of the sequence. T[]? EnumerableToArray&lt;T&gt;(IEnumerable&lt;T&gt;? values) . Turn array arguments of T into a single array. T[]? MergeArrays&lt;T&gt;(T[][]? values) . Turn array arguments of T into a single array. IEnumerable&lt;T&gt;? LongestCommonSequence&lt;T&gt;(IEnumerable&lt;T&gt;? source, IEnumerable&lt;T&gt;? pattern) . Computes longest common sequence of two given sequences . T? GetElementAtOrDefault&lt;T&gt;(IEnumerable&lt;T&gt;? enumerable, int? index) . Gets the element at the specified index in a sequence . int? Length&lt;T&gt;(IEnumerable&lt;T&gt;? enumerable) . Gets the length of the sequence . int? Length&lt;T&gt;(T[]? array) . Gets the length of the array . T? Choose&lt;T&gt;(int? index, T[] values) . Gets the value of an array at the specified index . T If&lt;T&gt;(bool expressionResult, T a, T b) . Chose a or b value based on the expression result . bool? Match(string? regex, string? content) . Determine whether content matches the specified pattern . byte? Coalesce(byte?[] array) . Gets the first non-null value in a list . sbyte? Coalesce(sbyte?[] array) . Gets the first non-null value in a list . short? Coalesce(short?[] array) . Gets the first non-null value in a list . ushort? Coalesce(ushort?[] array) . Gets the first non-null value in a list . int? Coalesce(int?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(uint?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(long?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(ulong?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(Decimal?[] array) . Gets the first non-null value in a list . T? Coalesce&lt;T&gt;(T[] array) . Gets the first non-null value in a list . IEnumerable&lt;T&gt;? Distinct&lt;T&gt;(IEnumerable&lt;T&gt;? values) . Returns distinct elements from a collection. string? Md5(string? content) . Gets the md5 hash of the given string. string? Md5(byte?[]? content) . Gets the md5 hash of the given bytes array. string? Sha1(string? content) . Gets the sha256 hash of the given string. string? Sha1(byte?[]? content) . Gets the sha256 hash of the given bytes array. string? Sha256(string? content) . Gets the sha256 hash of the given string. string? Sha256(byte?[]? content) . Gets the sha256 hash of the given bytes array. string? Sha512(string? content) . Gets the sha256 hash of the given string. string? Sha512(byte?[]? content) . Gets the sha256 hash of the bytes array. string? ToJson&lt;T&gt;(T? obj) . Converts object to json. string[] ExtractFromJsonToArray(string? json, string? path) . Extracts values from json by path. string? ExtractFromJson(string? json, string? path) . Extracts values from json by path and joins them with comma. Decimal? Abs(Decimal? value) . Gets the absolute value . long? Abs(long? value) . Gets the absolute value . int? Abs(int? value) . Gets the absolute value . Decimal? Ceil(Decimal? value) . Gets the ceiling value . Decimal? Floor(Decimal? value) . Gets the floor value . Decimal? Sign(Decimal? value) . Determine whether value is greater, equal or less that zero . long? Sign(long? value) . Determine whether value is greater, equal or less that zero . Decimal? Round(Decimal? value, int precision) . Rounds the value within given precision . Decimal? PercentOf(Decimal? value, Decimal? max) . Gets the percentage of the value . int Rand() . Gets the random integer value . int? Rand(int? min, int? max) . Gets the random integer value . double? Pow(Decimal? x, Decimal? y) . Computes the pow between two values . double? Pow(double? x, double? y) . Computes the pow between two values . double? Sqrt(Decimal? x) . Computes the sqrt of a given value . double? Sqrt(double? x) . Computes the sqrt of a given value . double? Sqrt(long? x) . Computes the sqrt of a given value . double? PercentRank&lt;T&gt;(IEnumerable&lt;T&gt;? window, T? value) . Computes the percent rank of a given window . double? Log(Decimal? base, Decimal? value) . Calculates the logarithm of a value with a specified base. Decimal? Sin(Decimal? value) . Calculates sine of a value. double? Sin(double? value) . Calculates sine of a value. float? Sin(float? value) . Calculates sine of a value. Decimal? Cos(Decimal? value) . Calculates cosine of a value. double? Cos(double? value) . Calculates cosine of a value. float? Cos(float? value) . Calculates cosine of a value. Decimal Max(string name) . Gets the max value of a given group. Decimal Max(string name, int parent) . Gets the max value of a given group. Decimal Min(string name) . Gets the min value of a given group. Decimal Min(string name, int parent) . Gets the min value of a given group. Decimal StDev(string name, int parent) . Gets the StDev value of a given group. string NewId() . Gets the new identifier . string? Trim(string? value) . Removes leading and trailing whitespace from a string. string? TrimStart(string? value) . Removes leading whitespace from a string. string? TrimEnd(string? value) . Removes trailing whitespace from a string. string? Substring(string? value, int? index, int? length) . Gets the substring from the string. string? Substring(string value, int? length) . Gets the substring from the string . string? Concat(string[]? strings) . Concatenates the specified values . string? Concat(char?[]? characters) . Concatenates the specified characters . string? Concat(string? firstString, char?[]? chars) . Concatenates specified string fir characters . string? Concat(char? firstChar, string[]? strings) . Concatenate specific character with strings . string? Concat(object[]? objects) . Concatenates the specified strings . string? Concat&lt;T&gt;(T[]? objects) . Concatenates the specified strings . bool? Contains(string? content, string? what) . Determine whether the string contains the specified value . int? IndexOf(string? value, string? text) . Position of the first occurrence of the specified value . string? Soundex(string? value) . Computes soundex for the specified value . bool HasFuzzyMatchedWord(string text, string word, string separator) . Matches the specified text by splitting it with separator and applying fuzzy comparison . bool HasWordThatHasSmallerLevenshteinDistanceThan(string text, string word, int distance, string separator) . Matches the specified text by splitting it with separator and applying fuzzy comparison with a given distance . bool HasWordThatSoundLike(string text, string word, string separator) . Matches whether the specified word is present after being fuzzified within the specified text . bool HasTextThatSoundLikeSentence(string text, string sentence, string separator) . Matches whether the specified text is present in sentence after being fuzified . string? ToUpper(string value) . Makes the string uppercase . string? ToUpper(string value, string culture) . Makes the string uppercase within specified culture . string? ToUpperInvariant(string value) . Makes the string uppercase . string? ToLower(string value) . Makes the string lowercase . string? ToLower(string value, string culture) . Makes the string lowercase within specified culture . string? ToLowerInvariant(string value) . Makes the string lowercase . string? PadLeft(string? value, string? character, int? totalWidth) . Returns a new string that right-aligns the characters in this instance by padding them on the left with a specified Unicode character, for a specified total lengt . string? PadRight(string? value, string? character, int? totalWidth) . Returns a new string that left-aligns the characters in this instance by padding them on the right with a specified Unicode character, for a specified total length . string? Head(string? value, int? length) . Gets the first N characters of the string . string? Tail(string? value, int? length) . Gets the last N characters of the string . int? LevenshteinDistance(string? firstValue, string? secondValue) . Computes the Levenshtein distance between two strings . char? GetCharacterOf(string value, int index) . Gets the character at specified index . string? Reverse(string? value) . Reverses the string . string[] Split(string value, string[] separators) . Splits the string into an array of substrings based on the specified separators . char[] ToCharArray(string value) . Splits the string into an array of characters . string? LongestCommonSubstring(string source, string pattern) . Computes the longest common subsequence between two source and pattern . string Replicate(string value, int integer) . Clones the value n times . string? Translate(string? value, string? characters, string? translations) . Returns the string from the first argument after the characters specified in the second argument are translated into the characters specified in the third argument. string? Replace(string? text, string lookFor, string? changeTo) . Replaces the first occurrence of a specified string in this instance with another specified string . string? ToTitleCase(string? value) . Capitalizes the first letter of the string . string? GetNthWord(string? text, int? wordIndex, string? separator) . Gets the nth word of the string . string? GetFirstWord(string text, string separator) . Gets the first word of the string . string? GetSecondWord(string text, string separator) . Gets the second word of the string . string? GetThirdWord(string text, string separator) . Gets the third word of the string . string? GetLastWord(string? text, string? separator) . Gets last word of the string . bool? IsNullOrEmpty(string? value) . Determines whether the string is null or empty . bool? IsNullOrWhiteSpace(string? value) . Determines whether the string is null or whitespace . string? UrlEncode(string? value) . Encodes the value . string? UrlDecode(string? value) . Decodes the value . string? UriEncode(string? value) . Encodes the value . string? UriDecode(string? value) . Decodes the value . bool? StartsWith(string? value, string? prefix) . Determines whether the string starts with the specified prefix . bool? StartsWith(string? value, string? prefix, string comparison) . Determines whether the string starts with the specified prefix . bool? EndsWith(string? value, string? suffix) . Determines whether the string ends with the specified suffix . bool? EndsWith(string? value, string? suffix, string comparison) . Determines whether the string ends with the specified suffix . string? RegexReplace(string? value, string? pattern, string? replacement) . Replace the specified value part that matches the pattern with the replacement . string[]? SplitByLinuxNewLines(string? input) . Split string by Linux-style newlines (\\n) . string[]? SplitByWindowsNewLines(string? input) . Split string by Windows-style newlines (\\r\\n) . string[]? SplitByNewLines(string? input) . Smart split that handles both Windows (\\r\\n) and Linux (\\n) newlines . Decimal Sum(string name) . Gets the sum value of a given group. Decimal Sum(string name, int parent) . Gets the sum value of a given group. Decimal SumIncome(string name) . Gets the sum value of a given group. Decimal SumIncome(string name, int parent) . Gets the sum value of a given group. Decimal SumOutcome(string name) . Gets the outcome value of a given group. Decimal SumOutcome(string name, int parent) . Gets the outcome value of a given group. TimeSpan? SumTimeSpan(string name) . Gets the sum value of a given group. TimeSpan? SumTimeSpan(string name, int parent) . Gets the sum value of a given group. TimeSpan? MinTimeSpan(string name) . Gets the min value of a given group. TimeSpan? MinTimeSpan(string name, int parent) . Gets the min value of a given group. TimeSpan? MaxTimeSpan(string name) . Gets the max value of a given group. TimeSpan? MaxTimeSpan(string name, int parent) . Gets the min value of a given group. char? ToChar(string? value) . Converts given value to character . char? ToChar(int? value) . Converts given value to character . char? ToChar(short? value) . Converts given value to character . char? ToChar(byte? value) . Converts given value to character . char? ToChar(object? value) . Converts given value to character . DateTime? ToDateTime(string value) . Converts given value to DateTime . DateTime? ToDateTime(string value, string culture) . Converts given value to DateTime . Decimal? ToDecimal(string? value) . Converts given value to decimal . Decimal? ToDecimal(string value, string culture) . Converts given value to decimal withing given culture . Decimal? ToDecimal(byte? value) . Converts given value to Decimal . Decimal? ToDecimal(sbyte? value) . Converts given value to Decimal . Decimal? ToDecimal(short? value) . Converts given value to Decimal . Decimal? ToDecimal(ushort? value) . Converts given value to Decimal . Decimal? ToDecimal(long? value) . Converts given value to Decimal . Decimal? ToDecimal(ulong? value) . Converts given value to Decimal . Decimal? ToDecimal(float? value) . Converts given value to Decimal . Decimal? ToDecimal(double? value) . Converts given value to Decimal . Decimal? ToDecimal(object? value) . Converts given value to Decimal . double? ToDouble(object? value) . Converts given value to double . double? ToDouble(string? value) . Converts given value to double . double? ToDouble(byte? value) . Converts given value to double . double? ToDouble(sbyte? value) . Converts given value to double . double? ToDouble(short? value) . Converts given value to double . double? ToDouble(ushort? value) . Converts given value to double . double? ToDouble(int? value) . Converts given value to double . double? ToDouble(uint? value) . Converts given value to double . double? ToDouble(long? value) . Converts given value to double . double? ToDouble(ulong? value) . Converts given value to double . double? ToDouble(float? value) . Converts given value to double . double? ToDouble(double? value) . Converts given value to double . double? ToDouble(Decimal? value) . Converts given value to double . float? ToFloat(string? value) . Converts given value to float . float? ToFloat(byte? value) . Converts given value to float . float? ToFloat(sbyte? value) . Converts given value to float . float? ToFloat(short? value) . Converts given value to float . float? ToFloat(ushort? value) . Converts given value to float . float? ToFloat(int? value) . Converts given value to float . float? ToFloat(uint? value) . Converts given value to float . float? ToFloat(long? value) . Converts given value to float . float? ToFloat(ulong? value) . Converts given value to float . float? ToFloat(float? value) . Converts given value to float . float? ToFloat(Decimal? value) . Converts given value to float . int? ToInt32(string value) . Converts given value to int . int? ToInt32(byte? value) . Converts given value to int . int? ToInt32(sbyte? value) . Converts given value to int . int? ToInt32(short? value) . Converts given value to int . int? ToInt32(ushort? value) . Converts given value to int . int? ToInt32(int? value) . Converts given value to int . int? ToInt32(uint? value) . Converts given value to int . int? ToInt32(long? value) . Converts given value to int . int? ToInt32(ulong? value) . Converts given value to int . int? ToInt32(float? value) . Converts given value to int . int? ToInt32(double? value) . Converts given value to int . int? ToInt32(Decimal? value) . Converts given value to int . int? ToInt32(object? value) . Converts given value to int . long? ToInt64(string value) . Converts given value to Int64 . long? ToInt64(byte? value) . Converts given value to long . long? ToInt64(sbyte? value) . Converts given value to long . long? ToInt64(short? value) . Converts given value to long . long? ToInt64(ushort? value) . Converts given value to long . long? ToInt64(int? value) . Converts given value to long . long? ToInt64(uint? value) . Converts given value to long . long? ToInt64(long? value) . Converts given value to long . long? ToInt64(ulong? value) . Converts given value to long . long? ToInt64(float? value) . Converts given value to long . long? ToInt64(double? value) . Converts given value to long . long? ToInt64(Decimal? value) . Converts given value to long . long? ToInt64(object? value) . Converts given value to long . string? ToString(char? value) . Converts given value to string . string? ToString(DateTimeOffset? value) . Converts given value to string . string? ToString(DateTimeOffset? value, string format) . Converts given value to string . string? ToString(byte? value) . Converts given value to string . string? ToString(byte? value, string format) . Converts given value to string . string? ToString(sbyte? value) . Converts given value to string . string? ToString(sbyte? value, string format) . Converts given value to string . string? ToString(int? value) . Converts given value to string . string? ToString(int? value, string format) . Converts given value to string . string? ToString(uint? value) . Converts given value to string . string? ToString(uint? value, string format) . Converts given value to string . string? ToString(long? value) . Converts given value to string . string? ToString(long? value, string format) . Converts given value to string . string? ToString(ulong? value) . Converts given value to string . string? ToString(ulong? value, string format) . Converts given value to string . string? ToString(float? value) . Converts given value to string . string? ToString(float? value, string format) . Converts given value to string . string? ToString(double? value) . Converts given value to string . string? ToString(double? value, string format) . Converts given value to string . string? ToString(Decimal? value) . Converts given value to string . string? ToString(Decimal? value, string format) . Converts given value to string . string? ToString(bool? value) . Converts given value to string . string? ToString(object? value) . Converts given value to string . string? ToString&lt;T&gt;(T? value) . Converts given value to string . string ToString(string[] value) . Converts given value to string . string ToString&lt;T&gt;(T[] value) . Converts given value to string . TimeSpan? ToTimeSpan(string value) . Converts given value to TimeSpan . TimeSpan? ToTimeSpan(string value, string culture) . Converts given value to TimeSpan . IEnumerable&lt;T&gt; Window&lt;T&gt;(string name) . Gets the window . ",
    "url": "/data-sources/FlatFile/windows-x64.html#base-methods",
    
    "relUrl": "/data-sources/FlatFile/windows-x64.html#base-methods"
  },"364": {
    "doc": "Windows X64",
    "title": "Windows X64",
    "content": " ",
    "url": "/data-sources/FlatFile/windows-x64.html",
    
    "relUrl": "/data-sources/FlatFile/windows-x64.html"
  },"365": {
    "doc": "Windows X64",
    "title": "Musoq.DataSources.CANBus",
    "content": "Provides schema to work with CAN bus data. ",
    "url": "/data-sources/CANBus/windows-x64.html#musoqdatasourcescanbus",
    
    "relUrl": "/data-sources/CANBus/windows-x64.html#musoqdatasourcescanbus"
  },"366": {
    "doc": "Windows X64",
    "title": "Tables",
    "content": "Table is a collection of rows and columns that the plugin exposes. Below are the tables that are exposed by this data source. can.separatedvalues(string csvData, string dbcData, string idOfType = “dec” | “hex” | “bin”) . Treats csv, tsv or others separated values files as CAN bus records. The file must be of format Timestamp, ID, DLC, Data where Data values must be in format of unsigned integer number (123) or in hexadecimal (0x7b). Based on the loaded dbc file, you will have access access to additional column named {DBC_MESSAGE_NAME}. From here, you can access value {DBC_SIGNAL_NAME} of a message (ie. {DBC_MESSAGE_NAME}.{DBC_SIGNAL_NAME}). Returned value will be of type double . This table has a dynamic structure, which means that its columns and other details cannot be determined until runtime. As a result, it is not possible to include a complete description of this table in the documentation. Instead, the actual columns and other details of this table will be determined at runtime. However, this table has a well-known set of columns that are always present. These columns are described below. | Name | Type | Description | . | ID | uint | ID of the message entity | . | Timestamp | ulong | Timestamp of the message entity | . | Message | MessageEntity | The Message | . | IsWellKnown | uint | Whether the message is well known or not (is within dbc file) | . | DataAsBytes | byte[] | Data as bytes | . | Data | ulong | Data as ulong | . can.messages(string dbc) . Parses dbc file and returns all messages defined within it. | Name | Type | Description | . | Id | uint | ID of the message entity | . | IsExtId | bool | Is external Id | . | Name | string | Name of the message entity | . | DLC | ushort | DLC of the message entity | . | Transmitter | string | Transmitter of the message entity | . | Comment | string | Comment for the message entity | . | CycleTime | int | Cycle time for the message entity | . | Signals | SignalEntity[] | Signals of the message | . can.signals(string dbc) . Parses dbc file and returns all signals defined within it. | Name | Type | Description | . | Id | uint | Id of the signal entity | . | Name | string | Name of the signal entity | . | StartBit | ushort | Start bit of the signal entity | . | Length | ushort | Length of the signal entity | . | ByteOrder | byte | Byte order of the signal entity | . | InitialValue | double | Initial value of the signal entity | . | Factor | double | Factor for the signal entity | . | IsInteger | bool | Whether the signal entity is integer or not | . | Offset | double | Offset for the signal entity | . | Minimum | double | Minimum value for the signal entity | . | Maximum | double | Maximum value for the signal entity | . | Unit | string | Unit for the signal entity | . | Receiver | string[] | Receiver for the signal entity | . | Comment | string | Comment for the signal entity | . | Multiplexing | string | Multiplexing details for the signal entity | . | MessageName | string | Message name for the signal entity | . | ValueMap | string | Value map for the signal entity | . | MessageOrder | int | Order of signal within the message definition | . ",
    "url": "/data-sources/CANBus/windows-x64.html#tables",
    
    "relUrl": "/data-sources/CANBus/windows-x64.html#tables"
  },"367": {
    "doc": "Windows X64",
    "title": "Private Tables",
    "content": "Private tables are tables that are not exposed by the plugin, but are available for use in queries when using CROSS / OUTER APPLY operator. ValueMapEntity[] . Represent possible values of a signal . | Name | Type | Description | . | Value | int | Value of signal | . | Name | string | Name of the value | . ",
    "url": "/data-sources/CANBus/windows-x64.html#private-tables",
    
    "relUrl": "/data-sources/CANBus/windows-x64.html#private-tables"
  },"368": {
    "doc": "Windows X64",
    "title": "Methods",
    "content": "Methods are functions that can be called on the data source specific column. Below are the methods that are exposed by this data source. ulong EncodeMessage(string name, byte value) . Converts bytes to encoded signal of a message for CAN bus. ulong EncodeMessage(string name, short value) . Converts short to encoded signal of a message for CAN bus. ulong EncodeMessage(string name, ushort value) . Converts ushort to encoded signal of a message for CAN bus. ulong EncodeMessage(string name, int value) . Converts int to encoded signal of a message for CAN bus. ulong EncodeMessage(string name, uint value) . Converts uint to encoded signal of a message for CAN bus. ulong EncodeMessage(string name, long value) . Converts long to encoded signal of a message for CAN bus. ulong EncodeMessage(string name, ulong value) . Converts ulong to encoded signal of a message for CAN bus. ulong EncodeMessage(string name, float value) . Converts float to encoded signal of a message for CAN bus. ulong EncodeMessage(string name, double value) . Converts double to encoded signal of a message for CAN bus. ulong EncodeMessage(string jsonValues) . Converts structured json to encoded signals of a message for CAN bus. It’s structure is of { signalName1: signalValue1, ..., signalNameN : signalValueN } . double DecodeMessage(string name, byte value) . Treats byte as encoded signal of a message for CAN bus and decodes it. double DecodeMessage(string name, short value) . Treats short as encoded signal of a message for CAN bus and decodes it. double DecodeMessage(string name, ushort value) . Treats ushort as encoded signal of a message for CAN bus and decodes it. double DecodeMessage(string name, int value) . Treats int as encoded signal of a message for CAN bus and decodes it. double DecodeMessage(string name, uint value) . Treats uint as encoded signal of a message for CAN bus and decodes it. double DecodeMessage(string name, long value) . Treats long as encoded signal of a message for CAN bus and decodes it. double DecodeMessage(string name, ulong value) . Treats ulong as encoded signal of a message for CAN bus and decodes it. DateTimeOffset? FromTimestamp(ulong timestamp, string resolution) . Converts timestamp to date time offset. DateTimeOffset? ToDateTimeOffset(string date, string format) . Creates the date time offset from given date and time in a given format. ",
    "url": "/data-sources/CANBus/windows-x64.html#methods",
    
    "relUrl": "/data-sources/CANBus/windows-x64.html#methods"
  },"369": {
    "doc": "Windows X64",
    "title": "Base Methods",
    "content": "Base methods are methods that can be called on the data source specific column. Those methods are automatically inherited and enriches the data source specific methods. Below are those base methods that are exposed by this data source. int RowNumber() . Gets the row number of the current row. string? GetTypeName(object? obj) . Gets the typename of passed object. string AggregateValues(string name) . Aggregates values into a single value. string AggregateValues(string name, int parent) . Aggregates values into a single value. Decimal Avg(string name) . Gets the aggregated average value from the given group name . Decimal Avg(string name, int parent) . Gets the aggregated average value from the given group name . byte? ShiftLeft(byte? value, int shift) . Shifts the value to the left by the specified number of bits. short? ShiftLeft(short? value, int shift) . Shifts the value to the left by the specified number of bits. int? ShiftLeft(int? value, int shift) . Shifts the value to the left by the specified number of bits. long? ShiftLeft(long? value, int shift) . Shifts the value to the left by the specified number of bits. sbyte? ShiftLeft(sbyte? value, int shift) . Shifts the value to the left by the specified number of bits. ushort? ShiftLeft(ushort? value, int shift) . Shifts the value to the left by the specified number of bits. uint? ShiftLeft(uint? value, int shift) . Shifts the value to the left by the specified number of bits. ulong? ShiftLeft(ulong? value, int shift) . Shifts the value to the left by the specified number of bits. byte? ShiftRight(byte? value, int shift) . Shifts the value to the right by the specified number of bits. short? ShiftRight(short? value, int shift) . Shifts the value to the right by the specified number of bits. int? ShiftRight(int? value, int shift) . Shifts the value to the right by the specified number of bits. long? ShiftRight(long? value, int shift) . Shifts the value to the right by the specified number of bits. sbyte? ShiftRight(sbyte? value, int shift) . Shifts the value to the right by the specified number of bits. ushort? ShiftRight(ushort? value, int shift) . Shifts the value to the right by the specified number of bits. uint? ShiftRight(uint? value, int shift) . Shifts the value to the right by the specified number of bits. ulong? ShiftRight(ulong? value, int shift) . Shifts the value to the right by the specified number of bits. byte? Not(byte? value) . Performs bitwise NOT operation on a given value. short? Not(short? value) . Performs bitwise NOT operation on a given value. int? Not(int? value) . Performs bitwise NOT operation on a given value. long? Not(long? value) . Performs bitwise NOT operation on a given value. sbyte? Not(sbyte? value) . Performs bitwise NOT operation on a given value. ushort? Not(ushort? value) . Performs bitwise NOT operation on a given value. uint? Not(uint? value) . Performs bitwise NOT operation on a given value. ulong? Not(ulong? value) . Performs bitwise NOT operation on a given value. byte? And(byte? left, byte? right) . Performs bitwise AND operation on two given values. int? And(byte? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(byte? left, short? right) . Performs bitwise AND operation on two given values. int? And(byte? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(byte? left, int? right) . Performs bitwise AND operation on two given values. uint? And(byte? left, uint? right) . Performs bitwise AND operation on two given values. long? And(byte? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(byte? left, ulong? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, byte? right) . Performs bitwise AND operation on two given values. sbyte? And(sbyte? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, short? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, int? right) . Performs bitwise AND operation on two given values. uint? And(sbyte? left, uint? right) . Performs bitwise AND operation on two given values. long? And(sbyte? left, long? right) . Performs bitwise AND operation on two given values. int? And(short? left, byte? right) . Performs bitwise AND operation on two given values. int? And(short? left, sbyte? right) . Performs bitwise AND operation on two given values. short? And(short? left, short? right) . Performs bitwise AND operation on two given values. int? And(short? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(short? left, int? right) . Performs bitwise AND operation on two given values. uint? And(short? left, uint? right) . Performs bitwise AND operation on two given values. long? And(short? left, long? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, byte? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, short? right) . Performs bitwise AND operation on two given values. ushort? And(ushort? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, int? right) . Performs bitwise AND operation on two given values. uint? And(ushort? left, uint? right) . Performs bitwise AND operation on two given values. long? And(ushort? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(ushort? left, ulong? right) . Performs bitwise AND operation on two given values. int? And(int? left, byte? right) . Performs bitwise AND operation on two given values. int? And(int? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(int? left, short? right) . Performs bitwise AND operation on two given values. int? And(int? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(int? left, int? right) . Performs bitwise AND operation on two given values. uint? And(int? left, uint? right) . Performs bitwise AND operation on two given values. long? And(int? left, long? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, uint? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, byte? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, sbyte? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, short? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, ushort? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, int? right) . Performs bitwise AND operation on two given values. ulong? And(uint? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(uint? left, ulong? right) . Performs bitwise AND operation on two given values. long? And(long? left, long? right) . Performs bitwise AND operation on two given values. long? And(long? left, byte? right) . Performs bitwise AND operation on two given values. long? And(long? left, sbyte? right) . Performs bitwise AND operation on two given values. long? And(long? left, short? right) . Performs bitwise AND operation on two given values. long? And(long? left, ushort? right) . Performs bitwise AND operation on two given values. long? And(long? left, int? right) . Performs bitwise AND operation on two given values. long? And(long? left, uint? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, byte? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, ushort? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, uint? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, ulong? right) . Performs bitwise AND operation on two given values. byte? Or(byte? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, short? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(byte? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(byte? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(byte? left, ulong? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, byte? right) . Performs bitwise OR operation on two given values. sbyte? Or(sbyte? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, short? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(sbyte? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(sbyte? left, long? right) . Performs bitwise OR operation on two given values. int? Or(short? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(short? left, sbyte? right) . Performs bitwise OR operation on two given values. short? Or(short? left, short? right) . Performs bitwise OR operation on two given values. int? Or(short? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(short? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(short? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(short? left, long? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, short? right) . Performs bitwise OR operation on two given values. ushort? Or(ushort? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(ushort? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(ushort? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(ushort? left, ulong? right) . Performs bitwise OR operation on two given values. int? Or(int? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(int? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(int? left, short? right) . Performs bitwise OR operation on two given values. int? Or(int? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(int? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(int? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(int? left, long? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, uint? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, byte? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, sbyte? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, short? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, ushort? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, int? right) . Performs bitwise OR operation on two given values. ulong? Or(uint? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(uint? left, ulong? right) . Performs bitwise OR operation on two given values. long? Or(long? left, long? right) . Performs bitwise OR operation on two given values. long? Or(long? left, byte? right) . Performs bitwise OR operation on two given values. long? Or(long? left, sbyte? right) . Performs bitwise OR operation on two given values. long? Or(long? left, short? right) . Performs bitwise OR operation on two given values. long? Or(long? left, ushort? right) . Performs bitwise OR operation on two given values. long? Or(long? left, int? right) . Performs bitwise OR operation on two given values. long? Or(long? left, uint? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, byte? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, ushort? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, uint? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, ulong? right) . Performs bitwise OR operation on two given values. byte? Xor(byte? left, byte? right) . Performs bitwise OR operation on two given values. int? Xor(byte? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(byte? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(byte? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(byte? left, ulong? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, byte? right) . Performs bitwise Xor operation on two given values. sbyte? Xor(sbyte? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(sbyte? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(sbyte? left, long? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, sbyte? right) . Performs bitwise Xor operation on two given values. short? Xor(short? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, ushort? right) . Performs bitwise XOR operation on two given values. int? Xor(short? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(short? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(short? left, long? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, short? right) . Performs bitwise Xor operation on two given values. ushort? Xor(ushort? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(ushort? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(ushort? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ushort? left, ulong? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(int? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(int? left, long? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, uint? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, byte? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, sbyte? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, short? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, ushort? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, int? right) . Performs bitwise Xor operation on two given values. ulong? Xor(uint? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(uint? left, ulong? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, long? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, byte? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, sbyte? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, short? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, ushort? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, int? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, uint? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, ulong? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, byte? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, ushort? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, uint? right) . Performs bitwise Xor operation on two given values. byte[] GetBytes(string? content) . Gets the bytes from the given string. byte[] GetBytes(string? content, int length, int offset) . Gets the bytes from the given string within given offset and length. byte?[]? GetBytes(char? character) . Gets the bytes from the given character. byte?[]? GetBytes(bool? bit) . Gets the bytes from the given boolean. byte?[]? GetBytes(long? value) . Gets the bytes from the given long. byte?[]? GetBytes(int? value) . Gets the bytes from the given int. byte?[]? GetBytes(short? value) . Gets the bytes from the given short. byte?[]? GetBytes(ulong? value) . Gets the bytes from the given ulong. byte?[]? GetBytes(ushort? value) . Gets the bytes from the given ushort. byte?[]? GetBytes(uint? value) . Gets the bytes from the given uint. byte?[]? GetBytes(Decimal? value) . Gets the bytes from the given decimal. byte?[]? GetBytes(double? value) . Gets the bytes from the given double. byte?[]? GetBytes(float? value) . Gets the bytes from the given float. string? ToBin(byte?[]? bytes, string delimiter) . Converts given bytes to binary with defined delimiter . string ToBin&lt;T&gt;(T value) . Converts given value to binary . string ToOcta&lt;T&gt;(T value) . Converts given value to octal . string ToDec&lt;T&gt;(T value) . Converts given value to decimal . string ToBase64(byte[] value) . Converts given value to string . string ToBase64(byte[] value, int offset, int length) . Converts given array of bytes to string . byte[] FromBase64(string value) . Converts given string to bytes array . bool FromBytesToBool(byte[] value) . Converts bytes to boolean value. short FromBytesToInt16(byte[] value) . Converts bytes to a 16-bit signed integer. ushort FromBytesToUInt16(byte[] value) . Converts bytes to a 16-bit unsigned integer. int FromBytesToInt32(byte[] value) . Converts bytes to a 32-bit signed integer. uint FromBytesToUInt32(byte[] value) . Converts bytes to a 32-bit unsigned integer. long FromBytesToInt64(byte[] value) . Converts bytes to a 64-bit signed integer. ulong FromBytesToUInt64(byte[] value) . Converts bytes to a 64-bit unsigned integer. float FromBytesToFloat(byte[] value) . Converts bytes to a float value. double FromBytesToDouble(byte[] value) . Converts bytes to a float value. string FromBytesToString(byte[] value) . Converts bytes to a string. byte[] ToBytes(bool value) . Converts boolean value to bytes. byte[] ToBytes(short value) . Converts short value to bytes. byte[] ToBytes(ushort value) . Converts ushort value to bytes. byte[] ToBytes(int value) . Converts int value to bytes. byte[] ToBytes(uint value) . Converts uint value to bytes. byte[] ToBytes(long value) . Converts long value to bytes. byte[] ToBytes(ulong value) . Converts long value to bytes. string? ToHex(byte?[]? bytes, string delimiter) . Converts given bytes to hex with defined delimiter . string? ToHex&lt;T&gt;(T value) . Converts given value to binary . int Count(string name) . Gets the count value of a given group. int Count(string name, int parent) . Gets the count value of a given group. int ExtractFromDate(string? date, string partOfDate) . Extracts part of the date from the date . int ExtractFromDate(string date, string culture, string partOfDate) . Extracts part of the date from the date based on given culture . DateTimeOffset? GetDate() . Gets the current datetime . DateTimeOffset? UtcGetDate() . Gets the current datetime in UTC . int? Month(DateTimeOffset? value) . Gets the month from DateTimeOffset . int? Year(DateTimeOffset? value) . Gets the year from DateTimeOffset . int? Day(DateTimeOffset? value) . Gets the day from DateTimeOffset . int? Hour(DateTimeOffset? value) . Gets the hour from DateTimeOffset . int? Minute(DateTimeOffset? value) . Gets the minute from DateTimeOffset . int? Second(DateTimeOffset? value) . Gets the second from DateTimeOffset . int? Milliseconds(DateTimeOffset? value) . Gets the millisecond from DateTimeOffset . int? DayOfWeek(DateTimeOffset? value) . Gets the day of week from DateTimeOffset . TimeSpan? ExtractTimeSpan(DateTimeOffset? dateTimeOffset) . Extracts time from DateTimeOffset . DateTime? ToDateTimeOffset(string value) . Converts given value to DateTimeOffset . DateTimeOffset? ToDateTimeOffset(string value, string culture) . Converts given value to DateTimeOffset . IEnumerable&lt;T&gt;? Skip&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? skipCount) . Skips elements from the beginning of the sequence. IEnumerable&lt;T&gt;? Take&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? takeCount) . Takes elements from the beginning of the sequence. IEnumerable&lt;T&gt;? SkipAndTake&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? skipCount, int? takeCount) . Skip and takes elements from the beginning of the sequence. T[]? EnumerableToArray&lt;T&gt;(IEnumerable&lt;T&gt;? values) . Turn array arguments of T into a single array. T[]? MergeArrays&lt;T&gt;(T[][]? values) . Turn array arguments of T into a single array. IEnumerable&lt;T&gt;? LongestCommonSequence&lt;T&gt;(IEnumerable&lt;T&gt;? source, IEnumerable&lt;T&gt;? pattern) . Computes longest common sequence of two given sequences . T? GetElementAtOrDefault&lt;T&gt;(IEnumerable&lt;T&gt;? enumerable, int? index) . Gets the element at the specified index in a sequence . int? Length&lt;T&gt;(IEnumerable&lt;T&gt;? enumerable) . Gets the length of the sequence . int? Length&lt;T&gt;(T[]? array) . Gets the length of the array . T? Choose&lt;T&gt;(int? index, T[] values) . Gets the value of an array at the specified index . T If&lt;T&gt;(bool expressionResult, T a, T b) . Chose a or b value based on the expression result . bool? Match(string? regex, string? content) . Determine whether content matches the specified pattern . byte? Coalesce(byte?[] array) . Gets the first non-null value in a list . sbyte? Coalesce(sbyte?[] array) . Gets the first non-null value in a list . short? Coalesce(short?[] array) . Gets the first non-null value in a list . ushort? Coalesce(ushort?[] array) . Gets the first non-null value in a list . int? Coalesce(int?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(uint?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(long?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(ulong?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(Decimal?[] array) . Gets the first non-null value in a list . T? Coalesce&lt;T&gt;(T[] array) . Gets the first non-null value in a list . IEnumerable&lt;T&gt;? Distinct&lt;T&gt;(IEnumerable&lt;T&gt;? values) . Returns distinct elements from a collection. string? Md5(string? content) . Gets the md5 hash of the given string. string? Md5(byte?[]? content) . Gets the md5 hash of the given bytes array. string? Sha1(string? content) . Gets the sha256 hash of the given string. string? Sha1(byte?[]? content) . Gets the sha256 hash of the given bytes array. string? Sha256(string? content) . Gets the sha256 hash of the given string. string? Sha256(byte?[]? content) . Gets the sha256 hash of the given bytes array. string? Sha512(string? content) . Gets the sha256 hash of the given string. string? Sha512(byte?[]? content) . Gets the sha256 hash of the bytes array. string? ToJson&lt;T&gt;(T? obj) . Converts object to json. string[] ExtractFromJsonToArray(string? json, string? path) . Extracts values from json by path. string? ExtractFromJson(string? json, string? path) . Extracts values from json by path and joins them with comma. Decimal? Abs(Decimal? value) . Gets the absolute value . long? Abs(long? value) . Gets the absolute value . int? Abs(int? value) . Gets the absolute value . Decimal? Ceil(Decimal? value) . Gets the ceiling value . Decimal? Floor(Decimal? value) . Gets the floor value . Decimal? Sign(Decimal? value) . Determine whether value is greater, equal or less that zero . long? Sign(long? value) . Determine whether value is greater, equal or less that zero . Decimal? Round(Decimal? value, int precision) . Rounds the value within given precision . Decimal? PercentOf(Decimal? value, Decimal? max) . Gets the percentage of the value . int Rand() . Gets the random integer value . int? Rand(int? min, int? max) . Gets the random integer value . double? Pow(Decimal? x, Decimal? y) . Computes the pow between two values . double? Pow(double? x, double? y) . Computes the pow between two values . double? Sqrt(Decimal? x) . Computes the sqrt of a given value . double? Sqrt(double? x) . Computes the sqrt of a given value . double? Sqrt(long? x) . Computes the sqrt of a given value . double? PercentRank&lt;T&gt;(IEnumerable&lt;T&gt;? window, T? value) . Computes the percent rank of a given window . double? Log(Decimal? base, Decimal? value) . Calculates the logarithm of a value with a specified base. Decimal? Sin(Decimal? value) . Calculates sine of a value. double? Sin(double? value) . Calculates sine of a value. float? Sin(float? value) . Calculates sine of a value. Decimal? Cos(Decimal? value) . Calculates cosine of a value. double? Cos(double? value) . Calculates cosine of a value. float? Cos(float? value) . Calculates cosine of a value. Decimal Max(string name) . Gets the max value of a given group. Decimal Max(string name, int parent) . Gets the max value of a given group. Decimal Min(string name) . Gets the min value of a given group. Decimal Min(string name, int parent) . Gets the min value of a given group. Decimal StDev(string name, int parent) . Gets the StDev value of a given group. string NewId() . Gets the new identifier . string? Trim(string? value) . Removes leading and trailing whitespace from a string. string? TrimStart(string? value) . Removes leading whitespace from a string. string? TrimEnd(string? value) . Removes trailing whitespace from a string. string? Substring(string? value, int? index, int? length) . Gets the substring from the string. string? Substring(string value, int? length) . Gets the substring from the string . string? Concat(string[]? strings) . Concatenates the specified values . string? Concat(char?[]? characters) . Concatenates the specified characters . string? Concat(string? firstString, char?[]? chars) . Concatenates specified string fir characters . string? Concat(char? firstChar, string[]? strings) . Concatenate specific character with strings . string? Concat(object[]? objects) . Concatenates the specified strings . string? Concat&lt;T&gt;(T[]? objects) . Concatenates the specified strings . bool? Contains(string? content, string? what) . Determine whether the string contains the specified value . int? IndexOf(string? value, string? text) . Position of the first occurrence of the specified value . string? Soundex(string? value) . Computes soundex for the specified value . bool HasFuzzyMatchedWord(string text, string word, string separator) . Matches the specified text by splitting it with separator and applying fuzzy comparison . bool HasWordThatHasSmallerLevenshteinDistanceThan(string text, string word, int distance, string separator) . Matches the specified text by splitting it with separator and applying fuzzy comparison with a given distance . bool HasWordThatSoundLike(string text, string word, string separator) . Matches whether the specified word is present after being fuzzified within the specified text . bool HasTextThatSoundLikeSentence(string text, string sentence, string separator) . Matches whether the specified text is present in sentence after being fuzified . string? ToUpper(string value) . Makes the string uppercase . string? ToUpper(string value, string culture) . Makes the string uppercase within specified culture . string? ToUpperInvariant(string value) . Makes the string uppercase . string? ToLower(string value) . Makes the string lowercase . string? ToLower(string value, string culture) . Makes the string lowercase within specified culture . string? ToLowerInvariant(string value) . Makes the string lowercase . string? PadLeft(string? value, string? character, int? totalWidth) . Returns a new string that right-aligns the characters in this instance by padding them on the left with a specified Unicode character, for a specified total lengt . string? PadRight(string? value, string? character, int? totalWidth) . Returns a new string that left-aligns the characters in this instance by padding them on the right with a specified Unicode character, for a specified total length . string? Head(string? value, int? length) . Gets the first N characters of the string . string? Tail(string? value, int? length) . Gets the last N characters of the string . int? LevenshteinDistance(string? firstValue, string? secondValue) . Computes the Levenshtein distance between two strings . char? GetCharacterOf(string value, int index) . Gets the character at specified index . string? Reverse(string? value) . Reverses the string . string[] Split(string value, string[] separators) . Splits the string into an array of substrings based on the specified separators . char[] ToCharArray(string value) . Splits the string into an array of characters . string? LongestCommonSubstring(string source, string pattern) . Computes the longest common subsequence between two source and pattern . string Replicate(string value, int integer) . Clones the value n times . string? Translate(string? value, string? characters, string? translations) . Returns the string from the first argument after the characters specified in the second argument are translated into the characters specified in the third argument. string? Replace(string? text, string lookFor, string? changeTo) . Replaces the first occurrence of a specified string in this instance with another specified string . string? ToTitleCase(string? value) . Capitalizes the first letter of the string . string? GetNthWord(string? text, int? wordIndex, string? separator) . Gets the nth word of the string . string? GetFirstWord(string text, string separator) . Gets the first word of the string . string? GetSecondWord(string text, string separator) . Gets the second word of the string . string? GetThirdWord(string text, string separator) . Gets the third word of the string . string? GetLastWord(string? text, string? separator) . Gets last word of the string . bool? IsNullOrEmpty(string? value) . Determines whether the string is null or empty . bool? IsNullOrWhiteSpace(string? value) . Determines whether the string is null or whitespace . string? UrlEncode(string? value) . Encodes the value . string? UrlDecode(string? value) . Decodes the value . string? UriEncode(string? value) . Encodes the value . string? UriDecode(string? value) . Decodes the value . bool? StartsWith(string? value, string? prefix) . Determines whether the string starts with the specified prefix . bool? StartsWith(string? value, string? prefix, string comparison) . Determines whether the string starts with the specified prefix . bool? EndsWith(string? value, string? suffix) . Determines whether the string ends with the specified suffix . bool? EndsWith(string? value, string? suffix, string comparison) . Determines whether the string ends with the specified suffix . string? RegexReplace(string? value, string? pattern, string? replacement) . Replace the specified value part that matches the pattern with the replacement . string[]? SplitByLinuxNewLines(string? input) . Split string by Linux-style newlines (\\n) . string[]? SplitByWindowsNewLines(string? input) . Split string by Windows-style newlines (\\r\\n) . string[]? SplitByNewLines(string? input) . Smart split that handles both Windows (\\r\\n) and Linux (\\n) newlines . Decimal Sum(string name) . Gets the sum value of a given group. Decimal Sum(string name, int parent) . Gets the sum value of a given group. Decimal SumIncome(string name) . Gets the sum value of a given group. Decimal SumIncome(string name, int parent) . Gets the sum value of a given group. Decimal SumOutcome(string name) . Gets the outcome value of a given group. Decimal SumOutcome(string name, int parent) . Gets the outcome value of a given group. TimeSpan? SumTimeSpan(string name) . Gets the sum value of a given group. TimeSpan? SumTimeSpan(string name, int parent) . Gets the sum value of a given group. TimeSpan? MinTimeSpan(string name) . Gets the min value of a given group. TimeSpan? MinTimeSpan(string name, int parent) . Gets the min value of a given group. TimeSpan? MaxTimeSpan(string name) . Gets the max value of a given group. TimeSpan? MaxTimeSpan(string name, int parent) . Gets the min value of a given group. char? ToChar(string? value) . Converts given value to character . char? ToChar(int? value) . Converts given value to character . char? ToChar(short? value) . Converts given value to character . char? ToChar(byte? value) . Converts given value to character . char? ToChar(object? value) . Converts given value to character . DateTime? ToDateTime(string value) . Converts given value to DateTime . DateTime? ToDateTime(string value, string culture) . Converts given value to DateTime . Decimal? ToDecimal(string? value) . Converts given value to decimal . Decimal? ToDecimal(string value, string culture) . Converts given value to decimal withing given culture . Decimal? ToDecimal(byte? value) . Converts given value to Decimal . Decimal? ToDecimal(sbyte? value) . Converts given value to Decimal . Decimal? ToDecimal(short? value) . Converts given value to Decimal . Decimal? ToDecimal(ushort? value) . Converts given value to Decimal . Decimal? ToDecimal(long? value) . Converts given value to Decimal . Decimal? ToDecimal(ulong? value) . Converts given value to Decimal . Decimal? ToDecimal(float? value) . Converts given value to Decimal . Decimal? ToDecimal(double? value) . Converts given value to Decimal . Decimal? ToDecimal(object? value) . Converts given value to Decimal . double? ToDouble(object? value) . Converts given value to double . double? ToDouble(string? value) . Converts given value to double . double? ToDouble(byte? value) . Converts given value to double . double? ToDouble(sbyte? value) . Converts given value to double . double? ToDouble(short? value) . Converts given value to double . double? ToDouble(ushort? value) . Converts given value to double . double? ToDouble(int? value) . Converts given value to double . double? ToDouble(uint? value) . Converts given value to double . double? ToDouble(long? value) . Converts given value to double . double? ToDouble(ulong? value) . Converts given value to double . double? ToDouble(float? value) . Converts given value to double . double? ToDouble(double? value) . Converts given value to double . double? ToDouble(Decimal? value) . Converts given value to double . float? ToFloat(string? value) . Converts given value to float . float? ToFloat(byte? value) . Converts given value to float . float? ToFloat(sbyte? value) . Converts given value to float . float? ToFloat(short? value) . Converts given value to float . float? ToFloat(ushort? value) . Converts given value to float . float? ToFloat(int? value) . Converts given value to float . float? ToFloat(uint? value) . Converts given value to float . float? ToFloat(long? value) . Converts given value to float . float? ToFloat(ulong? value) . Converts given value to float . float? ToFloat(float? value) . Converts given value to float . float? ToFloat(Decimal? value) . Converts given value to float . int? ToInt32(string value) . Converts given value to int . int? ToInt32(byte? value) . Converts given value to int . int? ToInt32(sbyte? value) . Converts given value to int . int? ToInt32(short? value) . Converts given value to int . int? ToInt32(ushort? value) . Converts given value to int . int? ToInt32(int? value) . Converts given value to int . int? ToInt32(uint? value) . Converts given value to int . int? ToInt32(long? value) . Converts given value to int . int? ToInt32(ulong? value) . Converts given value to int . int? ToInt32(float? value) . Converts given value to int . int? ToInt32(double? value) . Converts given value to int . int? ToInt32(Decimal? value) . Converts given value to int . int? ToInt32(object? value) . Converts given value to int . long? ToInt64(string value) . Converts given value to Int64 . long? ToInt64(byte? value) . Converts given value to long . long? ToInt64(sbyte? value) . Converts given value to long . long? ToInt64(short? value) . Converts given value to long . long? ToInt64(ushort? value) . Converts given value to long . long? ToInt64(int? value) . Converts given value to long . long? ToInt64(uint? value) . Converts given value to long . long? ToInt64(long? value) . Converts given value to long . long? ToInt64(ulong? value) . Converts given value to long . long? ToInt64(float? value) . Converts given value to long . long? ToInt64(double? value) . Converts given value to long . long? ToInt64(Decimal? value) . Converts given value to long . long? ToInt64(object? value) . Converts given value to long . string? ToString(char? value) . Converts given value to string . string? ToString(DateTimeOffset? value) . Converts given value to string . string? ToString(DateTimeOffset? value, string format) . Converts given value to string . string? ToString(byte? value) . Converts given value to string . string? ToString(byte? value, string format) . Converts given value to string . string? ToString(sbyte? value) . Converts given value to string . string? ToString(sbyte? value, string format) . Converts given value to string . string? ToString(int? value) . Converts given value to string . string? ToString(int? value, string format) . Converts given value to string . string? ToString(uint? value) . Converts given value to string . string? ToString(uint? value, string format) . Converts given value to string . string? ToString(long? value) . Converts given value to string . string? ToString(long? value, string format) . Converts given value to string . string? ToString(ulong? value) . Converts given value to string . string? ToString(ulong? value, string format) . Converts given value to string . string? ToString(float? value) . Converts given value to string . string? ToString(float? value, string format) . Converts given value to string . string? ToString(double? value) . Converts given value to string . string? ToString(double? value, string format) . Converts given value to string . string? ToString(Decimal? value) . Converts given value to string . string? ToString(Decimal? value, string format) . Converts given value to string . string? ToString(bool? value) . Converts given value to string . string? ToString(object? value) . Converts given value to string . string? ToString&lt;T&gt;(T? value) . Converts given value to string . string ToString(string[] value) . Converts given value to string . string ToString&lt;T&gt;(T[] value) . Converts given value to string . TimeSpan? ToTimeSpan(string value) . Converts given value to TimeSpan . TimeSpan? ToTimeSpan(string value, string culture) . Converts given value to TimeSpan . IEnumerable&lt;T&gt; Window&lt;T&gt;(string name) . Gets the window . ",
    "url": "/data-sources/CANBus/windows-x64.html#base-methods",
    
    "relUrl": "/data-sources/CANBus/windows-x64.html#base-methods"
  },"370": {
    "doc": "Windows X64",
    "title": "Windows X64",
    "content": " ",
    "url": "/data-sources/CANBus/windows-x64.html",
    
    "relUrl": "/data-sources/CANBus/windows-x64.html"
  },"371": {
    "doc": "Windows X64",
    "title": "Musoq.DataSources.Docker",
    "content": "Provides schema to work with docker containers, images, networks and volumes. ",
    "url": "/data-sources/Docker/windows-x64.html#musoqdatasourcesdocker",
    
    "relUrl": "/data-sources/Docker/windows-x64.html#musoqdatasourcesdocker"
  },"372": {
    "doc": "Windows X64",
    "title": "Tables",
    "content": "Table is a collection of rows and columns that the plugin exposes. Below are the tables that are exposed by this data source. docker.containers() . Gets containers of local docker . | Name | Type | Description | . | ID | string | Container ID | . | Names | IList&lt;string&gt; | Container names | . | Image | string | Image name | . | ImageID | string | Image ID | . | Command | string | Command the container run on with | . | Created | string | Container created datetime | . | Ports | IList&lt;string&gt; | Mapped ports | . | SizeRw | long | Size of the created or changed files | . | SizeRootFs | long | Total size of all files in the container | . | Labels | IDictionary&lt;string, string&gt; | Assigned labels to specific container | . | Status | string | Status of the container | . | NetworkSettings | SummaryNetworkSettings | Network settings | . | Mounts | IList&lt;MountPoint&gt; | Mounted points | . | FlattenPorts | string | Mapped ports as a string with comma delimiter | . docker.images() . Gets images of local docker . | Name | Type | Description | . | Containers | long | Number of containers | . | Created | DateTime | Creation time | . | ID | string | Unique identifier | . | Labels | IDictionary&lt;string, string&gt; | Set of labels | . | ParentID | string | Parent’s unique identifier | . | RepoDigests | IList&lt;string&gt; | List of repository digests | . | RepoTags | IList&lt;string&gt; | List of repository tags | . | SharedSize | long | Shared size in bytes | . | Size | long | Size in bytes | . | VirtualSize | long | Virtual size in bytes | . docker.volumes() . Gets volumes of local docker . | Name | Type | Description | . | CreatedAt | string | Creation time of the volume | . | Driver | string | Driver used for the volume | . | Labels | IDictionary&lt;string, string&gt; | Set of labels for the volume | . | Mountpoint | string | Mount point for the volume | . | Name | string | Name of the volume | . | Options | IDictionary&lt;string, string&gt; | Set of options for the volume | . | Scope | string | Scope of the volume | . | Status | IDictionary&lt;string, string&gt; | Status information for the volume | . | UsageData | VolumeUsageData | Usage data for the volume | . docker.networks() . Gets networks of local docker . | Name | Type | Description | . | Name | string | Name of the network | . | ID | string | Unique identifier of the network | . | Created | DateTime | Creation time of the network | . | Scope | string | Scope of the network | . | Driver | string | Driver used for the network | . | EnableIPv6 | bool | Flag indicating if IPv6 is enabled | . | IPAM | IPAM | IP Address Management specification | . | Internal | bool | Flag indicating if the network is internal | . | Attachable | bool | Flag indicating if the network is attachable | . | Ingress | bool | Flag indicating if the network is ingress | . | ConfigFrom | ConfigReference | Network configuration source | . | ConfigOnly | bool | Flag indicating if the network is configuration only | . | Containers | IDictionary&lt;string, EndpointResource&gt; | Dictionary of connected containers | . | Options | IDictionary&lt;string, string&gt; | Set of options for the network | . | Labels | IDictionary&lt;string, string&gt; | Set of labels for the network | . | Peers | IList&lt;PeerInfo&gt; | List of network peers | . | Services | IDictionary&lt;string, ServiceInfo&gt; | Dictionary of network services | . ",
    "url": "/data-sources/Docker/windows-x64.html#tables",
    
    "relUrl": "/data-sources/Docker/windows-x64.html#tables"
  },"373": {
    "doc": "Windows X64",
    "title": "Base Methods",
    "content": "Base methods are methods that can be called on the data source specific column. Those methods are automatically inherited and enriches the data source specific methods. Below are those base methods that are exposed by this data source. int RowNumber() . Gets the row number of the current row. string? GetTypeName(object? obj) . Gets the typename of passed object. string AggregateValues(string name) . Aggregates values into a single value. string AggregateValues(string name, int parent) . Aggregates values into a single value. Decimal Avg(string name) . Gets the aggregated average value from the given group name . Decimal Avg(string name, int parent) . Gets the aggregated average value from the given group name . byte? ShiftLeft(byte? value, int shift) . Shifts the value to the left by the specified number of bits. short? ShiftLeft(short? value, int shift) . Shifts the value to the left by the specified number of bits. int? ShiftLeft(int? value, int shift) . Shifts the value to the left by the specified number of bits. long? ShiftLeft(long? value, int shift) . Shifts the value to the left by the specified number of bits. sbyte? ShiftLeft(sbyte? value, int shift) . Shifts the value to the left by the specified number of bits. ushort? ShiftLeft(ushort? value, int shift) . Shifts the value to the left by the specified number of bits. uint? ShiftLeft(uint? value, int shift) . Shifts the value to the left by the specified number of bits. ulong? ShiftLeft(ulong? value, int shift) . Shifts the value to the left by the specified number of bits. byte? ShiftRight(byte? value, int shift) . Shifts the value to the right by the specified number of bits. short? ShiftRight(short? value, int shift) . Shifts the value to the right by the specified number of bits. int? ShiftRight(int? value, int shift) . Shifts the value to the right by the specified number of bits. long? ShiftRight(long? value, int shift) . Shifts the value to the right by the specified number of bits. sbyte? ShiftRight(sbyte? value, int shift) . Shifts the value to the right by the specified number of bits. ushort? ShiftRight(ushort? value, int shift) . Shifts the value to the right by the specified number of bits. uint? ShiftRight(uint? value, int shift) . Shifts the value to the right by the specified number of bits. ulong? ShiftRight(ulong? value, int shift) . Shifts the value to the right by the specified number of bits. byte? Not(byte? value) . Performs bitwise NOT operation on a given value. short? Not(short? value) . Performs bitwise NOT operation on a given value. int? Not(int? value) . Performs bitwise NOT operation on a given value. long? Not(long? value) . Performs bitwise NOT operation on a given value. sbyte? Not(sbyte? value) . Performs bitwise NOT operation on a given value. ushort? Not(ushort? value) . Performs bitwise NOT operation on a given value. uint? Not(uint? value) . Performs bitwise NOT operation on a given value. ulong? Not(ulong? value) . Performs bitwise NOT operation on a given value. byte? And(byte? left, byte? right) . Performs bitwise AND operation on two given values. int? And(byte? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(byte? left, short? right) . Performs bitwise AND operation on two given values. int? And(byte? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(byte? left, int? right) . Performs bitwise AND operation on two given values. uint? And(byte? left, uint? right) . Performs bitwise AND operation on two given values. long? And(byte? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(byte? left, ulong? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, byte? right) . Performs bitwise AND operation on two given values. sbyte? And(sbyte? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, short? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, int? right) . Performs bitwise AND operation on two given values. uint? And(sbyte? left, uint? right) . Performs bitwise AND operation on two given values. long? And(sbyte? left, long? right) . Performs bitwise AND operation on two given values. int? And(short? left, byte? right) . Performs bitwise AND operation on two given values. int? And(short? left, sbyte? right) . Performs bitwise AND operation on two given values. short? And(short? left, short? right) . Performs bitwise AND operation on two given values. int? And(short? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(short? left, int? right) . Performs bitwise AND operation on two given values. uint? And(short? left, uint? right) . Performs bitwise AND operation on two given values. long? And(short? left, long? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, byte? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, short? right) . Performs bitwise AND operation on two given values. ushort? And(ushort? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, int? right) . Performs bitwise AND operation on two given values. uint? And(ushort? left, uint? right) . Performs bitwise AND operation on two given values. long? And(ushort? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(ushort? left, ulong? right) . Performs bitwise AND operation on two given values. int? And(int? left, byte? right) . Performs bitwise AND operation on two given values. int? And(int? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(int? left, short? right) . Performs bitwise AND operation on two given values. int? And(int? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(int? left, int? right) . Performs bitwise AND operation on two given values. uint? And(int? left, uint? right) . Performs bitwise AND operation on two given values. long? And(int? left, long? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, uint? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, byte? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, sbyte? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, short? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, ushort? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, int? right) . Performs bitwise AND operation on two given values. ulong? And(uint? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(uint? left, ulong? right) . Performs bitwise AND operation on two given values. long? And(long? left, long? right) . Performs bitwise AND operation on two given values. long? And(long? left, byte? right) . Performs bitwise AND operation on two given values. long? And(long? left, sbyte? right) . Performs bitwise AND operation on two given values. long? And(long? left, short? right) . Performs bitwise AND operation on two given values. long? And(long? left, ushort? right) . Performs bitwise AND operation on two given values. long? And(long? left, int? right) . Performs bitwise AND operation on two given values. long? And(long? left, uint? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, byte? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, ushort? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, uint? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, ulong? right) . Performs bitwise AND operation on two given values. byte? Or(byte? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, short? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(byte? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(byte? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(byte? left, ulong? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, byte? right) . Performs bitwise OR operation on two given values. sbyte? Or(sbyte? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, short? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(sbyte? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(sbyte? left, long? right) . Performs bitwise OR operation on two given values. int? Or(short? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(short? left, sbyte? right) . Performs bitwise OR operation on two given values. short? Or(short? left, short? right) . Performs bitwise OR operation on two given values. int? Or(short? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(short? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(short? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(short? left, long? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, short? right) . Performs bitwise OR operation on two given values. ushort? Or(ushort? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(ushort? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(ushort? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(ushort? left, ulong? right) . Performs bitwise OR operation on two given values. int? Or(int? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(int? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(int? left, short? right) . Performs bitwise OR operation on two given values. int? Or(int? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(int? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(int? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(int? left, long? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, uint? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, byte? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, sbyte? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, short? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, ushort? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, int? right) . Performs bitwise OR operation on two given values. ulong? Or(uint? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(uint? left, ulong? right) . Performs bitwise OR operation on two given values. long? Or(long? left, long? right) . Performs bitwise OR operation on two given values. long? Or(long? left, byte? right) . Performs bitwise OR operation on two given values. long? Or(long? left, sbyte? right) . Performs bitwise OR operation on two given values. long? Or(long? left, short? right) . Performs bitwise OR operation on two given values. long? Or(long? left, ushort? right) . Performs bitwise OR operation on two given values. long? Or(long? left, int? right) . Performs bitwise OR operation on two given values. long? Or(long? left, uint? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, byte? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, ushort? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, uint? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, ulong? right) . Performs bitwise OR operation on two given values. byte? Xor(byte? left, byte? right) . Performs bitwise OR operation on two given values. int? Xor(byte? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(byte? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(byte? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(byte? left, ulong? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, byte? right) . Performs bitwise Xor operation on two given values. sbyte? Xor(sbyte? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(sbyte? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(sbyte? left, long? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, sbyte? right) . Performs bitwise Xor operation on two given values. short? Xor(short? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, ushort? right) . Performs bitwise XOR operation on two given values. int? Xor(short? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(short? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(short? left, long? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, short? right) . Performs bitwise Xor operation on two given values. ushort? Xor(ushort? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(ushort? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(ushort? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ushort? left, ulong? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(int? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(int? left, long? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, uint? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, byte? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, sbyte? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, short? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, ushort? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, int? right) . Performs bitwise Xor operation on two given values. ulong? Xor(uint? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(uint? left, ulong? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, long? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, byte? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, sbyte? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, short? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, ushort? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, int? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, uint? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, ulong? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, byte? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, ushort? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, uint? right) . Performs bitwise Xor operation on two given values. byte[] GetBytes(string? content) . Gets the bytes from the given string. byte[] GetBytes(string? content, int length, int offset) . Gets the bytes from the given string within given offset and length. byte?[]? GetBytes(char? character) . Gets the bytes from the given character. byte?[]? GetBytes(bool? bit) . Gets the bytes from the given boolean. byte?[]? GetBytes(long? value) . Gets the bytes from the given long. byte?[]? GetBytes(int? value) . Gets the bytes from the given int. byte?[]? GetBytes(short? value) . Gets the bytes from the given short. byte?[]? GetBytes(ulong? value) . Gets the bytes from the given ulong. byte?[]? GetBytes(ushort? value) . Gets the bytes from the given ushort. byte?[]? GetBytes(uint? value) . Gets the bytes from the given uint. byte?[]? GetBytes(Decimal? value) . Gets the bytes from the given decimal. byte?[]? GetBytes(double? value) . Gets the bytes from the given double. byte?[]? GetBytes(float? value) . Gets the bytes from the given float. string? ToBin(byte?[]? bytes, string delimiter) . Converts given bytes to binary with defined delimiter . string ToBin&lt;T&gt;(T value) . Converts given value to binary . string ToOcta&lt;T&gt;(T value) . Converts given value to octal . string ToDec&lt;T&gt;(T value) . Converts given value to decimal . string ToBase64(byte[] value) . Converts given value to string . string ToBase64(byte[] value, int offset, int length) . Converts given array of bytes to string . byte[] FromBase64(string value) . Converts given string to bytes array . bool FromBytesToBool(byte[] value) . Converts bytes to boolean value. short FromBytesToInt16(byte[] value) . Converts bytes to a 16-bit signed integer. ushort FromBytesToUInt16(byte[] value) . Converts bytes to a 16-bit unsigned integer. int FromBytesToInt32(byte[] value) . Converts bytes to a 32-bit signed integer. uint FromBytesToUInt32(byte[] value) . Converts bytes to a 32-bit unsigned integer. long FromBytesToInt64(byte[] value) . Converts bytes to a 64-bit signed integer. ulong FromBytesToUInt64(byte[] value) . Converts bytes to a 64-bit unsigned integer. float FromBytesToFloat(byte[] value) . Converts bytes to a float value. double FromBytesToDouble(byte[] value) . Converts bytes to a float value. string FromBytesToString(byte[] value) . Converts bytes to a string. byte[] ToBytes(bool value) . Converts boolean value to bytes. byte[] ToBytes(short value) . Converts short value to bytes. byte[] ToBytes(ushort value) . Converts ushort value to bytes. byte[] ToBytes(int value) . Converts int value to bytes. byte[] ToBytes(uint value) . Converts uint value to bytes. byte[] ToBytes(long value) . Converts long value to bytes. byte[] ToBytes(ulong value) . Converts long value to bytes. string? ToHex(byte?[]? bytes, string delimiter) . Converts given bytes to hex with defined delimiter . string? ToHex&lt;T&gt;(T value) . Converts given value to binary . int Count(string name) . Gets the count value of a given group. int Count(string name, int parent) . Gets the count value of a given group. int ExtractFromDate(string? date, string partOfDate) . Extracts part of the date from the date . int ExtractFromDate(string date, string culture, string partOfDate) . Extracts part of the date from the date based on given culture . DateTimeOffset? GetDate() . Gets the current datetime . DateTimeOffset? UtcGetDate() . Gets the current datetime in UTC . int? Month(DateTimeOffset? value) . Gets the month from DateTimeOffset . int? Year(DateTimeOffset? value) . Gets the year from DateTimeOffset . int? Day(DateTimeOffset? value) . Gets the day from DateTimeOffset . int? Hour(DateTimeOffset? value) . Gets the hour from DateTimeOffset . int? Minute(DateTimeOffset? value) . Gets the minute from DateTimeOffset . int? Second(DateTimeOffset? value) . Gets the second from DateTimeOffset . int? Milliseconds(DateTimeOffset? value) . Gets the millisecond from DateTimeOffset . int? DayOfWeek(DateTimeOffset? value) . Gets the day of week from DateTimeOffset . TimeSpan? ExtractTimeSpan(DateTimeOffset? dateTimeOffset) . Extracts time from DateTimeOffset . DateTime? ToDateTimeOffset(string value) . Converts given value to DateTimeOffset . DateTimeOffset? ToDateTimeOffset(string value, string culture) . Converts given value to DateTimeOffset . IEnumerable&lt;T&gt;? Skip&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? skipCount) . Skips elements from the beginning of the sequence. IEnumerable&lt;T&gt;? Take&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? takeCount) . Takes elements from the beginning of the sequence. IEnumerable&lt;T&gt;? SkipAndTake&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? skipCount, int? takeCount) . Skip and takes elements from the beginning of the sequence. T[]? EnumerableToArray&lt;T&gt;(IEnumerable&lt;T&gt;? values) . Turn array arguments of T into a single array. T[]? MergeArrays&lt;T&gt;(T[][]? values) . Turn array arguments of T into a single array. IEnumerable&lt;T&gt;? LongestCommonSequence&lt;T&gt;(IEnumerable&lt;T&gt;? source, IEnumerable&lt;T&gt;? pattern) . Computes longest common sequence of two given sequences . T? GetElementAtOrDefault&lt;T&gt;(IEnumerable&lt;T&gt;? enumerable, int? index) . Gets the element at the specified index in a sequence . int? Length&lt;T&gt;(IEnumerable&lt;T&gt;? enumerable) . Gets the length of the sequence . int? Length&lt;T&gt;(T[]? array) . Gets the length of the array . T? Choose&lt;T&gt;(int? index, T[] values) . Gets the value of an array at the specified index . T If&lt;T&gt;(bool expressionResult, T a, T b) . Chose a or b value based on the expression result . bool? Match(string? regex, string? content) . Determine whether content matches the specified pattern . byte? Coalesce(byte?[] array) . Gets the first non-null value in a list . sbyte? Coalesce(sbyte?[] array) . Gets the first non-null value in a list . short? Coalesce(short?[] array) . Gets the first non-null value in a list . ushort? Coalesce(ushort?[] array) . Gets the first non-null value in a list . int? Coalesce(int?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(uint?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(long?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(ulong?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(Decimal?[] array) . Gets the first non-null value in a list . T? Coalesce&lt;T&gt;(T[] array) . Gets the first non-null value in a list . IEnumerable&lt;T&gt;? Distinct&lt;T&gt;(IEnumerable&lt;T&gt;? values) . Returns distinct elements from a collection. string? Md5(string? content) . Gets the md5 hash of the given string. string? Md5(byte?[]? content) . Gets the md5 hash of the given bytes array. string? Sha1(string? content) . Gets the sha256 hash of the given string. string? Sha1(byte?[]? content) . Gets the sha256 hash of the given bytes array. string? Sha256(string? content) . Gets the sha256 hash of the given string. string? Sha256(byte?[]? content) . Gets the sha256 hash of the given bytes array. string? Sha512(string? content) . Gets the sha256 hash of the given string. string? Sha512(byte?[]? content) . Gets the sha256 hash of the bytes array. string? ToJson&lt;T&gt;(T? obj) . Converts object to json. string[] ExtractFromJsonToArray(string? json, string? path) . Extracts values from json by path. string? ExtractFromJson(string? json, string? path) . Extracts values from json by path and joins them with comma. Decimal? Abs(Decimal? value) . Gets the absolute value . long? Abs(long? value) . Gets the absolute value . int? Abs(int? value) . Gets the absolute value . Decimal? Ceil(Decimal? value) . Gets the ceiling value . Decimal? Floor(Decimal? value) . Gets the floor value . Decimal? Sign(Decimal? value) . Determine whether value is greater, equal or less that zero . long? Sign(long? value) . Determine whether value is greater, equal or less that zero . Decimal? Round(Decimal? value, int precision) . Rounds the value within given precision . Decimal? PercentOf(Decimal? value, Decimal? max) . Gets the percentage of the value . int Rand() . Gets the random integer value . int? Rand(int? min, int? max) . Gets the random integer value . double? Pow(Decimal? x, Decimal? y) . Computes the pow between two values . double? Pow(double? x, double? y) . Computes the pow between two values . double? Sqrt(Decimal? x) . Computes the sqrt of a given value . double? Sqrt(double? x) . Computes the sqrt of a given value . double? Sqrt(long? x) . Computes the sqrt of a given value . double? PercentRank&lt;T&gt;(IEnumerable&lt;T&gt;? window, T? value) . Computes the percent rank of a given window . double? Log(Decimal? base, Decimal? value) . Calculates the logarithm of a value with a specified base. Decimal? Sin(Decimal? value) . Calculates sine of a value. double? Sin(double? value) . Calculates sine of a value. float? Sin(float? value) . Calculates sine of a value. Decimal? Cos(Decimal? value) . Calculates cosine of a value. double? Cos(double? value) . Calculates cosine of a value. float? Cos(float? value) . Calculates cosine of a value. Decimal Max(string name) . Gets the max value of a given group. Decimal Max(string name, int parent) . Gets the max value of a given group. Decimal Min(string name) . Gets the min value of a given group. Decimal Min(string name, int parent) . Gets the min value of a given group. Decimal StDev(string name, int parent) . Gets the StDev value of a given group. string NewId() . Gets the new identifier . string? Trim(string? value) . Removes leading and trailing whitespace from a string. string? TrimStart(string? value) . Removes leading whitespace from a string. string? TrimEnd(string? value) . Removes trailing whitespace from a string. string? Substring(string? value, int? index, int? length) . Gets the substring from the string. string? Substring(string value, int? length) . Gets the substring from the string . string? Concat(string[]? strings) . Concatenates the specified values . string? Concat(char?[]? characters) . Concatenates the specified characters . string? Concat(string? firstString, char?[]? chars) . Concatenates specified string fir characters . string? Concat(char? firstChar, string[]? strings) . Concatenate specific character with strings . string? Concat(object[]? objects) . Concatenates the specified strings . string? Concat&lt;T&gt;(T[]? objects) . Concatenates the specified strings . bool? Contains(string? content, string? what) . Determine whether the string contains the specified value . int? IndexOf(string? value, string? text) . Position of the first occurrence of the specified value . string? Soundex(string? value) . Computes soundex for the specified value . bool HasFuzzyMatchedWord(string text, string word, string separator) . Matches the specified text by splitting it with separator and applying fuzzy comparison . bool HasWordThatHasSmallerLevenshteinDistanceThan(string text, string word, int distance, string separator) . Matches the specified text by splitting it with separator and applying fuzzy comparison with a given distance . bool HasWordThatSoundLike(string text, string word, string separator) . Matches whether the specified word is present after being fuzzified within the specified text . bool HasTextThatSoundLikeSentence(string text, string sentence, string separator) . Matches whether the specified text is present in sentence after being fuzified . string? ToUpper(string value) . Makes the string uppercase . string? ToUpper(string value, string culture) . Makes the string uppercase within specified culture . string? ToUpperInvariant(string value) . Makes the string uppercase . string? ToLower(string value) . Makes the string lowercase . string? ToLower(string value, string culture) . Makes the string lowercase within specified culture . string? ToLowerInvariant(string value) . Makes the string lowercase . string? PadLeft(string? value, string? character, int? totalWidth) . Returns a new string that right-aligns the characters in this instance by padding them on the left with a specified Unicode character, for a specified total lengt . string? PadRight(string? value, string? character, int? totalWidth) . Returns a new string that left-aligns the characters in this instance by padding them on the right with a specified Unicode character, for a specified total length . string? Head(string? value, int? length) . Gets the first N characters of the string . string? Tail(string? value, int? length) . Gets the last N characters of the string . int? LevenshteinDistance(string? firstValue, string? secondValue) . Computes the Levenshtein distance between two strings . char? GetCharacterOf(string value, int index) . Gets the character at specified index . string? Reverse(string? value) . Reverses the string . string[] Split(string value, string[] separators) . Splits the string into an array of substrings based on the specified separators . char[] ToCharArray(string value) . Splits the string into an array of characters . string? LongestCommonSubstring(string source, string pattern) . Computes the longest common subsequence between two source and pattern . string Replicate(string value, int integer) . Clones the value n times . string? Translate(string? value, string? characters, string? translations) . Returns the string from the first argument after the characters specified in the second argument are translated into the characters specified in the third argument. string? Replace(string? text, string lookFor, string? changeTo) . Replaces the first occurrence of a specified string in this instance with another specified string . string? ToTitleCase(string? value) . Capitalizes the first letter of the string . string? GetNthWord(string? text, int? wordIndex, string? separator) . Gets the nth word of the string . string? GetFirstWord(string text, string separator) . Gets the first word of the string . string? GetSecondWord(string text, string separator) . Gets the second word of the string . string? GetThirdWord(string text, string separator) . Gets the third word of the string . string? GetLastWord(string? text, string? separator) . Gets last word of the string . bool? IsNullOrEmpty(string? value) . Determines whether the string is null or empty . bool? IsNullOrWhiteSpace(string? value) . Determines whether the string is null or whitespace . string? UrlEncode(string? value) . Encodes the value . string? UrlDecode(string? value) . Decodes the value . string? UriEncode(string? value) . Encodes the value . string? UriDecode(string? value) . Decodes the value . bool? StartsWith(string? value, string? prefix) . Determines whether the string starts with the specified prefix . bool? StartsWith(string? value, string? prefix, string comparison) . Determines whether the string starts with the specified prefix . bool? EndsWith(string? value, string? suffix) . Determines whether the string ends with the specified suffix . bool? EndsWith(string? value, string? suffix, string comparison) . Determines whether the string ends with the specified suffix . string? RegexReplace(string? value, string? pattern, string? replacement) . Replace the specified value part that matches the pattern with the replacement . string[]? SplitByLinuxNewLines(string? input) . Split string by Linux-style newlines (\\n) . string[]? SplitByWindowsNewLines(string? input) . Split string by Windows-style newlines (\\r\\n) . string[]? SplitByNewLines(string? input) . Smart split that handles both Windows (\\r\\n) and Linux (\\n) newlines . Decimal Sum(string name) . Gets the sum value of a given group. Decimal Sum(string name, int parent) . Gets the sum value of a given group. Decimal SumIncome(string name) . Gets the sum value of a given group. Decimal SumIncome(string name, int parent) . Gets the sum value of a given group. Decimal SumOutcome(string name) . Gets the outcome value of a given group. Decimal SumOutcome(string name, int parent) . Gets the outcome value of a given group. TimeSpan? SumTimeSpan(string name) . Gets the sum value of a given group. TimeSpan? SumTimeSpan(string name, int parent) . Gets the sum value of a given group. TimeSpan? MinTimeSpan(string name) . Gets the min value of a given group. TimeSpan? MinTimeSpan(string name, int parent) . Gets the min value of a given group. TimeSpan? MaxTimeSpan(string name) . Gets the max value of a given group. TimeSpan? MaxTimeSpan(string name, int parent) . Gets the min value of a given group. char? ToChar(string? value) . Converts given value to character . char? ToChar(int? value) . Converts given value to character . char? ToChar(short? value) . Converts given value to character . char? ToChar(byte? value) . Converts given value to character . char? ToChar(object? value) . Converts given value to character . DateTime? ToDateTime(string value) . Converts given value to DateTime . DateTime? ToDateTime(string value, string culture) . Converts given value to DateTime . Decimal? ToDecimal(string? value) . Converts given value to decimal . Decimal? ToDecimal(string value, string culture) . Converts given value to decimal withing given culture . Decimal? ToDecimal(byte? value) . Converts given value to Decimal . Decimal? ToDecimal(sbyte? value) . Converts given value to Decimal . Decimal? ToDecimal(short? value) . Converts given value to Decimal . Decimal? ToDecimal(ushort? value) . Converts given value to Decimal . Decimal? ToDecimal(long? value) . Converts given value to Decimal . Decimal? ToDecimal(ulong? value) . Converts given value to Decimal . Decimal? ToDecimal(float? value) . Converts given value to Decimal . Decimal? ToDecimal(double? value) . Converts given value to Decimal . Decimal? ToDecimal(object? value) . Converts given value to Decimal . double? ToDouble(object? value) . Converts given value to double . double? ToDouble(string? value) . Converts given value to double . double? ToDouble(byte? value) . Converts given value to double . double? ToDouble(sbyte? value) . Converts given value to double . double? ToDouble(short? value) . Converts given value to double . double? ToDouble(ushort? value) . Converts given value to double . double? ToDouble(int? value) . Converts given value to double . double? ToDouble(uint? value) . Converts given value to double . double? ToDouble(long? value) . Converts given value to double . double? ToDouble(ulong? value) . Converts given value to double . double? ToDouble(float? value) . Converts given value to double . double? ToDouble(double? value) . Converts given value to double . double? ToDouble(Decimal? value) . Converts given value to double . float? ToFloat(string? value) . Converts given value to float . float? ToFloat(byte? value) . Converts given value to float . float? ToFloat(sbyte? value) . Converts given value to float . float? ToFloat(short? value) . Converts given value to float . float? ToFloat(ushort? value) . Converts given value to float . float? ToFloat(int? value) . Converts given value to float . float? ToFloat(uint? value) . Converts given value to float . float? ToFloat(long? value) . Converts given value to float . float? ToFloat(ulong? value) . Converts given value to float . float? ToFloat(float? value) . Converts given value to float . float? ToFloat(Decimal? value) . Converts given value to float . int? ToInt32(string value) . Converts given value to int . int? ToInt32(byte? value) . Converts given value to int . int? ToInt32(sbyte? value) . Converts given value to int . int? ToInt32(short? value) . Converts given value to int . int? ToInt32(ushort? value) . Converts given value to int . int? ToInt32(int? value) . Converts given value to int . int? ToInt32(uint? value) . Converts given value to int . int? ToInt32(long? value) . Converts given value to int . int? ToInt32(ulong? value) . Converts given value to int . int? ToInt32(float? value) . Converts given value to int . int? ToInt32(double? value) . Converts given value to int . int? ToInt32(Decimal? value) . Converts given value to int . int? ToInt32(object? value) . Converts given value to int . long? ToInt64(string value) . Converts given value to Int64 . long? ToInt64(byte? value) . Converts given value to long . long? ToInt64(sbyte? value) . Converts given value to long . long? ToInt64(short? value) . Converts given value to long . long? ToInt64(ushort? value) . Converts given value to long . long? ToInt64(int? value) . Converts given value to long . long? ToInt64(uint? value) . Converts given value to long . long? ToInt64(long? value) . Converts given value to long . long? ToInt64(ulong? value) . Converts given value to long . long? ToInt64(float? value) . Converts given value to long . long? ToInt64(double? value) . Converts given value to long . long? ToInt64(Decimal? value) . Converts given value to long . long? ToInt64(object? value) . Converts given value to long . string? ToString(char? value) . Converts given value to string . string? ToString(DateTimeOffset? value) . Converts given value to string . string? ToString(DateTimeOffset? value, string format) . Converts given value to string . string? ToString(byte? value) . Converts given value to string . string? ToString(byte? value, string format) . Converts given value to string . string? ToString(sbyte? value) . Converts given value to string . string? ToString(sbyte? value, string format) . Converts given value to string . string? ToString(int? value) . Converts given value to string . string? ToString(int? value, string format) . Converts given value to string . string? ToString(uint? value) . Converts given value to string . string? ToString(uint? value, string format) . Converts given value to string . string? ToString(long? value) . Converts given value to string . string? ToString(long? value, string format) . Converts given value to string . string? ToString(ulong? value) . Converts given value to string . string? ToString(ulong? value, string format) . Converts given value to string . string? ToString(float? value) . Converts given value to string . string? ToString(float? value, string format) . Converts given value to string . string? ToString(double? value) . Converts given value to string . string? ToString(double? value, string format) . Converts given value to string . string? ToString(Decimal? value) . Converts given value to string . string? ToString(Decimal? value, string format) . Converts given value to string . string? ToString(bool? value) . Converts given value to string . string? ToString(object? value) . Converts given value to string . string? ToString&lt;T&gt;(T? value) . Converts given value to string . string ToString(string[] value) . Converts given value to string . string ToString&lt;T&gt;(T[] value) . Converts given value to string . TimeSpan? ToTimeSpan(string value) . Converts given value to TimeSpan . TimeSpan? ToTimeSpan(string value, string culture) . Converts given value to TimeSpan . IEnumerable&lt;T&gt; Window&lt;T&gt;(string name) . Gets the window . ",
    "url": "/data-sources/Docker/windows-x64.html#base-methods",
    
    "relUrl": "/data-sources/Docker/windows-x64.html#base-methods"
  },"374": {
    "doc": "Windows X64",
    "title": "Windows X64",
    "content": " ",
    "url": "/data-sources/Docker/windows-x64.html",
    
    "relUrl": "/data-sources/Docker/windows-x64.html"
  },"375": {
    "doc": "Windows X64",
    "title": "Musoq.DataSources.Sqlite",
    "content": "Provides ability to work with sqlite database . ",
    "url": "/data-sources/Sqlite/windows-x64.html#musoqdatasourcessqlite",
    
    "relUrl": "/data-sources/Sqlite/windows-x64.html#musoqdatasourcessqlite"
  },"376": {
    "doc": "Windows X64",
    "title": "Tables",
    "content": "Table is a collection of rows and columns that the plugin exposes. Below are the tables that are exposed by this data source. sqlite.tableName() . Gives ability to process sqlite table . Environment variables . In order to use the plugin, the user must set any required environment variables as specified in the environments element. Failure to do so may result in the plugin not functioning correctly. | Name | Is required | Description | . | SQLITE_CONNECTION_STRING | true | Sqlite connection string | . Columns . This table has a dynamic structure, which means that its columns and other details cannot be determined until runtime. As a result, it is not possible to include a complete description of this table in the documentation. Instead, the actual columns and other details of this table will be determined at runtime. ",
    "url": "/data-sources/Sqlite/windows-x64.html#tables",
    
    "relUrl": "/data-sources/Sqlite/windows-x64.html#tables"
  },"377": {
    "doc": "Windows X64",
    "title": "Base Methods",
    "content": "Base methods are methods that can be called on the data source specific column. Those methods are automatically inherited and enriches the data source specific methods. Below are those base methods that are exposed by this data source. int RowNumber() . Gets the row number of the current row. string? GetTypeName(object? obj) . Gets the typename of passed object. string AggregateValues(string name) . Aggregates values into a single value. string AggregateValues(string name, int parent) . Aggregates values into a single value. Decimal Avg(string name) . Gets the aggregated average value from the given group name . Decimal Avg(string name, int parent) . Gets the aggregated average value from the given group name . byte? ShiftLeft(byte? value, int shift) . Shifts the value to the left by the specified number of bits. short? ShiftLeft(short? value, int shift) . Shifts the value to the left by the specified number of bits. int? ShiftLeft(int? value, int shift) . Shifts the value to the left by the specified number of bits. long? ShiftLeft(long? value, int shift) . Shifts the value to the left by the specified number of bits. sbyte? ShiftLeft(sbyte? value, int shift) . Shifts the value to the left by the specified number of bits. ushort? ShiftLeft(ushort? value, int shift) . Shifts the value to the left by the specified number of bits. uint? ShiftLeft(uint? value, int shift) . Shifts the value to the left by the specified number of bits. ulong? ShiftLeft(ulong? value, int shift) . Shifts the value to the left by the specified number of bits. byte? ShiftRight(byte? value, int shift) . Shifts the value to the right by the specified number of bits. short? ShiftRight(short? value, int shift) . Shifts the value to the right by the specified number of bits. int? ShiftRight(int? value, int shift) . Shifts the value to the right by the specified number of bits. long? ShiftRight(long? value, int shift) . Shifts the value to the right by the specified number of bits. sbyte? ShiftRight(sbyte? value, int shift) . Shifts the value to the right by the specified number of bits. ushort? ShiftRight(ushort? value, int shift) . Shifts the value to the right by the specified number of bits. uint? ShiftRight(uint? value, int shift) . Shifts the value to the right by the specified number of bits. ulong? ShiftRight(ulong? value, int shift) . Shifts the value to the right by the specified number of bits. byte? Not(byte? value) . Performs bitwise NOT operation on a given value. short? Not(short? value) . Performs bitwise NOT operation on a given value. int? Not(int? value) . Performs bitwise NOT operation on a given value. long? Not(long? value) . Performs bitwise NOT operation on a given value. sbyte? Not(sbyte? value) . Performs bitwise NOT operation on a given value. ushort? Not(ushort? value) . Performs bitwise NOT operation on a given value. uint? Not(uint? value) . Performs bitwise NOT operation on a given value. ulong? Not(ulong? value) . Performs bitwise NOT operation on a given value. byte? And(byte? left, byte? right) . Performs bitwise AND operation on two given values. int? And(byte? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(byte? left, short? right) . Performs bitwise AND operation on two given values. int? And(byte? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(byte? left, int? right) . Performs bitwise AND operation on two given values. uint? And(byte? left, uint? right) . Performs bitwise AND operation on two given values. long? And(byte? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(byte? left, ulong? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, byte? right) . Performs bitwise AND operation on two given values. sbyte? And(sbyte? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, short? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, int? right) . Performs bitwise AND operation on two given values. uint? And(sbyte? left, uint? right) . Performs bitwise AND operation on two given values. long? And(sbyte? left, long? right) . Performs bitwise AND operation on two given values. int? And(short? left, byte? right) . Performs bitwise AND operation on two given values. int? And(short? left, sbyte? right) . Performs bitwise AND operation on two given values. short? And(short? left, short? right) . Performs bitwise AND operation on two given values. int? And(short? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(short? left, int? right) . Performs bitwise AND operation on two given values. uint? And(short? left, uint? right) . Performs bitwise AND operation on two given values. long? And(short? left, long? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, byte? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, short? right) . Performs bitwise AND operation on two given values. ushort? And(ushort? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, int? right) . Performs bitwise AND operation on two given values. uint? And(ushort? left, uint? right) . Performs bitwise AND operation on two given values. long? And(ushort? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(ushort? left, ulong? right) . Performs bitwise AND operation on two given values. int? And(int? left, byte? right) . Performs bitwise AND operation on two given values. int? And(int? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(int? left, short? right) . Performs bitwise AND operation on two given values. int? And(int? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(int? left, int? right) . Performs bitwise AND operation on two given values. uint? And(int? left, uint? right) . Performs bitwise AND operation on two given values. long? And(int? left, long? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, uint? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, byte? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, sbyte? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, short? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, ushort? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, int? right) . Performs bitwise AND operation on two given values. ulong? And(uint? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(uint? left, ulong? right) . Performs bitwise AND operation on two given values. long? And(long? left, long? right) . Performs bitwise AND operation on two given values. long? And(long? left, byte? right) . Performs bitwise AND operation on two given values. long? And(long? left, sbyte? right) . Performs bitwise AND operation on two given values. long? And(long? left, short? right) . Performs bitwise AND operation on two given values. long? And(long? left, ushort? right) . Performs bitwise AND operation on two given values. long? And(long? left, int? right) . Performs bitwise AND operation on two given values. long? And(long? left, uint? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, byte? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, ushort? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, uint? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, ulong? right) . Performs bitwise AND operation on two given values. byte? Or(byte? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, short? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(byte? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(byte? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(byte? left, ulong? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, byte? right) . Performs bitwise OR operation on two given values. sbyte? Or(sbyte? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, short? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(sbyte? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(sbyte? left, long? right) . Performs bitwise OR operation on two given values. int? Or(short? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(short? left, sbyte? right) . Performs bitwise OR operation on two given values. short? Or(short? left, short? right) . Performs bitwise OR operation on two given values. int? Or(short? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(short? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(short? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(short? left, long? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, short? right) . Performs bitwise OR operation on two given values. ushort? Or(ushort? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(ushort? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(ushort? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(ushort? left, ulong? right) . Performs bitwise OR operation on two given values. int? Or(int? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(int? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(int? left, short? right) . Performs bitwise OR operation on two given values. int? Or(int? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(int? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(int? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(int? left, long? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, uint? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, byte? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, sbyte? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, short? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, ushort? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, int? right) . Performs bitwise OR operation on two given values. ulong? Or(uint? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(uint? left, ulong? right) . Performs bitwise OR operation on two given values. long? Or(long? left, long? right) . Performs bitwise OR operation on two given values. long? Or(long? left, byte? right) . Performs bitwise OR operation on two given values. long? Or(long? left, sbyte? right) . Performs bitwise OR operation on two given values. long? Or(long? left, short? right) . Performs bitwise OR operation on two given values. long? Or(long? left, ushort? right) . Performs bitwise OR operation on two given values. long? Or(long? left, int? right) . Performs bitwise OR operation on two given values. long? Or(long? left, uint? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, byte? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, ushort? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, uint? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, ulong? right) . Performs bitwise OR operation on two given values. byte? Xor(byte? left, byte? right) . Performs bitwise OR operation on two given values. int? Xor(byte? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(byte? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(byte? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(byte? left, ulong? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, byte? right) . Performs bitwise Xor operation on two given values. sbyte? Xor(sbyte? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(sbyte? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(sbyte? left, long? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, sbyte? right) . Performs bitwise Xor operation on two given values. short? Xor(short? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, ushort? right) . Performs bitwise XOR operation on two given values. int? Xor(short? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(short? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(short? left, long? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, short? right) . Performs bitwise Xor operation on two given values. ushort? Xor(ushort? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(ushort? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(ushort? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ushort? left, ulong? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(int? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(int? left, long? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, uint? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, byte? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, sbyte? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, short? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, ushort? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, int? right) . Performs bitwise Xor operation on two given values. ulong? Xor(uint? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(uint? left, ulong? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, long? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, byte? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, sbyte? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, short? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, ushort? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, int? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, uint? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, ulong? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, byte? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, ushort? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, uint? right) . Performs bitwise Xor operation on two given values. byte[] GetBytes(string? content) . Gets the bytes from the given string. byte[] GetBytes(string? content, int length, int offset) . Gets the bytes from the given string within given offset and length. byte?[]? GetBytes(char? character) . Gets the bytes from the given character. byte?[]? GetBytes(bool? bit) . Gets the bytes from the given boolean. byte?[]? GetBytes(long? value) . Gets the bytes from the given long. byte?[]? GetBytes(int? value) . Gets the bytes from the given int. byte?[]? GetBytes(short? value) . Gets the bytes from the given short. byte?[]? GetBytes(ulong? value) . Gets the bytes from the given ulong. byte?[]? GetBytes(ushort? value) . Gets the bytes from the given ushort. byte?[]? GetBytes(uint? value) . Gets the bytes from the given uint. byte?[]? GetBytes(Decimal? value) . Gets the bytes from the given decimal. byte?[]? GetBytes(double? value) . Gets the bytes from the given double. byte?[]? GetBytes(float? value) . Gets the bytes from the given float. string? ToBin(byte?[]? bytes, string delimiter) . Converts given bytes to binary with defined delimiter . string ToBin&lt;T&gt;(T value) . Converts given value to binary . string ToOcta&lt;T&gt;(T value) . Converts given value to octal . string ToDec&lt;T&gt;(T value) . Converts given value to decimal . string ToBase64(byte[] value) . Converts given value to string . string ToBase64(byte[] value, int offset, int length) . Converts given array of bytes to string . byte[] FromBase64(string value) . Converts given string to bytes array . bool FromBytesToBool(byte[] value) . Converts bytes to boolean value. short FromBytesToInt16(byte[] value) . Converts bytes to a 16-bit signed integer. ushort FromBytesToUInt16(byte[] value) . Converts bytes to a 16-bit unsigned integer. int FromBytesToInt32(byte[] value) . Converts bytes to a 32-bit signed integer. uint FromBytesToUInt32(byte[] value) . Converts bytes to a 32-bit unsigned integer. long FromBytesToInt64(byte[] value) . Converts bytes to a 64-bit signed integer. ulong FromBytesToUInt64(byte[] value) . Converts bytes to a 64-bit unsigned integer. float FromBytesToFloat(byte[] value) . Converts bytes to a float value. double FromBytesToDouble(byte[] value) . Converts bytes to a float value. string FromBytesToString(byte[] value) . Converts bytes to a string. byte[] ToBytes(bool value) . Converts boolean value to bytes. byte[] ToBytes(short value) . Converts short value to bytes. byte[] ToBytes(ushort value) . Converts ushort value to bytes. byte[] ToBytes(int value) . Converts int value to bytes. byte[] ToBytes(uint value) . Converts uint value to bytes. byte[] ToBytes(long value) . Converts long value to bytes. byte[] ToBytes(ulong value) . Converts long value to bytes. string? ToHex(byte?[]? bytes, string delimiter) . Converts given bytes to hex with defined delimiter . string? ToHex&lt;T&gt;(T value) . Converts given value to binary . int Count(string name) . Gets the count value of a given group. int Count(string name, int parent) . Gets the count value of a given group. int ExtractFromDate(string? date, string partOfDate) . Extracts part of the date from the date . int ExtractFromDate(string date, string culture, string partOfDate) . Extracts part of the date from the date based on given culture . DateTimeOffset? GetDate() . Gets the current datetime . DateTimeOffset? UtcGetDate() . Gets the current datetime in UTC . int? Month(DateTimeOffset? value) . Gets the month from DateTimeOffset . int? Year(DateTimeOffset? value) . Gets the year from DateTimeOffset . int? Day(DateTimeOffset? value) . Gets the day from DateTimeOffset . int? Hour(DateTimeOffset? value) . Gets the hour from DateTimeOffset . int? Minute(DateTimeOffset? value) . Gets the minute from DateTimeOffset . int? Second(DateTimeOffset? value) . Gets the second from DateTimeOffset . int? Milliseconds(DateTimeOffset? value) . Gets the millisecond from DateTimeOffset . int? DayOfWeek(DateTimeOffset? value) . Gets the day of week from DateTimeOffset . TimeSpan? ExtractTimeSpan(DateTimeOffset? dateTimeOffset) . Extracts time from DateTimeOffset . DateTime? ToDateTimeOffset(string value) . Converts given value to DateTimeOffset . DateTimeOffset? ToDateTimeOffset(string value, string culture) . Converts given value to DateTimeOffset . IEnumerable&lt;T&gt;? Skip&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? skipCount) . Skips elements from the beginning of the sequence. IEnumerable&lt;T&gt;? Take&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? takeCount) . Takes elements from the beginning of the sequence. IEnumerable&lt;T&gt;? SkipAndTake&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? skipCount, int? takeCount) . Skip and takes elements from the beginning of the sequence. T[]? EnumerableToArray&lt;T&gt;(IEnumerable&lt;T&gt;? values) . Turn array arguments of T into a single array. T[]? MergeArrays&lt;T&gt;(T[][]? values) . Turn array arguments of T into a single array. IEnumerable&lt;T&gt;? LongestCommonSequence&lt;T&gt;(IEnumerable&lt;T&gt;? source, IEnumerable&lt;T&gt;? pattern) . Computes longest common sequence of two given sequences . T? GetElementAtOrDefault&lt;T&gt;(IEnumerable&lt;T&gt;? enumerable, int? index) . Gets the element at the specified index in a sequence . int? Length&lt;T&gt;(IEnumerable&lt;T&gt;? enumerable) . Gets the length of the sequence . int? Length&lt;T&gt;(T[]? array) . Gets the length of the array . T? Choose&lt;T&gt;(int? index, T[] values) . Gets the value of an array at the specified index . T If&lt;T&gt;(bool expressionResult, T a, T b) . Chose a or b value based on the expression result . bool? Match(string? regex, string? content) . Determine whether content matches the specified pattern . byte? Coalesce(byte?[] array) . Gets the first non-null value in a list . sbyte? Coalesce(sbyte?[] array) . Gets the first non-null value in a list . short? Coalesce(short?[] array) . Gets the first non-null value in a list . ushort? Coalesce(ushort?[] array) . Gets the first non-null value in a list . int? Coalesce(int?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(uint?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(long?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(ulong?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(Decimal?[] array) . Gets the first non-null value in a list . T? Coalesce&lt;T&gt;(T[] array) . Gets the first non-null value in a list . IEnumerable&lt;T&gt;? Distinct&lt;T&gt;(IEnumerable&lt;T&gt;? values) . Returns distinct elements from a collection. string? Md5(string? content) . Gets the md5 hash of the given string. string? Md5(byte?[]? content) . Gets the md5 hash of the given bytes array. string? Sha1(string? content) . Gets the sha256 hash of the given string. string? Sha1(byte?[]? content) . Gets the sha256 hash of the given bytes array. string? Sha256(string? content) . Gets the sha256 hash of the given string. string? Sha256(byte?[]? content) . Gets the sha256 hash of the given bytes array. string? Sha512(string? content) . Gets the sha256 hash of the given string. string? Sha512(byte?[]? content) . Gets the sha256 hash of the bytes array. string? ToJson&lt;T&gt;(T? obj) . Converts object to json. string[] ExtractFromJsonToArray(string? json, string? path) . Extracts values from json by path. string? ExtractFromJson(string? json, string? path) . Extracts values from json by path and joins them with comma. Decimal? Abs(Decimal? value) . Gets the absolute value . long? Abs(long? value) . Gets the absolute value . int? Abs(int? value) . Gets the absolute value . Decimal? Ceil(Decimal? value) . Gets the ceiling value . Decimal? Floor(Decimal? value) . Gets the floor value . Decimal? Sign(Decimal? value) . Determine whether value is greater, equal or less that zero . long? Sign(long? value) . Determine whether value is greater, equal or less that zero . Decimal? Round(Decimal? value, int precision) . Rounds the value within given precision . Decimal? PercentOf(Decimal? value, Decimal? max) . Gets the percentage of the value . int Rand() . Gets the random integer value . int? Rand(int? min, int? max) . Gets the random integer value . double? Pow(Decimal? x, Decimal? y) . Computes the pow between two values . double? Pow(double? x, double? y) . Computes the pow between two values . double? Sqrt(Decimal? x) . Computes the sqrt of a given value . double? Sqrt(double? x) . Computes the sqrt of a given value . double? Sqrt(long? x) . Computes the sqrt of a given value . double? PercentRank&lt;T&gt;(IEnumerable&lt;T&gt;? window, T? value) . Computes the percent rank of a given window . double? Log(Decimal? base, Decimal? value) . Calculates the logarithm of a value with a specified base. Decimal? Sin(Decimal? value) . Calculates sine of a value. double? Sin(double? value) . Calculates sine of a value. float? Sin(float? value) . Calculates sine of a value. Decimal? Cos(Decimal? value) . Calculates cosine of a value. double? Cos(double? value) . Calculates cosine of a value. float? Cos(float? value) . Calculates cosine of a value. Decimal Max(string name) . Gets the max value of a given group. Decimal Max(string name, int parent) . Gets the max value of a given group. Decimal Min(string name) . Gets the min value of a given group. Decimal Min(string name, int parent) . Gets the min value of a given group. Decimal StDev(string name, int parent) . Gets the StDev value of a given group. string NewId() . Gets the new identifier . string? Trim(string? value) . Removes leading and trailing whitespace from a string. string? TrimStart(string? value) . Removes leading whitespace from a string. string? TrimEnd(string? value) . Removes trailing whitespace from a string. string? Substring(string? value, int? index, int? length) . Gets the substring from the string. string? Substring(string value, int? length) . Gets the substring from the string . string? Concat(string[]? strings) . Concatenates the specified values . string? Concat(char?[]? characters) . Concatenates the specified characters . string? Concat(string? firstString, char?[]? chars) . Concatenates specified string fir characters . string? Concat(char? firstChar, string[]? strings) . Concatenate specific character with strings . string? Concat(object[]? objects) . Concatenates the specified strings . string? Concat&lt;T&gt;(T[]? objects) . Concatenates the specified strings . bool? Contains(string? content, string? what) . Determine whether the string contains the specified value . int? IndexOf(string? value, string? text) . Position of the first occurrence of the specified value . string? Soundex(string? value) . Computes soundex for the specified value . bool HasFuzzyMatchedWord(string text, string word, string separator) . Matches the specified text by splitting it with separator and applying fuzzy comparison . bool HasWordThatHasSmallerLevenshteinDistanceThan(string text, string word, int distance, string separator) . Matches the specified text by splitting it with separator and applying fuzzy comparison with a given distance . bool HasWordThatSoundLike(string text, string word, string separator) . Matches whether the specified word is present after being fuzzified within the specified text . bool HasTextThatSoundLikeSentence(string text, string sentence, string separator) . Matches whether the specified text is present in sentence after being fuzified . string? ToUpper(string value) . Makes the string uppercase . string? ToUpper(string value, string culture) . Makes the string uppercase within specified culture . string? ToUpperInvariant(string value) . Makes the string uppercase . string? ToLower(string value) . Makes the string lowercase . string? ToLower(string value, string culture) . Makes the string lowercase within specified culture . string? ToLowerInvariant(string value) . Makes the string lowercase . string? PadLeft(string? value, string? character, int? totalWidth) . Returns a new string that right-aligns the characters in this instance by padding them on the left with a specified Unicode character, for a specified total lengt . string? PadRight(string? value, string? character, int? totalWidth) . Returns a new string that left-aligns the characters in this instance by padding them on the right with a specified Unicode character, for a specified total length . string? Head(string? value, int? length) . Gets the first N characters of the string . string? Tail(string? value, int? length) . Gets the last N characters of the string . int? LevenshteinDistance(string? firstValue, string? secondValue) . Computes the Levenshtein distance between two strings . char? GetCharacterOf(string value, int index) . Gets the character at specified index . string? Reverse(string? value) . Reverses the string . string[] Split(string value, string[] separators) . Splits the string into an array of substrings based on the specified separators . char[] ToCharArray(string value) . Splits the string into an array of characters . string? LongestCommonSubstring(string source, string pattern) . Computes the longest common subsequence between two source and pattern . string Replicate(string value, int integer) . Clones the value n times . string? Translate(string? value, string? characters, string? translations) . Returns the string from the first argument after the characters specified in the second argument are translated into the characters specified in the third argument. string? Replace(string? text, string lookFor, string? changeTo) . Replaces the first occurrence of a specified string in this instance with another specified string . string? ToTitleCase(string? value) . Capitalizes the first letter of the string . string? GetNthWord(string? text, int? wordIndex, string? separator) . Gets the nth word of the string . string? GetFirstWord(string text, string separator) . Gets the first word of the string . string? GetSecondWord(string text, string separator) . Gets the second word of the string . string? GetThirdWord(string text, string separator) . Gets the third word of the string . string? GetLastWord(string? text, string? separator) . Gets last word of the string . bool? IsNullOrEmpty(string? value) . Determines whether the string is null or empty . bool? IsNullOrWhiteSpace(string? value) . Determines whether the string is null or whitespace . string? UrlEncode(string? value) . Encodes the value . string? UrlDecode(string? value) . Decodes the value . string? UriEncode(string? value) . Encodes the value . string? UriDecode(string? value) . Decodes the value . bool? StartsWith(string? value, string? prefix) . Determines whether the string starts with the specified prefix . bool? StartsWith(string? value, string? prefix, string comparison) . Determines whether the string starts with the specified prefix . bool? EndsWith(string? value, string? suffix) . Determines whether the string ends with the specified suffix . bool? EndsWith(string? value, string? suffix, string comparison) . Determines whether the string ends with the specified suffix . string? RegexReplace(string? value, string? pattern, string? replacement) . Replace the specified value part that matches the pattern with the replacement . string[]? SplitByLinuxNewLines(string? input) . Split string by Linux-style newlines (\\n) . string[]? SplitByWindowsNewLines(string? input) . Split string by Windows-style newlines (\\r\\n) . string[]? SplitByNewLines(string? input) . Smart split that handles both Windows (\\r\\n) and Linux (\\n) newlines . Decimal Sum(string name) . Gets the sum value of a given group. Decimal Sum(string name, int parent) . Gets the sum value of a given group. Decimal SumIncome(string name) . Gets the sum value of a given group. Decimal SumIncome(string name, int parent) . Gets the sum value of a given group. Decimal SumOutcome(string name) . Gets the outcome value of a given group. Decimal SumOutcome(string name, int parent) . Gets the outcome value of a given group. TimeSpan? SumTimeSpan(string name) . Gets the sum value of a given group. TimeSpan? SumTimeSpan(string name, int parent) . Gets the sum value of a given group. TimeSpan? MinTimeSpan(string name) . Gets the min value of a given group. TimeSpan? MinTimeSpan(string name, int parent) . Gets the min value of a given group. TimeSpan? MaxTimeSpan(string name) . Gets the max value of a given group. TimeSpan? MaxTimeSpan(string name, int parent) . Gets the min value of a given group. char? ToChar(string? value) . Converts given value to character . char? ToChar(int? value) . Converts given value to character . char? ToChar(short? value) . Converts given value to character . char? ToChar(byte? value) . Converts given value to character . char? ToChar(object? value) . Converts given value to character . DateTime? ToDateTime(string value) . Converts given value to DateTime . DateTime? ToDateTime(string value, string culture) . Converts given value to DateTime . Decimal? ToDecimal(string? value) . Converts given value to decimal . Decimal? ToDecimal(string value, string culture) . Converts given value to decimal withing given culture . Decimal? ToDecimal(byte? value) . Converts given value to Decimal . Decimal? ToDecimal(sbyte? value) . Converts given value to Decimal . Decimal? ToDecimal(short? value) . Converts given value to Decimal . Decimal? ToDecimal(ushort? value) . Converts given value to Decimal . Decimal? ToDecimal(long? value) . Converts given value to Decimal . Decimal? ToDecimal(ulong? value) . Converts given value to Decimal . Decimal? ToDecimal(float? value) . Converts given value to Decimal . Decimal? ToDecimal(double? value) . Converts given value to Decimal . Decimal? ToDecimal(object? value) . Converts given value to Decimal . double? ToDouble(object? value) . Converts given value to double . double? ToDouble(string? value) . Converts given value to double . double? ToDouble(byte? value) . Converts given value to double . double? ToDouble(sbyte? value) . Converts given value to double . double? ToDouble(short? value) . Converts given value to double . double? ToDouble(ushort? value) . Converts given value to double . double? ToDouble(int? value) . Converts given value to double . double? ToDouble(uint? value) . Converts given value to double . double? ToDouble(long? value) . Converts given value to double . double? ToDouble(ulong? value) . Converts given value to double . double? ToDouble(float? value) . Converts given value to double . double? ToDouble(double? value) . Converts given value to double . double? ToDouble(Decimal? value) . Converts given value to double . float? ToFloat(string? value) . Converts given value to float . float? ToFloat(byte? value) . Converts given value to float . float? ToFloat(sbyte? value) . Converts given value to float . float? ToFloat(short? value) . Converts given value to float . float? ToFloat(ushort? value) . Converts given value to float . float? ToFloat(int? value) . Converts given value to float . float? ToFloat(uint? value) . Converts given value to float . float? ToFloat(long? value) . Converts given value to float . float? ToFloat(ulong? value) . Converts given value to float . float? ToFloat(float? value) . Converts given value to float . float? ToFloat(Decimal? value) . Converts given value to float . int? ToInt32(string value) . Converts given value to int . int? ToInt32(byte? value) . Converts given value to int . int? ToInt32(sbyte? value) . Converts given value to int . int? ToInt32(short? value) . Converts given value to int . int? ToInt32(ushort? value) . Converts given value to int . int? ToInt32(int? value) . Converts given value to int . int? ToInt32(uint? value) . Converts given value to int . int? ToInt32(long? value) . Converts given value to int . int? ToInt32(ulong? value) . Converts given value to int . int? ToInt32(float? value) . Converts given value to int . int? ToInt32(double? value) . Converts given value to int . int? ToInt32(Decimal? value) . Converts given value to int . int? ToInt32(object? value) . Converts given value to int . long? ToInt64(string value) . Converts given value to Int64 . long? ToInt64(byte? value) . Converts given value to long . long? ToInt64(sbyte? value) . Converts given value to long . long? ToInt64(short? value) . Converts given value to long . long? ToInt64(ushort? value) . Converts given value to long . long? ToInt64(int? value) . Converts given value to long . long? ToInt64(uint? value) . Converts given value to long . long? ToInt64(long? value) . Converts given value to long . long? ToInt64(ulong? value) . Converts given value to long . long? ToInt64(float? value) . Converts given value to long . long? ToInt64(double? value) . Converts given value to long . long? ToInt64(Decimal? value) . Converts given value to long . long? ToInt64(object? value) . Converts given value to long . string? ToString(char? value) . Converts given value to string . string? ToString(DateTimeOffset? value) . Converts given value to string . string? ToString(DateTimeOffset? value, string format) . Converts given value to string . string? ToString(byte? value) . Converts given value to string . string? ToString(byte? value, string format) . Converts given value to string . string? ToString(sbyte? value) . Converts given value to string . string? ToString(sbyte? value, string format) . Converts given value to string . string? ToString(int? value) . Converts given value to string . string? ToString(int? value, string format) . Converts given value to string . string? ToString(uint? value) . Converts given value to string . string? ToString(uint? value, string format) . Converts given value to string . string? ToString(long? value) . Converts given value to string . string? ToString(long? value, string format) . Converts given value to string . string? ToString(ulong? value) . Converts given value to string . string? ToString(ulong? value, string format) . Converts given value to string . string? ToString(float? value) . Converts given value to string . string? ToString(float? value, string format) . Converts given value to string . string? ToString(double? value) . Converts given value to string . string? ToString(double? value, string format) . Converts given value to string . string? ToString(Decimal? value) . Converts given value to string . string? ToString(Decimal? value, string format) . Converts given value to string . string? ToString(bool? value) . Converts given value to string . string? ToString(object? value) . Converts given value to string . string? ToString&lt;T&gt;(T? value) . Converts given value to string . string ToString(string[] value) . Converts given value to string . string ToString&lt;T&gt;(T[] value) . Converts given value to string . TimeSpan? ToTimeSpan(string value) . Converts given value to TimeSpan . TimeSpan? ToTimeSpan(string value, string culture) . Converts given value to TimeSpan . IEnumerable&lt;T&gt; Window&lt;T&gt;(string name) . Gets the window . ",
    "url": "/data-sources/Sqlite/windows-x64.html#base-methods",
    
    "relUrl": "/data-sources/Sqlite/windows-x64.html#base-methods"
  },"378": {
    "doc": "Windows X64",
    "title": "Windows X64",
    "content": " ",
    "url": "/data-sources/Sqlite/windows-x64.html",
    
    "relUrl": "/data-sources/Sqlite/windows-x64.html"
  },"379": {
    "doc": "Windows X64",
    "title": "Musoq.DataSources.Archives",
    "content": "Provides schema to work with archives files . ",
    "url": "/data-sources/Archives/windows-x64.html#musoqdatasourcesarchives",
    
    "relUrl": "/data-sources/Archives/windows-x64.html#musoqdatasourcesarchives"
  },"380": {
    "doc": "Windows X64",
    "title": "Tables",
    "content": "Table is a collection of rows and columns that the plugin exposes. Below are the tables that are exposed by this data source. archives.file(string path) . Enumerate archive files like they were regular files . | Name | Type | Description | . | CompressionType | CompressionType | Compression type | . | ArchivedTime | DateTime? | When the file or directory were archived | . | CompressedSize | long | Compressed size of the file or directory | . | Crc | long | CRC of the file or directory | . | CreatedTime | DateTime? | When the file or directory were created | . | Key | string | Path to file or directory | . | LinkTarget | string | Link target | . | IsDirectory | bool | Is directory | . | IsEncrypted | bool | Is encrypted | . | IsSplitAfter | bool | Is split after | . | IsSolid | bool | Is solid | . | VolumeIndexFirst | int | Volume index first | . | VolumeIndexLast | int | Volume index last | . | LastAccessTime | DateTime? | When the file or directory were last accessed | . | LastModifiedTime | DateTime? | When the file or directory were last modified | . | Size | long | Size of the file or directory | . | Attrib | long? | Attributes of the file or directory | . | TextContent | string | Text content of a file | . ",
    "url": "/data-sources/Archives/windows-x64.html#tables",
    
    "relUrl": "/data-sources/Archives/windows-x64.html#tables"
  },"381": {
    "doc": "Windows X64",
    "title": "Methods",
    "content": "Methods are functions that can be called on the data source specific column. Below are the methods that are exposed by this data source. byte[] GetContent() . Gets the content of the entry as byte array. string GetTextContent() . Gets the content of the entry as string. IO.Stream GetStreamContent() . Gets the content of the entry as stream. ",
    "url": "/data-sources/Archives/windows-x64.html#methods",
    
    "relUrl": "/data-sources/Archives/windows-x64.html#methods"
  },"382": {
    "doc": "Windows X64",
    "title": "Base Methods",
    "content": "Base methods are methods that can be called on the data source specific column. Those methods are automatically inherited and enriches the data source specific methods. Below are those base methods that are exposed by this data source. int RowNumber() . Gets the row number of the current row. string? GetTypeName(object? obj) . Gets the typename of passed object. string AggregateValues(string name) . Aggregates values into a single value. string AggregateValues(string name, int parent) . Aggregates values into a single value. Decimal Avg(string name) . Gets the aggregated average value from the given group name . Decimal Avg(string name, int parent) . Gets the aggregated average value from the given group name . byte? ShiftLeft(byte? value, int shift) . Shifts the value to the left by the specified number of bits. short? ShiftLeft(short? value, int shift) . Shifts the value to the left by the specified number of bits. int? ShiftLeft(int? value, int shift) . Shifts the value to the left by the specified number of bits. long? ShiftLeft(long? value, int shift) . Shifts the value to the left by the specified number of bits. sbyte? ShiftLeft(sbyte? value, int shift) . Shifts the value to the left by the specified number of bits. ushort? ShiftLeft(ushort? value, int shift) . Shifts the value to the left by the specified number of bits. uint? ShiftLeft(uint? value, int shift) . Shifts the value to the left by the specified number of bits. ulong? ShiftLeft(ulong? value, int shift) . Shifts the value to the left by the specified number of bits. byte? ShiftRight(byte? value, int shift) . Shifts the value to the right by the specified number of bits. short? ShiftRight(short? value, int shift) . Shifts the value to the right by the specified number of bits. int? ShiftRight(int? value, int shift) . Shifts the value to the right by the specified number of bits. long? ShiftRight(long? value, int shift) . Shifts the value to the right by the specified number of bits. sbyte? ShiftRight(sbyte? value, int shift) . Shifts the value to the right by the specified number of bits. ushort? ShiftRight(ushort? value, int shift) . Shifts the value to the right by the specified number of bits. uint? ShiftRight(uint? value, int shift) . Shifts the value to the right by the specified number of bits. ulong? ShiftRight(ulong? value, int shift) . Shifts the value to the right by the specified number of bits. byte? Not(byte? value) . Performs bitwise NOT operation on a given value. short? Not(short? value) . Performs bitwise NOT operation on a given value. int? Not(int? value) . Performs bitwise NOT operation on a given value. long? Not(long? value) . Performs bitwise NOT operation on a given value. sbyte? Not(sbyte? value) . Performs bitwise NOT operation on a given value. ushort? Not(ushort? value) . Performs bitwise NOT operation on a given value. uint? Not(uint? value) . Performs bitwise NOT operation on a given value. ulong? Not(ulong? value) . Performs bitwise NOT operation on a given value. byte? And(byte? left, byte? right) . Performs bitwise AND operation on two given values. int? And(byte? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(byte? left, short? right) . Performs bitwise AND operation on two given values. int? And(byte? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(byte? left, int? right) . Performs bitwise AND operation on two given values. uint? And(byte? left, uint? right) . Performs bitwise AND operation on two given values. long? And(byte? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(byte? left, ulong? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, byte? right) . Performs bitwise AND operation on two given values. sbyte? And(sbyte? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, short? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, int? right) . Performs bitwise AND operation on two given values. uint? And(sbyte? left, uint? right) . Performs bitwise AND operation on two given values. long? And(sbyte? left, long? right) . Performs bitwise AND operation on two given values. int? And(short? left, byte? right) . Performs bitwise AND operation on two given values. int? And(short? left, sbyte? right) . Performs bitwise AND operation on two given values. short? And(short? left, short? right) . Performs bitwise AND operation on two given values. int? And(short? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(short? left, int? right) . Performs bitwise AND operation on two given values. uint? And(short? left, uint? right) . Performs bitwise AND operation on two given values. long? And(short? left, long? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, byte? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, short? right) . Performs bitwise AND operation on two given values. ushort? And(ushort? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, int? right) . Performs bitwise AND operation on two given values. uint? And(ushort? left, uint? right) . Performs bitwise AND operation on two given values. long? And(ushort? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(ushort? left, ulong? right) . Performs bitwise AND operation on two given values. int? And(int? left, byte? right) . Performs bitwise AND operation on two given values. int? And(int? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(int? left, short? right) . Performs bitwise AND operation on two given values. int? And(int? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(int? left, int? right) . Performs bitwise AND operation on two given values. uint? And(int? left, uint? right) . Performs bitwise AND operation on two given values. long? And(int? left, long? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, uint? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, byte? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, sbyte? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, short? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, ushort? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, int? right) . Performs bitwise AND operation on two given values. ulong? And(uint? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(uint? left, ulong? right) . Performs bitwise AND operation on two given values. long? And(long? left, long? right) . Performs bitwise AND operation on two given values. long? And(long? left, byte? right) . Performs bitwise AND operation on two given values. long? And(long? left, sbyte? right) . Performs bitwise AND operation on two given values. long? And(long? left, short? right) . Performs bitwise AND operation on two given values. long? And(long? left, ushort? right) . Performs bitwise AND operation on two given values. long? And(long? left, int? right) . Performs bitwise AND operation on two given values. long? And(long? left, uint? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, byte? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, ushort? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, uint? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, ulong? right) . Performs bitwise AND operation on two given values. byte? Or(byte? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, short? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(byte? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(byte? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(byte? left, ulong? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, byte? right) . Performs bitwise OR operation on two given values. sbyte? Or(sbyte? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, short? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(sbyte? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(sbyte? left, long? right) . Performs bitwise OR operation on two given values. int? Or(short? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(short? left, sbyte? right) . Performs bitwise OR operation on two given values. short? Or(short? left, short? right) . Performs bitwise OR operation on two given values. int? Or(short? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(short? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(short? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(short? left, long? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, short? right) . Performs bitwise OR operation on two given values. ushort? Or(ushort? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(ushort? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(ushort? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(ushort? left, ulong? right) . Performs bitwise OR operation on two given values. int? Or(int? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(int? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(int? left, short? right) . Performs bitwise OR operation on two given values. int? Or(int? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(int? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(int? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(int? left, long? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, uint? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, byte? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, sbyte? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, short? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, ushort? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, int? right) . Performs bitwise OR operation on two given values. ulong? Or(uint? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(uint? left, ulong? right) . Performs bitwise OR operation on two given values. long? Or(long? left, long? right) . Performs bitwise OR operation on two given values. long? Or(long? left, byte? right) . Performs bitwise OR operation on two given values. long? Or(long? left, sbyte? right) . Performs bitwise OR operation on two given values. long? Or(long? left, short? right) . Performs bitwise OR operation on two given values. long? Or(long? left, ushort? right) . Performs bitwise OR operation on two given values. long? Or(long? left, int? right) . Performs bitwise OR operation on two given values. long? Or(long? left, uint? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, byte? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, ushort? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, uint? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, ulong? right) . Performs bitwise OR operation on two given values. byte? Xor(byte? left, byte? right) . Performs bitwise OR operation on two given values. int? Xor(byte? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(byte? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(byte? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(byte? left, ulong? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, byte? right) . Performs bitwise Xor operation on two given values. sbyte? Xor(sbyte? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(sbyte? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(sbyte? left, long? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, sbyte? right) . Performs bitwise Xor operation on two given values. short? Xor(short? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, ushort? right) . Performs bitwise XOR operation on two given values. int? Xor(short? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(short? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(short? left, long? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, short? right) . Performs bitwise Xor operation on two given values. ushort? Xor(ushort? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(ushort? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(ushort? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ushort? left, ulong? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(int? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(int? left, long? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, uint? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, byte? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, sbyte? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, short? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, ushort? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, int? right) . Performs bitwise Xor operation on two given values. ulong? Xor(uint? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(uint? left, ulong? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, long? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, byte? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, sbyte? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, short? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, ushort? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, int? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, uint? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, ulong? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, byte? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, ushort? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, uint? right) . Performs bitwise Xor operation on two given values. byte[] GetBytes(string? content) . Gets the bytes from the given string. byte[] GetBytes(string? content, int length, int offset) . Gets the bytes from the given string within given offset and length. byte?[]? GetBytes(char? character) . Gets the bytes from the given character. byte?[]? GetBytes(bool? bit) . Gets the bytes from the given boolean. byte?[]? GetBytes(long? value) . Gets the bytes from the given long. byte?[]? GetBytes(int? value) . Gets the bytes from the given int. byte?[]? GetBytes(short? value) . Gets the bytes from the given short. byte?[]? GetBytes(ulong? value) . Gets the bytes from the given ulong. byte?[]? GetBytes(ushort? value) . Gets the bytes from the given ushort. byte?[]? GetBytes(uint? value) . Gets the bytes from the given uint. byte?[]? GetBytes(Decimal? value) . Gets the bytes from the given decimal. byte?[]? GetBytes(double? value) . Gets the bytes from the given double. byte?[]? GetBytes(float? value) . Gets the bytes from the given float. string? ToBin(byte?[]? bytes, string delimiter) . Converts given bytes to binary with defined delimiter . string ToBin&lt;T&gt;(T value) . Converts given value to binary . string ToOcta&lt;T&gt;(T value) . Converts given value to octal . string ToDec&lt;T&gt;(T value) . Converts given value to decimal . string ToBase64(byte[] value) . Converts given value to string . string ToBase64(byte[] value, int offset, int length) . Converts given array of bytes to string . byte[] FromBase64(string value) . Converts given string to bytes array . bool FromBytesToBool(byte[] value) . Converts bytes to boolean value. short FromBytesToInt16(byte[] value) . Converts bytes to a 16-bit signed integer. ushort FromBytesToUInt16(byte[] value) . Converts bytes to a 16-bit unsigned integer. int FromBytesToInt32(byte[] value) . Converts bytes to a 32-bit signed integer. uint FromBytesToUInt32(byte[] value) . Converts bytes to a 32-bit unsigned integer. long FromBytesToInt64(byte[] value) . Converts bytes to a 64-bit signed integer. ulong FromBytesToUInt64(byte[] value) . Converts bytes to a 64-bit unsigned integer. float FromBytesToFloat(byte[] value) . Converts bytes to a float value. double FromBytesToDouble(byte[] value) . Converts bytes to a float value. string FromBytesToString(byte[] value) . Converts bytes to a string. byte[] ToBytes(bool value) . Converts boolean value to bytes. byte[] ToBytes(short value) . Converts short value to bytes. byte[] ToBytes(ushort value) . Converts ushort value to bytes. byte[] ToBytes(int value) . Converts int value to bytes. byte[] ToBytes(uint value) . Converts uint value to bytes. byte[] ToBytes(long value) . Converts long value to bytes. byte[] ToBytes(ulong value) . Converts long value to bytes. string? ToHex(byte?[]? bytes, string delimiter) . Converts given bytes to hex with defined delimiter . string? ToHex&lt;T&gt;(T value) . Converts given value to binary . int Count(string name) . Gets the count value of a given group. int Count(string name, int parent) . Gets the count value of a given group. int ExtractFromDate(string? date, string partOfDate) . Extracts part of the date from the date . int ExtractFromDate(string date, string culture, string partOfDate) . Extracts part of the date from the date based on given culture . DateTimeOffset? GetDate() . Gets the current datetime . DateTimeOffset? UtcGetDate() . Gets the current datetime in UTC . int? Month(DateTimeOffset? value) . Gets the month from DateTimeOffset . int? Year(DateTimeOffset? value) . Gets the year from DateTimeOffset . int? Day(DateTimeOffset? value) . Gets the day from DateTimeOffset . int? Hour(DateTimeOffset? value) . Gets the hour from DateTimeOffset . int? Minute(DateTimeOffset? value) . Gets the minute from DateTimeOffset . int? Second(DateTimeOffset? value) . Gets the second from DateTimeOffset . int? Milliseconds(DateTimeOffset? value) . Gets the millisecond from DateTimeOffset . int? DayOfWeek(DateTimeOffset? value) . Gets the day of week from DateTimeOffset . TimeSpan? ExtractTimeSpan(DateTimeOffset? dateTimeOffset) . Extracts time from DateTimeOffset . DateTime? ToDateTimeOffset(string value) . Converts given value to DateTimeOffset . DateTimeOffset? ToDateTimeOffset(string value, string culture) . Converts given value to DateTimeOffset . IEnumerable&lt;T&gt;? Skip&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? skipCount) . Skips elements from the beginning of the sequence. IEnumerable&lt;T&gt;? Take&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? takeCount) . Takes elements from the beginning of the sequence. IEnumerable&lt;T&gt;? SkipAndTake&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? skipCount, int? takeCount) . Skip and takes elements from the beginning of the sequence. T[]? EnumerableToArray&lt;T&gt;(IEnumerable&lt;T&gt;? values) . Turn array arguments of T into a single array. T[]? MergeArrays&lt;T&gt;(T[][]? values) . Turn array arguments of T into a single array. IEnumerable&lt;T&gt;? LongestCommonSequence&lt;T&gt;(IEnumerable&lt;T&gt;? source, IEnumerable&lt;T&gt;? pattern) . Computes longest common sequence of two given sequences . T? GetElementAtOrDefault&lt;T&gt;(IEnumerable&lt;T&gt;? enumerable, int? index) . Gets the element at the specified index in a sequence . int? Length&lt;T&gt;(IEnumerable&lt;T&gt;? enumerable) . Gets the length of the sequence . int? Length&lt;T&gt;(T[]? array) . Gets the length of the array . T? Choose&lt;T&gt;(int? index, T[] values) . Gets the value of an array at the specified index . T If&lt;T&gt;(bool expressionResult, T a, T b) . Chose a or b value based on the expression result . bool? Match(string? regex, string? content) . Determine whether content matches the specified pattern . byte? Coalesce(byte?[] array) . Gets the first non-null value in a list . sbyte? Coalesce(sbyte?[] array) . Gets the first non-null value in a list . short? Coalesce(short?[] array) . Gets the first non-null value in a list . ushort? Coalesce(ushort?[] array) . Gets the first non-null value in a list . int? Coalesce(int?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(uint?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(long?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(ulong?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(Decimal?[] array) . Gets the first non-null value in a list . T? Coalesce&lt;T&gt;(T[] array) . Gets the first non-null value in a list . IEnumerable&lt;T&gt;? Distinct&lt;T&gt;(IEnumerable&lt;T&gt;? values) . Returns distinct elements from a collection. string? Md5(string? content) . Gets the md5 hash of the given string. string? Md5(byte?[]? content) . Gets the md5 hash of the given bytes array. string? Sha1(string? content) . Gets the sha256 hash of the given string. string? Sha1(byte?[]? content) . Gets the sha256 hash of the given bytes array. string? Sha256(string? content) . Gets the sha256 hash of the given string. string? Sha256(byte?[]? content) . Gets the sha256 hash of the given bytes array. string? Sha512(string? content) . Gets the sha256 hash of the given string. string? Sha512(byte?[]? content) . Gets the sha256 hash of the bytes array. string? ToJson&lt;T&gt;(T? obj) . Converts object to json. string[] ExtractFromJsonToArray(string? json, string? path) . Extracts values from json by path. string? ExtractFromJson(string? json, string? path) . Extracts values from json by path and joins them with comma. Decimal? Abs(Decimal? value) . Gets the absolute value . long? Abs(long? value) . Gets the absolute value . int? Abs(int? value) . Gets the absolute value . Decimal? Ceil(Decimal? value) . Gets the ceiling value . Decimal? Floor(Decimal? value) . Gets the floor value . Decimal? Sign(Decimal? value) . Determine whether value is greater, equal or less that zero . long? Sign(long? value) . Determine whether value is greater, equal or less that zero . Decimal? Round(Decimal? value, int precision) . Rounds the value within given precision . Decimal? PercentOf(Decimal? value, Decimal? max) . Gets the percentage of the value . int Rand() . Gets the random integer value . int? Rand(int? min, int? max) . Gets the random integer value . double? Pow(Decimal? x, Decimal? y) . Computes the pow between two values . double? Pow(double? x, double? y) . Computes the pow between two values . double? Sqrt(Decimal? x) . Computes the sqrt of a given value . double? Sqrt(double? x) . Computes the sqrt of a given value . double? Sqrt(long? x) . Computes the sqrt of a given value . double? PercentRank&lt;T&gt;(IEnumerable&lt;T&gt;? window, T? value) . Computes the percent rank of a given window . double? Log(Decimal? base, Decimal? value) . Calculates the logarithm of a value with a specified base. Decimal? Sin(Decimal? value) . Calculates sine of a value. double? Sin(double? value) . Calculates sine of a value. float? Sin(float? value) . Calculates sine of a value. Decimal? Cos(Decimal? value) . Calculates cosine of a value. double? Cos(double? value) . Calculates cosine of a value. float? Cos(float? value) . Calculates cosine of a value. Decimal Max(string name) . Gets the max value of a given group. Decimal Max(string name, int parent) . Gets the max value of a given group. Decimal Min(string name) . Gets the min value of a given group. Decimal Min(string name, int parent) . Gets the min value of a given group. Decimal StDev(string name, int parent) . Gets the StDev value of a given group. string NewId() . Gets the new identifier . string? Trim(string? value) . Removes leading and trailing whitespace from a string. string? TrimStart(string? value) . Removes leading whitespace from a string. string? TrimEnd(string? value) . Removes trailing whitespace from a string. string? Substring(string? value, int? index, int? length) . Gets the substring from the string. string? Substring(string value, int? length) . Gets the substring from the string . string? Concat(string[]? strings) . Concatenates the specified values . string? Concat(char?[]? characters) . Concatenates the specified characters . string? Concat(string? firstString, char?[]? chars) . Concatenates specified string fir characters . string? Concat(char? firstChar, string[]? strings) . Concatenate specific character with strings . string? Concat(object[]? objects) . Concatenates the specified strings . string? Concat&lt;T&gt;(T[]? objects) . Concatenates the specified strings . bool? Contains(string? content, string? what) . Determine whether the string contains the specified value . int? IndexOf(string? value, string? text) . Position of the first occurrence of the specified value . string? Soundex(string? value) . Computes soundex for the specified value . bool HasFuzzyMatchedWord(string text, string word, string separator) . Matches the specified text by splitting it with separator and applying fuzzy comparison . bool HasWordThatHasSmallerLevenshteinDistanceThan(string text, string word, int distance, string separator) . Matches the specified text by splitting it with separator and applying fuzzy comparison with a given distance . bool HasWordThatSoundLike(string text, string word, string separator) . Matches whether the specified word is present after being fuzzified within the specified text . bool HasTextThatSoundLikeSentence(string text, string sentence, string separator) . Matches whether the specified text is present in sentence after being fuzified . string? ToUpper(string value) . Makes the string uppercase . string? ToUpper(string value, string culture) . Makes the string uppercase within specified culture . string? ToUpperInvariant(string value) . Makes the string uppercase . string? ToLower(string value) . Makes the string lowercase . string? ToLower(string value, string culture) . Makes the string lowercase within specified culture . string? ToLowerInvariant(string value) . Makes the string lowercase . string? PadLeft(string? value, string? character, int? totalWidth) . Returns a new string that right-aligns the characters in this instance by padding them on the left with a specified Unicode character, for a specified total lengt . string? PadRight(string? value, string? character, int? totalWidth) . Returns a new string that left-aligns the characters in this instance by padding them on the right with a specified Unicode character, for a specified total length . string? Head(string? value, int? length) . Gets the first N characters of the string . string? Tail(string? value, int? length) . Gets the last N characters of the string . int? LevenshteinDistance(string? firstValue, string? secondValue) . Computes the Levenshtein distance between two strings . char? GetCharacterOf(string value, int index) . Gets the character at specified index . string? Reverse(string? value) . Reverses the string . string[] Split(string value, string[] separators) . Splits the string into an array of substrings based on the specified separators . char[] ToCharArray(string value) . Splits the string into an array of characters . string? LongestCommonSubstring(string source, string pattern) . Computes the longest common subsequence between two source and pattern . string Replicate(string value, int integer) . Clones the value n times . string? Translate(string? value, string? characters, string? translations) . Returns the string from the first argument after the characters specified in the second argument are translated into the characters specified in the third argument. string? Replace(string? text, string lookFor, string? changeTo) . Replaces the first occurrence of a specified string in this instance with another specified string . string? ToTitleCase(string? value) . Capitalizes the first letter of the string . string? GetNthWord(string? text, int? wordIndex, string? separator) . Gets the nth word of the string . string? GetFirstWord(string text, string separator) . Gets the first word of the string . string? GetSecondWord(string text, string separator) . Gets the second word of the string . string? GetThirdWord(string text, string separator) . Gets the third word of the string . string? GetLastWord(string? text, string? separator) . Gets last word of the string . bool? IsNullOrEmpty(string? value) . Determines whether the string is null or empty . bool? IsNullOrWhiteSpace(string? value) . Determines whether the string is null or whitespace . string? UrlEncode(string? value) . Encodes the value . string? UrlDecode(string? value) . Decodes the value . string? UriEncode(string? value) . Encodes the value . string? UriDecode(string? value) . Decodes the value . bool? StartsWith(string? value, string? prefix) . Determines whether the string starts with the specified prefix . bool? StartsWith(string? value, string? prefix, string comparison) . Determines whether the string starts with the specified prefix . bool? EndsWith(string? value, string? suffix) . Determines whether the string ends with the specified suffix . bool? EndsWith(string? value, string? suffix, string comparison) . Determines whether the string ends with the specified suffix . string? RegexReplace(string? value, string? pattern, string? replacement) . Replace the specified value part that matches the pattern with the replacement . string[]? SplitByLinuxNewLines(string? input) . Split string by Linux-style newlines (\\n) . string[]? SplitByWindowsNewLines(string? input) . Split string by Windows-style newlines (\\r\\n) . string[]? SplitByNewLines(string? input) . Smart split that handles both Windows (\\r\\n) and Linux (\\n) newlines . Decimal Sum(string name) . Gets the sum value of a given group. Decimal Sum(string name, int parent) . Gets the sum value of a given group. Decimal SumIncome(string name) . Gets the sum value of a given group. Decimal SumIncome(string name, int parent) . Gets the sum value of a given group. Decimal SumOutcome(string name) . Gets the outcome value of a given group. Decimal SumOutcome(string name, int parent) . Gets the outcome value of a given group. TimeSpan? SumTimeSpan(string name) . Gets the sum value of a given group. TimeSpan? SumTimeSpan(string name, int parent) . Gets the sum value of a given group. TimeSpan? MinTimeSpan(string name) . Gets the min value of a given group. TimeSpan? MinTimeSpan(string name, int parent) . Gets the min value of a given group. TimeSpan? MaxTimeSpan(string name) . Gets the max value of a given group. TimeSpan? MaxTimeSpan(string name, int parent) . Gets the min value of a given group. char? ToChar(string? value) . Converts given value to character . char? ToChar(int? value) . Converts given value to character . char? ToChar(short? value) . Converts given value to character . char? ToChar(byte? value) . Converts given value to character . char? ToChar(object? value) . Converts given value to character . DateTime? ToDateTime(string value) . Converts given value to DateTime . DateTime? ToDateTime(string value, string culture) . Converts given value to DateTime . Decimal? ToDecimal(string? value) . Converts given value to decimal . Decimal? ToDecimal(string value, string culture) . Converts given value to decimal withing given culture . Decimal? ToDecimal(byte? value) . Converts given value to Decimal . Decimal? ToDecimal(sbyte? value) . Converts given value to Decimal . Decimal? ToDecimal(short? value) . Converts given value to Decimal . Decimal? ToDecimal(ushort? value) . Converts given value to Decimal . Decimal? ToDecimal(long? value) . Converts given value to Decimal . Decimal? ToDecimal(ulong? value) . Converts given value to Decimal . Decimal? ToDecimal(float? value) . Converts given value to Decimal . Decimal? ToDecimal(double? value) . Converts given value to Decimal . Decimal? ToDecimal(object? value) . Converts given value to Decimal . double? ToDouble(object? value) . Converts given value to double . double? ToDouble(string? value) . Converts given value to double . double? ToDouble(byte? value) . Converts given value to double . double? ToDouble(sbyte? value) . Converts given value to double . double? ToDouble(short? value) . Converts given value to double . double? ToDouble(ushort? value) . Converts given value to double . double? ToDouble(int? value) . Converts given value to double . double? ToDouble(uint? value) . Converts given value to double . double? ToDouble(long? value) . Converts given value to double . double? ToDouble(ulong? value) . Converts given value to double . double? ToDouble(float? value) . Converts given value to double . double? ToDouble(double? value) . Converts given value to double . double? ToDouble(Decimal? value) . Converts given value to double . float? ToFloat(string? value) . Converts given value to float . float? ToFloat(byte? value) . Converts given value to float . float? ToFloat(sbyte? value) . Converts given value to float . float? ToFloat(short? value) . Converts given value to float . float? ToFloat(ushort? value) . Converts given value to float . float? ToFloat(int? value) . Converts given value to float . float? ToFloat(uint? value) . Converts given value to float . float? ToFloat(long? value) . Converts given value to float . float? ToFloat(ulong? value) . Converts given value to float . float? ToFloat(float? value) . Converts given value to float . float? ToFloat(Decimal? value) . Converts given value to float . int? ToInt32(string value) . Converts given value to int . int? ToInt32(byte? value) . Converts given value to int . int? ToInt32(sbyte? value) . Converts given value to int . int? ToInt32(short? value) . Converts given value to int . int? ToInt32(ushort? value) . Converts given value to int . int? ToInt32(int? value) . Converts given value to int . int? ToInt32(uint? value) . Converts given value to int . int? ToInt32(long? value) . Converts given value to int . int? ToInt32(ulong? value) . Converts given value to int . int? ToInt32(float? value) . Converts given value to int . int? ToInt32(double? value) . Converts given value to int . int? ToInt32(Decimal? value) . Converts given value to int . int? ToInt32(object? value) . Converts given value to int . long? ToInt64(string value) . Converts given value to Int64 . long? ToInt64(byte? value) . Converts given value to long . long? ToInt64(sbyte? value) . Converts given value to long . long? ToInt64(short? value) . Converts given value to long . long? ToInt64(ushort? value) . Converts given value to long . long? ToInt64(int? value) . Converts given value to long . long? ToInt64(uint? value) . Converts given value to long . long? ToInt64(long? value) . Converts given value to long . long? ToInt64(ulong? value) . Converts given value to long . long? ToInt64(float? value) . Converts given value to long . long? ToInt64(double? value) . Converts given value to long . long? ToInt64(Decimal? value) . Converts given value to long . long? ToInt64(object? value) . Converts given value to long . string? ToString(char? value) . Converts given value to string . string? ToString(DateTimeOffset? value) . Converts given value to string . string? ToString(DateTimeOffset? value, string format) . Converts given value to string . string? ToString(byte? value) . Converts given value to string . string? ToString(byte? value, string format) . Converts given value to string . string? ToString(sbyte? value) . Converts given value to string . string? ToString(sbyte? value, string format) . Converts given value to string . string? ToString(int? value) . Converts given value to string . string? ToString(int? value, string format) . Converts given value to string . string? ToString(uint? value) . Converts given value to string . string? ToString(uint? value, string format) . Converts given value to string . string? ToString(long? value) . Converts given value to string . string? ToString(long? value, string format) . Converts given value to string . string? ToString(ulong? value) . Converts given value to string . string? ToString(ulong? value, string format) . Converts given value to string . string? ToString(float? value) . Converts given value to string . string? ToString(float? value, string format) . Converts given value to string . string? ToString(double? value) . Converts given value to string . string? ToString(double? value, string format) . Converts given value to string . string? ToString(Decimal? value) . Converts given value to string . string? ToString(Decimal? value, string format) . Converts given value to string . string? ToString(bool? value) . Converts given value to string . string? ToString(object? value) . Converts given value to string . string? ToString&lt;T&gt;(T? value) . Converts given value to string . string ToString(string[] value) . Converts given value to string . string ToString&lt;T&gt;(T[] value) . Converts given value to string . TimeSpan? ToTimeSpan(string value) . Converts given value to TimeSpan . TimeSpan? ToTimeSpan(string value, string culture) . Converts given value to TimeSpan . IEnumerable&lt;T&gt; Window&lt;T&gt;(string name) . Gets the window . ",
    "url": "/data-sources/Archives/windows-x64.html#base-methods",
    
    "relUrl": "/data-sources/Archives/windows-x64.html#base-methods"
  },"383": {
    "doc": "Windows X64",
    "title": "Windows X64",
    "content": " ",
    "url": "/data-sources/Archives/windows-x64.html",
    
    "relUrl": "/data-sources/Archives/windows-x64.html"
  },"384": {
    "doc": "Windows X64",
    "title": "Musoq.DataSources.System",
    "content": "System schema helper methods . ",
    "url": "/data-sources/System/windows-x64.html#musoqdatasourcessystem",
    
    "relUrl": "/data-sources/System/windows-x64.html#musoqdatasourcessystem"
  },"385": {
    "doc": "Windows X64",
    "title": "Tables",
    "content": "Table is a collection of rows and columns that the plugin exposes. Below are the tables that are exposed by this data source. system.dual() . The dummy table . | Name | Type | Description | . | Dummy | string | Just empty string | . system.range(long min, long max) . Gives the ability to generate ranged values . | Name | Type | Description | . | Value | long | Enumerated value | . system.range(int min, int max) . Gives the ability to generate ranged values . | Name | Type | Description | . | Value | long | Enumerated value | . system.range(long max) . Gives the ability to generate ranged values . | Name | Type | Description | . | Value | long | Enumerated value | . ",
    "url": "/data-sources/System/windows-x64.html#tables",
    
    "relUrl": "/data-sources/System/windows-x64.html#tables"
  },"386": {
    "doc": "Windows X64",
    "title": "Base Methods",
    "content": "Base methods are methods that can be called on the data source specific column. Those methods are automatically inherited and enriches the data source specific methods. Below are those base methods that are exposed by this data source. int RowNumber() . Gets the row number of the current row. string? GetTypeName(object? obj) . Gets the typename of passed object. string AggregateValues(string name) . Aggregates values into a single value. string AggregateValues(string name, int parent) . Aggregates values into a single value. Decimal Avg(string name) . Gets the aggregated average value from the given group name . Decimal Avg(string name, int parent) . Gets the aggregated average value from the given group name . byte? ShiftLeft(byte? value, int shift) . Shifts the value to the left by the specified number of bits. short? ShiftLeft(short? value, int shift) . Shifts the value to the left by the specified number of bits. int? ShiftLeft(int? value, int shift) . Shifts the value to the left by the specified number of bits. long? ShiftLeft(long? value, int shift) . Shifts the value to the left by the specified number of bits. sbyte? ShiftLeft(sbyte? value, int shift) . Shifts the value to the left by the specified number of bits. ushort? ShiftLeft(ushort? value, int shift) . Shifts the value to the left by the specified number of bits. uint? ShiftLeft(uint? value, int shift) . Shifts the value to the left by the specified number of bits. ulong? ShiftLeft(ulong? value, int shift) . Shifts the value to the left by the specified number of bits. byte? ShiftRight(byte? value, int shift) . Shifts the value to the right by the specified number of bits. short? ShiftRight(short? value, int shift) . Shifts the value to the right by the specified number of bits. int? ShiftRight(int? value, int shift) . Shifts the value to the right by the specified number of bits. long? ShiftRight(long? value, int shift) . Shifts the value to the right by the specified number of bits. sbyte? ShiftRight(sbyte? value, int shift) . Shifts the value to the right by the specified number of bits. ushort? ShiftRight(ushort? value, int shift) . Shifts the value to the right by the specified number of bits. uint? ShiftRight(uint? value, int shift) . Shifts the value to the right by the specified number of bits. ulong? ShiftRight(ulong? value, int shift) . Shifts the value to the right by the specified number of bits. byte? Not(byte? value) . Performs bitwise NOT operation on a given value. short? Not(short? value) . Performs bitwise NOT operation on a given value. int? Not(int? value) . Performs bitwise NOT operation on a given value. long? Not(long? value) . Performs bitwise NOT operation on a given value. sbyte? Not(sbyte? value) . Performs bitwise NOT operation on a given value. ushort? Not(ushort? value) . Performs bitwise NOT operation on a given value. uint? Not(uint? value) . Performs bitwise NOT operation on a given value. ulong? Not(ulong? value) . Performs bitwise NOT operation on a given value. byte? And(byte? left, byte? right) . Performs bitwise AND operation on two given values. int? And(byte? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(byte? left, short? right) . Performs bitwise AND operation on two given values. int? And(byte? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(byte? left, int? right) . Performs bitwise AND operation on two given values. uint? And(byte? left, uint? right) . Performs bitwise AND operation on two given values. long? And(byte? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(byte? left, ulong? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, byte? right) . Performs bitwise AND operation on two given values. sbyte? And(sbyte? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, short? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(sbyte? left, int? right) . Performs bitwise AND operation on two given values. uint? And(sbyte? left, uint? right) . Performs bitwise AND operation on two given values. long? And(sbyte? left, long? right) . Performs bitwise AND operation on two given values. int? And(short? left, byte? right) . Performs bitwise AND operation on two given values. int? And(short? left, sbyte? right) . Performs bitwise AND operation on two given values. short? And(short? left, short? right) . Performs bitwise AND operation on two given values. int? And(short? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(short? left, int? right) . Performs bitwise AND operation on two given values. uint? And(short? left, uint? right) . Performs bitwise AND operation on two given values. long? And(short? left, long? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, byte? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, short? right) . Performs bitwise AND operation on two given values. ushort? And(ushort? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(ushort? left, int? right) . Performs bitwise AND operation on two given values. uint? And(ushort? left, uint? right) . Performs bitwise AND operation on two given values. long? And(ushort? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(ushort? left, ulong? right) . Performs bitwise AND operation on two given values. int? And(int? left, byte? right) . Performs bitwise AND operation on two given values. int? And(int? left, sbyte? right) . Performs bitwise AND operation on two given values. int? And(int? left, short? right) . Performs bitwise AND operation on two given values. int? And(int? left, ushort? right) . Performs bitwise AND operation on two given values. int? And(int? left, int? right) . Performs bitwise AND operation on two given values. uint? And(int? left, uint? right) . Performs bitwise AND operation on two given values. long? And(int? left, long? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, uint? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, byte? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, sbyte? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, short? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, ushort? right) . Performs bitwise AND operation on two given values. uint? And(uint? left, int? right) . Performs bitwise AND operation on two given values. ulong? And(uint? left, long? right) . Performs bitwise AND operation on two given values. ulong? And(uint? left, ulong? right) . Performs bitwise AND operation on two given values. long? And(long? left, long? right) . Performs bitwise AND operation on two given values. long? And(long? left, byte? right) . Performs bitwise AND operation on two given values. long? And(long? left, sbyte? right) . Performs bitwise AND operation on two given values. long? And(long? left, short? right) . Performs bitwise AND operation on two given values. long? And(long? left, ushort? right) . Performs bitwise AND operation on two given values. long? And(long? left, int? right) . Performs bitwise AND operation on two given values. long? And(long? left, uint? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, byte? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, ushort? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, uint? right) . Performs bitwise AND operation on two given values. ulong? And(ulong? left, ulong? right) . Performs bitwise AND operation on two given values. byte? Or(byte? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, short? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(byte? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(byte? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(byte? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(byte? left, ulong? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, byte? right) . Performs bitwise OR operation on two given values. sbyte? Or(sbyte? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, short? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(sbyte? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(sbyte? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(sbyte? left, long? right) . Performs bitwise OR operation on two given values. int? Or(short? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(short? left, sbyte? right) . Performs bitwise OR operation on two given values. short? Or(short? left, short? right) . Performs bitwise OR operation on two given values. int? Or(short? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(short? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(short? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(short? left, long? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, short? right) . Performs bitwise OR operation on two given values. ushort? Or(ushort? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(ushort? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(ushort? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(ushort? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(ushort? left, ulong? right) . Performs bitwise OR operation on two given values. int? Or(int? left, byte? right) . Performs bitwise OR operation on two given values. int? Or(int? left, sbyte? right) . Performs bitwise OR operation on two given values. int? Or(int? left, short? right) . Performs bitwise OR operation on two given values. int? Or(int? left, ushort? right) . Performs bitwise OR operation on two given values. int? Or(int? left, int? right) . Performs bitwise OR operation on two given values. uint? Or(int? left, uint? right) . Performs bitwise OR operation on two given values. long? Or(int? left, long? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, uint? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, byte? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, sbyte? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, short? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, ushort? right) . Performs bitwise OR operation on two given values. uint? Or(uint? left, int? right) . Performs bitwise OR operation on two given values. ulong? Or(uint? left, long? right) . Performs bitwise OR operation on two given values. ulong? Or(uint? left, ulong? right) . Performs bitwise OR operation on two given values. long? Or(long? left, long? right) . Performs bitwise OR operation on two given values. long? Or(long? left, byte? right) . Performs bitwise OR operation on two given values. long? Or(long? left, sbyte? right) . Performs bitwise OR operation on two given values. long? Or(long? left, short? right) . Performs bitwise OR operation on two given values. long? Or(long? left, ushort? right) . Performs bitwise OR operation on two given values. long? Or(long? left, int? right) . Performs bitwise OR operation on two given values. long? Or(long? left, uint? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, byte? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, ushort? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, uint? right) . Performs bitwise OR operation on two given values. ulong? Or(ulong? left, ulong? right) . Performs bitwise OR operation on two given values. byte? Xor(byte? left, byte? right) . Performs bitwise OR operation on two given values. int? Xor(byte? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(byte? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(byte? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(byte? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(byte? left, ulong? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, byte? right) . Performs bitwise Xor operation on two given values. sbyte? Xor(sbyte? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(sbyte? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(sbyte? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(sbyte? left, long? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, sbyte? right) . Performs bitwise Xor operation on two given values. short? Xor(short? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(short? left, ushort? right) . Performs bitwise XOR operation on two given values. int? Xor(short? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(short? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(short? left, long? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, short? right) . Performs bitwise Xor operation on two given values. ushort? Xor(ushort? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(ushort? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(ushort? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(ushort? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ushort? left, ulong? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, byte? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, sbyte? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, short? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, ushort? right) . Performs bitwise Xor operation on two given values. int? Xor(int? left, int? right) . Performs bitwise Xor operation on two given values. uint? Xor(int? left, uint? right) . Performs bitwise Xor operation on two given values. long? Xor(int? left, long? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, uint? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, byte? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, sbyte? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, short? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, ushort? right) . Performs bitwise Xor operation on two given values. uint? Xor(uint? left, int? right) . Performs bitwise Xor operation on two given values. ulong? Xor(uint? left, long? right) . Performs bitwise Xor operation on two given values. ulong? Xor(uint? left, ulong? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, long? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, byte? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, sbyte? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, short? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, ushort? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, int? right) . Performs bitwise Xor operation on two given values. long? Xor(long? left, uint? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, ulong? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, byte? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, ushort? right) . Performs bitwise Xor operation on two given values. ulong? Xor(ulong? left, uint? right) . Performs bitwise Xor operation on two given values. byte[] GetBytes(string? content) . Gets the bytes from the given string. byte[] GetBytes(string? content, int length, int offset) . Gets the bytes from the given string within given offset and length. byte?[]? GetBytes(char? character) . Gets the bytes from the given character. byte?[]? GetBytes(bool? bit) . Gets the bytes from the given boolean. byte?[]? GetBytes(long? value) . Gets the bytes from the given long. byte?[]? GetBytes(int? value) . Gets the bytes from the given int. byte?[]? GetBytes(short? value) . Gets the bytes from the given short. byte?[]? GetBytes(ulong? value) . Gets the bytes from the given ulong. byte?[]? GetBytes(ushort? value) . Gets the bytes from the given ushort. byte?[]? GetBytes(uint? value) . Gets the bytes from the given uint. byte?[]? GetBytes(Decimal? value) . Gets the bytes from the given decimal. byte?[]? GetBytes(double? value) . Gets the bytes from the given double. byte?[]? GetBytes(float? value) . Gets the bytes from the given float. string? ToBin(byte?[]? bytes, string delimiter) . Converts given bytes to binary with defined delimiter . string ToBin&lt;T&gt;(T value) . Converts given value to binary . string ToOcta&lt;T&gt;(T value) . Converts given value to octal . string ToDec&lt;T&gt;(T value) . Converts given value to decimal . string ToBase64(byte[] value) . Converts given value to string . string ToBase64(byte[] value, int offset, int length) . Converts given array of bytes to string . byte[] FromBase64(string value) . Converts given string to bytes array . bool FromBytesToBool(byte[] value) . Converts bytes to boolean value. short FromBytesToInt16(byte[] value) . Converts bytes to a 16-bit signed integer. ushort FromBytesToUInt16(byte[] value) . Converts bytes to a 16-bit unsigned integer. int FromBytesToInt32(byte[] value) . Converts bytes to a 32-bit signed integer. uint FromBytesToUInt32(byte[] value) . Converts bytes to a 32-bit unsigned integer. long FromBytesToInt64(byte[] value) . Converts bytes to a 64-bit signed integer. ulong FromBytesToUInt64(byte[] value) . Converts bytes to a 64-bit unsigned integer. float FromBytesToFloat(byte[] value) . Converts bytes to a float value. double FromBytesToDouble(byte[] value) . Converts bytes to a float value. string FromBytesToString(byte[] value) . Converts bytes to a string. byte[] ToBytes(bool value) . Converts boolean value to bytes. byte[] ToBytes(short value) . Converts short value to bytes. byte[] ToBytes(ushort value) . Converts ushort value to bytes. byte[] ToBytes(int value) . Converts int value to bytes. byte[] ToBytes(uint value) . Converts uint value to bytes. byte[] ToBytes(long value) . Converts long value to bytes. byte[] ToBytes(ulong value) . Converts long value to bytes. string? ToHex(byte?[]? bytes, string delimiter) . Converts given bytes to hex with defined delimiter . string? ToHex&lt;T&gt;(T value) . Converts given value to binary . int Count(string name) . Gets the count value of a given group. int Count(string name, int parent) . Gets the count value of a given group. int ExtractFromDate(string? date, string partOfDate) . Extracts part of the date from the date . int ExtractFromDate(string date, string culture, string partOfDate) . Extracts part of the date from the date based on given culture . DateTimeOffset? GetDate() . Gets the current datetime . DateTimeOffset? UtcGetDate() . Gets the current datetime in UTC . int? Month(DateTimeOffset? value) . Gets the month from DateTimeOffset . int? Year(DateTimeOffset? value) . Gets the year from DateTimeOffset . int? Day(DateTimeOffset? value) . Gets the day from DateTimeOffset . int? Hour(DateTimeOffset? value) . Gets the hour from DateTimeOffset . int? Minute(DateTimeOffset? value) . Gets the minute from DateTimeOffset . int? Second(DateTimeOffset? value) . Gets the second from DateTimeOffset . int? Milliseconds(DateTimeOffset? value) . Gets the millisecond from DateTimeOffset . int? DayOfWeek(DateTimeOffset? value) . Gets the day of week from DateTimeOffset . TimeSpan? ExtractTimeSpan(DateTimeOffset? dateTimeOffset) . Extracts time from DateTimeOffset . DateTime? ToDateTimeOffset(string value) . Converts given value to DateTimeOffset . DateTimeOffset? ToDateTimeOffset(string value, string culture) . Converts given value to DateTimeOffset . IEnumerable&lt;T&gt;? Skip&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? skipCount) . Skips elements from the beginning of the sequence. IEnumerable&lt;T&gt;? Take&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? takeCount) . Takes elements from the beginning of the sequence. IEnumerable&lt;T&gt;? SkipAndTake&lt;T&gt;(IEnumerable&lt;T&gt;? values, int? skipCount, int? takeCount) . Skip and takes elements from the beginning of the sequence. T[]? EnumerableToArray&lt;T&gt;(IEnumerable&lt;T&gt;? values) . Turn array arguments of T into a single array. T[]? MergeArrays&lt;T&gt;(T[][]? values) . Turn array arguments of T into a single array. IEnumerable&lt;T&gt;? LongestCommonSequence&lt;T&gt;(IEnumerable&lt;T&gt;? source, IEnumerable&lt;T&gt;? pattern) . Computes longest common sequence of two given sequences . T? GetElementAtOrDefault&lt;T&gt;(IEnumerable&lt;T&gt;? enumerable, int? index) . Gets the element at the specified index in a sequence . int? Length&lt;T&gt;(IEnumerable&lt;T&gt;? enumerable) . Gets the length of the sequence . int? Length&lt;T&gt;(T[]? array) . Gets the length of the array . T? Choose&lt;T&gt;(int? index, T[] values) . Gets the value of an array at the specified index . T If&lt;T&gt;(bool expressionResult, T a, T b) . Chose a or b value based on the expression result . bool? Match(string? regex, string? content) . Determine whether content matches the specified pattern . byte? Coalesce(byte?[] array) . Gets the first non-null value in a list . sbyte? Coalesce(sbyte?[] array) . Gets the first non-null value in a list . short? Coalesce(short?[] array) . Gets the first non-null value in a list . ushort? Coalesce(ushort?[] array) . Gets the first non-null value in a list . int? Coalesce(int?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(uint?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(long?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(ulong?[] array) . Gets the first non-null value in a list . Decimal? Coalesce(Decimal?[] array) . Gets the first non-null value in a list . T? Coalesce&lt;T&gt;(T[] array) . Gets the first non-null value in a list . IEnumerable&lt;T&gt;? Distinct&lt;T&gt;(IEnumerable&lt;T&gt;? values) . Returns distinct elements from a collection. string? Md5(string? content) . Gets the md5 hash of the given string. string? Md5(byte?[]? content) . Gets the md5 hash of the given bytes array. string? Sha1(string? content) . Gets the sha256 hash of the given string. string? Sha1(byte?[]? content) . Gets the sha256 hash of the given bytes array. string? Sha256(string? content) . Gets the sha256 hash of the given string. string? Sha256(byte?[]? content) . Gets the sha256 hash of the given bytes array. string? Sha512(string? content) . Gets the sha256 hash of the given string. string? Sha512(byte?[]? content) . Gets the sha256 hash of the bytes array. string? ToJson&lt;T&gt;(T? obj) . Converts object to json. string[] ExtractFromJsonToArray(string? json, string? path) . Extracts values from json by path. string? ExtractFromJson(string? json, string? path) . Extracts values from json by path and joins them with comma. Decimal? Abs(Decimal? value) . Gets the absolute value . long? Abs(long? value) . Gets the absolute value . int? Abs(int? value) . Gets the absolute value . Decimal? Ceil(Decimal? value) . Gets the ceiling value . Decimal? Floor(Decimal? value) . Gets the floor value . Decimal? Sign(Decimal? value) . Determine whether value is greater, equal or less that zero . long? Sign(long? value) . Determine whether value is greater, equal or less that zero . Decimal? Round(Decimal? value, int precision) . Rounds the value within given precision . Decimal? PercentOf(Decimal? value, Decimal? max) . Gets the percentage of the value . int Rand() . Gets the random integer value . int? Rand(int? min, int? max) . Gets the random integer value . double? Pow(Decimal? x, Decimal? y) . Computes the pow between two values . double? Pow(double? x, double? y) . Computes the pow between two values . double? Sqrt(Decimal? x) . Computes the sqrt of a given value . double? Sqrt(double? x) . Computes the sqrt of a given value . double? Sqrt(long? x) . Computes the sqrt of a given value . double? PercentRank&lt;T&gt;(IEnumerable&lt;T&gt;? window, T? value) . Computes the percent rank of a given window . double? Log(Decimal? base, Decimal? value) . Calculates the logarithm of a value with a specified base. Decimal? Sin(Decimal? value) . Calculates sine of a value. double? Sin(double? value) . Calculates sine of a value. float? Sin(float? value) . Calculates sine of a value. Decimal? Cos(Decimal? value) . Calculates cosine of a value. double? Cos(double? value) . Calculates cosine of a value. float? Cos(float? value) . Calculates cosine of a value. Decimal Max(string name) . Gets the max value of a given group. Decimal Max(string name, int parent) . Gets the max value of a given group. Decimal Min(string name) . Gets the min value of a given group. Decimal Min(string name, int parent) . Gets the min value of a given group. Decimal StDev(string name, int parent) . Gets the StDev value of a given group. string NewId() . Gets the new identifier . string? Trim(string? value) . Removes leading and trailing whitespace from a string. string? TrimStart(string? value) . Removes leading whitespace from a string. string? TrimEnd(string? value) . Removes trailing whitespace from a string. string? Substring(string? value, int? index, int? length) . Gets the substring from the string. string? Substring(string value, int? length) . Gets the substring from the string . string? Concat(string[]? strings) . Concatenates the specified values . string? Concat(char?[]? characters) . Concatenates the specified characters . string? Concat(string? firstString, char?[]? chars) . Concatenates specified string fir characters . string? Concat(char? firstChar, string[]? strings) . Concatenate specific character with strings . string? Concat(object[]? objects) . Concatenates the specified strings . string? Concat&lt;T&gt;(T[]? objects) . Concatenates the specified strings . bool? Contains(string? content, string? what) . Determine whether the string contains the specified value . int? IndexOf(string? value, string? text) . Position of the first occurrence of the specified value . string? Soundex(string? value) . Computes soundex for the specified value . bool HasFuzzyMatchedWord(string text, string word, string separator) . Matches the specified text by splitting it with separator and applying fuzzy comparison . bool HasWordThatHasSmallerLevenshteinDistanceThan(string text, string word, int distance, string separator) . Matches the specified text by splitting it with separator and applying fuzzy comparison with a given distance . bool HasWordThatSoundLike(string text, string word, string separator) . Matches whether the specified word is present after being fuzzified within the specified text . bool HasTextThatSoundLikeSentence(string text, string sentence, string separator) . Matches whether the specified text is present in sentence after being fuzified . string? ToUpper(string value) . Makes the string uppercase . string? ToUpper(string value, string culture) . Makes the string uppercase within specified culture . string? ToUpperInvariant(string value) . Makes the string uppercase . string? ToLower(string value) . Makes the string lowercase . string? ToLower(string value, string culture) . Makes the string lowercase within specified culture . string? ToLowerInvariant(string value) . Makes the string lowercase . string? PadLeft(string? value, string? character, int? totalWidth) . Returns a new string that right-aligns the characters in this instance by padding them on the left with a specified Unicode character, for a specified total lengt . string? PadRight(string? value, string? character, int? totalWidth) . Returns a new string that left-aligns the characters in this instance by padding them on the right with a specified Unicode character, for a specified total length . string? Head(string? value, int? length) . Gets the first N characters of the string . string? Tail(string? value, int? length) . Gets the last N characters of the string . int? LevenshteinDistance(string? firstValue, string? secondValue) . Computes the Levenshtein distance between two strings . char? GetCharacterOf(string value, int index) . Gets the character at specified index . string? Reverse(string? value) . Reverses the string . string[] Split(string value, string[] separators) . Splits the string into an array of substrings based on the specified separators . char[] ToCharArray(string value) . Splits the string into an array of characters . string? LongestCommonSubstring(string source, string pattern) . Computes the longest common subsequence between two source and pattern . string Replicate(string value, int integer) . Clones the value n times . string? Translate(string? value, string? characters, string? translations) . Returns the string from the first argument after the characters specified in the second argument are translated into the characters specified in the third argument. string? Replace(string? text, string lookFor, string? changeTo) . Replaces the first occurrence of a specified string in this instance with another specified string . string? ToTitleCase(string? value) . Capitalizes the first letter of the string . string? GetNthWord(string? text, int? wordIndex, string? separator) . Gets the nth word of the string . string? GetFirstWord(string text, string separator) . Gets the first word of the string . string? GetSecondWord(string text, string separator) . Gets the second word of the string . string? GetThirdWord(string text, string separator) . Gets the third word of the string . string? GetLastWord(string? text, string? separator) . Gets last word of the string . bool? IsNullOrEmpty(string? value) . Determines whether the string is null or empty . bool? IsNullOrWhiteSpace(string? value) . Determines whether the string is null or whitespace . string? UrlEncode(string? value) . Encodes the value . string? UrlDecode(string? value) . Decodes the value . string? UriEncode(string? value) . Encodes the value . string? UriDecode(string? value) . Decodes the value . bool? StartsWith(string? value, string? prefix) . Determines whether the string starts with the specified prefix . bool? StartsWith(string? value, string? prefix, string comparison) . Determines whether the string starts with the specified prefix . bool? EndsWith(string? value, string? suffix) . Determines whether the string ends with the specified suffix . bool? EndsWith(string? value, string? suffix, string comparison) . Determines whether the string ends with the specified suffix . string? RegexReplace(string? value, string? pattern, string? replacement) . Replace the specified value part that matches the pattern with the replacement . string[]? SplitByLinuxNewLines(string? input) . Split string by Linux-style newlines (\\n) . string[]? SplitByWindowsNewLines(string? input) . Split string by Windows-style newlines (\\r\\n) . string[]? SplitByNewLines(string? input) . Smart split that handles both Windows (\\r\\n) and Linux (\\n) newlines . Decimal Sum(string name) . Gets the sum value of a given group. Decimal Sum(string name, int parent) . Gets the sum value of a given group. Decimal SumIncome(string name) . Gets the sum value of a given group. Decimal SumIncome(string name, int parent) . Gets the sum value of a given group. Decimal SumOutcome(string name) . Gets the outcome value of a given group. Decimal SumOutcome(string name, int parent) . Gets the outcome value of a given group. TimeSpan? SumTimeSpan(string name) . Gets the sum value of a given group. TimeSpan? SumTimeSpan(string name, int parent) . Gets the sum value of a given group. TimeSpan? MinTimeSpan(string name) . Gets the min value of a given group. TimeSpan? MinTimeSpan(string name, int parent) . Gets the min value of a given group. TimeSpan? MaxTimeSpan(string name) . Gets the max value of a given group. TimeSpan? MaxTimeSpan(string name, int parent) . Gets the min value of a given group. char? ToChar(string? value) . Converts given value to character . char? ToChar(int? value) . Converts given value to character . char? ToChar(short? value) . Converts given value to character . char? ToChar(byte? value) . Converts given value to character . char? ToChar(object? value) . Converts given value to character . DateTime? ToDateTime(string value) . Converts given value to DateTime . DateTime? ToDateTime(string value, string culture) . Converts given value to DateTime . Decimal? ToDecimal(string? value) . Converts given value to decimal . Decimal? ToDecimal(string value, string culture) . Converts given value to decimal withing given culture . Decimal? ToDecimal(byte? value) . Converts given value to Decimal . Decimal? ToDecimal(sbyte? value) . Converts given value to Decimal . Decimal? ToDecimal(short? value) . Converts given value to Decimal . Decimal? ToDecimal(ushort? value) . Converts given value to Decimal . Decimal? ToDecimal(long? value) . Converts given value to Decimal . Decimal? ToDecimal(ulong? value) . Converts given value to Decimal . Decimal? ToDecimal(float? value) . Converts given value to Decimal . Decimal? ToDecimal(double? value) . Converts given value to Decimal . Decimal? ToDecimal(object? value) . Converts given value to Decimal . double? ToDouble(object? value) . Converts given value to double . double? ToDouble(string? value) . Converts given value to double . double? ToDouble(byte? value) . Converts given value to double . double? ToDouble(sbyte? value) . Converts given value to double . double? ToDouble(short? value) . Converts given value to double . double? ToDouble(ushort? value) . Converts given value to double . double? ToDouble(int? value) . Converts given value to double . double? ToDouble(uint? value) . Converts given value to double . double? ToDouble(long? value) . Converts given value to double . double? ToDouble(ulong? value) . Converts given value to double . double? ToDouble(float? value) . Converts given value to double . double? ToDouble(double? value) . Converts given value to double . double? ToDouble(Decimal? value) . Converts given value to double . float? ToFloat(string? value) . Converts given value to float . float? ToFloat(byte? value) . Converts given value to float . float? ToFloat(sbyte? value) . Converts given value to float . float? ToFloat(short? value) . Converts given value to float . float? ToFloat(ushort? value) . Converts given value to float . float? ToFloat(int? value) . Converts given value to float . float? ToFloat(uint? value) . Converts given value to float . float? ToFloat(long? value) . Converts given value to float . float? ToFloat(ulong? value) . Converts given value to float . float? ToFloat(float? value) . Converts given value to float . float? ToFloat(Decimal? value) . Converts given value to float . int? ToInt32(string value) . Converts given value to int . int? ToInt32(byte? value) . Converts given value to int . int? ToInt32(sbyte? value) . Converts given value to int . int? ToInt32(short? value) . Converts given value to int . int? ToInt32(ushort? value) . Converts given value to int . int? ToInt32(int? value) . Converts given value to int . int? ToInt32(uint? value) . Converts given value to int . int? ToInt32(long? value) . Converts given value to int . int? ToInt32(ulong? value) . Converts given value to int . int? ToInt32(float? value) . Converts given value to int . int? ToInt32(double? value) . Converts given value to int . int? ToInt32(Decimal? value) . Converts given value to int . int? ToInt32(object? value) . Converts given value to int . long? ToInt64(string value) . Converts given value to Int64 . long? ToInt64(byte? value) . Converts given value to long . long? ToInt64(sbyte? value) . Converts given value to long . long? ToInt64(short? value) . Converts given value to long . long? ToInt64(ushort? value) . Converts given value to long . long? ToInt64(int? value) . Converts given value to long . long? ToInt64(uint? value) . Converts given value to long . long? ToInt64(long? value) . Converts given value to long . long? ToInt64(ulong? value) . Converts given value to long . long? ToInt64(float? value) . Converts given value to long . long? ToInt64(double? value) . Converts given value to long . long? ToInt64(Decimal? value) . Converts given value to long . long? ToInt64(object? value) . Converts given value to long . string? ToString(char? value) . Converts given value to string . string? ToString(DateTimeOffset? value) . Converts given value to string . string? ToString(DateTimeOffset? value, string format) . Converts given value to string . string? ToString(byte? value) . Converts given value to string . string? ToString(byte? value, string format) . Converts given value to string . string? ToString(sbyte? value) . Converts given value to string . string? ToString(sbyte? value, string format) . Converts given value to string . string? ToString(int? value) . Converts given value to string . string? ToString(int? value, string format) . Converts given value to string . string? ToString(uint? value) . Converts given value to string . string? ToString(uint? value, string format) . Converts given value to string . string? ToString(long? value) . Converts given value to string . string? ToString(long? value, string format) . Converts given value to string . string? ToString(ulong? value) . Converts given value to string . string? ToString(ulong? value, string format) . Converts given value to string . string? ToString(float? value) . Converts given value to string . string? ToString(float? value, string format) . Converts given value to string . string? ToString(double? value) . Converts given value to string . string? ToString(double? value, string format) . Converts given value to string . string? ToString(Decimal? value) . Converts given value to string . string? ToString(Decimal? value, string format) . Converts given value to string . string? ToString(bool? value) . Converts given value to string . string? ToString(object? value) . Converts given value to string . string? ToString&lt;T&gt;(T? value) . Converts given value to string . string ToString(string[] value) . Converts given value to string . string ToString&lt;T&gt;(T[] value) . Converts given value to string . TimeSpan? ToTimeSpan(string value) . Converts given value to TimeSpan . TimeSpan? ToTimeSpan(string value, string culture) . Converts given value to TimeSpan . IEnumerable&lt;T&gt; Window&lt;T&gt;(string name) . Gets the window . ",
    "url": "/data-sources/System/windows-x64.html#base-methods",
    
    "relUrl": "/data-sources/System/windows-x64.html#base-methods"
  },"387": {
    "doc": "Windows X64",
    "title": "Windows X64",
    "content": " ",
    "url": "/data-sources/System/windows-x64.html",
    
    "relUrl": "/data-sources/System/windows-x64.html"
  }
}
